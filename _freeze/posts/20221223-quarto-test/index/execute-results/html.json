{
  "hash": "1b1d8a463ed47f299bad8c0a393d04f1",
  "result": {
    "markdown": "---\ntitle: \"SunQuarTeX 中文学术写作示例文档\"\nsubtitle: \"这是副标题\"\nauthor: \"sun123zxy\"\ndate: \"2022/12/23\"\ndate-modified: \"2022/12/24\"\nabstract: \"使用 Quarto Markdown 语法，支持输出至 HTML、PDF/LaTeX 等多种格式的中文学术写作工具，覆盖交叉引用、插图绘制、定理系统等多种功能。\"\nbibliography: index.bib\n\nnumber-sections: true\n\ncategories:\n  - \"web\"\n  - \"LaTeX\"\n  - \"站点相关\"\n---\n\n## 前言\n\n具体使用方法等参见 [sun123zxy/sunquartex](https://github.com/sun123zxy/sunquartex)。\n\n## 文章结构测试\n\n这一节测试文章结构。\n\n### 文章分节\n\n非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子。\n\n#### 文章分分节 {#sec-test}\n\nQuarto 支持交叉引用。比如这一节的标题就已经被打上了标签。\n\n##### 分分分节\n\n本节中我们测试交叉引用 @sec-test。\n\n###### 分分分分节\n\n这是最小的一级了。\n\n## 图片、表格、列表测试\n\n这是 Quarto 的图标。\n\n![这是一张插图](quarto.png){#fig-quarto}\n\n交叉引用 @fig-quarto 当然也是可以的。\n\n这是一个紧凑列表。\n\n- 自反性。\n- 反对称性一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子。\n- 传递性。\n\n这是一个宽松列表。\n\n- 自反性。\n\n- 反对称性一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子。\n\n  还多加了一段。\n\n- 传递性。\n\n当然也可以使用 markdown 表格。例如 @tbl-cartesian-unsolved.\n\n顺便测试以下多表格并列。加上 @tbl-power-unsolved，它们共同组成了 @tbl-panel-unsolved。\n\n::: {#tbl-panel-unsolved layout-ncol=2}\n|||||\n|:-:|:-:|:-:|:-:|\n| $L_i \\times C_j$   | $2$           | $\\mathbb N$   | $\\mathbb R$   |\n| $2$                | $4$           | $\\mathbb N$   | $\\mathbb R$   |\n| $\\mathbb N$        | $\\mathbb N$   | $\\mathbb N$   | ?             |\n| $\\mathbb R$        | $\\mathbb R$   | ?             | $\\mathbb R$   |\n\n:笛卡尔积 {#tbl-cartesian-unsolved}\n\n|||||\n|:-:|:-:|:-:|:-:|\n|$L_i^{C_j}$  | $2$           | $\\mathbb N$   | $\\mathbb R$     |      \n|$2$          | $4$           | $\\mathbb N$   | $2^{\\mathbb R}$ | \n|$\\mathbb N$  | $\\mathbb N$   | ?             | ?               |\n|$\\mathbb R$  | $\\mathbb R$   | ?             | ?               |\n\n:集合幂 {#tbl-power-unsolved}\n\n相关集合的势（不完整版）\n:::\n\n## 数学公式、定理系统测试\n\nQuarto 的一大卖点。\n\n这一节我们测试数学相关内容. HTML 中的定理标号方式目前没有方法更改，但 LaTeX 中的定理标号可通过自行修改模板中 `amsthm` 宏包的定义实现.\n\n此外，根据 [Quarto - Markdown Basics # Equations](https://quarto.org/docs/authoring/markdown-basics.html#equations) 和 [Defining LaTeX commands for HTML and PDF rendering - Discussion #1793](https://github.com/quarto-dev/quarto-cli/discussions/1793)，可按如下面方式自定义 macro 并确保其在 HTML 和 LaTeX/PDF 中都得到正确渲染。值得注意的是，由于 `\\DeclareMathOperator` 只能在 LaTeX 的导言区使用，这里我们用 `\\newcommand` + `\\operatorname` 的方式替代。\n\n::::: {.hidden}\n::: {.content-hidden unless-format=\"html\"}\n$$\n\\newcommand{\\ran}{\\operatorname{ran}}\n$$\n:::\n::: {.content-hidden unless-format=\"pdf\"}\n\n```{=latex}\n\\newcommand{\\ran}{\\operatorname{ran}}\n```\n\n:::\n:::::\n\n下面的公式使用了上面定义的 macro。\n$$\n\\ran A := \\{ y \\mid (x,y) \\in A \\}\n$$\n\n两个集合 $A, B$ 的笛卡尔积定义为\n$$\nA \\times B = \\{\\langle x,y \\rangle \\mid x \\in A \\land y \\in B \\}\n$$\n\n显然，笛卡尔积不满足交换律和结合律. 在势的视角下，它的表现如何呢？\n\n::: {#thm-cartesian-preserve}\n\n## 笛卡尔积的保势性\n\n这是一个有 caption 的定理.\n\n$$\nA \\preccurlyeq C \\land B \\preccurlyeq D \\implies A \\times B \\preccurlyeq C \\times D\n$$\n:::\n    \n::: {.proof}\n\n建立单射\n$$\n\\begin{aligned}\n\\varphi: A \\times B &\\to C \\times D \\\\\n\\langle x,y \\rangle &\\mapsto \\langle f(x), g(y) \\rangle\n\\end{aligned}\n$$\n即可，其中 $f$ 和 $g$ 是由 $A \\preccurlyeq C$ 和 $B \\preccurlyeq D$ 确定的单射.\n:::\n\n::: {#cor-random}\n等势意义下可用等势的集合替换参与笛卡尔积运算的集合，即\n$$\nA \\approx C \\land B \\approx D \\implies A \\times B \\approx C \\times D\n$$\n\n这是一个没有 caption 的定理.\n:::\n\n::: {#exm-rtimesn}\n\n证明\n$$\n\\mathbb R \\times \\mathbb N \\approx \\mathbb N \\times \\mathbb R \\approx \\mathbb R\n$$\n:::\n\n::: {.proof}\n利用 @thm-cartesian-preserve 对 $\\mathbb R \\times 2$ 和 $\\mathbb R \\times \\mathbb R$ 夹逼，立刻得到\n$$\n\\mathbb R \\approx \\mathbb R \\times 2 \\preccurlyeq \\mathbb R \\times \\mathbb N \\preccurlyeq \\mathbb R \\times \\mathbb R \\approx \\mathbb R\n\\implies \\mathbb R \\times \\mathbb N \\approx \\mathbb N \\times \\mathbb R \\approx \\mathbb R\n$$\n:::\n\n## 数据可视化\n\nQuarto 的另一大卖点。\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-html/fig-polar-output-1.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n交叉引用 @fig-polar 当然也是可以的.\n\n另外，支持使用 GraphViz 或 Mermaid 绘制有向图或流程图。\n\n\n```{dot}\n//| label: fig-real\n//| fig-cap: GraphViz 有向图\n//| fig-width: 6.25\n//| fig-height: 2.5\ndigraph G{\n    //bgcolor=\"transparent\"\n    //node [style=\"filled\", fillcolor=\"white\"]\n    //edge [color=\"gray\" penwidth=2]\n\n    //layout=neato\n    //ratio=0.5\n\n    rankdir=BT\n    sup[label=\"A\"];\n    mono[label=\"B\"];\n    nested[label=\"C\"];\n    bw[label=\"D\"];\n    cauchy[label=\"E\"];\n    \n    accu[label=\"F\"]\n    finite[label=\"G\"];\n    lebesgue[label=\"H\"];\n\n\n    { rank=max; finite }\n    { rank=same;  lebesgue }\n    { rank=same; sup, mono, nested, accu, bw }\n    { rank=min; cauchy}\n\n    sup -> mono -> nested; nested -> bw [style=invis]; bw -> cauchy;\n    cauchy -> mono[label=\"1\"];\n    nested -> sup[label=\"2\"];\n    nested -> finite[label=\"3\"];\n    nested -> accu[label=\"4\"];\n    finite -> accu[label=\"5\"];\n    accu -> bw[dir=both, label=\"6\"];\n    bw -> lebesgue[label=\"7\"]; lebesgue -> finite[label=\"8\"];\n    finite -> sup[label=\"9\"];\n}\n```\n\n\n## HTML 专用测试\n\n目前暂未处理 LaTeX/PDF 格式的代码高亮和 callout，本节测试内容只会在 HTML 输出中被渲染。（参见：[Quarto - Conditional Content](https://quarto.org/docs/authoring/conditional.html)）\n\n::::: {.content-visible when-format=\"html\"}\n\n### 代码块、引用\n\n本节测试代码块和引用。\n\n> 这是一个引用块和一个非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子。\n\nQuarto 具有 5 种 callout 类型：`note`，`warning`，`important`，`tip`，和 `caution`。\n\n下面是代码块。\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n### Callouts\n\n::: {.callout-note}\n普通的 note callout。\n:::\n\n::: {.callout-warning}\n这是 warning callout 和一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子。\n:::\n\n这是两个 callout 中间的一个段落。\n\n::: {.callout-important}\n这是 important callout。\n:::\n\n::: {.callout-tip}\n## 有 caption 的 callout\n\n这是有 caption 的 callout。\n:::\n\n::: {.callout-caution collapse=\"true\"}\n\n## 可折叠的 callout\n\n开启 collapse 的可折叠 caution callout。\n:::\n\n::: {.callout-caution appearance=\"simple\"}\n\nsimple 风格的 callout 和一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子。\n:::\n\n::: {.callout-caution appearance=\"minimal\"}\n\nminimal 风格的 callout 和一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子。\n:::\n\n:::::\n\n## 文献引用测试\n\n人脸识别是以人面部特征作为识别个体身份的一种个体生物特征识别方法 [@define]。……人脸识别的研究最早可追溯到上世纪 60 年代，Bledsoe and Chan 研究了编程计算机识别人脸的方法[@history]。随后，萌芽期的人脸识别技术经历多轮蜕变，在发展中逐渐完善。然而，人脸识别的主要难点在于不同个体的人脸结构并无大异，而同一个体的人脸在不同表情、年龄、妆饰、光照等干扰因素下又往往差异显著[@technical]，这要求人脸识别技术既要克服类内因素的干扰，同时又要加强类间差距的显著性，而早期人脸识别方法关注人脸几何特征，识别效果不尽人意。为此，以 Eigenfaces[@eigenfaces] 为代表的子空间学习识别方法和 Gabor[@gabor]、LBP[@lbp] 等局部特征分析的滤波器提取方法在各自领域都有所突破。2014 年，应用新兴的深度卷积神经网络技术，DeepFace[@deepface] 横空出世，以 97.35% 的 LFW 基准数据集识别准确率重塑了人脸识别领域的研究格局。随后，人脸识别技术迎来爆发式增长，并逐渐走进人们的日常生活之中。……个体层面，要加强公众的权利意识，塑造个人的“数字理性”[@guochunzhen]。\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}