<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>sun123zxy&#39;s blog</title>
<link>https://blog.sun123zxy.top/</link>
<atom:link href="https://blog.sun123zxy.top/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.554</generator>
<lastBuildDate>Sun, 12 May 2024 16:00:00 GMT</lastBuildDate>
<item>
  <title>代数同构视角下的离散 Fourier 变换</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20240513-isodft/</link>
  <description><![CDATA[ 




<section id="从-fourier-变换到-dft" class="level1 page-columns page-full" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 从 Fourier 变换到 DFT</h1>
<section id="fourier-变换及其卷积性质" class="level3">
<h3 class="anchored" data-anchor-id="fourier-变换及其卷积性质">Fourier 变换及其卷积性质</h3>
<ul>
<li><p>Fourier 变换：将给定函数 <img src="https://latex.codecogs.com/png.latex?f"> 映为函数 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20F%5Bf%5D">： <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%20F%5Bf%5D(%5Clambda)%20:=%20%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D%20f(t)%20e%5E%7B-%20%5Cmathrm%7Bi%7D%5Clambda%20t%7D%20%5Coperatorname%7Bd%7D%5C!t%0A"></p></li>
<li><p>定义函数 <img src="https://latex.codecogs.com/png.latex?f"> 和 <img src="https://latex.codecogs.com/png.latex?g"> 的卷积 <img src="https://latex.codecogs.com/png.latex?%0A(f*g)(%5Clambda)%20:=%20%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D%20f(%5Clambda-x)%20g(x)%20%5Coperatorname%7Bd%7D%5C!x%0A"> 则 Fourier 变换将两个函数的卷积化为逐点乘积，即 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathcal%20F%5Bf*g%5D%20=%20%5Cmathcal%20F%5Bf%5D%20%5Cmathcal%20F%5Bg%5D%0A"></p></li>
</ul>
</section>
<section id="复数域上的-dft-及其卷积性质" class="level3">
<h3 class="anchored" data-anchor-id="复数域上的-dft-及其卷积性质">复数域上的 DFT 及其卷积性质</h3>
<ul>
<li><p><em>离散 Fourier 变换</em>（Discrete Fourier Transform, DFT）：线性空间 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En%20%5Cto%20%5Cmathbb%20C%5En"> 上的线性变换 <img src="https://latex.codecogs.com/png.latex?F">，将向量 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20a%20%20=%20(a_0,a_1,%5Cdots,a_%7Bn-1%7D)%5E%5Cmathrm%7BT%7D%5Cin%20%5Cmathbb%20C%5En"> 映为 <img src="https://latex.codecogs.com/png.latex?F%20%5Cboldsymbol%20a">，其第 <img src="https://latex.codecogs.com/png.latex?i"> 个分量如下所示 <img src="https://latex.codecogs.com/png.latex?%0A(F%20%5Cboldsymbol%20a)_i%20:=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7Bik%7D%20a_i%0A"> 这里分量下标从 <img src="https://latex.codecogs.com/png.latex?0"> 开始计数，<img src="https://latex.codecogs.com/png.latex?%5Comega_n%20:=%20e%5E%7B2%20%5Cpi%20%5Cmathrm%7Bi%7D/%20n%7D"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 上的一个 <img src="https://latex.codecogs.com/png.latex?n"> 次本原单位根．</p></li>
<li><p>相仿的卷积性：两个向量 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20a,%20%5Cboldsymbol%20b%20%5Cin%20%5Cmathbb%20C%5En"> 的<em>循环卷积</em>定义为 <img src="https://latex.codecogs.com/png.latex?%0A(%5Cboldsymbol%20a%20*%20%5Cboldsymbol%20b)_k%20:=%20%5Csum_%7Bi%20+%20j%20=%20k%20%5Cpmod%7Bn%7D%7D%20a_i%20b_j%0A"> 则 DFT 将两个向量的循环卷积化为<em>逐项乘积</em> <img src="https://latex.codecogs.com/png.latex?%5Ctimes">，即 <img src="https://latex.codecogs.com/png.latex?%0AF(%5Cboldsymbol%20a%20*%20%5Cboldsymbol%20b)%20=%20(F%20%5Cboldsymbol%20a)%20%5Ctimes%20(F%20%5Cboldsymbol%20b)%0A"></p></li>
</ul>
</section>
<section id="矩阵表示" class="level3">
<h3 class="anchored" data-anchor-id="矩阵表示">矩阵表示</h3>
<p>在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 的自然基下，变换 <img src="https://latex.codecogs.com/png.latex?F"> 有矩阵表示 <img src="https://latex.codecogs.com/png.latex?%0AF%20=%20%5Cbegin%7Bpmatrix%7D%20%5Comega_n%5E%7Bij%7D%20%5Cend%7Bpmatrix%7D_%7B(i,j)%5Cin%20n%20%5Ctimes%20n%7D%20=%20%5Cbegin%7Bpmatrix%7D%0A1%20&amp;%201%20&amp;%20%5Cdots%20&amp;%201%20%5C%5C%0A1%20&amp;%20%5Comega_n%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A1%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B(n-1)(n-1)%7D%0A%5Cend%7Bpmatrix%7D%0A"></p>
<ul>
<li>卷积性：系数为全体复平面 <img src="https://latex.codecogs.com/png.latex?n"> 次单位根的可逆 Vandermonde 矩阵</li>
<li>正交性：适当单位化后为酉矩阵</li>
</ul>
</section>
<section id="问题" class="level3">
<h3 class="anchored" data-anchor-id="问题">问题<sup>1</sup></h3>
<ul>
<li><p>DFT 化卷为乘的本质？</p>
<ul>
<li>我们给出一大类具备卷积性的线性映射的构造，DFT 将作为特例推出．</li>
</ul></li>
<li><p>如何从代数角度理解 DFT？</p>
<ul>
<li>两个视角：多项式环、矩阵代数</li>
<li>两种表现：求值插值、相似对角化</li>
<li>一致观点：保加法、保数乘、保乘法的代数同构</li>
</ul></li>
<li><p>DFT 是否是唯一一类化卷为乘的变换？作为底层结构的 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 是否可以放宽？</p>
<ul>
<li><p>工程上复数乘法运算较慢且具有浮点误差，更换底层代数结构具有实际意义．例如，被称为数论变换（number theoretic transforms, NTT）的 DFT 变种就将 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 替换为有限域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20F_p"> 而同时保留了其卷积性质．</p></li>
<li><p>我们将其 DFT 扩展至任意整环并证明特定含义下的唯一性．</p></li>
</ul></li>
</ul>
</section>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;<span class="citation" data-cites="agarwal_number_1975">[1]</span>; <span class="citation" data-cites="nicholson_algebraic_1971">[2]</span>; <span class="citation" data-cites="furer_faster_2009">[3]</span>; <span class="citation" data-cites="amiot_music_2016">[4]</span>; <span class="citation" data-cites="baraquin_uniqueness_2023">[5]</span></p></div></div></section>
<section id="dft-与多项式环" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> DFT 与多项式环</h1>
<section id="引例mathbb-cx求值插值与复数域-dft" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="引例mathbb-cx求值插值与复数域-dft"><span class="header-section-number">2.1</span> 引例：<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D">、求值插值与复数域 DFT</h2>
<section id="mathbb-cx-与循环卷积" class="level3">
<h3 class="anchored" data-anchor-id="mathbb-cx-与循环卷积"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D"> 与循环卷积</h3>
<p>设不超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式 <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_k%20x%5Ek">，<img src="https://latex.codecogs.com/png.latex?g(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20b_k%20x%5Ek">．二者的多项式乘积由 <em>Cauchy 乘积</em>给出 <img src="https://latex.codecogs.com/png.latex?%0Af(x)%20g(x)%20=%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20a_i%20x%5Ei%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20b_j%20x%5Ej%20=%20%5Csum_%7Bk=0%7D%5E%7B2n-2%7D%20x%5Ek%20%5Csum_%7Bi+j%20=%20k%7D%20a_i%20b_j%0A"> 令 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20a%20:=%20(a_0,a_1,%5Cdots,a_%7Bn-1%7D)%5E%5Cmathrm%7BT%7D">，<img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20b%20:=%20(b_0,b_1,%5Cdots,b_%7Bn-1%7D)%5E%5Cmathrm%7BT%7D">，回顾循环卷积定义 <img src="https://latex.codecogs.com/png.latex?%0A(%5Cboldsymbol%20a%20*%20%5Cboldsymbol%20b)_k%20:=%20%5Csum_%7Bi%20+%20j%20=%20k%20%5Cpmod%7Bn%7D%7D%20a_i%20b_j%0A"> 可见 Cauchy 乘积与循环卷积尚有区别．稍加改动，若在模 <img src="https://latex.codecogs.com/png.latex?x%5En%20-%201"> 的意义下——即商环 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D/(x%5En-1)"> 中计算，则二者相合： <img src="https://latex.codecogs.com/png.latex?%0Af(x)%20g(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20x%5Ek%20%5Csum_%7Bi%20+%20j%20=%20k%20%5Cpmod%7Bn%7D%7D%20a_i%20b_j%20%5Cpmod%7Bx%5En%20-%201%7D%0A"></p>
</section>
<section id="mathbb-cx-与复数域-dft" class="level3">
<h3 class="anchored" data-anchor-id="mathbb-cx-与复数域-dft"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D"> 与复数域 DFT</h3>
<p>DFT 亦有在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D"> 上的表示．给定 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20a%20:=%20(a_0,a_1,%5Cdots,a_%7Bn-1%7D)%5E%5Cmathrm%7BT%7D%5Cin%20%5Cmathbb%20C%5En">，其对应多项式 <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_k%20x%5Ek"> 次数不超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 次，则 <img src="https://latex.codecogs.com/png.latex?%0A(F%20%5Cboldsymbol%20a)_i%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7Bik%7D%20%5Cboldsymbol%20a_i%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Cboldsymbol%20a_i%20(%5Comega_n%5Ei)%5Ek%20=%20f(%5Comega_n%5Ei)%0A"> 恰为 <img src="https://latex.codecogs.com/png.latex?f(x)"> 分别在 <img src="https://latex.codecogs.com/png.latex?n"> 个 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 上 <img src="https://latex.codecogs.com/png.latex?n"> 次单位根处<em>多点求值</em>的结果．</p>
<ul>
<li>可逆性：<img src="https://latex.codecogs.com/png.latex?n"> 点唯一确定一个不超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式（<em>Lagrange 插值</em>）</li>
<li>线性性：<img src="https://latex.codecogs.com/png.latex?(af+bg)%20(%5Comega_n%5Ei)%20=%20a%20f(%5Comega_n%5Ei)%20+%20b%20g(%5Comega_n%5Ei)"></li>
<li>卷积性：将取模乘法化为点值逐项相乘，再次与 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 上的表现相合 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AF(%5Cboldsymbol%20a%20*%20%5Cboldsymbol%20b)%20&amp;=%20(F%20%5Cboldsymbol%20a)%20%5Ctimes%20(F%20%5Cboldsymbol%20b)%20%5C%5C%0A(fg)(%5Comega_n%5Ei)%20&amp;=%20f(%5Comega_n%5Ei)%20g(%5Comega_n%5Ei)%0A%5Cend%7Baligned%7D%0A"></li>
</ul>
</section>
<section id="小结" class="level3">
<h3 class="anchored" data-anchor-id="小结">小结</h3>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 与 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D"> 视角下的 DFT：</p>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En">：作为以单位根为参数的 Vandermonde 矩阵，DFT 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 上的可逆线性变换，将向量间的循环卷积 <img src="https://latex.codecogs.com/png.latex?*"> 化为逐项乘积 <img src="https://latex.codecogs.com/png.latex?%5Ctimes">．</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D">：作为单位根处的多点求值插值，DFT 在全体不超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式和 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 间建立起线性同构关系，将多项式乘积化为函数值逐点乘积．</p></li>
</ul></li>
<li><p>化卷为乘，就是把多项式环上的取模乘法变为 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 上的逐项乘积，DFT 保持了两个代数结构间的乘法．</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D"> 作为环结构乘法自然，在多项式环上刻画 DFT 较在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 上强行定义循环卷积具有优越性．</li>
</ul></li>
</ul>
</section>
</section>
<section id="整环上的推广" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="整环上的推广"><span class="header-section-number">2.2</span> 整环上的推广</h2>
<section id="代数代数同构与直积" class="level3">
<h3 class="anchored" data-anchor-id="代数代数同构与直积">代数、代数同构与直积</h3>
<ul>
<li><p>整环：无零因子交换幺环</p></li>
<li><p>设 <img src="https://latex.codecogs.com/png.latex?R"> 是一整环，若 <img src="https://latex.codecogs.com/png.latex?(A,+,%5Ctimes)"> 为一环且配备了与乘法 <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> 相容的 <img src="https://latex.codecogs.com/png.latex?R">-数乘 <img src="https://latex.codecogs.com/png.latex?%5Ccdot">，则称 <img src="https://latex.codecogs.com/png.latex?A"> 是一 <img src="https://latex.codecogs.com/png.latex?R">-代数，不至混淆时简称代数．</p>
<ul>
<li>整环 <img src="https://latex.codecogs.com/png.latex?R"> 自身也可视为一个代数．</li>
</ul></li>
<li><p>我们将 <img src="https://latex.codecogs.com/png.latex?R%5En"> 理解为作为代数的 <img src="https://latex.codecogs.com/png.latex?R"> 的直积，即 <img src="https://latex.codecogs.com/png.latex?R%5En%20=%20R%20%5Ctimes%20R%20%5Ctimes%20%5Cdots%20%5Ctimes%20R">．直积的加法、数乘和乘法均在逐项意义下定义．</p></li>
<li><p>保持代数间加法、数乘和乘法的双射被称为代数同构．</p></li>
</ul>
</section>
<section id="几个观察与整环的优势" class="level3">
<h3 class="anchored" data-anchor-id="几个观察与整环的优势">几个观察与整环的优势</h3>
<ul>
<li><p>关于引例的若干观察：</p>
<ul>
<li><p>DFT 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D%20/%20(x%5En-1)%20%5Cto%20R%5En"> 的一个代数同构，具体做法是在单位根处多点求值插值</p></li>
<li><p>求值插值在任意 <img src="https://latex.codecogs.com/png.latex?n"> 个不同位置进行即可，单位根不是本质要求</p></li>
<li><p>商环 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D%20/%20(x%5En-1)"> 带来了与循环卷积对应的多项式取模乘法，还蕴含着“不超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 次”为求值插值带来的单与满</p></li>
<li><p><em>第一同构定理</em>：设 <img src="https://latex.codecogs.com/png.latex?f:%20R%20%5Cto%20S"> 是环同态，则 <img src="https://latex.codecogs.com/png.latex?f"> 诱导出环同构 <img src="https://latex.codecogs.com/png.latex?R%20/%20%5Coperatorname%7BKer%7Df%20%5Ccong%20%5Coperatorname%7BIm%7Df"></p></li>
</ul></li>
<li><p>选取整环作为底层代数结构的理由：</p>
<ul>
<li>交换：确保求值操作是同态</li>
<li>保留环上整除的结构和多项式根与因子的关系（带余除法、余式定理）</li>
<li>在唯一性证明中发挥作用</li>
</ul></li>
</ul>
</section>
<section id="商环到直积的代数同构" class="level3 fragile">
<h3 class="fragile anchored" data-anchor-id="商环到直积的代数同构">商环到直积的代数同构</h3>
<p>下面固定 <img src="https://latex.codecogs.com/png.latex?R"> 是一整环．令 <img src="https://latex.codecogs.com/png.latex?C"> 是 <img src="https://latex.codecogs.com/png.latex?R"> 的一有限子集，由若干不同一次多项式乘积 <img src="https://latex.codecogs.com/png.latex?%5Cprod_%7Bc%20%5Cin%20C%7D%20(x-c)"> 生成的 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D"> 上的理想记为 <img src="https://latex.codecogs.com/png.latex?%5Cleft(%20%5Cprod_%7Bc%20%5Cin%20C%7D%20(x-c)%20%5Cright)">．</p>
<p>用记号 <img src="https://latex.codecogs.com/png.latex?R%5EC"> 代表全体 <img src="https://latex.codecogs.com/png.latex?C"> 上的 <img src="https://latex.codecogs.com/png.latex?R"> 值函数构成的集合．<img src="https://latex.codecogs.com/png.latex?R%5EC"> 与其上定义的函数逐点加法、数乘和乘法构成一个代数，自然也与 <img src="https://latex.codecogs.com/png.latex?R%5En"> 代数同构．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-dft-exist" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 1</strong></span> 多项式商环 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D%20/%20%5Cleft(%20%5Cprod_%7Bc%20%5Cin%20C%7D%20(x-c)%20%5Cright)"> 与代数直积 <img src="https://latex.codecogs.com/png.latex?R%5EC"> 代数同构．</p>
</div>
</div>
</div>
</div>
<div id="fig-dft-exist" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-dft-exist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="244.9775pt" height="80.3155pt" viewbox="0 -55.39 168.95 55.39">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M43.40029 49.47322C43.46029 49.71228 43.48998 49.81197 43.67936 49.84166C43.76904 49.85166 44.08779 49.85166 44.28686 49.85166C44.99436 49.85166 46.09998 49.85166 46.09998 48.86541C46.09998 48.52697 45.94061 47.83947 45.55217 47.45103C45.29311 47.19197 44.76498 46.87322 43.86873 46.87322H42.75311L43.40029 49.47322ZM44.83498 46.74384C45.84092 46.96291 47.02623 47.66009 47.02623 48.66634C47.02623 49.52291 46.12967 50.16041 44.82498 50.16041H41.98592C41.78686 50.16041 41.69717 50.16041 41.69717 49.96134C41.69717 49.85166 41.78686 49.85166 41.97592 49.85166C41.99592 49.85166 42.18529 49.85166 42.35436 49.83166C42.53373 49.81197 42.62342 49.80197 42.62342 49.67228C42.62342 49.63259 42.61342 49.60259 42.58373 49.48322L41.24873 44.133844C41.14936 43.745407 41.12936 43.665719 40.342481 43.665719C40.163106 43.665719 40.073419 43.665719 40.073419 43.466657C40.073419 43.356969 40.192794 43.356969 40.212794 43.356969C40.491856 43.356969 41.18904 43.386969 41.46811 43.386969C41.74686 43.386969 42.45404 43.356969 42.73311 43.356969C42.81279 43.356969 42.93217 43.356969 42.93217 43.556344C42.93217 43.665719 42.84248 43.665719 42.65342 43.665719C42.28467 43.665719 42.00592 43.665719 42.00592 43.845094C42.00592 43.904782 42.02592 43.954782 42.03561 44.014469L42.69311 46.65416H43.87873C44.78498 46.65416 44.96436 46.09634 44.96436 45.74759C44.96436 45.59822 44.88467 45.28947 44.82498 45.06041C44.75529 44.78134 44.66561 44.41291 44.66561 44.213532C44.66561 43.137907 45.86092 43.137907 45.99029 43.137907C46.83717 43.137907 47.18561 44.143844 47.18561 44.283219C47.18561 44.40291 47.07623 44.40291 47.06623 44.40291C46.97654 44.40291 46.95654 44.333219 46.93654 44.263532C46.68779 43.526344 46.25936 43.356969 46.03029 43.356969C45.70154 43.356969 45.63186 43.576032 45.63186 43.964469C45.63186 44.273532 45.69154 44.78134 45.73123 45.10009C45.75123 45.23978 45.77123 45.42884 45.77123 45.56822C45.77123 46.33541 45.10373 46.64416 44.83498 46.74384Z"></path>
<path d="M49.84703 40.86666V41.26509H48.88078V50.42947H49.84703V50.82791H48.48234V40.86666H49.84703Z"></path>
<path d="M53.40119 46.36541C53.46088 46.62416 53.68994 47.54072 54.38713 47.54072C54.43713 47.54072 54.67619 47.54072 54.88525 47.41103C54.6065 47.36134 54.40713 47.11228 54.40713 46.87322C54.40713 46.71384 54.51682 46.52478 54.78557 46.52478C55.00494 46.52478 55.32369 46.70384 55.32369 47.10228C55.32369 47.62041 54.73588 47.75978 54.39713 47.75978C53.81932 47.75978 53.47088 47.23197 53.35119 47.00291C53.10213 47.66009 52.56432 47.75978 52.27557 47.75978C51.23932 47.75978 50.671817 46.47478 50.671817 46.22572C50.671817 46.12634 50.771192 46.12634 50.791192 46.12634C50.870879 46.12634 50.900879 46.14603 50.920567 46.23572C51.25932 47.29166 51.91682 47.54072 52.25557 47.54072C52.44463 47.54072 52.79338 47.45103 52.79338 46.87322C52.79338 46.56447 52.624 45.89697 52.25557 44.50259C52.09619 43.884782 51.74744 43.466657 51.30932 43.466657C51.24932 43.466657 51.020254 43.466657 50.811192 43.596032C51.060254 43.645719 51.27932 43.855094 51.27932 44.133844C51.27932 44.40291 51.060254 44.48259 50.910879 44.48259C50.611817 44.48259 50.362754 44.223532 50.362754 43.904782C50.362754 43.446657 50.860879 43.247282 51.29932 43.247282C51.95682 43.247282 52.31525 43.944782 52.34525 44.004469C52.46463 43.636032 52.82338 43.247282 53.42088 43.247282C54.44713 43.247282 55.01463 44.53228 55.01463 44.78134C55.01463 44.88103 54.92525 44.88103 54.89525 44.88103C54.80557 44.88103 54.78557 44.84134 54.76588 44.77134C54.43713 43.705719 53.75963 43.466657 53.44088 43.466657C53.05244 43.466657 52.89307 43.785407 52.89307 44.123844C52.89307 44.343219 52.95275 44.56228 53.06244 45.00072L53.40119 46.36541Z"></path>
<path d="M57.35178 50.82791H55.987093V50.42947H56.95334V41.26509H55.987093V40.86666H57.35178V50.82791Z"></path>
<path d="M154.05132 49.47322C154.11132 49.71228 154.14101 49.81197 154.33038 49.84166C154.42007 49.85166 154.73882 49.85166 154.93788 49.85166C155.64538 49.85166 156.75101 49.85166 156.75101 48.86541C156.75101 48.52697 156.59163 47.83947 156.2032 47.45103C155.94413 47.19197 155.41601 46.87322 154.51976 46.87322H153.40413L154.05132 49.47322ZM155.48601 46.74384C156.49195 46.96291 157.67726 47.66009 157.67726 48.66634C157.67726 49.52291 156.7807 50.16041 155.47601 50.16041H152.63695C152.43788 50.16041 152.3482 50.16041 152.3482 49.96134C152.3482 49.85166 152.43788 49.85166 152.62695 49.85166C152.64695 49.85166 152.83632 49.85166 153.00538 49.83166C153.18476 49.81197 153.27445 49.80197 153.27445 49.67228C153.27445 49.63259 153.26445 49.60259 153.23476 49.48322L151.89976 44.133844C151.80038 43.745407 151.78038 43.665719 150.993508 43.665719C150.814133 43.665719 150.724446 43.665719 150.724446 43.466657C150.724446 43.356969 150.843821 43.356969 150.863821 43.356969C151.142883 43.356969 151.84007 43.386969 152.11913 43.386969C152.39788 43.386969 153.10507 43.356969 153.38413 43.356969C153.46382 43.356969 153.5832 43.356969 153.5832 43.556344C153.5832 43.665719 153.49351 43.665719 153.30445 43.665719C152.9357 43.665719 152.65695 43.665719 152.65695 43.845094C152.65695 43.904782 152.67695 43.954782 152.68663 44.014469L153.34413 46.65416H154.52976C155.43601 46.65416 155.61538 46.09634 155.61538 45.74759C155.61538 45.59822 155.5357 45.28947 155.47601 45.06041C155.40632 44.78134 155.31663 44.41291 155.31663 44.213532C155.31663 43.137907 156.51195 43.137907 156.64132 43.137907C157.4882 43.137907 157.83663 44.143844 157.83663 44.283219C157.83663 44.40291 157.72726 44.40291 157.71726 44.40291C157.62757 44.40291 157.60757 44.333219 157.58757 44.263532C157.33882 43.526344 156.91038 43.356969 156.68132 43.356969C156.35257 43.356969 156.28288 43.576032 156.28288 43.964469C156.28288 44.273532 156.34257 44.78134 156.38226 45.10009C156.40226 45.23978 156.42226 45.42884 156.42226 45.56822C156.42226 46.33541 155.75476 46.64416 155.48601 46.74384Z"></path>
<path d="M163.837 51.78581C163.837 51.82049 163.81606 51.87643 163.74638 51.87643C163.69731 51.87643 163.68356 51.86237 163.62075 51.79268L163.11138 51.25549C163.04888 51.33924 162.65825 51.87643 161.80013 51.87643C160.10544 51.87643 158.445126 50.37674 158.445126 48.80049C158.445126 47.663618 159.33794 46.833618 160.58669 46.833618C160.96325 46.833618 161.63294 46.910181 162.35138 47.517056C162.90231 47.98424 163.05575 48.59112 163.05575 48.64706C163.05575 48.73768 162.972 48.73768 162.937 48.73768C162.84638 48.73768 162.83263 48.70268 162.81169 48.62612C162.52575 47.670493 161.54919 47.084556 160.70513 47.084556C159.96575 47.084556 159.14263 47.482056 159.14263 48.58424C159.14263 48.78643 159.19169 49.88862 159.99356 50.76737C160.47513 51.30456 161.20731 51.62518 161.87013 51.62518C162.67919 51.62518 163.15325 51.03956 163.15325 50.25831C163.15325 50.06299 163.13231 50.01424 163.13231 49.97237C163.13231 49.88143 163.22325 49.88143 163.25794 49.88143C163.3695 49.88143 163.3695 49.90237 163.4045 50.03487L163.837 51.78581Z"></path>
<path d="M8.02733 13.28221C8.08733 13.52127 8.11702 13.62096 8.30639 13.65065C8.39608 13.66065 8.71483 13.66065 8.91389 13.66065C9.62139 13.66065 10.72702 13.66065 10.72702 12.6744C10.72702 12.33596 10.56764 11.64846 10.17921 11.26002C9.92014 11.00096 9.39202 10.68221 8.49577 10.68221H7.38014L8.02733 13.28221ZM9.46202 10.55284C10.46796 10.7719 11.65327 11.46909 11.65327 12.47534C11.65327 13.3319 10.75671 13.9694 9.45202 13.9694H6.61296C6.41389 13.9694 6.32421 13.9694 6.32421 13.77034C6.32421 13.66065 6.41389 13.66065 6.60296 13.66065C6.62296 13.66065 6.81233 13.66065 6.98139 13.64065C7.16077 13.62096 7.25046 13.61096 7.25046 13.48127C7.25046 13.44159 7.24046 13.41159 7.21077 13.29221L5.87577 7.942836C5.77639 7.554399 5.75639 7.474711 4.969519 7.474711C4.790144 7.474711 4.700457 7.474711 4.700457 7.275649C4.700457 7.165961 4.819832 7.165961 4.839832 7.165961C5.118894 7.165961 5.81608 7.195961 6.09514 7.195961C6.37389 7.195961 7.08108 7.165961 7.36014 7.165961C7.43983 7.165961 7.55921 7.165961 7.55921 7.365336C7.55921 7.474711 7.46952 7.474711 7.28046 7.474711C6.91171 7.474711 6.63296 7.474711 6.63296 7.654086C6.63296 7.713774 6.65296 7.763774 6.66264 7.823461L7.32014 10.46315H8.50577C9.41202 10.46315 9.59139 9.90534 9.59139 9.55659C9.59139 9.40721 9.51171 9.09846 9.45202 8.8694C9.38233 8.59034 9.29264 8.2219 9.29264 8.022524C9.29264 6.946899 10.48796 6.946899 10.61733 6.946899C11.46421 6.946899 11.81264 7.952836 11.81264 8.092211C11.81264 8.2119 11.70327 8.2119 11.69327 8.2119C11.60358 8.2119 11.58358 8.142211 11.56358 8.072524C11.31483 7.335336 10.88639 7.165961 10.65733 7.165961C10.32858 7.165961 10.25889 7.385024 10.25889 7.773461C10.25889 8.082524 10.31858 8.59034 10.35827 8.90909C10.37827 9.04877 10.39827 9.23784 10.39827 9.37721C10.39827 10.1444 9.73077 10.45315 9.46202 10.55284Z"></path>
<path d="M14.47399 4.67565V5.07409H13.50774V14.23846H14.47399V14.6369H13.1093V4.67565H14.47399Z"></path>
<path d="M18.02815 10.1744C18.08784 10.43315 18.3169 11.34971 19.01409 11.34971C19.06409 11.34971 19.30315 11.34971 19.51221 11.22002C19.23346 11.17034 19.03409 10.92127 19.03409 10.68221C19.03409 10.52284 19.14378 10.33377 19.41253 10.33377C19.6319 10.33377 19.95065 10.51284 19.95065 10.91127C19.95065 11.4294 19.36284 11.56877 19.02409 11.56877C18.44628 11.56877 18.09784 11.04096 17.97815 10.8119C17.72909 11.46909 17.19128 11.56877 16.90253 11.56877C15.86628 11.56877 15.298777 10.28377 15.298777 10.03471C15.298777 9.93534 15.398152 9.93534 15.418152 9.93534C15.497839 9.93534 15.527839 9.95502 15.547527 10.04471C15.88628 11.10065 16.54378 11.34971 16.88253 11.34971C17.07159 11.34971 17.42034 11.26002 17.42034 10.68221C17.42034 10.37346 17.25096 9.70596 16.88253 8.31159C16.72315 7.693774 16.3744 7.275649 15.93628 7.275649C15.87628 7.275649 15.647214 7.275649 15.438152 7.405024C15.687214 7.454711 15.90628 7.664086 15.90628 7.942836C15.90628 8.2119 15.687214 8.29159 15.537839 8.29159C15.238777 8.29159 14.989714 8.032524 14.989714 7.713774C14.989714 7.255649 15.487839 7.056274 15.92628 7.056274C16.58378 7.056274 16.94221 7.753774 16.97221 7.813461C17.09159 7.445024 17.45034 7.056274 18.04784 7.056274C19.07409 7.056274 19.64159 8.34127 19.64159 8.59034C19.64159 8.69002 19.55221 8.69002 19.52221 8.69002C19.43253 8.69002 19.41253 8.65034 19.39284 8.58034C19.06409 7.514711 18.38659 7.275649 18.06784 7.275649C17.6794 7.275649 17.52003 7.594399 17.52003 7.932836C17.52003 8.152211 17.57971 8.37127 17.6894 8.80971L18.02815 10.1744Z"></path>
<path d="M21.97874 14.6369H20.614053V14.23846H21.5803V5.07409H20.614053V4.67565H21.97874V14.6369ZM27.51773 14.25846C27.56741 14.38784 27.56741 14.41784 27.56741 14.43752C27.56741 14.54721 27.47773 14.6369 27.36835 14.6369C27.22866 14.6369 27.18897 14.53721 27.15898 14.43752L23.7621 5.05409C23.71241 4.92471 23.71241 4.89471 23.71241 4.87502C23.71241 4.76534 23.8021 4.67565 23.91179 4.67565C24.05116 4.67565 24.09085 4.77534 24.12085 4.87502L27.51773 14.25846Z"></path>
<path d="M33.91808 3.7907C33.91808 3.8303 33.89808 3.8503 33.87808 3.88C33.41995 4.3682 32.74245 5.175 32.32433 6.79878C32.09495 7.70534 32.00558 8.73128 32.00558 9.65753C32.00558 12.27753 32.63308 14.11034 33.82839 15.405343C33.91808 15.49503 33.91808 15.51503 33.91808 15.534717C33.91808 15.634405 33.83839 15.634405 33.79839 15.634405C33.64901 15.634405 33.1112 15.036592 32.98151 14.887217C31.96558 13.6819 31.31808 11.88909 31.31808 9.66753C31.31808 8.25316 31.56714 6.25097 32.87214 4.5675C32.97183 4.4478 33.61901 3.691 33.79839 3.691C33.83839 3.691 33.91808 3.691 33.91808 3.7907Z"></path>
<path d="M37.94694 4.67672V5.07516C36.921 5.07516 36.921 5.56329 36.921 5.86204V14.239537H41.21444V5.86204C41.21444 5.56329 41.21444 5.07516 40.1885 5.07516V4.67672H43.20663V5.07516C42.18069 5.07516 42.18069 5.56329 42.18069 5.86204V13.45266C42.18069 13.751412 42.18069 14.239537 43.20663 14.239537V14.637974H34.928814V14.239537C35.95475 14.239537 35.95475 13.751412 35.95475 13.45266V5.86204C35.95475 5.56329 35.95475 5.07516 34.928814 5.07516V4.67672H37.94694Z"></path>
<path d="M46.83502 6.84854C46.58409 6.80666 46.4794 6.61135 46.4794 6.45791C46.4794 6.26948 46.62596 6.19979 46.75127 6.19979C46.90471 6.19979 47.14909 6.31135 47.14909 6.64604C47.14909 7.12041 46.60502 7.25291 46.22815 7.25291C45.1819 7.25291 44.212525 6.29041 44.212525 5.32073C44.212525 4.721038 44.630962 4.107288 45.50284 4.107288C46.68159 4.107288 47.23252 4.797601 47.23252 4.895413C47.23252 4.937288 47.17002 5.013851 47.11409 5.013851C47.07221 5.013851 47.05815 5.000101 47.00252 4.944163C46.45846 4.302601 45.64221 4.302601 45.5169 4.302601C45.01471 4.302601 44.79127 4.644163 44.79127 5.076663C44.79127 5.27916 44.88909 6.03916 45.2519 6.52073C45.5169 6.86229 45.8794 7.0576 46.22815 7.0576C46.32596 7.0576 46.66065 7.04385 46.83502 6.84854Z"></path>
<path d="M51.67156 5.75323C51.78312 5.75323 51.95062 5.75323 51.95062 5.92073C51.95062 6.0951 51.79 6.0951 51.67156 6.0951H48.44218C48.54656 7.10635 49.39062 7.85979 50.47875 7.85979H51.67156C51.78312 7.85979 51.95062 7.85979 51.95062 8.02729C51.95062 8.20166 51.79 8.20166 51.67156 8.20166H50.45093C49.15343 8.20166 48.093434 7.18323 48.093434 5.9276C48.093434 4.644163 49.1675 3.646976 50.45093 3.646976H51.67156C51.78312 3.646976 51.95062 3.646976 51.95062 3.814163C51.95062 3.988538 51.79 3.988538 51.67156 3.988538H50.47875C49.39062 3.988538 48.54656 4.741976 48.44218 5.75323H51.67156Z"></path>
<path d="M58.58904 8.98979C58.58904 9.02448 58.5681 9.08041 58.49841 9.08041C58.44935 9.08041 58.4356 9.06635 58.37279 8.99666L57.86341 8.45948C57.80091 8.54323 57.41029 9.08041 56.55216 9.08041C54.85748 9.08041 53.197164 7.58073 53.197164 6.00448C53.197164 4.867601 54.08998 4.037601 55.33873 4.037601C55.71529 4.037601 56.38498 4.114163 57.10341 4.721038C57.65435 5.18823 57.80779 5.7951 57.80779 5.85104C57.80779 5.94166 57.72404 5.94166 57.68904 5.94166C57.59841 5.94166 57.58466 5.90666 57.56373 5.8301C57.27779 4.874476 56.30123 4.288538 55.45716 4.288538C54.71779 4.288538 53.89466 4.686038 53.89466 5.78823C53.89466 5.99041 53.94373 7.0926 54.7456 7.97135C55.22716 8.50854 55.95935 8.82916 56.62216 8.82916C57.43123 8.82916 57.90529 8.24354 57.90529 7.46229C57.90529 7.26698 57.88435 7.21823 57.88435 7.17635C57.88435 7.08541 57.97529 7.08541 58.00998 7.08541C58.12154 7.08541 58.12154 7.10635 58.15654 7.23885L58.58904 8.98979Z"></path>
<path d="M62.70719 4.77534C62.70719 4.80502 62.70719 4.82502 62.53782 4.9944C61.29282 6.249399 60.97407 8.132211 60.97407 9.65627C60.97407 11.3894 61.3525 13.12284 62.57782 14.36784C62.70719 14.48752 62.70719 14.50752 62.70719 14.53721C62.70719 14.6069 62.66719 14.6369 62.6075 14.6369C62.50782 14.6369 61.61157 13.9594 61.02375 12.6944C60.51563 11.59877 60.396253 10.49315 60.396253 9.65627C60.396253 8.8794 60.50563 7.674086 61.05375 6.548461C61.65125 5.32315 62.50782 4.67565 62.6075 4.67565C62.66719 4.67565 62.70719 4.70565 62.70719 4.77534Z"></path>
<path d="M66.61121 10.1744C66.6709 10.43315 66.89996 11.34971 67.59715 11.34971C67.64715 11.34971 67.88621 11.34971 68.09527 11.22002C67.81652 11.17034 67.61715 10.92127 67.61715 10.68221C67.61715 10.52284 67.72684 10.33377 67.99559 10.33377C68.21496 10.33377 68.53371 10.51284 68.53371 10.91127C68.53371 11.4294 67.9459 11.56877 67.60715 11.56877C67.02934 11.56877 66.6809 11.04096 66.56121 10.8119C66.31215 11.46909 65.77434 11.56877 65.48559 11.56877C64.44934 11.56877 63.881835 10.28377 63.881835 10.03471C63.881835 9.93534 63.98121 9.93534 64.00121 9.93534C64.080898 9.93534 64.110898 9.95502 64.130585 10.04471C64.46934 11.10065 65.12684 11.34971 65.46559 11.34971C65.65465 11.34971 66.0034 11.26002 66.0034 10.68221C66.0034 10.37346 65.83402 9.70596 65.46559 8.31159C65.30621 7.693774 64.95746 7.275649 64.51934 7.275649C64.45934 7.275649 64.230273 7.275649 64.02121 7.405024C64.270273 7.454711 64.48934 7.664086 64.48934 7.942836C64.48934 8.2119 64.270273 8.29159 64.120898 8.29159C63.821835 8.29159 63.572773 8.032524 63.572773 7.713774C63.572773 7.255649 64.070898 7.056274 64.50934 7.056274C65.16684 7.056274 65.52527 7.753774 65.55527 7.813461C65.67465 7.445024 66.0334 7.056274 66.6309 7.056274C67.65715 7.056274 68.22465 8.34127 68.22465 8.59034C68.22465 8.69002 68.13527 8.69002 68.10527 8.69002C68.01559 8.69002 67.99559 8.65034 67.9759 8.58034C67.64715 7.514711 66.96965 7.275649 66.6509 7.275649C66.26246 7.275649 66.10309 7.594399 66.10309 7.932836C66.10309 8.152211 66.16277 8.37127 66.27246 8.80971L66.61121 10.1744Z"></path>
<path d="M77.75636 9.4569C77.92574 9.4569 78.10511 9.4569 78.10511 9.65627C78.10511 9.85534 77.92574 9.85534 77.75636 9.85534H72.3673C72.19793 9.85534 72.018863 9.85534 72.018863 9.65627C72.018863 9.4569 72.19793 9.4569 72.3673 9.4569H77.75636Z"></path>
<path d="M85.09971 10.95127C84.94034 10.95127 84.80096 10.95127 84.66127 10.8119C84.5019 10.66221 84.48221 10.49315 84.48221 10.42315C84.48221 10.18409 84.66127 10.07471 84.85065 10.07471C85.1394 10.07471 85.40846 10.31377 85.40846 10.71221C85.40846 11.20034 84.94034 11.56877 84.23315 11.56877C82.88815 11.56877 81.563462 10.1444 81.563462 8.73971C81.563462 7.843461 82.141275 7.056274 83.17721 7.056274C84.60159 7.056274 85.43846 8.112211 85.43846 8.2319C85.43846 8.29159 85.37846 8.36127 85.31877 8.36127C85.26909 8.36127 85.24909 8.34127 85.1894 8.26159C84.40252 7.275649 83.31659 7.275649 83.19721 7.275649C82.5694 7.275649 82.30065 7.763774 82.30065 8.36127C82.30065 8.76971 82.49971 9.73596 82.83846 10.35346C83.14721 10.92127 83.69502 11.34971 84.24315 11.34971C84.58159 11.34971 84.96034 11.22002 85.09971 10.95127Z"></path>
<path d="M88.34473 9.65627C88.34473 10.43315 88.23535 11.63846 87.68723 12.76409C87.08973 13.9894 86.232852 14.6369 86.133477 14.6369C86.073477 14.6369 86.033789 14.5969 86.033789 14.53721C86.033789 14.50752 86.033789 14.48752 86.223164 14.30815C87.1991 13.3219 87.76691 11.73815 87.76691 9.65627C87.76691 7.952836 87.39848 6.199711 86.163164 4.94471C86.033789 4.82502 86.033789 4.80502 86.033789 4.77534C86.033789 4.71565 86.073477 4.67565 86.133477 4.67565C86.232852 4.67565 87.12941 5.35315 87.71723 6.618149C88.22535 7.713774 88.34473 8.8194 88.34473 9.65627Z"></path>
<path d="M92.37812 9.65753C92.37812 11.07222 92.12906 13.0744 90.82437 14.757843C90.72468 14.877217 90.077184 15.634405 89.897809 15.634405C89.848122 15.634405 89.778434 15.614405 89.778434 15.534717C89.778434 15.49503 89.798122 15.46503 89.838122 15.435343C90.316247 14.917217 90.96375 14.11034 91.37218 12.52659C91.60125 11.62003 91.69093 10.59409 91.69093 9.66753C91.69093 8.66159 91.60125 7.64566 91.34218 6.6694C90.96375 5.27472 90.37593 4.4778 89.867809 3.92C89.778434 3.8303 89.778434 3.8103 89.778434 3.7907C89.778434 3.711 89.848122 3.691 89.897809 3.691C90.047184 3.691 90.595 4.2985 90.71468 4.4382C91.73062 5.64347 92.37812 7.43628 92.37812 9.65753Z"></path>
<path d="M63.0273 45.8477H145.4258" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M143.55028 48.23823C143.92919 46.804638 144.772941 46.128857 145.624504 45.847607C144.772941 45.570263 143.92919 44.890575 143.55028 43.45698" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M104.01004 49.488183C104.08691 49.481308 104.17035 49.481308 104.24722 49.481308C105.50285 49.481308 106.65347 50.506621 106.65347 51.6085C106.65347 52.22943 106.28379 52.62693 105.73972 52.62693C104.77722 52.62693 104.26816 51.39943 104.07285 50.87631C103.98222 50.61818 103.82879 50.130058 103.78691 49.997246C103.01972 50.101933 102.531286 50.450683 102.531286 50.96693C102.531286 50.97381 102.573161 51.75506 103.13816 52.38287C103.18691 52.43162 103.1941 52.44568 103.1941 52.4735C103.1941 52.55725 103.10347 52.55725 103.08254 52.55725C103.01972 52.55725 102.9916 52.55725 102.8591 52.40381C102.468474 51.92256 102.287224 51.19725 102.287224 50.89725C102.287224 50.276308 102.740661 49.739433 103.64035 49.544121C103.2916 48.46287 103.24972 48.33037 103.24972 48.26756C103.24972 48.07912 103.41035 48.04443 103.48691 48.04443C103.56379 48.04443 103.70316 48.09318 103.7591 48.19787C103.80785 48.30256 103.87066 48.658183 104.01004 49.488183ZM104.10066 49.962558C104.24035 50.76475 104.29597 51.0785 104.63097 51.53193C104.94472 51.95725 105.31441 52.15256 105.66316 52.15256C106.14441 52.15256 106.40254 51.83193 106.40254 51.46912C106.40254 50.76475 105.52379 49.955683 104.3241 49.955683C104.26129 49.955683 104.16347 49.955683 104.10066 49.962558Z"></path>
<path d="M49.1016 37.01953V19.88281" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M51.49219 21.75391C50.054691 21.375 49.378909 20.531249 49.101566 19.683593C48.820316 20.531249 48.144534 21.375 46.71094 21.75391" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M78.51953 19.48437L145.4453 41.832" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-dasharray="2.78941 1.59395"></path>
<path d="M142.914324 43.50395C143.726835 42.265666 144.742448 41.886759 145.633085 41.894571C144.918239 41.359418 144.3323 40.449256 144.426048 38.968791" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M109.23305 38.30012V38.56512H106.456798V38.30012H109.23305Z"></path>
<path d="M106.79006 34.359185C106.86694 34.35231 106.95037 34.35231 107.02725 34.35231C108.28287 34.35231 109.4335 35.377622 109.4335 36.4795C109.4335 37.10044 109.06381 37.49793 108.51975 37.49793C107.55725 37.49793 107.04819 36.27043 106.85287 35.74731C106.76225 35.48918 106.60881 35.00106 106.56694 34.868247C105.79975 34.972935 105.311311 35.321685 105.311311 35.83794C105.311311 35.84481 105.353186 36.62606 105.91819 37.25387C105.96694 37.30262 105.97412 37.31669 105.97412 37.3445C105.97412 37.42825 105.8835 37.42825 105.86256 37.42825C105.79975 37.42825 105.77162 37.42825 105.63912 37.27481C105.248499 36.79356 105.067249 36.06825 105.067249 35.76825C105.067249 35.14731 105.520686 34.610435 106.42037 34.415122C106.07162 33.33387 106.02975 33.20137 106.02975 33.13856C106.02975 32.95012 106.19037 32.91544 106.26694 32.91544C106.34381 32.91544 106.48319 32.96418 106.53912 33.06887C106.58787 33.17356 106.65069 33.529185 106.79006 34.359185ZM106.88069 34.83356C107.02037 35.63575 107.076 35.9495 107.411 36.40293C107.72475 36.82825 108.09444 37.02356 108.44319 37.02356C108.92444 37.02356 109.18256 36.70294 109.18256 36.34012C109.18256 35.63575 108.30381 34.826685 107.10412 34.826685C107.04131 34.826685 106.9435 34.826685 106.88069 34.83356Z"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-dft-exist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;1: 命题&nbsp;1 构造示意图
</figcaption>
</figure>
</div>
</section>
<section id="构造" class="level3">
<h3 class="anchored" data-anchor-id="构造">构造</h3>
<p>考察 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D"> 到 <img src="https://latex.codecogs.com/png.latex?R%5EC"> 上的代数同态 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi:%20f%20%5Cmapsto%20(C%20%5Cni%20x%20%5Cmapsto%20f(x))">，其含义为在每一 <img src="https://latex.codecogs.com/png.latex?c%20%5Cin%20C"> 处对多项式 <img src="https://latex.codecogs.com/png.latex?f"> 进行求值．</p>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> 的核：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BKer%7D%5Cvarphi%20=%20%5C%7Bf%20%5Cin%20R%5Bx%5D:%20f(C)=%5C%7B0%5C%7D%5C%7D%20=%20%5Cleft(%20%5Cprod_%7Bc%20%5Cin%20C%7D%20(x-c)%20%5Cright)%0A"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> 的像：对每个 <img src="https://latex.codecogs.com/png.latex?c%20%5Cin%20C"> 对应的理想 <img src="https://latex.codecogs.com/png.latex?(x-c)"> 应用中国剩余定理就有 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7D%5Cvarphi%20=%20R%5EC">．</p></li>
</ul>
<p>故由第一同构定理，<img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> 诱导的 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbar%20%5Cvarphi:%20R%5Bx%5D%20/%20%5Cleft(%20%5Cprod_%7Bc%20%5Cin%20C%7D%20(x-c)%20%5Cright)%20%5Cto%20R%5EC%0A"> 是一同构映射．</p>
</section>
<section id="dft代数同构的特例" class="level3">
<h3 class="anchored" data-anchor-id="dft代数同构的特例">DFT：代数同构的特例</h3>
<p>作为上一定理的特例，DFT 在单位根处求值插值．若 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 为内嵌于 <img src="https://latex.codecogs.com/png.latex?R"> 的某一 <img src="https://latex.codecogs.com/png.latex?n"> 阶循环（乘法）群的生成元，则称其为 <em><img src="https://latex.codecogs.com/png.latex?R"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 次本原单位根</em>．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="cor-dft-exist" class="theorem corollary">
<p><span class="theorem-title"><strong>推论 1</strong></span> 若 <img src="https://latex.codecogs.com/png.latex?R"> 上存在 <img src="https://latex.codecogs.com/png.latex?n"> 次本原单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_n">，则多项式 <img src="https://latex.codecogs.com/png.latex?%0Ax%5En%20-%201%20=%20%5Cprod_%7Bk=0%7D%5E%7Bn-1%7D%20(x%20-%20%5Comega_n%5Ek)%0A"> 故 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D%20/%20%5Cleft(%20x%5En%20-%201%20%5Cright)"> 与 <img src="https://latex.codecogs.com/png.latex?R%5En"> 代数同构．我们便称二者间的代数同构为 <em><img src="https://latex.codecogs.com/png.latex?R"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 点 DFT</em>．</p>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="唯一性的讨论" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="唯一性的讨论"><span class="header-section-number">2.3</span> 唯一性的讨论</h2>
<section id="全体代数同构的结构" class="level3 fragile">
<h3 class="fragile anchored" data-anchor-id="全体代数同构的结构">全体代数同构的结构</h3>
<div id="fig-big-picture-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-big-picture-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="220.545pt" height="50.837pt" viewbox="0 -35.06 152.1 35.06">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M8.02831 12.25626C8.08831 12.49533 8.118 12.59501 8.30737 12.6247C8.39706 12.6347 8.71581 12.6347 8.91487 12.6347C9.62237 12.6347 10.728 12.6347 10.728 11.64845C10.728 11.31001 10.56862 10.62251 10.18019 10.23408C9.92112 9.97501 9.393 9.65626 8.49675 9.65626H7.38112L8.02831 12.25626ZM9.463 9.52689C10.46894 9.74595 11.65425 10.44314 11.65425 11.44939C11.65425 12.30595 10.75769 12.94345 9.453 12.94345H6.61394C6.41487 12.94345 6.32519 12.94345 6.32519 12.74439C6.32519 12.6347 6.41487 12.6347 6.60394 12.6347C6.62394 12.6347 6.81331 12.6347 6.98237 12.6147C7.16175 12.59501 7.25144 12.58501 7.25144 12.45532C7.25144 12.41564 7.24144 12.38564 7.21175 12.26626L5.87675 6.916888C5.77737 6.52845 5.75737 6.448763 4.970499 6.448763C4.791124 6.448763 4.701437 6.448763 4.701437 6.2497C4.701437 6.140013 4.820812 6.140013 4.840812 6.140013C5.119874 6.140013 5.81706 6.170012 6.09612 6.170012C6.37487 6.170012 7.08206 6.140013 7.36112 6.140013C7.44081 6.140013 7.56019 6.140013 7.56019 6.339388C7.56019 6.448763 7.4705 6.448763 7.28144 6.448763C6.91269 6.448763 6.63394 6.448763 6.63394 6.628138C6.63394 6.687825 6.65394 6.737825 6.66362 6.797512L7.32112 9.4372H8.50675C9.413 9.4372 9.59237 8.87939 9.59237 8.53064C9.59237 8.38126 9.51269 8.07251 9.453 7.84345C9.38331 7.56439 9.29362 7.19595 9.29362 6.996575C9.29362 5.92095 10.48894 5.92095 10.61831 5.92095C11.46519 5.92095 11.81362 6.926888 11.81362 7.066262C11.81362 7.18595 11.70425 7.18595 11.69425 7.18595C11.60456 7.18595 11.58456 7.116263 11.56456 7.046575C11.31581 6.309388 10.88737 6.140013 10.65831 6.140013C10.32956 6.140013 10.25987 6.359075 10.25987 6.747513C10.25987 7.056575 10.31956 7.56439 10.35925 7.88314C10.37925 8.02283 10.39925 8.21189 10.39925 8.35126C10.39925 9.11845 9.73175 9.4272 9.463 9.52689Z"></path>
<path d="M14.47497 3.6497V4.04814H13.50872V13.21251H14.47497V13.61095H13.11028V3.6497H14.47497Z"></path>
<path d="M18.02921 9.14845C18.0889 9.4072 18.31796 10.32376 19.01515 10.32376C19.06515 10.32376 19.30421 10.32376 19.51327 10.19408C19.23452 10.14439 19.03515 9.89533 19.03515 9.65626C19.03515 9.49689 19.14483 9.30782 19.41359 9.30782C19.63296 9.30782 19.95171 9.48689 19.95171 9.88533C19.95171 10.40345 19.3639 10.54282 19.02515 10.54282C18.44734 10.54282 18.0989 10.01501 17.97921 9.78595C17.73015 10.44314 17.19233 10.54282 16.90359 10.54282C15.86734 10.54282 15.299835 9.25783 15.299835 9.00876C15.299835 8.90939 15.39921 8.90939 15.41921 8.90939C15.498898 8.90939 15.528898 8.92907 15.548585 9.01876C15.88734 10.0747 16.54484 10.32376 16.88359 10.32376C17.07265 10.32376 17.4214 10.23408 17.4214 9.65626C17.4214 9.34751 17.25202 8.68001 16.88359 7.28564C16.72421 6.667825 16.37546 6.2497 15.93734 6.2497C15.87734 6.2497 15.648273 6.2497 15.43921 6.379075C15.688273 6.428763 15.90734 6.638138 15.90734 6.916888C15.90734 7.18595 15.688273 7.26564 15.538898 7.26564C15.239835 7.26564 14.990773 7.006575 14.990773 6.687825C14.990773 6.2297 15.488898 6.030325 15.92734 6.030325C16.58484 6.030325 16.94327 6.727825 16.97327 6.787512C17.09265 6.419075 17.4514 6.030325 18.0489 6.030325C19.07515 6.030325 19.64265 7.31533 19.64265 7.56439C19.64265 7.66408 19.55327 7.66408 19.52327 7.66408C19.43359 7.66408 19.41359 7.62439 19.3939 7.55439C19.06515 6.488763 18.38765 6.2497 18.0689 6.2497C17.68046 6.2497 17.52109 6.56845 17.52109 6.906887C17.52109 7.126263 17.58077 7.34533 17.69046 7.78376L18.02921 9.14845Z"></path>
<path d="M21.97972 13.61095H20.615033V13.21251H21.58128V4.04814H20.615033V3.6497H21.97972V13.61095ZM27.5187 13.23251C27.56839 13.36189 27.56839 13.39189 27.56839 13.41157C27.56839 13.52126 27.47871 13.61095 27.36933 13.61095C27.22964 13.61095 27.18995 13.51126 27.15996 13.41157L23.76308 4.02814C23.71339 3.89876 23.71339 3.86876 23.71339 3.84907C23.71339 3.73939 23.80308 3.6497 23.91277 3.6497C24.05214 3.6497 24.09183 3.74939 24.12183 3.84907L27.5187 13.23251ZM31.434 3.74939C31.434 3.77908 31.434 3.79908 31.2646 3.96845C30.01964 5.22345 29.70089 7.106263 29.70089 8.63032C29.70089 10.36345 30.07933 12.09689 31.3046 13.34189C31.434 13.46158 31.434 13.48158 31.434 13.51126C31.434 13.58095 31.394 13.61095 31.3343 13.61095C31.2346 13.61095 30.33839 12.93345 29.75058 11.66845C29.24245 10.57283 29.12308 9.4672 29.12308 8.63032C29.12308 7.85345 29.23246 6.648138 29.78058 5.522513C30.37808 4.2972 31.2346 3.6497 31.3343 3.6497C31.394 3.6497 31.434 3.6797 31.434 3.74939Z"></path>
<path d="M32.895573 6.727825C32.865573 6.57845 32.805886 6.349075 32.805886 6.299388C32.805886 6.120012 32.945261 6.030325 33.09495 6.030325C33.21432 6.030325 33.3937 6.110012 33.46339 6.309388C33.47339 6.329388 33.59276 6.797512 33.65276 7.046575L33.87182 7.94314C33.93151 8.1622 33.9912 8.38126 34.0412 8.61032C34.08089 8.7797 34.16057 9.06876 34.17057 9.10845C34.31995 9.4172 34.84807 10.32376 35.79432 10.32376C36.24245 10.32376 36.33214 9.95501 36.33214 9.62658C36.33214 9.37751 36.26245 9.09845 36.18276 8.7997L35.90401 7.64408L35.70464 6.8872C35.66495 6.687825 35.57526 6.349075 35.57526 6.299388C35.57526 6.120012 35.71464 6.030325 35.86401 6.030325C36.17276 6.030325 36.23276 6.279388 36.31245 6.598138C36.45182 7.15595 36.82026 8.61032 36.90995 8.99876C36.93995 9.12845 37.46776 10.32376 38.5537 10.32376C38.98182 10.32376 39.09151 9.98501 39.09151 9.62658C39.09151 9.05876 38.67307 7.92314 38.47401 7.39501C38.38432 7.15595 38.34432 7.046575 38.34432 6.8472C38.34432 6.379075 38.69307 6.030325 39.1612 6.030325C40.09745 6.030325 40.4662 7.4847 40.4662 7.56439C40.4662 7.66408 40.37651 7.66408 40.34651 7.66408C40.24682 7.66408 40.24682 7.63408 40.19714 7.4847C40.04776 6.956887 39.72901 6.2497 39.1812 6.2497C39.01182 6.2497 38.94214 6.349075 38.94214 6.57845C38.94214 6.8272 39.03182 7.066262 39.12151 7.28564C39.31057 7.80345 39.72901 8.90939 39.72901 9.47689C39.72901 10.12439 39.33057 10.54282 38.58339 10.54282C37.83651 10.54282 37.32839 10.1047 36.95964 9.57657C36.94995 9.70626 36.91995 10.0447 36.64089 10.28376C36.39214 10.49314 36.07307 10.54282 35.82432 10.54282C34.92776 10.54282 34.43964 9.90533 34.27026 9.67626C34.22057 10.24407 33.80214 10.54282 33.3537 10.54282C32.895573 10.54282 32.706198 10.15439 32.616823 9.97501C32.437448 9.62658 32.307761 9.03876 32.307761 9.00876C32.307761 8.90939 32.407448 8.90939 32.427448 8.90939C32.527136 8.90939 32.537136 8.91907 32.596823 9.13845C32.766198 9.84564 32.965261 10.32376 33.32401 10.32376C33.48339 10.32376 33.63276 10.24407 33.63276 9.86564C33.63276 9.65626 33.60276 9.54689 33.47339 9.02876L32.895573 6.727825Z"></path>
<path d="M44.06416 3.74939C44.06416 3.77908 44.06416 3.79908 43.89478 3.96845C42.64979 5.22345 42.33104 7.106263 42.33104 8.63032C42.33104 10.36345 42.70947 12.09689 43.93478 13.34189C44.06416 13.46158 44.06416 13.48158 44.06416 13.51126C44.06416 13.58095 44.02416 13.61095 43.96447 13.61095C43.86478 13.61095 42.96853 12.93345 42.38072 11.66845C41.8726 10.57283 41.753223 9.4672 41.753223 8.63032C41.753223 7.85345 41.8626 6.648138 42.41072 5.522513C43.00822 4.2972 43.86478 3.6497 43.96447 3.6497C44.02416 3.6497 44.06416 3.6797 44.06416 3.74939Z"></path>
<path d="M47.96818 9.14845C48.02787 9.4072 48.25693 10.32376 48.95412 10.32376C49.00412 10.32376 49.24318 10.32376 49.45224 10.19408C49.17349 10.14439 48.97412 9.89533 48.97412 9.65626C48.97412 9.49689 49.08381 9.30782 49.35256 9.30782C49.57193 9.30782 49.89068 9.48689 49.89068 9.88533C49.89068 10.40345 49.30287 10.54282 48.96412 10.54282C48.38631 10.54282 48.03787 10.01501 47.91818 9.78595C47.66912 10.44314 47.13131 10.54282 46.84256 10.54282C45.80631 10.54282 45.238805 9.25783 45.238805 9.00876C45.238805 8.90939 45.33818 8.90939 45.35818 8.90939C45.437868 8.90939 45.467868 8.92907 45.487555 9.01876C45.82631 10.0747 46.48381 10.32376 46.82256 10.32376C47.01162 10.32376 47.36037 10.23408 47.36037 9.65626C47.36037 9.34751 47.19099 8.68001 46.82256 7.28564C46.66318 6.667825 46.31443 6.2497 45.87631 6.2497C45.81631 6.2497 45.587243 6.2497 45.37818 6.379075C45.627243 6.428763 45.84631 6.638138 45.84631 6.916888C45.84631 7.18595 45.627243 7.26564 45.477868 7.26564C45.178805 7.26564 44.929743 7.006575 44.929743 6.687825C44.929743 6.2297 45.427868 6.030325 45.86631 6.030325C46.52381 6.030325 46.88224 6.727825 46.91224 6.787512C47.03162 6.419075 47.39037 6.030325 47.98787 6.030325C49.01412 6.030325 49.58162 7.31533 49.58162 7.56439C49.58162 7.66408 49.49224 7.66408 49.46224 7.66408C49.37255 7.66408 49.35256 7.62439 49.33287 7.55439C49.00412 6.488763 48.32662 6.2497 48.00787 6.2497C47.61943 6.2497 47.46006 6.56845 47.46006 6.906887C47.46006 7.126263 47.51974 7.34533 47.62943 7.78376L47.96818 9.14845Z"></path>
<path d="M53.21377 8.63032C53.21377 9.4072 53.10439 10.61251 52.55627 11.73814C51.95877 12.96345 51.101894 13.61095 51.002519 13.61095C50.942519 13.61095 50.902831 13.57095 50.902831 13.51126C50.902831 13.48158 50.902831 13.46158 51.092206 13.2822C52.06814 12.29595 52.63596 10.7122 52.63596 8.63032C52.63596 6.926888 52.26752 5.173763 51.032206 3.91876C50.902831 3.79908 50.902831 3.77908 50.902831 3.74939C50.902831 3.6897 50.942519 3.6497 51.002519 3.6497C51.101894 3.6497 51.99846 4.3272 52.58627 5.5922C53.09439 6.687825 53.21377 7.79345 53.21377 8.63032ZM57.07924 8.63032C57.07924 9.4072 56.96986 10.61251 56.42174 11.73814C55.82424 12.96345 54.96736 13.61095 54.86799 13.61095C54.80799 13.61095 54.7683 13.57095 54.7683 13.51126C54.7683 13.48158 54.7683 13.46158 54.95767 13.2822C55.93361 12.29595 56.50143 10.7122 56.50143 8.63032C56.50143 6.926888 56.13299 5.173763 54.89767 3.91876C54.7683 3.79908 54.7683 3.77908 54.7683 3.74939C54.7683 3.6897 54.80799 3.6497 54.86799 3.6497C54.96736 3.6497 55.86392 4.3272 56.45174 5.5922C56.95986 6.687825 57.07924 7.79345 57.07924 8.63032Z"></path>
<path d="M118.22732 12.25626C118.28732 12.49533 118.317 12.59501 118.50638 12.6247C118.59607 12.6347 118.91482 12.6347 119.11388 12.6347C119.82138 12.6347 120.927 12.6347 120.927 11.64845C120.927 11.31001 120.76763 10.62251 120.37919 10.23408C120.12013 9.97501 119.592 9.65626 118.69575 9.65626H117.58013L118.22732 12.25626ZM119.662 9.52689C120.66794 9.74595 121.85325 10.44314 121.85325 11.44939C121.85325 12.30595 120.95669 12.94345 119.652 12.94345H116.81294C116.61388 12.94345 116.52419 12.94345 116.52419 12.74439C116.52419 12.6347 116.61388 12.6347 116.80294 12.6347C116.82294 12.6347 117.01232 12.6347 117.18138 12.6147C117.36075 12.59501 117.45044 12.58501 117.45044 12.45532C117.45044 12.41564 117.44044 12.38564 117.41075 12.26626L116.07575 6.916888C115.97638 6.52845 115.95638 6.448763 115.169504 6.448763C114.990129 6.448763 114.900441 6.448763 114.900441 6.2497C114.900441 6.140013 115.019816 6.140013 115.039816 6.140013C115.318879 6.140013 116.01607 6.170012 116.29513 6.170012C116.57388 6.170012 117.28107 6.140013 117.56013 6.140013C117.63982 6.140013 117.75919 6.140013 117.75919 6.339388C117.75919 6.448763 117.6695 6.448763 117.48044 6.448763C117.11169 6.448763 116.83294 6.448763 116.83294 6.628138C116.83294 6.687825 116.85294 6.737825 116.86263 6.797512L117.52013 9.4372H118.70575C119.612 9.4372 119.79138 8.87939 119.79138 8.53064C119.79138 8.38126 119.71169 8.07251 119.652 7.84345C119.58232 7.56439 119.49263 7.19595 119.49263 6.996575C119.49263 5.92095 120.68794 5.92095 120.81732 5.92095C121.66419 5.92095 122.01263 6.926888 122.01263 7.066262C122.01263 7.18595 121.90325 7.18595 121.89325 7.18595C121.80357 7.18595 121.78357 7.116263 121.76357 7.046575C121.51482 6.309388 121.08638 6.140013 120.85732 6.140013C120.52857 6.140013 120.45888 6.359075 120.45888 6.747513C120.45888 7.056575 120.51857 7.56439 120.55825 7.88314C120.57825 8.02283 120.59825 8.21189 120.59825 8.35126C120.59825 9.11845 119.93075 9.4272 119.662 9.52689Z"></path>
<path d="M122.984914 10.194353C122.957101 10.103728 122.915226 9.929353 122.915226 9.908416C122.915226 9.754978 123.040851 9.685291 123.15241 9.685291C123.27773 9.685291 123.3896 9.775916 123.42429 9.838728C123.45929 9.901541 123.51491 10.124666 123.54991 10.271228C123.58491 10.403728 123.66148 10.724353 123.70335 10.89873C123.74523 11.05248 123.7871 11.20592 123.82179 11.36623C123.89866 11.65217 123.91273 11.7081 124.11491 11.99404C124.31023 12.2731 124.63804 12.6356 125.16116 12.6356C125.56554 12.6356 125.57273 12.27998 125.57273 12.14748C125.57273 11.72904 125.27273 10.95467 125.16116 10.661853C125.08429 10.466541 125.05648 10.403728 125.05648 10.284978C125.05648 9.915291 125.36335 9.685291 125.71898 9.685291C126.41648 9.685291 126.72366 10.647791 126.72366 10.752478C126.72366 10.8431 126.63273 10.8431 126.61179 10.8431C126.51429 10.8431 126.50741 10.80123 126.47929 10.724353C126.31898 10.166541 126.01898 9.880603 125.73991 9.880603C125.59366 9.880603 125.56554 9.978103 125.56554 10.124666C125.56554 10.284978 125.60054 10.375603 125.72616 10.689666C125.80991 10.90592 126.09585 11.64529 126.09585 12.03592C126.09585 12.71248 125.55866 12.83092 125.18898 12.83092C124.61023 12.83092 124.2196 12.47529 124.01023 12.19623C123.96148 12.67748 123.54991 12.83092 123.26398 12.83092C122.963976 12.83092 122.803664 12.61467 122.713039 12.45435C122.559601 12.19623 122.461789 11.79873 122.461789 11.76373C122.461789 11.6731 122.559601 11.6731 122.580226 11.6731C122.678039 11.6731 122.684914 11.69404 122.733976 11.88248C122.838351 12.29373 122.970851 12.6356 123.24304 12.6356C123.42429 12.6356 123.47304 12.48217 123.47304 12.29373C123.47304 12.16123 123.41054 11.90342 123.36148 11.71498C123.31273 11.52654 123.24304 11.2406 123.20804 11.08717L122.984914 10.194353Z"></path>
<path d="M62.57812 8.632812H109.6016" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M107.7263 11.02344C108.10521 9.585937 108.948956 8.910156 109.800519 8.632812C108.948956 8.351562 108.10521 7.675781 107.7263 6.23828" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M88.31505 16.21111V16.47611H85.538799V16.21111H88.31505Z"></path>
<path d="M85.87206 12.270168C85.94894 12.263293 86.03237 12.263293 86.10925 12.263293C87.36487 12.263293 88.5155 13.288606 88.5155 14.39048C88.5155 15.01142 88.14581 15.40892 87.60175 15.40892C86.63925 15.40892 86.13019 14.18142 85.93487 13.65829C85.84425 13.40017 85.69081 12.912043 85.64894 12.779231C84.88175 12.883918 84.393312 13.232668 84.393312 13.74892C84.393312 13.75579 84.435187 14.53704 85.00019 15.16486C85.04894 15.21361 85.05612 15.22767 85.05612 15.25548C85.05612 15.33923 84.9655 15.33923 84.94456 15.33923C84.88175 15.33923 84.85362 15.33923 84.72112 15.18579C84.330499 14.70454 84.149249 13.97923 84.149249 13.67923C84.149249 13.058293 84.602687 12.521418 85.50237 12.326106C85.15362 11.24486 85.11175 11.11236 85.11175 11.04954C85.11175 10.86111 85.27237 10.82642 85.34894 10.82642C85.42581 10.82642 85.56519 10.87517 85.62112 10.97986C85.66987 11.08454 85.73269 11.440168 85.87206 12.270168ZM85.96269 12.744543C86.10237 13.54673 86.158 13.86048 86.493 14.31392C86.80675 14.73923 87.17644 14.93454 87.52519 14.93454C88.00644 14.93454 88.26456 14.61392 88.26456 14.25111C88.26456 13.54673 87.38581 12.737668 86.18612 12.737668C86.12331 12.737668 86.0255 12.737668 85.96269 12.744543Z"></path>
<path d="M132.0508 7.667968C151.8984 5.92969 133.2539 34.8555 125 17.16016" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-dasharray="2.78941 1.59395"></path>
<path d="M127.956771 17.843792C126.499748 18.109415 125.527086 17.628947 124.917711 16.976605C125.023178 17.867232 124.765373 18.918008 123.624745 19.867229" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M143.27935 22.48463C143.27935 23.09838 143.69091 23.61463 144.21403 23.94244C144.34653 24.02619 144.65341 24.24244 144.65341 24.66775C144.65341 25.03744 144.38122 25.60932 143.1956 25.60932C142.337783 25.60932 141.877158 25.15588 141.877158 24.68182C141.877158 24.39588 142.10747 24.33307 142.212158 24.33307C142.344658 24.33307 142.53997 24.43057 142.53997 24.66775C142.53997 24.70963 142.53997 24.96775 142.212158 24.99557C142.337783 25.19088 142.65841 25.414 143.17466 25.414C143.96966 25.414 144.01872 25.0165 144.01872 24.69557C144.01872 24.32588 143.87903 24.1865 143.76747 24.089C143.30028 23.67025 143.04216 23.0565 143.04216 22.51963V22.2265C143.04216 22.08713 143.04216 22.05213 143.1606 22.05213C143.27935 22.05213 143.27935 22.10088 143.27935 22.24744V22.48463ZM143.55841 21.096504C143.55841 21.340567 143.3631 21.501192 143.1606 21.501192C142.91653 21.501192 142.75622 21.305879 142.75622 21.103692C142.75622 20.859317 142.95153 20.699004 143.15372 20.699004C143.39778 20.699004 143.55841 20.894317 143.55841 21.096504Z"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-big-picture-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;2
</figcaption>
</figure>
</div>
<p>已经建立 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D/(m(x))%20%5Cto%20R%5En"> 的同构关系，这里 <img src="https://latex.codecogs.com/png.latex?m(x)"> 是若干不同一次因式的乘积．但这种同构或不止一种．为研究其是否在某种意义下具有唯一性，需研究全体同构 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIso%7D(R%5Bx%5D/(m(x)),R%5En)"> 的结构．该问题化归为研究 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上全体自同构 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BAut%7D(R%5En)"> 的结构．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-dft-unique" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 2</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 是一与 <img src="https://latex.codecogs.com/png.latex?R%5En"> 同构的任一代数．固定代数同构 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi:%20%5Cmathcal%20A%20%5Cto%20R%5En">，则任一 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20%5Cto%20R%5En"> 的代数同构 <img src="https://latex.codecogs.com/png.latex?f"> 都具有形式 <img src="https://latex.codecogs.com/png.latex?f%20=%20p%20%5Cvarphi">，这里 <img src="https://latex.codecogs.com/png.latex?p%20%5Cin%20%5Coperatorname%7BAut%7D(R%5En)">．</p>
</div>
</div>
</div>
</div>
</section>
<section id="rn-上的自同构" class="level3">
<h3 class="anchored" data-anchor-id="rn-上的自同构"><img src="https://latex.codecogs.com/png.latex?R%5En"> 上的自同构</h3>
<p>设 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20e_1,%5Cdots,%5Cboldsymbol%20e_n"> 是 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的自然基，设 <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%5Cin%20S_n"> 是有限集 <img src="https://latex.codecogs.com/png.latex?%5C%7B0,1,%5Cdots,n-1%20%5C%7D"> 上的一个置换．定义 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上由置换 <img src="https://latex.codecogs.com/png.latex?%5Csigma"> 诱导的模自同构 <img src="https://latex.codecogs.com/png.latex?%0AP_%5Csigma:%20%5Cboldsymbol%20e_k%20%5Cmapsto%20%5Cboldsymbol%20e_%7B%5Csigma(k)%7D%0A"> 容易验证 <img src="https://latex.codecogs.com/png.latex?P_%5Csigma"> 保持逐项乘法，因此它也是 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的代数自同构．</p>
<p>下面的引理刻画了 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上代数自同构的形式．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="lem-perm" class="theorem lemma">
<p><span class="theorem-title"><strong>引理 1</strong></span> 全体 <img src="https://latex.codecogs.com/png.latex?P_%5Csigma"> 构成 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上全体代数自同构，即 <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7BAut%7D(R%5En)%20=%20%5C%7B%20P_%5Csigma%20:%20%5Csigma%20%5Cin%20S_n%20%5C%7D%0A"></p>
</div>
</div>
</div>
</div>
</section>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section"></h3>
<p>只需证对任意 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上任意代数自同构 <img src="https://latex.codecogs.com/png.latex?P">，其都可被某一置换 <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%5Cin%20S_n"> 诱导得到．不妨考察 <img src="https://latex.codecogs.com/png.latex?P"> 在 <img src="https://latex.codecogs.com/png.latex?R%5En"> 自然基下的矩阵表示 <img src="https://latex.codecogs.com/png.latex?(p_%7Bi,j%7D)_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D">．则 <img src="https://latex.codecogs.com/png.latex?%0AP(%5Cboldsymbol%20e_i)%20%5Ctimes%20P(%5Cboldsymbol%20e_i)%20=%20P(%5Cboldsymbol%20e_i%20%5Ctimes%20%5Cboldsymbol%20e_i)%20=%20P(%5Cboldsymbol%20e_i)%0A"> 可分行写为对 <img src="https://latex.codecogs.com/png.latex?k%20=%200,1,%5Cdots,n-1">，都有 <img src="https://latex.codecogs.com/png.latex?p_%7Bk,i%7D%5E2%20=%20p_%7Bk,i%7D">，因为 <img src="https://latex.codecogs.com/png.latex?R"> 是整环，故 <img src="https://latex.codecogs.com/png.latex?p_%7Bk,i%7D"> 为 <img src="https://latex.codecogs.com/png.latex?0"> 或 <img src="https://latex.codecogs.com/png.latex?1">，即矩阵各元素只能取 <img src="https://latex.codecogs.com/png.latex?0"> 或 <img src="https://latex.codecogs.com/png.latex?1">．又对 <img src="https://latex.codecogs.com/png.latex?i%20%5Cneq%20j"> 将 <img src="https://latex.codecogs.com/png.latex?%0AP(%5Cboldsymbol%20e_i)%20%5Ctimes%20P(%5Cboldsymbol%20e_j)%20=%20P(%5Cboldsymbol%20e_i%20%5Ctimes%20%5Cboldsymbol%20e_j)%20=%20P(%5Cboldsymbol%200)%20=%20%5Cboldsymbol%200%0A"> 分行写开，得对 <img src="https://latex.codecogs.com/png.latex?k%20=%200,1,%5Cdots,n-1">，都有 <img src="https://latex.codecogs.com/png.latex?p_%7Bk,i%7D%20p_%7Bk,j%7D%20=%200">．于是（由 <img src="https://latex.codecogs.com/png.latex?R"> 是整环）矩阵任一行至多只能由一个 <img src="https://latex.codecogs.com/png.latex?1">．假如存在第 <img src="https://latex.codecogs.com/png.latex?k"> 行全为 <img src="https://latex.codecogs.com/png.latex?0">，则 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20e_k%20%5Cnotin%20%5Coperatorname%7BIm%7DP">，与 <img src="https://latex.codecogs.com/png.latex?P"> 作为自同构的满性矛盾，故 <img src="https://latex.codecogs.com/png.latex?P"> 的矩阵表示每行有且只有一个 <img src="https://latex.codecogs.com/png.latex?1">，其余为 <img src="https://latex.codecogs.com/png.latex?0">．<img src="https://latex.codecogs.com/png.latex?P"> 的某两行亦不能完全相同，否则（由鸽巢原理）矩阵某列一定全为 <img src="https://latex.codecogs.com/png.latex?0">，与 <img src="https://latex.codecogs.com/png.latex?P"> 作为自同构的单性矛盾．因此 <img src="https://latex.codecogs.com/png.latex?P"> 的矩阵表示是一个置换矩阵，即 <img src="https://latex.codecogs.com/png.latex?P"> 由一置换诱导．</p>
</section>
<section id="dft-的唯一性" class="level3">
<h3 class="anchored" data-anchor-id="dft-的唯一性">DFT 的唯一性</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="cor-dft-unique" class="theorem corollary">
<p><span class="theorem-title"><strong>推论 2</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?f"> 是任一 <img src="https://latex.codecogs.com/png.latex?R"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 点 DFT，则任何 <img src="https://latex.codecogs.com/png.latex?R"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 点 DFT <img src="https://latex.codecogs.com/png.latex?g"> 都具有形式 <img src="https://latex.codecogs.com/png.latex?g%20=%20P_%5Csigma%20f">，这里 <img src="https://latex.codecogs.com/png.latex?f"> 是一事先固定的 <img src="https://latex.codecogs.com/png.latex?n"> 点 DFT．</p>
</div>
</div>
</div>
</div>
<p>作为推论，<img src="https://latex.codecogs.com/png.latex?n"> 点 DFT 共有 <img src="https://latex.codecogs.com/png.latex?n!"> 种．这一结果的显著性在于，只要不计求值得到的 <img src="https://latex.codecogs.com/png.latex?n"> 个点值在 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的排列顺序，DFT 是唯一满足卷积性质的可逆线性映射．</p>
</section>
</section>
</section>
<section id="dft-与矩阵代数" class="level1 page-columns page-full" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> DFT 与矩阵代数</h1>
<section id="第二个视角矩阵代数" class="level3 fragile">
<h3 class="fragile anchored" data-anchor-id="第二个视角矩阵代数">第二个视角：矩阵代数</h3>
<p>我们建立了</p>
<div id="fig-big-picture-2" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-big-picture-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="222.3575pt" height="50.837pt" viewbox="0 -35.06 153.35 35.06">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M8.02831 12.25626C8.08831 12.49533 8.118 12.59501 8.30737 12.6247C8.39706 12.6347 8.71581 12.6347 8.91487 12.6347C9.62237 12.6347 10.728 12.6347 10.728 11.64845C10.728 11.31001 10.56862 10.62251 10.18019 10.23408C9.92112 9.97501 9.393 9.65626 8.49675 9.65626H7.38112L8.02831 12.25626ZM9.463 9.52689C10.46894 9.74595 11.65425 10.44314 11.65425 11.44939C11.65425 12.30595 10.75769 12.94345 9.453 12.94345H6.61394C6.41487 12.94345 6.32519 12.94345 6.32519 12.74439C6.32519 12.6347 6.41487 12.6347 6.60394 12.6347C6.62394 12.6347 6.81331 12.6347 6.98237 12.6147C7.16175 12.59501 7.25144 12.58501 7.25144 12.45532C7.25144 12.41564 7.24144 12.38564 7.21175 12.26626L5.87675 6.916888C5.77737 6.52845 5.75737 6.448763 4.970499 6.448763C4.791124 6.448763 4.701437 6.448763 4.701437 6.2497C4.701437 6.140013 4.820812 6.140013 4.840812 6.140013C5.119874 6.140013 5.81706 6.170012 6.09612 6.170012C6.37487 6.170012 7.08206 6.140013 7.36112 6.140013C7.44081 6.140013 7.56019 6.140013 7.56019 6.339388C7.56019 6.448763 7.4705 6.448763 7.28144 6.448763C6.91269 6.448763 6.63394 6.448763 6.63394 6.628138C6.63394 6.687825 6.65394 6.737825 6.66362 6.797512L7.32112 9.4372H8.50675C9.413 9.4372 9.59237 8.87939 9.59237 8.53064C9.59237 8.38126 9.51269 8.07251 9.453 7.84345C9.38331 7.56439 9.29362 7.19595 9.29362 6.996575C9.29362 5.92095 10.48894 5.92095 10.61831 5.92095C11.46519 5.92095 11.81362 6.926888 11.81362 7.066262C11.81362 7.18595 11.70425 7.18595 11.69425 7.18595C11.60456 7.18595 11.58456 7.116263 11.56456 7.046575C11.31581 6.309388 10.88737 6.140013 10.65831 6.140013C10.32956 6.140013 10.25987 6.359075 10.25987 6.747513C10.25987 7.056575 10.31956 7.56439 10.35925 7.88314C10.37925 8.02283 10.39925 8.21189 10.39925 8.35126C10.39925 9.11845 9.73175 9.4272 9.463 9.52689Z"></path>
<path d="M14.47497 3.6497V4.04814H13.50872V13.21251H14.47497V13.61095H13.11028V3.6497H14.47497Z"></path>
<path d="M18.02921 9.14845C18.0889 9.4072 18.31796 10.32376 19.01515 10.32376C19.06515 10.32376 19.30421 10.32376 19.51327 10.19408C19.23452 10.14439 19.03515 9.89533 19.03515 9.65626C19.03515 9.49689 19.14483 9.30782 19.41359 9.30782C19.63296 9.30782 19.95171 9.48689 19.95171 9.88533C19.95171 10.40345 19.3639 10.54282 19.02515 10.54282C18.44734 10.54282 18.0989 10.01501 17.97921 9.78595C17.73015 10.44314 17.19233 10.54282 16.90359 10.54282C15.86734 10.54282 15.299835 9.25783 15.299835 9.00876C15.299835 8.90939 15.39921 8.90939 15.41921 8.90939C15.498898 8.90939 15.528898 8.92907 15.548585 9.01876C15.88734 10.0747 16.54484 10.32376 16.88359 10.32376C17.07265 10.32376 17.4214 10.23408 17.4214 9.65626C17.4214 9.34751 17.25202 8.68001 16.88359 7.28564C16.72421 6.667825 16.37546 6.2497 15.93734 6.2497C15.87734 6.2497 15.648273 6.2497 15.43921 6.379075C15.688273 6.428763 15.90734 6.638138 15.90734 6.916888C15.90734 7.18595 15.688273 7.26564 15.538898 7.26564C15.239835 7.26564 14.990773 7.006575 14.990773 6.687825C14.990773 6.2297 15.488898 6.030325 15.92734 6.030325C16.58484 6.030325 16.94327 6.727825 16.97327 6.787512C17.09265 6.419075 17.4514 6.030325 18.0489 6.030325C19.07515 6.030325 19.64265 7.31533 19.64265 7.56439C19.64265 7.66408 19.55327 7.66408 19.52327 7.66408C19.43359 7.66408 19.41359 7.62439 19.3939 7.55439C19.06515 6.488763 18.38765 6.2497 18.0689 6.2497C17.68046 6.2497 17.52109 6.56845 17.52109 6.906887C17.52109 7.126263 17.58077 7.34533 17.69046 7.78376L18.02921 9.14845Z"></path>
<path d="M21.97972 13.61095H20.615033V13.21251H21.58128V4.04814H20.615033V3.6497H21.97972V13.61095ZM27.5187 13.23251C27.56839 13.36189 27.56839 13.39189 27.56839 13.41157C27.56839 13.52126 27.47871 13.61095 27.36933 13.61095C27.22964 13.61095 27.18995 13.51126 27.15996 13.41157L23.76308 4.02814C23.71339 3.89876 23.71339 3.86876 23.71339 3.84907C23.71339 3.73939 23.80308 3.6497 23.91277 3.6497C24.05214 3.6497 24.09183 3.74939 24.12183 3.84907L27.5187 13.23251ZM31.434 3.74939C31.434 3.77908 31.434 3.79908 31.2646 3.96845C30.01964 5.22345 29.70089 7.106263 29.70089 8.63032C29.70089 10.36345 30.07933 12.09689 31.3046 13.34189C31.434 13.46158 31.434 13.48158 31.434 13.51126C31.434 13.58095 31.394 13.61095 31.3343 13.61095C31.2346 13.61095 30.33839 12.93345 29.75058 11.66845C29.24245 10.57283 29.12308 9.4672 29.12308 8.63032C29.12308 7.85345 29.23246 6.648138 29.78058 5.522513C30.37808 4.2972 31.2346 3.6497 31.3343 3.6497C31.394 3.6497 31.434 3.6797 31.434 3.74939Z"></path>
<path d="M32.895573 6.727825C32.865573 6.57845 32.805886 6.349075 32.805886 6.299388C32.805886 6.120012 32.945261 6.030325 33.09495 6.030325C33.21432 6.030325 33.3937 6.110012 33.46339 6.309388C33.47339 6.329388 33.59276 6.797512 33.65276 7.046575L33.87182 7.94314C33.93151 8.1622 33.9912 8.38126 34.0412 8.61032C34.08089 8.7797 34.16057 9.06876 34.17057 9.10845C34.31995 9.4172 34.84807 10.32376 35.79432 10.32376C36.24245 10.32376 36.33214 9.95501 36.33214 9.62658C36.33214 9.37751 36.26245 9.09845 36.18276 8.7997L35.90401 7.64408L35.70464 6.8872C35.66495 6.687825 35.57526 6.349075 35.57526 6.299388C35.57526 6.120012 35.71464 6.030325 35.86401 6.030325C36.17276 6.030325 36.23276 6.279388 36.31245 6.598138C36.45182 7.15595 36.82026 8.61032 36.90995 8.99876C36.93995 9.12845 37.46776 10.32376 38.5537 10.32376C38.98182 10.32376 39.09151 9.98501 39.09151 9.62658C39.09151 9.05876 38.67307 7.92314 38.47401 7.39501C38.38432 7.15595 38.34432 7.046575 38.34432 6.8472C38.34432 6.379075 38.69307 6.030325 39.1612 6.030325C40.09745 6.030325 40.4662 7.4847 40.4662 7.56439C40.4662 7.66408 40.37651 7.66408 40.34651 7.66408C40.24682 7.66408 40.24682 7.63408 40.19714 7.4847C40.04776 6.956887 39.72901 6.2497 39.1812 6.2497C39.01182 6.2497 38.94214 6.349075 38.94214 6.57845C38.94214 6.8272 39.03182 7.066262 39.12151 7.28564C39.31057 7.80345 39.72901 8.90939 39.72901 9.47689C39.72901 10.12439 39.33057 10.54282 38.58339 10.54282C37.83651 10.54282 37.32839 10.1047 36.95964 9.57657C36.94995 9.70626 36.91995 10.0447 36.64089 10.28376C36.39214 10.49314 36.07307 10.54282 35.82432 10.54282C34.92776 10.54282 34.43964 9.90533 34.27026 9.67626C34.22057 10.24407 33.80214 10.54282 33.3537 10.54282C32.895573 10.54282 32.706198 10.15439 32.616823 9.97501C32.437448 9.62658 32.307761 9.03876 32.307761 9.00876C32.307761 8.90939 32.407448 8.90939 32.427448 8.90939C32.527136 8.90939 32.537136 8.91907 32.596823 9.13845C32.766198 9.84564 32.965261 10.32376 33.32401 10.32376C33.48339 10.32376 33.63276 10.24407 33.63276 9.86564C33.63276 9.65626 33.60276 9.54689 33.47339 9.02876L32.895573 6.727825Z"></path>
<path d="M44.06416 3.74939C44.06416 3.77908 44.06416 3.79908 43.89478 3.96845C42.64979 5.22345 42.33104 7.106263 42.33104 8.63032C42.33104 10.36345 42.70947 12.09689 43.93478 13.34189C44.06416 13.46158 44.06416 13.48158 44.06416 13.51126C44.06416 13.58095 44.02416 13.61095 43.96447 13.61095C43.86478 13.61095 42.96853 12.93345 42.38072 11.66845C41.8726 10.57283 41.753223 9.4672 41.753223 8.63032C41.753223 7.85345 41.8626 6.648138 42.41072 5.522513C43.00822 4.2972 43.86478 3.6497 43.96447 3.6497C44.02416 3.6497 44.06416 3.6797 44.06416 3.74939Z"></path>
<path d="M47.96818 9.14845C48.02787 9.4072 48.25693 10.32376 48.95412 10.32376C49.00412 10.32376 49.24318 10.32376 49.45224 10.19408C49.17349 10.14439 48.97412 9.89533 48.97412 9.65626C48.97412 9.49689 49.08381 9.30782 49.35256 9.30782C49.57193 9.30782 49.89068 9.48689 49.89068 9.88533C49.89068 10.40345 49.30287 10.54282 48.96412 10.54282C48.38631 10.54282 48.03787 10.01501 47.91818 9.78595C47.66912 10.44314 47.13131 10.54282 46.84256 10.54282C45.80631 10.54282 45.238805 9.25783 45.238805 9.00876C45.238805 8.90939 45.33818 8.90939 45.35818 8.90939C45.437868 8.90939 45.467868 8.92907 45.487555 9.01876C45.82631 10.0747 46.48381 10.32376 46.82256 10.32376C47.01162 10.32376 47.36037 10.23408 47.36037 9.65626C47.36037 9.34751 47.19099 8.68001 46.82256 7.28564C46.66318 6.667825 46.31443 6.2497 45.87631 6.2497C45.81631 6.2497 45.587243 6.2497 45.37818 6.379075C45.627243 6.428763 45.84631 6.638138 45.84631 6.916888C45.84631 7.18595 45.627243 7.26564 45.477868 7.26564C45.178805 7.26564 44.929743 7.006575 44.929743 6.687825C44.929743 6.2297 45.427868 6.030325 45.86631 6.030325C46.52381 6.030325 46.88224 6.727825 46.91224 6.787512C47.03162 6.419075 47.39037 6.030325 47.98787 6.030325C49.01412 6.030325 49.58162 7.31533 49.58162 7.56439C49.58162 7.66408 49.49224 7.66408 49.46224 7.66408C49.37255 7.66408 49.35256 7.62439 49.33287 7.55439C49.00412 6.488763 48.32662 6.2497 48.00787 6.2497C47.61943 6.2497 47.46006 6.56845 47.46006 6.906887C47.46006 7.126263 47.51974 7.34533 47.62943 7.78376L47.96818 9.14845Z"></path>
<path d="M53.21377 8.63032C53.21377 9.4072 53.10439 10.61251 52.55627 11.73814C51.95877 12.96345 51.101894 13.61095 51.002519 13.61095C50.942519 13.61095 50.902831 13.57095 50.902831 13.51126C50.902831 13.48158 50.902831 13.46158 51.092206 13.2822C52.06814 12.29595 52.63596 10.7122 52.63596 8.63032C52.63596 6.926888 52.26752 5.173763 51.032206 3.91876C50.902831 3.79908 50.902831 3.77908 50.902831 3.74939C50.902831 3.6897 50.942519 3.6497 51.002519 3.6497C51.101894 3.6497 51.99846 4.3272 52.58627 5.5922C53.09439 6.687825 53.21377 7.79345 53.21377 8.63032ZM57.07924 8.63032C57.07924 9.4072 56.96986 10.61251 56.42174 11.73814C55.82424 12.96345 54.96736 13.61095 54.86799 13.61095C54.80799 13.61095 54.7683 13.57095 54.7683 13.51126C54.7683 13.48158 54.7683 13.46158 54.95767 13.2822C55.93361 12.29595 56.50143 10.7122 56.50143 8.63032C56.50143 6.926888 56.13299 5.173763 54.89767 3.91876C54.7683 3.79908 54.7683 3.77908 54.7683 3.74939C54.7683 3.6897 54.80799 3.6497 54.86799 3.6497C54.96736 3.6497 55.86392 4.3272 56.45174 5.5922C56.95986 6.687825 57.07924 7.79345 57.07924 8.63032Z"></path>
<path d="M118.22732 12.25626C118.28732 12.49533 118.317 12.59501 118.50638 12.6247C118.59607 12.6347 118.91482 12.6347 119.11388 12.6347C119.82138 12.6347 120.927 12.6347 120.927 11.64845C120.927 11.31001 120.76763 10.62251 120.37919 10.23408C120.12013 9.97501 119.592 9.65626 118.69575 9.65626H117.58013L118.22732 12.25626ZM119.662 9.52689C120.66794 9.74595 121.85325 10.44314 121.85325 11.44939C121.85325 12.30595 120.95669 12.94345 119.652 12.94345H116.81294C116.61388 12.94345 116.52419 12.94345 116.52419 12.74439C116.52419 12.6347 116.61388 12.6347 116.80294 12.6347C116.82294 12.6347 117.01232 12.6347 117.18138 12.6147C117.36075 12.59501 117.45044 12.58501 117.45044 12.45532C117.45044 12.41564 117.44044 12.38564 117.41075 12.26626L116.07575 6.916888C115.97638 6.52845 115.95638 6.448763 115.169504 6.448763C114.990129 6.448763 114.900441 6.448763 114.900441 6.2497C114.900441 6.140013 115.019816 6.140013 115.039816 6.140013C115.318879 6.140013 116.01607 6.170012 116.29513 6.170012C116.57388 6.170012 117.28107 6.140013 117.56013 6.140013C117.63982 6.140013 117.75919 6.140013 117.75919 6.339388C117.75919 6.448763 117.6695 6.448763 117.48044 6.448763C117.11169 6.448763 116.83294 6.448763 116.83294 6.628138C116.83294 6.687825 116.85294 6.737825 116.86263 6.797512L117.52013 9.4372H118.70575C119.612 9.4372 119.79138 8.87939 119.79138 8.53064C119.79138 8.38126 119.71169 8.07251 119.652 7.84345C119.58232 7.56439 119.49263 7.19595 119.49263 6.996575C119.49263 5.92095 120.68794 5.92095 120.81732 5.92095C121.66419 5.92095 122.01263 6.926888 122.01263 7.066262C122.01263 7.18595 121.90325 7.18595 121.89325 7.18595C121.80357 7.18595 121.78357 7.116263 121.76357 7.046575C121.51482 6.309388 121.08638 6.140013 120.85732 6.140013C120.52857 6.140013 120.45888 6.359075 120.45888 6.747513C120.45888 7.056575 120.51857 7.56439 120.55825 7.88314C120.57825 8.02283 120.59825 8.21189 120.59825 8.35126C120.59825 9.11845 119.93075 9.4272 119.662 9.52689Z"></path>
<path d="M122.984914 10.194353C122.957101 10.103728 122.915226 9.929353 122.915226 9.908416C122.915226 9.754978 123.040851 9.685291 123.15241 9.685291C123.27773 9.685291 123.3896 9.775916 123.42429 9.838728C123.45929 9.901541 123.51491 10.124666 123.54991 10.271228C123.58491 10.403728 123.66148 10.724353 123.70335 10.89873C123.74523 11.05248 123.7871 11.20592 123.82179 11.36623C123.89866 11.65217 123.91273 11.7081 124.11491 11.99404C124.31023 12.2731 124.63804 12.6356 125.16116 12.6356C125.56554 12.6356 125.57273 12.27998 125.57273 12.14748C125.57273 11.72904 125.27273 10.95467 125.16116 10.661853C125.08429 10.466541 125.05648 10.403728 125.05648 10.284978C125.05648 9.915291 125.36335 9.685291 125.71898 9.685291C126.41648 9.685291 126.72366 10.647791 126.72366 10.752478C126.72366 10.8431 126.63273 10.8431 126.61179 10.8431C126.51429 10.8431 126.50741 10.80123 126.47929 10.724353C126.31898 10.166541 126.01898 9.880603 125.73991 9.880603C125.59366 9.880603 125.56554 9.978103 125.56554 10.124666C125.56554 10.284978 125.60054 10.375603 125.72616 10.689666C125.80991 10.90592 126.09585 11.64529 126.09585 12.03592C126.09585 12.71248 125.55866 12.83092 125.18898 12.83092C124.61023 12.83092 124.2196 12.47529 124.01023 12.19623C123.96148 12.67748 123.54991 12.83092 123.26398 12.83092C122.963976 12.83092 122.803664 12.61467 122.713039 12.45435C122.559601 12.19623 122.461789 11.79873 122.461789 11.76373C122.461789 11.6731 122.559601 11.6731 122.580226 11.6731C122.678039 11.6731 122.684914 11.69404 122.733976 11.88248C122.838351 12.29373 122.970851 12.6356 123.24304 12.6356C123.42429 12.6356 123.47304 12.48217 123.47304 12.29373C123.47304 12.16123 123.41054 11.90342 123.36148 11.71498C123.31273 11.52654 123.24304 11.2406 123.20804 11.08717L122.984914 10.194353Z"></path>
<path d="M62.57812 8.632812H109.6016" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M107.7263 11.02344C108.10521 9.585937 108.948956 8.910156 109.800519 8.632812C108.948956 8.351562 108.10521 7.675781 107.7263 6.23828" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M88.31505 16.21111V16.47611H85.538799V16.21111H88.31505Z"></path>
<path d="M85.87206 12.270168C85.94894 12.263293 86.03237 12.263293 86.10925 12.263293C87.36487 12.263293 88.5155 13.288606 88.5155 14.39048C88.5155 15.01142 88.14581 15.40892 87.60175 15.40892C86.63925 15.40892 86.13019 14.18142 85.93487 13.65829C85.84425 13.40017 85.69081 12.912043 85.64894 12.779231C84.88175 12.883918 84.393312 13.232668 84.393312 13.74892C84.393312 13.75579 84.435187 14.53704 85.00019 15.16486C85.04894 15.21361 85.05612 15.22767 85.05612 15.25548C85.05612 15.33923 84.9655 15.33923 84.94456 15.33923C84.88175 15.33923 84.85362 15.33923 84.72112 15.18579C84.330499 14.70454 84.149249 13.97923 84.149249 13.67923C84.149249 13.058293 84.602687 12.521418 85.50237 12.326106C85.15362 11.24486 85.11175 11.11236 85.11175 11.04954C85.11175 10.86111 85.27237 10.82642 85.34894 10.82642C85.42581 10.82642 85.56519 10.87517 85.62112 10.97986C85.66987 11.08454 85.73269 11.440168 85.87206 12.270168ZM85.96269 12.744543C86.10237 13.54673 86.158 13.86048 86.493 14.31392C86.80675 14.73923 87.17644 14.93454 87.52519 14.93454C88.00644 14.93454 88.26456 14.61392 88.26456 14.25111C88.26456 13.54673 87.38581 12.737668 86.18612 12.737668C86.12331 12.737668 86.0255 12.737668 85.96269 12.744543Z"></path>
<path d="M132.0508 7.667968C151.8984 5.92969 133.2539 34.8555 125 17.16016" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M127.956771 17.843792C126.499748 18.109415 125.527086 17.628947 124.917711 16.976605C125.023178 17.867232 124.765373 18.918008 123.624745 19.867229" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M143.76747 23.85719H145.02997C146.20872 23.85719 147.20622 24.61063 147.20622 25.37094C147.20622 25.95688 146.63435 26.45907 145.67872 26.45907H143.23747C143.09778 26.45907 143.01435 26.45907 143.01435 26.30563C143.01435 26.20782 143.09091 26.20782 143.24435 26.20782C143.35591 26.20782 143.38403 26.20782 143.50935 26.19376C143.64903 26.18001 143.66278 26.16594 143.66278 26.09626C143.66278 26.08219 143.66278 26.04751 143.63497 25.94282L142.71435 22.266881C142.64466 21.995006 142.63747 21.946256 142.093408 21.946256C141.968095 21.946256 141.884345 21.946256 141.884345 21.792506C141.884345 21.785631 141.884345 21.695006 141.995908 21.695006C142.198095 21.695006 142.70028 21.722819 142.90247 21.722819C143.02122 21.722819 143.26528 21.722819 143.38403 21.715944C143.52341 21.709069 143.69778 21.695006 143.83028 21.695006C143.87216 21.695006 143.97685 21.695006 143.97685 21.848444C143.97685 21.946256 143.8931 21.946256 143.75341 21.946256C143.74653 21.946256 143.61403 21.946256 143.48841 21.960006C143.3281 21.974069 143.3281 21.995006 143.3281 22.064694C143.3281 22.071569 143.3281 22.113444 143.35591 22.218131L143.76747 23.85719ZM144.26966 25.97063C144.3256 26.18688 144.33247 26.20782 144.62528 26.20782H145.44153C146.09028 26.20782 146.49466 26.01251 146.49466 25.51719C146.49466 25.30094 146.41091 24.75001 146.06216 24.43626C145.81122 24.21313 145.41372 24.08032 144.91153 24.08032H143.79528L144.26966 25.97063Z"></path>
<path d="M149.89479 22.46775C149.98448 22.46775 150.03417 22.46775 150.10385 22.51744C150.13385 22.54244 150.18354 22.61213 150.18354 22.68682C150.18354 22.84619 150.03417 22.84619 149.95448 22.84619H148.49479C147.6426 22.84619 146.980104 22.094 146.980104 21.491192C146.980104 20.973067 147.413541 20.644317 147.96167 20.644317C148.67417 20.644317 149.43635 21.202129 149.43635 21.94463C149.43635 22.14369 149.38167 22.31807 149.27698 22.46775H149.89479ZM147.97167 20.813692C147.74729 20.813692 147.388541 20.908379 147.388541 21.366504C147.388541 21.521192 147.453541 22.46775 148.4151 22.46775C148.78854 22.46775 149.01792 22.32807 149.01792 21.98432C149.01792 21.476192 148.63917 20.813692 147.97167 20.813692Z"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-big-picture-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;3
</figcaption>
</figure>
</div>
<p>这一交换图可以继续扩展．将视角从多项式环转向矩阵代数，我们将看到，DFT 不仅是多项式环上的求值插值，更体现为矩阵代数上的相似对角化．</p>
<p>简单起见，下面只考察代数闭域的情况，并用域的常用记号 <img src="https://latex.codecogs.com/png.latex?K"> 替代 <img src="https://latex.codecogs.com/png.latex?R">．</p>
</section>
<section id="相似对角化" class="level3 fragile">
<h3 class="fragile anchored" data-anchor-id="相似对角化">相似对角化</h3>
<p>设 <img src="https://latex.codecogs.com/png.latex?C"> 是域 <img src="https://latex.codecogs.com/png.latex?K"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 阶可对角化矩阵，特征值两两不同．设其特征多项式（或最小多项式）为 <img src="https://latex.codecogs.com/png.latex?m(x)">，<img src="https://latex.codecogs.com/png.latex?%5CLambda"> 为其对角化得到的矩阵．<img src="https://latex.codecogs.com/png.latex?K%5BC%5D"> 和 <img src="https://latex.codecogs.com/png.latex?K%5B%5CLambda%5D"> 分别是矩阵 <img src="https://latex.codecogs.com/png.latex?C"> 和 <img src="https://latex.codecogs.com/png.latex?%5CLambda"> 在 <img src="https://latex.codecogs.com/png.latex?K%5E%7Bn%20%5Ctimes%20n%7D"> 上生成的代数．</p>
<div id="fig-big-picture-3" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-big-picture-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="231.333pt" height="101.8625pt" viewbox="0 -70.25 159.54 70.25">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M9.36233 45.36037C9.35233 45.39006 9.31233 45.46975 9.31233 45.49975C9.31233 45.50975 9.49171 45.64912 9.60139 45.72881L11.34452 47.07381C12.28077 47.761 12.66952 47.80069 12.96827 47.83069C13.04796 47.84069 13.14764 47.85069 13.14764 48.03006C13.14764 48.06975 13.11764 48.13944 13.03796 48.13944C12.81889 48.13944 12.56983 48.10975 12.33077 48.10975C11.97202 48.10975 11.58358 48.13944 11.22514 48.13944C11.15514 48.13944 11.03577 48.13944 11.03577 47.94037C11.03577 47.87069 11.08546 47.84069 11.15514 47.83069C11.37452 47.81069 11.46421 47.761 11.46421 47.62162C11.46421 47.44225 11.16514 47.21319 11.10546 47.16319L7.22077 44.17506L8.01764 47.37256C8.10702 47.731 8.12702 47.83069 8.85421 47.83069C9.10327 47.83069 9.19296 47.83069 9.19296 48.03006C9.19296 48.11944 9.11327 48.13944 9.05358 48.13944C8.77452 48.13944 8.05733 48.10975 7.77858 48.10975C7.48952 48.10975 6.78233 48.13944 6.49358 48.13944C6.42358 48.13944 6.29421 48.13944 6.29421 47.95037C6.29421 47.83069 6.38389 47.83069 6.58296 47.83069C6.71264 47.83069 6.89202 47.82069 7.01139 47.81069C7.17077 47.791 7.23046 47.761 7.23046 47.65131C7.23046 47.61162 7.22077 47.58162 7.19077 47.46225L5.85608 42.112874C5.75639 41.724436 5.73639 41.644749 4.949519 41.644749C4.780144 41.644749 4.670457 41.644749 4.670457 41.455686C4.670457 41.335999 4.790144 41.335999 4.819832 41.335999C5.098894 41.335999 5.80608 41.365999 6.08514 41.365999C6.29421 41.365999 6.51327 41.355999 6.72264 41.355999C6.94171 41.355999 7.16077 41.335999 7.37014 41.335999C7.43983 41.335999 7.56921 41.335999 7.56921 41.535374C7.56921 41.644749 7.47952 41.644749 7.29046 41.644749C6.92171 41.644749 6.64296 41.644749 6.64296 41.824124C6.64296 41.893811 6.70264 42.112874 6.73264 42.262249C6.87202 42.78037 7.00139 43.30819 7.13108 43.82631L8.61514 44.98194L9.77077 42.302249C9.89014 42.033186 9.89014 42.013499 9.89014 41.953499C9.89014 41.654749 9.46202 41.644749 9.37233 41.644749C9.26264 41.644749 9.15296 41.644749 9.15296 41.445686C9.15296 41.335999 9.27264 41.335999 9.29264 41.335999C9.69108 41.335999 10.10952 41.365999 10.50796 41.365999C10.72702 41.365999 11.26483 41.335999 11.48389 41.335999C11.53389 41.335999 11.66327 41.335999 11.66327 41.535374C11.66327 41.644749 11.55389 41.644749 11.46421 41.644749C11.05577 41.654749 10.92608 41.744436 10.77671 42.093186L9.36233 45.36037Z"></path>
<path d="M16.00598 38.84569V39.24412H15.03973V48.4085H16.00598V48.80694H14.64129V38.84569H16.00598Z"></path>
<path d="M19.56119 44.34444C19.62088 44.60319 19.84995 45.51975 20.54713 45.51975C20.59713 45.51975 20.83619 45.51975 21.04526 45.39006C20.76651 45.34037 20.56713 45.09131 20.56713 44.85225C20.56713 44.69287 20.67682 44.50381 20.94557 44.50381C21.16494 44.50381 21.48369 44.68287 21.48369 45.08131C21.48369 45.59944 20.89588 45.73881 20.55713 45.73881C19.97932 45.73881 19.63088 45.211 19.51119 44.98194C19.26213 45.63912 18.72432 45.73881 18.43557 45.73881C17.39932 45.73881 16.83182 44.45381 16.83182 44.20475C16.83182 44.10537 16.931195 44.10537 16.951195 44.10537C17.030883 44.10537 17.060883 44.12506 17.08057 44.21475C17.41932 45.27069 18.07682 45.51975 18.41557 45.51975C18.60463 45.51975 18.95338 45.43006 18.95338 44.85225C18.95338 44.5435 18.78401 43.876 18.41557 42.48162C18.2562 41.863811 17.90744 41.445686 17.46932 41.445686C17.40932 41.445686 17.180258 41.445686 16.971195 41.575061C17.220257 41.624749 17.43932 41.834124 17.43932 42.112874C17.43932 42.38194 17.220257 42.46162 17.070883 42.46162C16.77182 42.46162 16.522758 42.202561 16.522758 41.883811C16.522758 41.425686 17.020883 41.226311 17.45932 41.226311C18.11682 41.226311 18.47526 41.923811 18.50526 41.983499C18.62463 41.615061 18.98338 41.226311 19.58088 41.226311C20.60713 41.226311 21.17463 42.51131 21.17463 42.76037C21.17463 42.86006 21.08526 42.86006 21.05526 42.86006C20.96557 42.86006 20.94557 42.82037 20.92588 42.75037C20.59713 41.684749 19.91963 41.445686 19.60088 41.445686C19.21245 41.445686 19.05307 41.764436 19.05307 42.102874C19.05307 42.322249 19.11276 42.54131 19.22245 42.97975L19.56119 44.34444Z"></path>
<path d="M23.51178 48.80694H22.147096V48.4085H23.11335V39.24412H22.147096V38.84569H23.51178V48.80694ZM29.05077 48.4285C29.10046 48.55787 29.10046 48.58787 29.10046 48.60756C29.10046 48.71725 29.01077 48.80694 28.90139 48.80694C28.76171 48.80694 28.72202 48.70725 28.69202 48.60756L25.29514 39.22412C25.24546 39.09475 25.24546 39.06475 25.24546 39.04506C25.24546 38.93537 25.33514 38.84569 25.44483 38.84569C25.58421 38.84569 25.62389 38.94537 25.65389 39.04506L29.05077 48.4285ZM32.9661 38.94537C32.9661 38.97506 32.9661 38.99506 32.7967 39.16444C31.55171 40.419436 31.23296 42.302249 31.23296 43.82631C31.23296 45.55944 31.61139 47.29287 32.8367 48.53787C32.9661 48.65756 32.9661 48.67756 32.9661 48.70725C32.9661 48.77694 32.9261 48.80694 32.8664 48.80694C32.7667 48.80694 31.87046 48.12944 31.28264 46.86444C30.77452 45.76881 30.65514 44.66319 30.65514 43.82631C30.65514 43.04944 30.76452 41.844124 31.31264 40.718499C31.91014 39.49319 32.7667 38.84569 32.8664 38.84569C32.9261 38.84569 32.9661 38.87569 32.9661 38.94537Z"></path>
<path d="M34.427558 41.923811C34.397558 41.774436 34.337871 41.545061 34.337871 41.495374C34.337871 41.315999 34.477246 41.226311 34.62693 41.226311C34.74631 41.226311 34.92568 41.305999 34.99537 41.505374C35.00537 41.525374 35.12475 41.993499 35.18475 42.242561L35.40381 43.13912C35.4635 43.35819 35.52318 43.57725 35.57318 43.80631C35.61287 43.97569 35.69256 44.26475 35.70256 44.30444C35.85193 44.61319 36.38006 45.51975 37.32631 45.51975C37.77443 45.51975 37.86412 45.151 37.86412 44.82256C37.86412 44.5735 37.79443 44.29444 37.71475 43.99569L37.436 42.84006L37.23662 42.083186C37.19693 41.883811 37.10725 41.545061 37.10725 41.495374C37.10725 41.315999 37.24662 41.226311 37.396 41.226311C37.70475 41.226311 37.76475 41.475374 37.84443 41.794124C37.98381 42.35194 38.35225 43.80631 38.44193 44.19475C38.47193 44.32444 38.99975 45.51975 40.08568 45.51975C40.51381 45.51975 40.6235 45.181 40.6235 44.82256C40.6235 44.25475 40.20506 43.11912 40.006 42.591C39.91631 42.35194 39.87631 42.242561 39.87631 42.043186C39.87631 41.575061 40.22506 41.226311 40.69318 41.226311C41.62943 41.226311 41.99818 42.68069 41.99818 42.76037C41.99818 42.86006 41.9085 42.86006 41.8785 42.86006C41.77881 42.86006 41.77881 42.83006 41.72912 42.68069C41.57975 42.152874 41.261 41.445686 40.71318 41.445686C40.54381 41.445686 40.47412 41.545061 40.47412 41.774436C40.47412 42.023186 40.56381 42.262249 40.6535 42.48162C40.84256 42.99944 41.261 44.10537 41.261 44.67287C41.261 45.32037 40.86256 45.73881 40.11537 45.73881C39.3685 45.73881 38.86037 45.30069 38.49162 44.77256C38.48193 44.90225 38.45193 45.24069 38.17287 45.47975C37.92412 45.68912 37.60506 45.73881 37.35631 45.73881C36.45975 45.73881 35.97162 45.10131 35.80225 44.87225C35.75256 45.44006 35.33412 45.73881 34.88568 45.73881C34.427558 45.73881 34.238183 45.35037 34.148808 45.171C33.969433 44.82256 33.839746 44.23475 33.839746 44.20475C33.839746 44.10537 33.939433 44.10537 33.959433 44.10537C34.059121 44.10537 34.069121 44.11506 34.128808 44.33444C34.298183 45.04162 34.497246 45.51975 34.856 45.51975C35.01537 45.51975 35.16475 45.44006 35.16475 45.06162C35.16475 44.85225 35.13475 44.74287 35.00537 44.22475L34.427558 41.923811Z"></path>
<path d="M45.59517 38.94537C45.59517 38.97506 45.59517 38.99506 45.42579 39.16444C44.18079 40.419436 43.86204 42.302249 43.86204 43.82631C43.86204 45.55944 44.24048 47.29287 45.46579 48.53787C45.59517 48.65756 45.59517 48.67756 45.59517 48.70725C45.59517 48.77694 45.55516 48.80694 45.49548 48.80694C45.39579 48.80694 44.49954 48.12944 43.91173 46.86444C43.4036 45.76881 43.284228 44.66319 43.284228 43.82631C43.284228 43.04944 43.3936 41.844124 43.94173 40.718499C44.53923 39.49319 45.39579 38.84569 45.49548 38.84569C45.55516 38.84569 45.59517 38.87569 45.59517 38.94537Z"></path>
<path d="M49.49919 44.34444C49.55887 44.60319 49.78794 45.51975 50.48512 45.51975C50.53512 45.51975 50.77419 45.51975 50.98325 45.39006C50.7045 45.34037 50.50512 45.09131 50.50512 44.85225C50.50512 44.69287 50.61481 44.50381 50.88356 44.50381C51.10293 44.50381 51.42169 44.68287 51.42169 45.08131C51.42169 45.59944 50.83387 45.73881 50.49512 45.73881C49.91731 45.73881 49.56887 45.211 49.44918 44.98194C49.20012 45.63912 48.66231 45.73881 48.37356 45.73881C47.33731 45.73881 46.76981 44.45381 46.76981 44.20475C46.76981 44.10537 46.869185 44.10537 46.889185 44.10537C46.968873 44.10537 46.998873 44.12506 47.01856 44.21475C47.35731 45.27069 48.01481 45.51975 48.35356 45.51975C48.54262 45.51975 48.89137 45.43006 48.89137 44.85225C48.89137 44.5435 48.722 43.876 48.35356 42.48162C48.19419 41.863811 47.84544 41.445686 47.40731 41.445686C47.34731 41.445686 47.118248 41.445686 46.909185 41.575061C47.158248 41.624749 47.37731 41.834124 47.37731 42.112874C47.37731 42.38194 47.158248 42.46162 47.008873 42.46162C46.70981 42.46162 46.460748 42.202561 46.460748 41.883811C46.460748 41.425686 46.958873 41.226311 47.39731 41.226311C48.05481 41.226311 48.41325 41.923811 48.44325 41.983499C48.56262 41.615061 48.92137 41.226311 49.51887 41.226311C50.54512 41.226311 51.11262 42.51131 51.11262 42.76037C51.11262 42.86006 51.02325 42.86006 50.99325 42.86006C50.90356 42.86006 50.88356 42.82037 50.86387 42.75037C50.53512 41.684749 49.85762 41.445686 49.53887 41.445686C49.15044 41.445686 48.99106 41.764436 48.99106 42.102874C48.99106 42.322249 49.05075 42.54131 49.16044 42.97975L49.49919 44.34444Z"></path>
<path d="M54.74477 43.82631C54.74477 44.60319 54.6354 45.8085 54.08727 46.93412C53.48977 48.15944 52.632899 48.80694 52.533524 48.80694C52.473524 48.80694 52.433836 48.76694 52.433836 48.70725C52.433836 48.67756 52.433836 48.65756 52.623211 48.47819C53.59915 47.49194 54.16696 45.90819 54.16696 43.82631C54.16696 42.122874 53.79852 40.369749 52.563211 39.11475C52.433836 38.99506 52.433836 38.97506 52.433836 38.94537C52.433836 38.88569 52.473524 38.84569 52.533524 38.84569C52.632899 38.84569 53.52946 39.52319 54.11727 40.788186C54.6254 41.883811 54.74477 42.98944 54.74477 43.82631ZM58.61024 43.82631C58.61024 44.60319 58.50087 45.8085 57.95274 46.93412C57.35524 48.15944 56.49837 48.80694 56.39899 48.80694C56.33899 48.80694 56.29931 48.76694 56.29931 48.70725C56.29931 48.67756 56.29931 48.65756 56.48868 48.47819C57.46462 47.49194 58.03243 45.90819 58.03243 43.82631C58.03243 42.122874 57.66399 40.369749 56.42868 39.11475C56.29931 38.99506 56.29931 38.97506 56.29931 38.94537C56.29931 38.88569 56.33899 38.84569 56.39899 38.84569C56.49837 38.84569 57.39493 39.52319 57.98274 40.788186C58.49087 41.883811 58.61024 42.98944 58.61024 43.82631Z"></path>
<path d="M124.60931 45.36037C124.59931 45.39006 124.55931 45.46975 124.55931 45.49975C124.55931 45.50975 124.73869 45.64912 124.84838 45.72881L126.5915 47.07381C127.52775 47.761 127.9165 47.80069 128.21525 47.83069C128.29494 47.84069 128.39463 47.85069 128.39463 48.03006C128.39463 48.06975 128.36463 48.13944 128.28494 48.13944C128.06588 48.13944 127.81681 48.10975 127.57775 48.10975C127.219 48.10975 126.83056 48.13944 126.47213 48.13944C126.40213 48.13944 126.28275 48.13944 126.28275 47.94037C126.28275 47.87069 126.33244 47.84069 126.40213 47.83069C126.6215 47.81069 126.71119 47.761 126.71119 47.62162C126.71119 47.44225 126.41213 47.21319 126.35244 47.16319L122.46775 44.17506L123.26463 47.37256C123.354 47.731 123.374 47.83069 124.10119 47.83069C124.35025 47.83069 124.43994 47.83069 124.43994 48.03006C124.43994 48.11944 124.36025 48.13944 124.30056 48.13944C124.0215 48.13944 123.30431 48.10975 123.02556 48.10975C122.7365 48.10975 122.02931 48.13944 121.74056 48.13944C121.67056 48.13944 121.54119 48.13944 121.54119 47.95037C121.54119 47.83069 121.63088 47.83069 121.82994 47.83069C121.95963 47.83069 122.139 47.82069 122.25838 47.81069C122.41775 47.791 122.47744 47.761 122.47744 47.65131C122.47744 47.61162 122.46775 47.58162 122.43775 47.46225L121.10306 42.112874C121.00338 41.724436 120.98338 41.644749 120.196501 41.644749C120.027126 41.644749 119.917439 41.644749 119.917439 41.455686C119.917439 41.335999 120.037126 41.335999 120.066814 41.335999C120.345876 41.335999 121.05306 41.365999 121.33213 41.365999C121.54119 41.365999 121.76025 41.355999 121.96963 41.355999C122.18869 41.355999 122.40775 41.335999 122.61713 41.335999C122.68681 41.335999 122.81619 41.335999 122.81619 41.535374C122.81619 41.644749 122.7265 41.644749 122.53744 41.644749C122.16869 41.644749 121.88994 41.644749 121.88994 41.824124C121.88994 41.893811 121.94963 42.112874 121.97963 42.262249C122.119 42.78037 122.24838 43.30819 122.37806 43.82631L123.86213 44.98194L125.01775 42.302249C125.13713 42.033186 125.13713 42.013499 125.13713 41.953499C125.13713 41.654749 124.709 41.644749 124.61931 41.644749C124.50963 41.644749 124.39994 41.644749 124.39994 41.445686C124.39994 41.335999 124.51963 41.335999 124.53963 41.335999C124.93806 41.335999 125.3565 41.365999 125.75494 41.365999C125.974 41.365999 126.51181 41.335999 126.73088 41.335999C126.78088 41.335999 126.91025 41.335999 126.91025 41.535374C126.91025 41.644749 126.80088 41.644749 126.71119 41.644749C126.30275 41.654749 126.17306 41.744436 126.02369 42.093186L124.60931 45.36037Z"></path>
<path d="M129.563974 45.390339C129.536162 45.299714 129.494287 45.125339 129.494287 45.104402C129.494287 44.950964 129.619912 44.881277 129.73147 44.881277C129.85679 44.881277 129.96866 44.971902 130.00335 45.034714C130.03835 45.097527 130.09397 45.320652 130.12897 45.467214C130.16397 45.599714 130.24054 45.920339 130.28241 46.09471C130.32429 46.24846 130.36616 46.4019 130.40085 46.56221C130.47772 46.84815 130.49179 46.90409 130.69397 47.19003C130.88929 47.46909 131.2171 47.83159 131.74022 47.83159C132.1446 47.83159 132.15179 47.47596 132.15179 47.34346C132.15179 46.92503 131.85179 46.15065 131.74022 45.857839C131.66335 45.662527 131.63554 45.599714 131.63554 45.480964C131.63554 45.111277 131.94241 44.881277 132.29804 44.881277C132.99554 44.881277 133.30272 45.843777 133.30272 45.948464C133.30272 46.03909 133.21179 46.03909 133.19085 46.03909C133.09335 46.03909 133.08647 45.99721 133.05835 45.920339C132.89804 45.362527 132.59804 45.076589 132.31897 45.076589C132.17272 45.076589 132.1446 45.174089 132.1446 45.320652C132.1446 45.480964 132.1796 45.571589 132.30522 45.885652C132.38897 46.1019 132.67491 46.84128 132.67491 47.2319C132.67491 47.90846 132.13772 48.0269 131.76804 48.0269C131.18929 48.0269 130.79866 47.67128 130.58929 47.39221C130.54054 47.87346 130.12897 48.0269 129.84304 48.0269C129.543037 48.0269 129.382724 47.81065 129.292099 47.65034C129.138662 47.39221 129.040849 46.99471 129.040849 46.95971C129.040849 46.86909 129.138662 46.86909 129.159287 46.86909C129.257099 46.86909 129.263974 46.89003 129.313037 47.07846C129.417412 47.48971 129.549912 47.83159 129.8221 47.83159C130.00335 47.83159 130.0521 47.67815 130.0521 47.48971C130.0521 47.35721 129.9896 47.0994 129.94054 46.91096C129.89179 46.72253 129.8221 46.43659 129.7871 46.28315L129.563974 45.390339Z"></path>
<path d="M25.75332 10.16537C25.74332 10.19506 25.70332 10.27474 25.70332 10.30474C25.70332 10.31474 25.8827 10.45412 25.99239 10.53381L27.73551 11.8788C28.67176 12.56599 29.06051 12.60568 29.35926 12.63568C29.43895 12.64568 29.53864 12.65568 29.53864 12.83506C29.53864 12.87474 29.50864 12.94443 29.42895 12.94443C29.20989 12.94443 28.96082 12.91474 28.72176 12.91474C28.36301 12.91474 27.97457 12.94443 27.61614 12.94443C27.54614 12.94443 27.42676 12.94443 27.42676 12.74537C27.42676 12.67568 27.47645 12.64568 27.54614 12.63568C27.76551 12.61568 27.8552 12.56599 27.8552 12.42662C27.8552 12.24724 27.55614 12.01818 27.49645 11.96818L23.61176 8.98006L24.40864 12.17755C24.49801 12.53599 24.51801 12.63568 25.2452 12.63568C25.49426 12.63568 25.58395 12.63568 25.58395 12.83506C25.58395 12.92443 25.50426 12.94443 25.44457 12.94443C25.16551 12.94443 24.44832 12.91474 24.16957 12.91474C23.88051 12.91474 23.17332 12.94443 22.88457 12.94443C22.81457 12.94443 22.6852 12.94443 22.6852 12.75537C22.6852 12.63568 22.77489 12.63568 22.97395 12.63568C23.10364 12.63568 23.28301 12.62568 23.40239 12.61568C23.56176 12.59599 23.62145 12.56599 23.62145 12.4563C23.62145 12.41662 23.61176 12.38662 23.58176 12.26724L22.24707 6.917868C22.14739 6.52943 22.12739 6.449742 21.340512 6.449742C21.171137 6.449742 21.061449 6.449742 21.061449 6.26068C21.061449 6.140992 21.181137 6.140992 21.210824 6.140992C21.489887 6.140992 22.19707 6.170992 22.47614 6.170992C22.6852 6.170992 22.90426 6.160992 23.11364 6.160992C23.3327 6.160992 23.55176 6.140992 23.76114 6.140992C23.83082 6.140992 23.9602 6.140992 23.9602 6.340367C23.9602 6.449742 23.87051 6.449742 23.68145 6.449742C23.3127 6.449742 23.03395 6.449742 23.03395 6.629117C23.03395 6.698805 23.09364 6.917868 23.12364 7.067242C23.26301 7.58537 23.39239 8.11318 23.52207 8.6313L25.00614 9.78693L26.16176 7.107242C26.28114 6.83818 26.28114 6.818492 26.28114 6.758492C26.28114 6.459742 25.85301 6.449742 25.76332 6.449742C25.65364 6.449742 25.54395 6.449742 25.54395 6.25068C25.54395 6.140992 25.66364 6.140992 25.68364 6.140992C26.08207 6.140992 26.50051 6.170992 26.89895 6.170992C27.11801 6.170992 27.65582 6.140992 27.87489 6.140992C27.92489 6.140992 28.05426 6.140992 28.05426 6.340367C28.05426 6.449742 27.94489 6.449742 27.8552 6.449742C27.44676 6.459742 27.31707 6.54943 27.1677 6.89818L25.75332 10.16537Z"></path>
<path d="M32.39697 3.65068V4.04912H31.43072V13.21349H32.39697V13.61193H31.03228V3.65068H32.39697Z"></path>
<path d="M40.19562 13.06412C40.19562 13.09381 40.17562 13.16381 40.08594 13.16381C40.05594 13.16381 40.04625 13.1538 39.93656 13.04412L39.23938 12.27724C39.14969 12.41662 38.69125 13.16381 37.58563 13.16381C35.36438 13.16381 33.123125 10.96224 33.123125 8.6513C33.123125 7.007555 34.29844 5.92193 35.8225 5.92193C36.68906 5.92193 37.44625 6.320367 37.97406 6.778492C38.90063 7.59537 39.07 8.50193 39.07 8.53162C39.07 8.6313 38.97031 8.6313 38.95031 8.6313C38.89063 8.6313 38.84094 8.6113 38.82094 8.53162C38.73125 8.24287 38.50219 7.53568 37.81469 6.957867C37.1275 6.400055 36.5 6.23068 35.98187 6.23068C35.08531 6.23068 34.02969 6.748493 34.02969 8.30256C34.02969 8.87037 34.23875 10.48412 35.23469 11.64943C35.8425 12.35693 36.77875 12.85474 37.66531 12.85474C38.68156 12.85474 39.26906 12.08787 39.26906 10.93224C39.26906 10.53381 39.23938 10.5238 39.23938 10.42443C39.23938 10.32474 39.34875 10.32474 39.38875 10.32474C39.51813 10.32474 39.51813 10.34474 39.56812 10.5238L40.19562 13.06412Z"></path>
<path d="M42.04173 13.61193H40.677043V13.21349H41.64329V4.04912H40.677043V3.65068H42.04173V13.61193Z"></path>
<path d="M121.0943 10.16537C121.0843 10.19506 121.0443 10.27474 121.0443 10.30474C121.0443 10.31474 121.22368 10.45412 121.33336 10.53381L123.07649 11.8788C124.01274 12.56599 124.40149 12.60568 124.70024 12.63568C124.77993 12.64568 124.87961 12.65568 124.87961 12.83506C124.87961 12.87474 124.84961 12.94443 124.76993 12.94443C124.55086 12.94443 124.3018 12.91474 124.06274 12.91474C123.70399 12.91474 123.31555 12.94443 122.95711 12.94443C122.88711 12.94443 122.76774 12.94443 122.76774 12.74537C122.76774 12.67568 122.81743 12.64568 122.88711 12.63568C123.10649 12.61568 123.19618 12.56599 123.19618 12.42662C123.19618 12.24724 122.89711 12.01818 122.83743 11.96818L118.95274 8.98006L119.74961 12.17755C119.83899 12.53599 119.85899 12.63568 120.58618 12.63568C120.83524 12.63568 120.92493 12.63568 120.92493 12.83506C120.92493 12.92443 120.84524 12.94443 120.78555 12.94443C120.50649 12.94443 119.7893 12.91474 119.51055 12.91474C119.22149 12.91474 118.5143 12.94443 118.22555 12.94443C118.15555 12.94443 118.02618 12.94443 118.02618 12.75537C118.02618 12.63568 118.11586 12.63568 118.31493 12.63568C118.44461 12.63568 118.62399 12.62568 118.74336 12.61568C118.90274 12.59599 118.96243 12.56599 118.96243 12.4563C118.96243 12.41662 118.95274 12.38662 118.92274 12.26724L117.58805 6.917868C117.48836 6.52943 117.46836 6.449742 116.681489 6.449742C116.512114 6.449742 116.402426 6.449742 116.402426 6.26068C116.402426 6.140992 116.522114 6.140992 116.551801 6.140992C116.830864 6.140992 117.53805 6.170992 117.81711 6.170992C118.02618 6.170992 118.24524 6.160992 118.45461 6.160992C118.67368 6.160992 118.89274 6.140992 119.10211 6.140992C119.1718 6.140992 119.30118 6.140992 119.30118 6.340367C119.30118 6.449742 119.21149 6.449742 119.02243 6.449742C118.65368 6.449742 118.37493 6.449742 118.37493 6.629117C118.37493 6.698805 118.43461 6.917868 118.46461 7.067242C118.60399 7.58537 118.73336 8.11318 118.86305 8.6313L120.34711 9.78693L121.50274 7.107242C121.62211 6.83818 121.62211 6.818492 121.62211 6.758492C121.62211 6.459742 121.19399 6.449742 121.1043 6.449742C120.99461 6.449742 120.88493 6.449742 120.88493 6.25068C120.88493 6.140992 121.00461 6.140992 121.02461 6.140992C121.42305 6.140992 121.84149 6.170992 122.23993 6.170992C122.45899 6.170992 122.9968 6.140992 123.21586 6.140992C123.26586 6.140992 123.39524 6.140992 123.39524 6.340367C123.39524 6.449742 123.28586 6.449742 123.19618 6.449742C122.78774 6.459742 122.65805 6.54943 122.50868 6.89818L121.0943 10.16537Z"></path>
<path d="M127.73802 3.65068V4.04912H126.77177V13.21349H127.73802V13.61193H126.37334V3.65068H127.73802ZM131.64326 13.06412C131.58357 13.25318 131.52388 13.27318 131.4142 13.27318C131.25482 13.27318 131.23482 13.23349 131.18513 13.06412L129.27263 7.137242C129.17295 6.83818 128.97357 6.449742 128.27638 6.449742V6.140992C128.60513 6.160992 129.11326 6.170992 129.20263 6.170992C129.4917 6.170992 130.01951 6.150992 130.32826 6.140992V6.449742C129.79045 6.459742 129.56138 6.728805 129.56138 6.967867C129.56138 7.017555 129.56138 7.047555 129.61107 7.18693L131.10545 11.82881L132.6792 6.927867C132.7292 6.788492 132.7292 6.768492 132.7292 6.748493C132.7292 6.449742 132.14138 6.449742 131.88232 6.449742V6.140992C132.23107 6.170992 132.93826 6.170992 133.3167 6.170992C133.70513 6.170992 134.15357 6.150992 134.54201 6.140992V6.449742C133.78482 6.449742 133.75513 6.50943 133.63545 6.87818L131.64326 13.06412ZM136.4554 13.61193H135.09068V13.21349H136.0569V4.04912H135.09068V3.65068H136.4554V13.61193Z"></path>
<path d="M64.10938 43.8281H114.6484" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M112.77708 46.21879C113.15599 44.781291 113.999741 44.105509 114.847397 43.828166C113.999741 43.546916 113.15599 42.871134 112.77708 41.43754" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M91.60503 51.40709V51.67209H88.82878V51.40709H91.60503Z"></path>
<path d="M89.16204 47.466154C89.23892 47.459279 89.32236 47.459279 89.39923 47.459279C90.65486 47.459279 91.80548 48.484592 91.80548 49.58647C91.80548 50.2074 91.43579 50.6049 90.89173 50.6049C89.92923 50.6049 89.42017 49.3774 89.22486 48.85428C89.13423 48.59615 88.98079 48.108029 88.93892 47.975217C88.17173 48.079904 87.683293 48.428654 87.683293 48.9449C87.683293 48.95178 87.725168 49.73303 88.29017 50.36084C88.33892 50.40959 88.34611 50.42365 88.34611 50.45147C88.34611 50.53522 88.25548 50.53522 88.23454 50.53522C88.17173 50.53522 88.14361 50.53522 88.01111 50.38178C87.620481 49.90053 87.439231 49.17522 87.439231 48.87522C87.439231 48.254279 87.892668 47.717404 88.79236 47.522092C88.44361 46.44084 88.40173 46.30834 88.40173 46.24553C88.40173 46.05709 88.56236 46.0224 88.63892 46.0224C88.71579 46.0224 88.85517 46.07115 88.91111 46.17584C88.95986 46.28053 89.02267 46.636154 89.16204 47.466154ZM89.25267 47.940529C89.39236 48.74272 89.44798 49.05647 89.78298 49.5099C90.09673 49.93522 90.46642 50.13053 90.81517 50.13053C91.29642 50.13053 91.55454 49.8099 91.55454 49.44709C91.55454 48.74272 90.67579 47.933654 89.47611 47.933654C89.41329 47.933654 89.31548 47.933654 89.25267 47.940529Z"></path>
<path d="M31.9531 34.99609V17.85937" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-dasharray="2.78941 1.59395"></path>
<path d="M34.34373 19.73439C32.910137 19.35548 32.234355 18.511729 31.953105 17.660166C31.675762 18.511729 30.99998 19.35548 29.56248 19.73439" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M36.19131 25.59364C36.19131 26.20739 36.60287 26.72364 37.126 27.05145C37.2585 27.1352 37.56537 27.35145 37.56537 27.77676C37.56537 28.14645 37.29318 28.71832 36.10756 28.71832C35.249746 28.71832 34.789121 28.26489 34.789121 27.79082C34.789121 27.50489 35.019433 27.44207 35.124121 27.44207C35.256621 27.44207 35.45193 27.53957 35.45193 27.77676C35.45193 27.81864 35.45193 28.07676 35.124121 28.10457C35.249746 28.29989 35.57037 28.52301 36.08662 28.52301C36.88162 28.52301 36.93068 28.12551 36.93068 27.80457C36.93068 27.43489 36.791 27.29551 36.67943 27.19801C36.21225 26.77926 35.95412 26.16551 35.95412 25.62864V25.33551C35.95412 25.19614 35.95412 25.16114 36.07256 25.16114C36.19131 25.16114 36.19131 25.20989 36.19131 25.35645V25.59364ZM36.47037 24.205512C36.47037 24.449574 36.27506 24.610199 36.07256 24.610199C35.8285 24.610199 35.66818 24.414887 35.66818 24.212699C35.66818 23.968324 35.8635 23.808012 36.06568 23.808012C36.30975 23.808012 36.47037 24.003324 36.47037 24.205512Z"></path>
<path d="M126.8398 37.4883V17.85937" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M129.23023 19.73439C127.796634 19.35548 127.116946 18.511729 126.839603 17.660166C126.558353 18.511729 125.882571 19.35548 124.44898 19.73439" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M133.23747 25.769011V26.020261C132.76997 26.020261 132.71435 26.069011 132.71435 26.410573V30.60964L131.6681 30.53307V30.28182C132.13528 30.28182 132.19122 30.23307 132.19122 29.8912V28.44745C131.9331 28.69839 131.59841 28.84495 131.21466 28.84495C130.28716 28.84495 129.505909 28.14745 129.505909 27.2687C129.505909 26.396823 130.24528 25.699323 131.13091 25.699323C131.7031 25.699323 132.04466 26.006198 132.16341 26.131823V25.699323L133.23747 25.769011ZM132.16341 26.501511C131.98185 26.173698 131.62622 25.894636 131.17278 25.894636C130.78216 25.894636 130.5031 26.124636 130.36372 26.327136C130.22435 26.536198 130.140597 26.81526 130.140597 27.26151C130.140597 27.42214 130.140597 27.94526 130.42653 28.27307C130.7056 28.58682 131.04716 28.64964 131.24966 28.64964C131.58435 28.64964 131.88435 28.4962 132.07966 28.24526C132.16341 28.13339 132.16341 28.12651 132.16341 27.99401V26.501511ZM135.49661 25.769011V26.020261C135.09192 26.020261 135.02224 26.020261 135.02224 26.313073V28.84495L133.99692 28.76839V28.51714C134.4363 28.51714 134.49911 28.47526 134.49911 28.13339V26.319948C134.49911 26.020261 134.42942 26.020261 133.97599 26.020261V25.769011C133.97599 25.769011 134.47817 25.796823 134.75724 25.796823C135.0013 25.796823 135.25224 25.789948 135.49661 25.769011ZM135.11286 29.96807C135.11286 30.1912 134.93849 30.37245 134.71536 30.37245C134.47817 30.37245 134.31786 30.17714 134.31786 29.97495C134.31786 29.75182 134.49224 29.57026 134.71536 29.57026C134.95255 29.57026 135.11286 29.76557 135.11286 29.96807ZM139.6322 26.396823V26.78026H139.395V26.403698C139.395 26.334011 139.395 25.999323 139.13692 25.999323C138.87911 25.999323 138.87911 26.327136 138.87911 26.417761V27.63839C138.87911 28.00807 138.87911 28.27307 138.55817 28.5312C138.27224 28.76839 137.93724 28.87995 137.52567 28.87995C136.86317 28.87995 136.39599 28.6287 136.39599 28.20339C136.39599 27.97995 136.54942 27.86151 136.73067 27.86151C136.91911 27.86151 137.05849 28.00089 137.05849 28.18932C137.05849 28.30776 137.00255 28.45432 136.81442 28.51026C137.06536 28.68464 137.47005 28.68464 137.51192 28.68464C137.90255 28.68464 138.32786 28.42651 138.32786 27.84057V27.62432C137.94443 27.61026 137.48411 27.58964 136.97474 27.4012C136.34692 27.17089 136.15161 26.78745 136.15161 26.473386C136.15161 25.873698 136.87724 25.699323 137.37224 25.699323C137.93036 25.699323 138.25817 26.013073 138.40474 26.285261C138.43255 25.999323 138.62099 25.734011 138.94161 25.734011C138.94161 25.734011 139.6322 25.734011 139.6322 26.396823ZM138.32786 26.752448C138.32786 26.082761 137.74192 25.894636 137.42817 25.894636C137.07255 25.894636 136.73755 26.131823 136.73755 26.473386C136.73755 26.85714 137.07255 27.39432 138.32786 27.44307V26.752448ZM143.6072 28.55901C143.6072 28.71932 143.4747 28.91464 143.1959 28.91464C143.0912 28.91464 142.7143 28.8937 142.3865 28.59401C142.1775 28.74745 141.8843 28.84495 141.5775 28.84495C140.859 28.84495 140.3359 28.3637 140.3359 27.81964C140.3359 27.54776 140.4756 27.29651 140.6709 27.11526C140.615 27.05245 140.4615 26.82214 140.4615 26.550261C140.4615 26.459636 140.4825 26.131823 140.7547 25.929323C140.4406 25.824948 140.0778 25.594636 140.0778 25.231823C140.0778 24.72276 140.8453 24.33901 141.7868 24.33901C142.6728 24.33901 143.4956 24.68776 143.4956 25.245886C143.4956 25.455261 143.4118 25.831823 143.0284 26.040886C142.6168 26.257136 142.2053 26.257136 141.5287 26.257136C141.3753 26.257136 141.124 26.257136 141.0684 26.264323C140.8453 26.313073 140.7197 26.522448 140.7197 26.724636C140.7197 26.89901 140.7684 26.95464 140.8103 27.01057C140.915 26.94776 141.1659 26.79432 141.5706 26.79432C142.289 26.79432 142.8122 27.27557 142.8122 27.81964C142.8122 28.09182 142.6865 28.30776 142.519 28.48932C142.8331 28.71245 143.105 28.71932 143.2237 28.71932C143.1959 28.69151 143.1609 28.6637 143.1609 28.55214C143.1609 28.41245 143.2656 28.3287 143.384 28.3287C143.4818 28.3287 143.6072 28.3987 143.6072 28.55901ZM142.254 27.81964C142.254 27.70807 142.254 27.42901 142.1147 27.24776C142.0168 27.12901 141.8287 27.0037 141.5775 27.0037C140.894 27.0037 140.894 27.67307 140.894 27.81964C140.894 27.9312 140.894 28.21026 141.0334 28.39151C141.1312 28.51026 141.3193 28.63589 141.5706 28.63589C142.254 28.63589 142.254 27.9662 142.254 27.81964ZM143.0703 25.239011C143.0703 24.869323 142.519 24.54839 141.7868 24.54839C141.0543 24.54839 140.5034 24.876198 140.5034 25.239011C140.5034 25.483073 140.7265 25.783073 141.1731 25.789948H141.5775C142.1984 25.789948 143.0703 25.789948 143.0703 25.239011Z"></path>
<path d="M138.6328 42.7969C158.4805 41.0586 139.0703 70.0508 130.8164 52.3555" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M133.772963 53.042938C132.312021 53.304663 131.343266 52.824194 130.72999 52.171845C130.835456 53.06247 130.577646 54.113256 129.437022 55.062475" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M149.96542 59.01916H151.22792C152.40667 59.01916 153.40417 59.77259 153.40417 60.53291C153.40417 61.11884 152.83229 61.62103 151.87667 61.62103H149.43542C149.29573 61.62103 149.21229 61.62103 149.21229 61.46759C149.21229 61.36978 149.28885 61.36978 149.44229 61.36978C149.55385 61.36978 149.58198 61.36978 149.70729 61.35572C149.84698 61.34197 149.86073 61.32791 149.86073 61.25822C149.86073 61.24416 149.86073 61.20947 149.83292 61.10478L148.91229 57.428844C148.8426 57.156969 148.83542 57.108219 148.291354 57.108219C148.166041 57.108219 148.082291 57.108219 148.082291 56.954469C148.082291 56.947594 148.082291 56.856969 148.193854 56.856969C148.396041 56.856969 148.89823 56.884782 149.10042 56.884782C149.21917 56.884782 149.46323 56.884782 149.58198 56.877907C149.72135 56.871032 149.89573 56.856969 150.02823 56.856969C150.0701 56.856969 150.17479 56.856969 150.17479 57.010407C150.17479 57.108219 150.09104 57.108219 149.95135 57.108219C149.94448 57.108219 149.81198 57.108219 149.68635 57.121969C149.52604 57.136032 149.52604 57.156969 149.52604 57.226657C149.52604 57.233532 149.52604 57.275407 149.55385 57.380094L149.96542 59.01916ZM150.4676 61.13259C150.52354 61.34884 150.53042 61.36978 150.82323 61.36978H151.63948C152.28823 61.36978 152.6926 61.17447 152.6926 60.67916C152.6926 60.46291 152.60885 59.91197 152.2601 59.59822C152.00917 59.37509 151.61167 59.24228 151.10948 59.24228H149.99323L150.4676 61.13259Z"></path>
<path d="M156.09184 57.62874C156.18152 57.62874 156.23121 57.62874 156.3009 57.67842C156.3309 57.70343 156.38059 57.77311 156.38059 57.8478C156.38059 58.00718 156.23121 58.00718 156.15152 58.00718H154.69184C153.83965 58.00718 153.177148 57.25499 153.177148 56.652175C153.177148 56.13405 153.610586 55.8053 154.15871 55.8053C154.87121 55.8053 155.6334 56.363112 155.6334 57.10561C155.6334 57.30467 155.57871 57.47905 155.47402 57.62874H156.09184ZM154.16871 55.974675C153.94434 55.974675 153.585586 56.069362 153.585586 56.527488C153.585586 56.682175 153.650586 57.62874 154.61215 57.62874C154.98559 57.62874 155.21496 57.48905 155.21496 57.1453C155.21496 56.637175 154.83621 55.974675 154.16871 55.974675Z"></path>
<path d="M47.7188 8.6328H111.1328" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M109.26167 11.02344C109.64057 9.585937 110.484321 8.910155 111.331978 8.632812C110.484321 8.351562 109.64057 7.67578 109.26167 6.24219" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M57.3415 12.406985V12.658235C56.874 12.658235 56.81838 12.706985 56.81838 13.048548V17.24761L55.77213 17.17105V16.9198C56.23931 16.9198 56.29525 16.87105 56.29525 16.52917V15.08542C56.03713 15.33636 55.70244 15.48292 55.31869 15.48292C54.39119 15.48292 53.609939 14.78542 53.609939 13.90667C53.609939 13.034797 54.34931 12.337298 55.23494 12.337298C55.80713 12.337298 56.14869 12.644172 56.26744 12.769797V12.337298L57.3415 12.406985ZM56.26744 13.139485C56.08588 12.811673 55.73025 12.53261 55.27681 12.53261C54.88619 12.53261 54.60713 12.76261 54.46775 12.96511C54.32838 13.174173 54.244626 13.45323 54.244626 13.89949C54.244626 14.06011 54.244626 14.58323 54.53056 14.91105C54.80963 15.2248 55.15119 15.28761 55.35369 15.28761C55.68838 15.28761 55.98838 15.13417 56.18369 14.88323C56.26744 14.77136 56.26744 14.76449 56.26744 14.63198V13.139485ZM59.60064 12.406985V12.658235C59.19595 12.658235 59.12627 12.658235 59.12627 12.951047V15.48292L58.10095 15.40636V15.15511C58.54033 15.15511 58.60314 15.11323 58.60314 14.77136V12.957923C58.60314 12.658235 58.53345 12.658235 58.08002 12.658235V12.406985C58.08002 12.406985 58.5822 12.434798 58.86127 12.434798C59.10533 12.434798 59.35627 12.427922 59.60064 12.406985ZM59.21689 16.60605C59.21689 16.82917 59.04252 17.01042 58.81939 17.01042C58.5822 17.01042 58.42189 16.81511 58.42189 16.61292C58.42189 16.3898 58.59627 16.20823 58.81939 16.20823C59.05658 16.20823 59.21689 16.40355 59.21689 16.60605ZM63.7363 13.034797V13.41823H63.4991V13.041672C63.4991 12.971985 63.4991 12.637297 63.24095 12.637297C62.98314 12.637297 62.98314 12.96511 62.98314 13.055735V14.27636C62.98314 14.64605 62.98314 14.91105 62.6622 15.16917C62.37627 15.40636 62.04127 15.51792 61.6297 15.51792C60.9672 15.51792 60.50002 15.26667 60.50002 14.84136C60.50002 14.61792 60.65345 14.49948 60.8347 14.49948C61.02314 14.49948 61.16252 14.63886 61.16252 14.8273C61.16252 14.94573 61.10658 15.0923 60.91845 15.14824C61.16939 15.32261 61.57408 15.32261 61.61595 15.32261C62.00658 15.32261 62.43189 15.06449 62.43189 14.47855V14.2623C62.04845 14.24824 61.58814 14.22761 61.07877 14.03917C60.45095 13.80886 60.25564 13.42542 60.25564 13.11136C60.25564 12.511672 60.98127 12.337298 61.47627 12.337298C62.03439 12.337298 62.3622 12.651047 62.50877 12.923235C62.53658 12.637297 62.72502 12.371985 63.04564 12.371985C63.04564 12.371985 63.7363 12.371985 63.7363 13.034797ZM62.43189 13.390423C62.43189 12.720735 61.84595 12.53261 61.5322 12.53261C61.17658 12.53261 60.84158 12.769797 60.84158 13.11136C60.84158 13.49511 61.17658 14.0323 62.43189 14.08105V13.390423ZM67.7112 15.19698C67.7112 15.3573 67.5787 15.55261 67.2999 15.55261C67.1953 15.55261 66.8184 15.53167 66.4906 15.23199C66.2815 15.38542 65.9884 15.48292 65.6815 15.48292C64.9631 15.48292 64.4399 15.00167 64.4399 14.45761C64.4399 14.18574 64.5796 13.93449 64.7749 13.75324C64.719 13.69042 64.5656 13.46011 64.5656 13.188235C64.5656 13.09761 64.5865 12.769797 64.8587 12.567297C64.5446 12.462922 64.1818 12.23261 64.1818 11.869797C64.1818 11.36073 64.9493 10.97699 65.8909 10.97699C66.7768 10.97699 67.5996 11.32574 67.5996 11.88386C67.5996 12.093235 67.5159 12.469798 67.1324 12.67886C66.7209 12.89511 66.3093 12.89511 65.6328 12.89511C65.4793 12.89511 65.2281 12.89511 65.1724 12.902297C64.9493 12.951047 64.8237 13.160422 64.8237 13.36261C64.8237 13.53698 64.8724 13.59261 64.9143 13.64855C65.019 13.58574 65.2699 13.4323 65.6746 13.4323C66.3931 13.4323 66.9162 13.91355 66.9162 14.45761C66.9162 14.7298 66.7906 14.94573 66.6231 15.1273C66.9371 15.35042 67.209 15.3573 67.3278 15.3573C67.2999 15.32948 67.2649 15.30167 67.2649 15.19011C67.2649 15.05042 67.3696 14.96667 67.4881 14.96667C67.5859 14.96667 67.7112 15.03667 67.7112 15.19698ZM66.3581 14.45761C66.3581 14.34605 66.3581 14.06698 66.2187 13.88573C66.1209 13.76698 65.9328 13.64167 65.6815 13.64167C64.9981 13.64167 64.9981 14.31105 64.9981 14.45761C64.9981 14.56917 64.9981 14.84824 65.1374 15.02948C65.2353 15.14824 65.4234 15.27386 65.6746 15.27386C66.3581 15.27386 66.3581 14.60417 66.3581 14.45761ZM67.1743 11.876985C67.1743 11.507298 66.6231 11.18636 65.8909 11.18636C65.1584 11.18636 64.6074 11.514172 64.6074 11.876985C64.6074 12.121047 64.8306 12.421048 65.2771 12.427922H65.6815C66.3024 12.427922 67.1743 12.427922 67.1743 11.876985ZM71.5677 13.89261C71.5677 14.76449 70.8214 15.51792 69.8589 15.51792S68.1499 14.76449 68.1499 13.89261C68.1499 13.02761 68.9174 12.337298 69.8589 12.337298C70.8005 12.337298 71.5677 13.02761 71.5677 13.89261ZM70.933 13.95542C70.933 13.62073 70.912 13.251047 70.7099 12.96511C70.5214 12.699797 70.2008 12.560422 69.8589 12.560422C69.6008 12.560422 69.2242 12.644172 68.9939 12.986048C68.8058 13.271985 68.7849 13.63448 68.7849 13.95542C68.7849 14.25542 68.7917 14.66698 69.0358 14.96667C69.2102 15.16917 69.5033 15.32261 69.8589 15.32261C70.2705 15.32261 70.5633 15.1273 70.7167 14.91105C70.912 14.63886 70.933 14.29011 70.933 13.95542ZM75.9613 12.406985V12.658235C75.5079 12.658235 75.4382 12.658235 75.4382 12.957923V14.52042C75.4382 15.1273 75.1382 15.48292 74.392 15.48292C73.8201 15.48292 73.4504 15.16917 73.2551 14.80636H73.2479V15.48292L72.2226 15.40636V15.15511C72.6901 15.15511 72.7457 15.10636 72.7457 14.76449V12.957923C72.7457 12.658235 72.676 12.658235 72.2226 12.658235V12.406985C72.2226 12.406985 72.7248 12.434798 73.0179 12.434798C73.276 12.434798 73.7573 12.41386 73.8201 12.406985V12.658235C73.3667 12.658235 73.297 12.658235 73.297 12.957923V14.21355C73.297 14.94573 73.8757 15.28761 74.336 15.28761C74.8245 15.28761 74.8873 14.90417 74.8873 14.54823V12.957923C74.8873 12.658235 74.8173 12.658235 74.3642 12.658235V12.406985C74.3642 12.406985 74.8663 12.434798 75.1592 12.434798C75.4173 12.434798 75.8985 12.41386 75.9613 12.406985ZM80.0408 13.034797V13.41823H79.8036V13.041672C79.8036 12.971985 79.8036 12.637297 79.5455 12.637297C79.2877 12.637297 79.2877 12.96511 79.2877 13.055735V14.27636C79.2877 14.64605 79.2877 14.91105 78.9667 15.16917C78.6808 15.40636 78.3458 15.51792 77.9342 15.51792C77.2717 15.51792 76.8045 15.26667 76.8045 14.84136C76.8045 14.61792 76.958 14.49948 77.1392 14.49948C77.3277 14.49948 77.467 14.63886 77.467 14.8273C77.467 14.94573 77.4111 15.0923 77.223 15.14824C77.4739 15.32261 77.8786 15.32261 77.9205 15.32261C78.3111 15.32261 78.7364 15.06449 78.7364 14.47855V14.2623C78.353 14.24824 77.8927 14.22761 77.3833 14.03917C76.7555 13.80886 76.5602 13.42542 76.5602 13.11136C76.5602 12.511672 77.2858 12.337298 77.7808 12.337298C78.3389 12.337298 78.6667 12.651047 78.8133 12.923235C78.8411 12.637297 79.0295 12.371985 79.3502 12.371985C79.3502 12.371985 80.0408 12.371985 80.0408 13.034797ZM78.7364 13.390423C78.7364 12.720735 78.1505 12.53261 77.8367 12.53261C77.4811 12.53261 77.1461 12.769797 77.1461 13.11136C77.1461 13.49511 77.4811 14.0323 78.7364 14.08105V13.390423ZM82.1745 12.406985V12.658235C81.721 12.658235 81.6513 12.658235 81.6513 12.957923V17.24761L80.6051 17.17105V16.9198C81.0723 16.9198 81.1282 16.87105 81.1282 16.52917V12.957923C81.1282 12.658235 81.0585 12.658235 80.6051 12.658235V12.406985C80.6051 12.406985 81.1073 12.434798 81.3863 12.434798C81.6513 12.434798 81.9095 12.427922 82.1745 12.406985ZM84.3782 12.406985V12.658235C83.9735 12.658235 83.9038 12.658235 83.9038 12.951047V15.48292L82.8785 15.40636V15.15511C83.3179 15.15511 83.3807 15.11323 83.3807 14.77136V12.957923C83.3807 12.658235 83.311 12.658235 82.8576 12.658235V12.406985C82.8576 12.406985 83.3598 12.434798 83.6388 12.434798C83.8829 12.434798 84.1338 12.427922 84.3782 12.406985ZM83.9945 16.60605C83.9945 16.82917 83.8201 17.01042 83.597 17.01042C83.3598 17.01042 83.1995 16.81511 83.1995 16.61292C83.1995 16.3898 83.3738 16.20823 83.597 16.20823C83.8342 16.20823 83.9945 16.40355 83.9945 16.60605ZM87.8792 13.76011H87.642C87.5723 12.944172 87.4257 12.63011 86.5538 12.63011H85.696L87.7954 15.16917C87.8442 15.23199 87.8582 15.25292 87.8582 15.30167C87.8582 15.41323 87.7745 15.41323 87.6629 15.41323H85.1798L85.096 14.24824H85.3332C85.382 14.98073 85.5426 15.21792 86.3376 15.21792H87.1607L85.0542 12.671985C84.9913 12.595422 84.9913 12.567297 84.9913 12.53261C84.9913 12.406985 85.0613 12.406985 85.1867 12.406985H87.7535L87.8792 13.76011ZM92.0565 13.034797V13.41823H91.8193V13.041672C91.8193 12.971985 91.8193 12.637297 91.5612 12.637297C91.3034 12.637297 91.3034 12.96511 91.3034 13.055735V14.27636C91.3034 14.64605 91.3034 14.91105 90.9824 15.16917C90.6965 15.40636 90.3615 15.51792 89.9499 15.51792C89.2874 15.51792 88.8203 15.26667 88.8203 14.84136C88.8203 14.61792 88.9737 14.49948 89.1549 14.49948C89.3434 14.49948 89.4828 14.63886 89.4828 14.8273C89.4828 14.94573 89.4268 15.0923 89.2387 15.14824C89.4896 15.32261 89.8943 15.32261 89.9362 15.32261C90.3268 15.32261 90.7521 15.06449 90.7521 14.47855V14.2623C90.3687 14.24824 89.9084 14.22761 89.399 14.03917C88.7712 13.80886 88.5759 13.42542 88.5759 13.11136C88.5759 12.511672 89.3015 12.337298 89.7965 12.337298C90.3546 12.337298 90.6824 12.651047 90.829 12.923235C90.8568 12.637297 91.0453 12.371985 91.3659 12.371985C91.3659 12.371985 92.0565 12.371985 92.0565 13.034797ZM90.7521 13.390423C90.7521 12.720735 90.1662 12.53261 89.8524 12.53261C89.4968 12.53261 89.1618 12.769797 89.1618 13.11136C89.1618 13.49511 89.4968 14.0323 90.7521 14.08105V13.390423ZM94.8458 13.285735V13.66949H94.6086V13.292922C94.6086 12.818547 94.3855 12.560422 94.1133 12.560422C93.632 12.560422 93.632 13.14636 93.632 13.271985V15.16199H94.7202V15.41323H93.632V16.69667H93.3949C93.388 16.06886 93.102 15.37824 92.4324 15.3573V15.16199H93.0811V13.27886C93.0811 12.49761 93.667 12.337298 94.0577 12.337298C94.5249 12.337298 94.8458 12.734798 94.8458 13.285735ZM97.2517 12.406985V12.658235C96.847 12.658235 96.7774 12.658235 96.7774 12.951047V15.48292L95.752 15.40636V15.15511C96.1914 15.15511 96.2542 15.11323 96.2542 14.77136V12.957923C96.2542 12.658235 96.1845 12.658235 95.7311 12.658235V12.406985C95.7311 12.406985 96.2333 12.434798 96.5124 12.434798C96.7564 12.434798 97.0074 12.427922 97.2517 12.406985ZM96.868 16.60605C96.868 16.82917 96.6936 17.01042 96.4705 17.01042C96.2333 17.01042 96.073 16.81511 96.073 16.61292C96.073 16.3898 96.2474 16.20823 96.4705 16.20823C96.7077 16.20823 96.868 16.40355 96.868 16.60605ZM101.2827 13.89261C101.2827 14.76449 100.5364 15.51792 99.5739 15.51792S97.8649 14.76449 97.8649 13.89261C97.8649 13.02761 98.6324 12.337298 99.5739 12.337298C100.5155 12.337298 101.2827 13.02761 101.2827 13.89261ZM100.648 13.95542C100.648 13.62073 100.627 13.251047 100.4249 12.96511C100.2364 12.699797 99.9158 12.560422 99.5739 12.560422C99.3158 12.560422 98.9392 12.644172 98.7089 12.986048C98.5208 13.271985 98.4999 13.63448 98.4999 13.95542C98.4999 14.25542 98.5067 14.66698 98.7508 14.96667C98.9252 15.16917 99.2183 15.32261 99.5739 15.32261C99.9855 15.32261 100.2783 15.1273 100.4317 14.91105C100.627 14.63886 100.648 14.29011 100.648 13.95542ZM105.6763 12.406985V12.658235C105.2229 12.658235 105.1532 12.658235 105.1532 12.957923V14.52042C105.1532 15.1273 104.8532 15.48292 104.107 15.48292C103.5351 15.48292 103.1654 15.16917 102.9701 14.80636H102.9629V15.48292L101.9376 15.40636V15.15511C102.4051 15.15511 102.4607 15.10636 102.4607 14.76449V12.957923C102.4607 12.658235 102.391 12.658235 101.9376 12.658235V12.406985C101.9376 12.406985 102.4398 12.434798 102.7329 12.434798C102.991 12.434798 103.4723 12.41386 103.5351 12.406985V12.658235C103.0817 12.658235 103.012 12.658235 103.012 12.957923V14.21355C103.012 14.94573 103.5907 15.28761 104.051 15.28761C104.5395 15.28761 104.6023 14.90417 104.6023 14.54823V12.957923C104.6023 12.658235 104.5323 12.658235 104.0792 12.658235V12.406985C104.0792 12.406985 104.5813 12.434798 104.8742 12.434798C105.1323 12.434798 105.6135 12.41386 105.6763 12.406985Z"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-big-picture-3-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;4
</figcaption>
</figure>
</div>
<p>对角化 <img src="https://latex.codecogs.com/png.latex?C"> 的矩阵也同时对角化了 <img src="https://latex.codecogs.com/png.latex?K%5BC%5D"> 中的任意矩阵．若设这一对角化矩阵为 <img src="https://latex.codecogs.com/png.latex?F">，则 <img src="https://latex.codecogs.com/png.latex?A%20%5Cmapsto%20F%5E%7B-1%7D%20A%20F"> 便规定了一个 <img src="https://latex.codecogs.com/png.latex?K%5BC%5D%20%5Cto%20K%5B%5CLambda%5D"> 的代数同构．<img src="https://latex.codecogs.com/png.latex?K%5En"> 与 <img src="https://latex.codecogs.com/png.latex?K%5B%5CLambda%5D"> 的代数同构是平凡的．下面来建立 <img src="https://latex.codecogs.com/png.latex?K%5Bx%5D%20/%20m(x)"> 与 <img src="https://latex.codecogs.com/png.latex?K%5BC%5D"> 间的联系．</p>
</section>
<section id="section-1" class="level3 fragile">
<h3 class="fragile anchored" data-anchor-id="section-1"></h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-minpoly-iso" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 3</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?C"> 是域 <img src="https://latex.codecogs.com/png.latex?K"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 阶矩阵，<img src="https://latex.codecogs.com/png.latex?m(x)"> 是其最小多项式，则 <img src="https://latex.codecogs.com/png.latex?K%5Bx%5D%20/%20m(x)"> 与 <img src="https://latex.codecogs.com/png.latex?K%5BC%5D"> 代数同构．</p>
</div>
</div>
</div>
</div>
<p>仍然考察 <img src="https://latex.codecogs.com/png.latex?K%5Bx%5D%20%5Cto%20K%5BC%5D"> 自然的“代入” <img src="https://latex.codecogs.com/png.latex?%5Cpsi%20:%20f%20%5Cmapsto%20f(C)">．<img src="https://latex.codecogs.com/png.latex?C"> 的全体零化多项式恰为 <img src="https://latex.codecogs.com/png.latex?m(x)"> 生成的 <img src="https://latex.codecogs.com/png.latex?K%5Bx%5D"> 上的理想，因此 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BKer%7D%5Cpsi%20=%20(m(x))">．<img src="https://latex.codecogs.com/png.latex?%5Cpsi"> 的满射性平凡．用第一同构定理就得到结论．</p>
<div id="fig-dft-exist" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-dft-exist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="209.554pt" height="79.054pt" viewbox="0 -54.52 144.52 54.52">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M27.65435 45.35939C27.64435 45.38908 27.60435 45.46877 27.60435 45.49877C27.60435 45.50877 27.78373 45.64814 27.89341 45.72783L29.63654 47.07283C30.57279 47.76002 30.96154 47.79971 31.26029 47.82971C31.33998 47.83971 31.43966 47.84971 31.43966 48.02908C31.43966 48.06877 31.40966 48.13846 31.32998 48.13846C31.11091 48.13846 30.86185 48.10877 30.62279 48.10877C30.26404 48.10877 29.8756 48.13846 29.51716 48.13846C29.44716 48.13846 29.32779 48.13846 29.32779 47.93939C29.32779 47.86971 29.37748 47.83971 29.44716 47.82971C29.66654 47.80971 29.75623 47.76002 29.75623 47.62064C29.75623 47.44127 29.45716 47.21221 29.39748 47.16221L25.51279 44.17408L26.30966 47.37158C26.39904 47.73002 26.41904 47.82971 27.14623 47.82971C27.39529 47.82971 27.48498 47.82971 27.48498 48.02908C27.48498 48.11846 27.40529 48.13846 27.3456 48.13846C27.06654 48.13846 26.34935 48.10877 26.0706 48.10877C25.78154 48.10877 25.07435 48.13846 24.7856 48.13846C24.7156 48.13846 24.58623 48.13846 24.58623 47.94939C24.58623 47.82971 24.67591 47.82971 24.87498 47.82971C25.00466 47.82971 25.18404 47.81971 25.30341 47.80971C25.46279 47.79002 25.52248 47.76002 25.52248 47.65033C25.52248 47.61064 25.51279 47.58064 25.48279 47.46127L24.1481 42.111894C24.04841 41.723456 24.02841 41.643769 23.241539 41.643769C23.072164 41.643769 22.962476 41.643769 22.962476 41.454706C22.962476 41.335019 23.082164 41.335019 23.111851 41.335019C23.390914 41.335019 24.0981 41.365019 24.37716 41.365019C24.58623 41.365019 24.80529 41.355019 25.01466 41.355019C25.23373 41.355019 25.45279 41.335019 25.66216 41.335019C25.73185 41.335019 25.86123 41.335019 25.86123 41.534394C25.86123 41.643769 25.77154 41.643769 25.58248 41.643769C25.21373 41.643769 24.93498 41.643769 24.93498 41.823144C24.93498 41.892831 24.99466 42.111894 25.02466 42.261269C25.16404 42.77939 25.29341 43.30721 25.4231 43.82533L26.90716 44.98096L28.06279 42.301269C28.18216 42.032206 28.18216 42.012519 28.18216 41.952519C28.18216 41.653769 27.75404 41.643769 27.66435 41.643769C27.55466 41.643769 27.44498 41.643769 27.44498 41.444706C27.44498 41.335019 27.56466 41.335019 27.58466 41.335019C27.9831 41.335019 28.40154 41.365019 28.79998 41.365019C29.01904 41.365019 29.55685 41.335019 29.77591 41.335019C29.82591 41.335019 29.95529 41.335019 29.95529 41.534394C29.95529 41.643769 29.84591 41.643769 29.75623 41.643769C29.34779 41.653769 29.2181 41.743456 29.06873 42.092206L27.65435 45.35939Z"></path>
<path d="M34.298 38.84471V39.24314H33.33175V48.40752H34.298V48.80596H32.93331V38.84471H34.298Z"></path>
<path d="M37.85216 44.34346C37.91184 44.60221 38.14091 45.51877 38.83809 45.51877C38.88809 45.51877 39.12716 45.51877 39.33622 45.38908C39.05747 45.33939 38.85809 45.09033 38.85809 44.85127C38.85809 44.69189 38.96778 44.50283 39.23653 44.50283C39.45591 44.50283 39.77466 44.68189 39.77466 45.08033C39.77466 45.59846 39.18684 45.73783 38.84809 45.73783C38.27028 45.73783 37.92184 45.21002 37.80216 44.98096C37.55309 45.63814 37.01528 45.73783 36.72653 45.73783C35.69028 45.73783 35.122781 44.45283 35.122781 44.20377C35.122781 44.10439 35.222156 44.10439 35.242156 44.10439C35.321844 44.10439 35.351844 44.12408 35.371531 44.21377C35.71028 45.26971 36.36778 45.51877 36.70653 45.51877C36.89559 45.51877 37.24434 45.42908 37.24434 44.85127C37.24434 44.54252 37.07497 43.87502 36.70653 42.48064C36.54716 41.862831 36.19841 41.444706 35.76028 41.444706C35.70028 41.444706 35.471219 41.444706 35.262156 41.574081C35.511219 41.623769 35.73028 41.833144 35.73028 42.111894C35.73028 42.38096 35.511219 42.46064 35.361844 42.46064C35.062781 42.46064 34.813719 42.201581 34.813719 41.882831C34.813719 41.424706 35.311844 41.225331 35.75028 41.225331C36.40778 41.225331 36.76622 41.922831 36.79622 41.982519C36.91559 41.614081 37.27434 41.225331 37.87184 41.225331C38.89809 41.225331 39.46559 42.51033 39.46559 42.75939C39.46559 42.85908 39.37622 42.85908 39.34622 42.85908C39.25653 42.85908 39.23653 42.81939 39.21684 42.74939C38.88809 41.683769 38.21059 41.444706 37.89184 41.444706C37.50341 41.444706 37.34403 41.763456 37.34403 42.101894C37.34403 42.321269 37.40372 42.54033 37.51341 42.97877L37.85216 44.34346Z"></path>
<path d="M41.80275 48.80596H40.438058V48.40752H41.40431V39.24314H40.438058V38.84471H41.80275V48.80596Z"></path>
<path d="M122.75528 45.35939C122.74528 45.38908 122.70528 45.46877 122.70528 45.49877C122.70528 45.50877 122.88466 45.64814 122.99435 45.72783L124.73747 47.07283C125.67372 47.76002 126.06247 47.79971 126.36122 47.82971C126.44091 47.83971 126.5406 47.84971 126.5406 48.02908C126.5406 48.06877 126.5106 48.13846 126.43091 48.13846C126.21185 48.13846 125.96278 48.10877 125.72372 48.10877C125.36497 48.10877 124.97653 48.13846 124.6181 48.13846C124.5481 48.13846 124.42872 48.13846 124.42872 47.93939C124.42872 47.86971 124.47841 47.83971 124.5481 47.82971C124.76747 47.80971 124.85716 47.76002 124.85716 47.62064C124.85716 47.44127 124.5581 47.21221 124.49841 47.16221L120.61372 44.17408L121.4106 47.37158C121.49997 47.73002 121.51997 47.82971 122.24716 47.82971C122.49622 47.82971 122.58591 47.82971 122.58591 48.02908C122.58591 48.11846 122.50622 48.13846 122.44653 48.13846C122.16747 48.13846 121.45028 48.10877 121.17153 48.10877C120.88247 48.10877 120.17528 48.13846 119.88653 48.13846C119.81653 48.13846 119.68716 48.13846 119.68716 47.94939C119.68716 47.82971 119.77685 47.82971 119.97591 47.82971C120.1056 47.82971 120.28497 47.81971 120.40435 47.80971C120.56372 47.79002 120.62341 47.76002 120.62341 47.65033C120.62341 47.61064 120.61372 47.58064 120.58372 47.46127L119.24903 42.111894C119.14935 41.723456 119.12935 41.643769 118.342472 41.643769C118.173097 41.643769 118.063409 41.643769 118.063409 41.454706C118.063409 41.335019 118.183097 41.335019 118.212784 41.335019C118.491847 41.335019 119.19903 41.365019 119.4781 41.365019C119.68716 41.365019 119.90622 41.355019 120.1156 41.355019C120.33466 41.355019 120.55372 41.335019 120.7631 41.335019C120.83278 41.335019 120.96216 41.335019 120.96216 41.534394C120.96216 41.643769 120.87247 41.643769 120.68341 41.643769C120.31466 41.643769 120.03591 41.643769 120.03591 41.823144C120.03591 41.892831 120.0956 42.111894 120.1256 42.261269C120.26497 42.77939 120.39435 43.30721 120.52403 43.82533L122.0081 44.98096L123.16372 42.301269C123.2831 42.032206 123.2831 42.012519 123.2831 41.952519C123.2831 41.653769 122.85497 41.643769 122.76528 41.643769C122.6556 41.643769 122.54591 41.643769 122.54591 41.444706C122.54591 41.335019 122.6656 41.335019 122.6856 41.335019C123.08403 41.335019 123.50247 41.365019 123.90091 41.365019C124.11997 41.365019 124.65778 41.335019 124.87685 41.335019C124.92685 41.335019 125.05622 41.335019 125.05622 41.534394C125.05622 41.643769 124.94685 41.643769 124.85716 41.643769C124.44872 41.653769 124.31903 41.743456 124.16966 42.092206L122.75528 45.35939Z"></path>
<path d="M129.39901 38.84471V39.24314H128.43276V48.40752H129.39901V48.80596H128.03432V38.84471H129.39901Z"></path>
<path d="M137.19661 48.25814C137.19661 48.28783 137.17661 48.35783 137.08692 48.35783C137.05692 48.35783 137.04723 48.34783 136.93754 48.23814L136.24036 47.47127C136.15067 47.61064 135.69223 48.35783 134.58661 48.35783C132.36536 48.35783 130.124105 46.15627 130.124105 43.84533C130.124105 42.201581 131.29942 41.115956 132.82348 41.115956C133.69004 41.115956 134.44723 41.514394 134.97504 41.972519C135.90161 42.78939 136.07098 43.69596 136.07098 43.72564C136.07098 43.82533 135.97129 43.82533 135.95129 43.82533C135.8916 43.82533 135.84192 43.80533 135.82192 43.72564C135.73223 43.43689 135.50317 42.72971 134.81567 42.151894C134.12848 41.594081 133.50098 41.424706 132.98286 41.424706C132.08629 41.424706 131.03067 41.942519 131.03067 43.49658C131.03067 44.06439 131.23973 45.67814 132.23567 46.84346C132.84348 47.55096 133.77973 48.04877 134.66629 48.04877C135.68254 48.04877 136.27004 47.28189 136.27004 46.12627C136.27004 45.72783 136.24036 45.71783 136.24036 45.61846C136.24036 45.51877 136.34973 45.51877 136.38973 45.51877C136.51911 45.51877 136.51911 45.53877 136.56911 45.71783L137.19661 48.25814Z"></path>
<path d="M139.04279 48.80596H137.678101V48.40752H138.64435V39.24314H137.678101V38.84471H139.04279V48.80596Z"></path>
<path d="M9.36331 10.16439C9.35331 10.19408 9.31331 10.27376 9.31331 10.30376C9.31331 10.31376 9.49269 10.45314 9.60237 10.53283L11.3455 11.87782C12.28175 12.56501 12.6705 12.6047 12.96925 12.6347C13.04894 12.6447 13.14862 12.6547 13.14862 12.83408C13.14862 12.87376 13.11862 12.94345 13.03894 12.94345C12.81987 12.94345 12.57081 12.91376 12.33175 12.91376C11.973 12.91376 11.58456 12.94345 11.22612 12.94345C11.15612 12.94345 11.03675 12.94345 11.03675 12.74439C11.03675 12.6747 11.08644 12.6447 11.15612 12.6347C11.3755 12.6147 11.46519 12.56501 11.46519 12.42564C11.46519 12.24626 11.16612 12.0172 11.10644 11.9672L7.22175 8.97908L8.01862 12.17657C8.108 12.53501 8.128 12.6347 8.85519 12.6347C9.10425 12.6347 9.19394 12.6347 9.19394 12.83408C9.19394 12.92345 9.11425 12.94345 9.05456 12.94345C8.7755 12.94345 8.05831 12.91376 7.77956 12.91376C7.4905 12.91376 6.78331 12.94345 6.49456 12.94345C6.42456 12.94345 6.29519 12.94345 6.29519 12.75439C6.29519 12.6347 6.38487 12.6347 6.58394 12.6347C6.71362 12.6347 6.893 12.6247 7.01237 12.6147C7.17175 12.59501 7.23144 12.56501 7.23144 12.45532C7.23144 12.41564 7.22175 12.38564 7.19175 12.26626L5.85706 6.916888C5.75737 6.52845 5.73737 6.448763 4.950499 6.448763C4.781124 6.448763 4.671437 6.448763 4.671437 6.2597C4.671437 6.140013 4.791124 6.140013 4.820812 6.140013C5.099874 6.140013 5.80706 6.170012 6.08612 6.170012C6.29519 6.170012 6.51425 6.160012 6.72362 6.160012C6.94269 6.160012 7.16175 6.140013 7.37112 6.140013C7.44081 6.140013 7.57019 6.140013 7.57019 6.339388C7.57019 6.448763 7.4805 6.448763 7.29144 6.448763C6.92269 6.448763 6.64394 6.448763 6.64394 6.628138C6.64394 6.697825 6.70362 6.916888 6.73362 7.066262C6.873 7.58439 7.00237 8.1122 7.13206 8.63032L8.61612 9.78595L9.77175 7.106263C9.89112 6.8372 9.89112 6.817513 9.89112 6.757513C9.89112 6.458763 9.463 6.448763 9.37331 6.448763C9.26362 6.448763 9.15394 6.448763 9.15394 6.2497C9.15394 6.140013 9.27362 6.140013 9.29362 6.140013C9.69206 6.140013 10.1105 6.170012 10.50894 6.170012C10.728 6.170012 11.26581 6.140013 11.48487 6.140013C11.53487 6.140013 11.66425 6.140013 11.66425 6.339388C11.66425 6.448763 11.55487 6.448763 11.46519 6.448763C11.05675 6.458763 10.92706 6.54845 10.77769 6.8972L9.36331 10.16439Z"></path>
<path d="M16.00704 3.6497V4.04814H15.04079V13.21251H16.00704V13.61095H14.64235V3.6497H16.00704Z"></path>
<path d="M19.5612 9.14845C19.62088 9.4072 19.84995 10.32376 20.54713 10.32376C20.59713 10.32376 20.8362 10.32376 21.04526 10.19408C20.76651 10.14439 20.56713 9.89533 20.56713 9.65626C20.56713 9.49689 20.67682 9.30782 20.94557 9.30782C21.16494 9.30782 21.48369 9.48689 21.48369 9.88533C21.48369 10.40345 20.89588 10.54282 20.55713 10.54282C19.97932 10.54282 19.63088 10.01501 19.51119 9.78595C19.26213 10.44314 18.72432 10.54282 18.43557 10.54282C17.39932 10.54282 16.83182 9.25783 16.83182 9.00876C16.83182 8.90939 16.931195 8.90939 16.951195 8.90939C17.030883 8.90939 17.060883 8.92907 17.08057 9.01876C17.41932 10.0747 18.07682 10.32376 18.41557 10.32376C18.60463 10.32376 18.95338 10.23408 18.95338 9.65626C18.95338 9.34751 18.78401 8.68001 18.41557 7.28564C18.2562 6.667825 17.90745 6.2497 17.46932 6.2497C17.40932 6.2497 17.180258 6.2497 16.971195 6.379075C17.220258 6.428763 17.43932 6.638138 17.43932 6.916888C17.43932 7.18595 17.220258 7.26564 17.070883 7.26564C16.77182 7.26564 16.522758 7.006575 16.522758 6.687825C16.522758 6.2297 17.020883 6.030325 17.45932 6.030325C18.11682 6.030325 18.47526 6.727825 18.50526 6.787512C18.62463 6.419075 18.98338 6.030325 19.58088 6.030325C20.60713 6.030325 21.17463 7.31533 21.17463 7.56439C21.17463 7.66408 21.08526 7.66408 21.05526 7.66408C20.96557 7.66408 20.94557 7.62439 20.92588 7.55439C20.59713 6.488763 19.91963 6.2497 19.60088 6.2497C19.21245 6.2497 19.05307 6.56845 19.05307 6.906887C19.05307 7.126263 19.11276 7.34533 19.22245 7.78376L19.5612 9.14845Z"></path>
<path d="M23.51178 13.61095H22.147096V13.21251H23.11335V4.04814H22.147096V3.6497H23.51178V13.61095ZM29.05077 13.23251C29.10046 13.36189 29.10046 13.39189 29.10046 13.41157C29.10046 13.52126 29.01077 13.61095 28.90139 13.61095C28.76171 13.61095 28.72202 13.51126 28.69202 13.41157L25.29514 4.02814C25.24546 3.89876 25.24546 3.86876 25.24546 3.84907C25.24546 3.73939 25.33514 3.6497 25.44483 3.6497C25.58421 3.6497 25.62389 3.74939 25.65389 3.84907L29.05077 13.23251Z"></path>
<path d="M34.6173 3.74939C34.6173 3.77908 34.6173 3.79908 34.4479 3.96845C33.2029 5.22345 32.8841 7.106263 32.8841 8.63032C32.8841 10.36345 33.2626 12.09689 34.4879 13.34189C34.6173 13.46158 34.6173 13.48158 34.6173 13.51126C34.6173 13.58095 34.5773 13.61095 34.5176 13.61095C34.4179 13.61095 33.5216 12.93345 32.9338 11.66845C32.4257 10.57283 32.3063 9.4672 32.3063 8.63032C32.3063 7.85345 32.4157 6.648138 32.9638 5.522513C33.5613 4.2972 34.4179 3.6497 34.5176 3.6497C34.5773 3.6497 34.6173 3.6797 34.6173 3.74939Z"></path>
<path d="M36.088541 6.727825C36.058541 6.57845 35.998854 6.349075 35.998854 6.299388C35.998854 6.120012 36.138229 6.030325 36.28792 6.030325C36.40729 6.030325 36.58667 6.110012 36.65635 6.309388C36.66635 6.329388 36.78573 6.797512 36.84573 7.046575L37.06479 7.94314C37.12448 8.1622 37.18417 8.38126 37.23417 8.61032C37.27385 8.7797 37.35354 9.06876 37.36354 9.10845C37.51292 9.4172 38.04104 10.32376 38.98729 10.32376C39.43542 10.32376 39.5251 9.95501 39.5251 9.62658C39.5251 9.37751 39.45542 9.09845 39.37573 8.7997L39.09698 7.64408L38.8976 6.8872C38.85792 6.687825 38.76823 6.349075 38.76823 6.299388C38.76823 6.120012 38.9076 6.030325 39.05698 6.030325C39.36573 6.030325 39.42573 6.279388 39.50542 6.598138C39.64479 7.15595 40.01323 8.61032 40.10292 8.99876C40.13292 9.12845 40.66073 10.32376 41.74667 10.32376C42.17479 10.32376 42.28448 9.98501 42.28448 9.62658C42.28448 9.05876 41.86604 7.92314 41.66698 7.39501C41.57729 7.15595 41.53729 7.046575 41.53729 6.8472C41.53729 6.379075 41.88604 6.030325 42.35417 6.030325C43.29042 6.030325 43.65917 7.4847 43.65917 7.56439C43.65917 7.66408 43.56948 7.66408 43.53948 7.66408C43.43979 7.66408 43.43979 7.63408 43.3901 7.4847C43.24073 6.956887 42.92198 6.2497 42.37417 6.2497C42.20479 6.2497 42.1351 6.349075 42.1351 6.57845C42.1351 6.8272 42.22479 7.066262 42.31448 7.28564C42.50354 7.80345 42.92198 8.90939 42.92198 9.47689C42.92198 10.12439 42.52354 10.54282 41.77635 10.54282C41.02948 10.54282 40.52135 10.1047 40.1526 9.57657C40.14292 9.70626 40.11292 10.0447 39.83385 10.28376C39.5851 10.49314 39.26604 10.54282 39.01729 10.54282C38.12073 10.54282 37.6326 9.90533 37.46323 9.67626C37.41354 10.24407 36.9951 10.54282 36.54667 10.54282C36.088541 10.54282 35.899166 10.15439 35.809791 9.97501C35.630416 9.62658 35.500729 9.03876 35.500729 9.00876C35.500729 8.90939 35.600416 8.90939 35.620416 8.90939C35.720104 8.90939 35.730104 8.91907 35.789791 9.13845C35.959166 9.84564 36.158229 10.32376 36.51698 10.32376C36.67635 10.32376 36.82573 10.24407 36.82573 9.86564C36.82573 9.65626 36.79573 9.54689 36.66635 9.02876L36.088541 6.727825Z"></path>
<path d="M47.25623 3.74939C47.25623 3.77908 47.25623 3.79908 47.08685 3.96845C45.84185 5.22345 45.5231 7.106263 45.5231 8.63032C45.5231 10.36345 45.90154 12.09689 47.12685 13.34189C47.25623 13.46158 47.25623 13.48158 47.25623 13.51126C47.25623 13.58095 47.21623 13.61095 47.15654 13.61095C47.05685 13.61095 46.1606 12.93345 45.57279 11.66845C45.06466 10.57283 44.945289 9.4672 44.945289 8.63032C44.945289 7.85345 45.05466 6.648138 45.60279 5.522513C46.20029 4.2972 47.05685 3.6497 47.15654 3.6497C47.21623 3.6497 47.25623 3.6797 47.25623 3.74939Z"></path>
<path d="M51.16123 9.14845C51.22091 9.4072 51.44998 10.32376 52.14716 10.32376C52.19716 10.32376 52.43623 10.32376 52.64529 10.19408C52.36654 10.14439 52.16716 9.89533 52.16716 9.65626C52.16716 9.49689 52.27685 9.30782 52.5456 9.30782C52.76498 9.30782 53.08373 9.48689 53.08373 9.88533C53.08373 10.40345 52.49591 10.54282 52.15716 10.54282C51.57935 10.54282 51.23091 10.01501 51.11123 9.78595C50.86216 10.44314 50.32435 10.54282 50.0356 10.54282C48.99935 10.54282 48.431851 9.25783 48.431851 9.00876C48.431851 8.90939 48.531226 8.90939 48.551226 8.90939C48.630914 8.90939 48.660914 8.92907 48.680601 9.01876C49.01935 10.0747 49.67685 10.32376 50.0156 10.32376C50.20466 10.32376 50.55341 10.23408 50.55341 9.65626C50.55341 9.34751 50.38404 8.68001 50.0156 7.28564C49.85623 6.667825 49.50748 6.2497 49.06935 6.2497C49.00935 6.2497 48.780289 6.2497 48.571226 6.379075C48.820289 6.428763 49.03935 6.638138 49.03935 6.916888C49.03935 7.18595 48.820289 7.26564 48.670914 7.26564C48.371851 7.26564 48.122789 7.006575 48.122789 6.687825C48.122789 6.2297 48.620914 6.030325 49.05935 6.030325C49.71685 6.030325 50.07529 6.727825 50.10529 6.787512C50.22466 6.419075 50.58341 6.030325 51.18091 6.030325C52.20716 6.030325 52.77466 7.31533 52.77466 7.56439C52.77466 7.66408 52.68529 7.66408 52.65529 7.66408C52.5656 7.66408 52.5456 7.62439 52.52591 7.55439C52.19716 6.488763 51.51966 6.2497 51.20091 6.2497C50.81248 6.2497 50.6531 6.56845 50.6531 6.906887C50.6531 7.126263 50.71279 7.34533 50.82248 7.78376L51.16123 9.14845Z"></path>
<path d="M56.40576 8.63032C56.40576 9.4072 56.29638 10.61251 55.74826 11.73814C55.15076 12.96345 54.293882 13.61095 54.194507 13.61095C54.134507 13.61095 54.094819 13.57095 54.094819 13.51126C54.094819 13.48158 54.094819 13.46158 54.284194 13.2822C55.26013 12.29595 55.82794 10.7122 55.82794 8.63032C55.82794 6.926888 55.45951 5.173763 54.224194 3.91876C54.094819 3.79908 54.094819 3.77908 54.094819 3.74939C54.094819 3.6897 54.134507 3.6497 54.194507 3.6497C54.293882 3.6497 55.19044 4.3272 55.77826 5.5922C56.28638 6.687825 56.40576 7.79345 56.40576 8.63032ZM60.27123 8.63032C60.27123 9.4072 60.16185 10.61251 59.61373 11.73814C59.01623 12.96345 58.15935 13.61095 58.05998 13.61095C57.99998 13.61095 57.96029 13.57095 57.96029 13.51126C57.96029 13.48158 57.96029 13.46158 58.14966 13.2822C59.1256 12.29595 59.69341 10.7122 59.69341 8.63032C59.69341 6.926888 59.32498 5.173763 58.08966 3.91876C57.96029 3.79908 57.96029 3.77908 57.96029 3.74939C57.96029 3.6897 57.99998 3.6497 58.05998 3.6497C58.15935 3.6497 59.05591 4.3272 59.64373 5.5922C60.15185 6.687825 60.27123 7.79345 60.27123 8.63032Z"></path>
<path d="M47.4805 43.8242H112.793" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M110.92192 46.21488C111.30082 44.78129 112.144574 44.105509 112.99223 43.824259C112.144574 43.546915 111.30082 42.871134 110.92192 41.43363" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M81.37034 52.18017C81.39128 52.25017 81.39128 52.27799 81.39128 52.28486C81.39128 52.36861 81.30065 52.36861 81.27971 52.36861C81.17503 52.36861 81.17503 52.3408 81.14034 52.21517L80.00315 47.667362C79.43128 47.737362 79.1244 47.981424 79.1244 48.448612C79.1244 48.5533 79.1244 48.74861 79.47315 49.61361C79.52909 49.76705 79.57784 49.88549 79.57784 50.00424C79.57784 50.36674 79.27096 50.60392 78.91503 50.60392C78.217527 50.60392 77.903777 49.6483 77.903777 49.53674C77.903777 49.44611 78.001589 49.44611 78.022214 49.44611C78.120027 49.44611 78.126902 49.48111 78.147839 49.55767C78.315339 50.12955 78.62221 50.40861 78.89409 50.40861C79.01284 50.40861 79.06846 50.33205 79.06846 50.16455C79.06846 50.00424 79.01284 49.87174 78.93596 49.66236C78.58721 48.78361 78.58721 48.62299 78.58721 48.497362C78.58721 47.695487 79.43128 47.500174 79.9544 47.472049C79.90565 47.290799 79.64065 46.22361 79.64065 46.1958C79.64065 46.10517 79.7244 46.10517 79.75221 46.10517C79.84971 46.10517 79.86378 46.13986 79.89159 46.25142L80.19159 47.458299C80.46346 47.458299 81.10534 47.458299 81.83784 48.190487C82.02596 48.385799 82.2144 48.63017 82.34003 48.93705C82.43753 49.16705 82.58409 49.73892 82.58409 50.05986C82.58409 50.60392 82.25628 50.6108 82.23534 50.6108C82.05378 50.6108 81.85846 50.42267 81.85846 50.24111C81.85846 50.12267 81.92846 50.06674 81.95628 50.04611C82.06784 49.9483 82.23534 49.77392 82.23534 49.46705C82.23534 48.88111 81.43315 47.653612 80.24034 47.653612L81.37034 52.18017Z"></path>
<path d="M32.7852 34.9961V17.85938" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M35.17577 19.73048C33.742176 19.35548 33.062488 18.51173 32.785144 17.660168C32.507801 18.51173 31.828113 19.35548 30.39452 19.73048" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M56.9062 17.46094L112.8203 37.9258" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-dasharray="2.78941 1.59395"></path>
<path d="M110.238193 39.527324C111.085848 38.312485 112.113188 37.964828 113.007719 37.996077C112.304595 37.441389 111.746002 36.515612 111.882724 35.039046" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M82.18303 37.1841V37.4491H79.406783V37.1841H82.18303Z"></path>
<path d="M80.97535 36.11718C80.99629 36.18718 80.99629 36.215 80.99629 36.22187C80.99629 36.30562 80.90566 36.30562 80.88472 36.30562C80.78004 36.30562 80.78004 36.27781 80.74535 36.15218L79.60816 31.604372C79.03629 31.674372 78.72941 31.918434 78.72941 32.385622C78.72941 32.49031 78.72941 32.68562 79.07816 33.55062C79.1341 33.70406 79.18285 33.8225 79.18285 33.94125C79.18285 34.30375 78.87597 34.54093 78.52004 34.54093C77.822536 34.54093 77.508786 33.58531 77.508786 33.47375C77.508786 33.38312 77.606599 33.38312 77.627224 33.38312C77.725036 33.38312 77.731911 33.41812 77.752849 33.49468C77.920349 34.06656 78.22722 34.34562 78.4991 34.34562C78.61785 34.34562 78.67347 34.26906 78.67347 34.10156C78.67347 33.94125 78.61785 33.80875 78.54097 33.59937C78.19222 32.72062 78.19222 32.56 78.19222 32.434372C78.19222 31.632497 79.03629 31.437184 79.55941 31.409059C79.51066 31.227809 79.24566 30.16062 79.24566 30.13281C79.24566 30.04218 79.32941 30.04218 79.35722 30.04218C79.45472 30.04218 79.46879 30.07687 79.4966 30.18843L79.7966 31.395309C80.06847 31.395309 80.71035 31.395309 81.44285 32.127497C81.63097 32.322809 81.81941 32.56718 81.94504 32.87406C82.04254 33.10406 82.1891 33.67593 82.1891 33.99687C82.1891 34.54093 81.86129 34.54781 81.84035 34.54781C81.65879 34.54781 81.46347 34.35968 81.46347 34.17812C81.46347 34.05968 81.53347 34.00375 81.56129 33.98312C81.67285 33.88531 81.84035 33.71093 81.84035 33.40406C81.84035 32.81812 81.03816 31.590622 79.84535 31.590622L80.97535 36.11718Z"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-dft-exist-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;5: 命题&nbsp;3 证明示意图
</figcaption>
</figure>
</div>
</section>
<section id="友矩阵" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="友矩阵">友矩阵</h3>
<p>为显式刻画上述对角化过程，我们选取一类特殊的矩阵<sup>2</sup>作为 <img src="https://latex.codecogs.com/png.latex?C"> 进行研究： <img src="https://latex.codecogs.com/png.latex?%0AC%20=%0A%5Cbegin%7Bpmatrix%7D%0A0%20&amp;%201%20&amp;%200%20&amp;%5Cldots%20&amp;%200%5C%5C%0A0%20&amp;%200%20&amp;%201%20&amp;%5Cldots%20&amp;%200%20%5C%5C%0A0%20&amp;%200%20&amp;%200%20&amp;%5Cldots%20&amp;%200%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;1%5C%5C%0A-c_0%20&amp;%20-c_1%20&amp;%20-c_2%20&amp;%20%5Cldots%20&amp;%20-c_%7Bn-1%7D%0A%5Cend%7Bpmatrix%7D%0A"> <img src="https://latex.codecogs.com/png.latex?C"> 被称为首一多项式 <img src="https://latex.codecogs.com/png.latex?m(x)%20=%20c%5En%20+%20a_%7Bn-1%7D%20c%5E%7Bn-1%7D%20+%20%5Cdots%20+%20c_0"> 的<em>友矩阵</em>（companion matrix）．</p>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;这类矩阵在高阶常系数线性 ODE 和常系数齐次线性递推中也有重要应用．</p></div></div><ul>
<li><p>直接计算，<img src="https://latex.codecogs.com/png.latex?C"> 的特征多项式恰为 <img src="https://latex.codecogs.com/png.latex?m(x)">．</p></li>
<li><p>直接验证，<img src="https://latex.codecogs.com/png.latex?(1,%5Clambda,%5Cdots,%5Clambda%5E%7Bn-1%7D)%5E%5Cmathrm%7BT%7D"> 是其特征值 <img src="https://latex.codecogs.com/png.latex?%5Clambda"> 的一个特征向量．</p></li>
</ul>
</section>
<section id="友矩阵的最小多项式" class="level3">
<h3 class="anchored" data-anchor-id="友矩阵的最小多项式">友矩阵的最小多项式</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-companion-minimal-polynomial" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 4</strong></span> <img src="https://latex.codecogs.com/png.latex?C"> 的最小多项式也恰为 <img src="https://latex.codecogs.com/png.latex?m(x)">．等价地，友矩阵的特征多项式与最小多项式相同．</p>
</div>
</div>
</div>
</div>
<p>等价地，我们研究 <img src="https://latex.codecogs.com/png.latex?C%5E%5Cmathrm%7BT%7D"> 的最小多项式．注意到如下事实： <img src="https://latex.codecogs.com/png.latex?%0AC%5E%5Cmathrm%7BT%7D%5Cboldsymbol%20e_i%20=%20%5Cbegin%7Bcases%7D%0A%5Cboldsymbol%20e_%7Bi+1%7D%20&amp;%20i=0,1,%5Cdots,n-2%20%5C%5C%0A-%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20c_k%20%5Cboldsymbol%20e_k%20&amp;%20i=n-1%0A%5Cend%7Bcases%7D%0A"> 考察不超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式 <img src="https://latex.codecogs.com/png.latex?f(x)">．假若 <img src="https://latex.codecogs.com/png.latex?f(C%5E%5Cmathrm%7BT%7D)%20=%200">，则 <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%200%20=%20f(C%5E%5Cmathrm%7BT%7D)%20%5Cboldsymbol%20e_0%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20c_k%20(C%5E%5Cmathrm%7BT%7D)%5Ek%20%5Cboldsymbol%20e_0%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20c_k%20%5Cboldsymbol%20e_k%0A"> 因此 <img src="https://latex.codecogs.com/png.latex?c_k%20=%200"> 对所有 <img src="https://latex.codecogs.com/png.latex?k"> 成立，即 <img src="https://latex.codecogs.com/png.latex?f%20=%200">．这说明 <img src="https://latex.codecogs.com/png.latex?C%5E%5Cmathrm%7BT%7D"> 的零化多项式次数至少为 <img src="https://latex.codecogs.com/png.latex?n">．再用零化多项式和最小多项式的整除关系就得到结论．</p>
</section>
<section id="section-2" class="level3">
<h3 class="anchored" data-anchor-id="section-2"></h3>
<p>上述命题的逆命题在相似意义下成立．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-coincide-similar" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 5</strong></span> 若矩阵的特征多项式与最小多项式相同，则它与其特征多项式对应的友矩阵相似．</p>
</div>
</div>
</div>
</div>
<p>可在 Jordan 标准型下理解．此时每个特征值对应的 Jordan 块有且只有一个．</p>
<p>当友矩阵 <img src="https://latex.codecogs.com/png.latex?C"> 可对角化时，其可分解为不同一次因式的乘积．又其最小多项式与特征多项式相同，故其必有 <img src="https://latex.codecogs.com/png.latex?n"> 个两两不同的特征值 <img src="https://latex.codecogs.com/png.latex?%5Clambda_0,%5Clambda_1,%5Cdots,%5Clambda_%7Bn-1%7D">．结合上述命题可以看到，我们特殊地取 <img src="https://latex.codecogs.com/png.latex?C"> 为友矩阵做研究是不失一般性的．</p>
</section>
<section id="友矩阵对角化的显式表达" class="level3">
<h3 class="anchored" data-anchor-id="友矩阵对角化的显式表达">友矩阵对角化的显式表达</h3>
<p>前面已经得到友矩阵特征向量的形式，因此 Vandermonde 矩阵 <img src="https://latex.codecogs.com/png.latex?%0AF%20=%20%5Cbegin%7Bpmatrix%7D%0A1%20&amp;%201%20&amp;%20%5Cdots%20&amp;%201%20%5C%5C%0A%5Clambda_0%20&amp;%20%5Clambda_1%20&amp;%20%5Cdots%20&amp;%20%5Clambda_%7Bn-1%7D%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A%5Clambda_0%5E%7Bn-1%7D%20&amp;%20%5Clambda_1%5E%7Bn-1%7D%20&amp;%20%5Cdots%20&amp;%20%5Clambda_%7Bn-1%7D%5E%7Bn-1%7D%0A%5Cend%7Bpmatrix%7D%0A"> 正是将 <img src="https://latex.codecogs.com/png.latex?C"> 对角化的矩阵． <img src="https://latex.codecogs.com/png.latex?%0AF%5E%7B-1%7D%20C%20F%20=%20%5CLambda%20=%20%5Coperatorname%7Bdiag%7D(%5Clambda_0,%5Clambda_1,%5Cdots,%5Clambda_%7Bn-1%7D)%0A"> 注意到 <img src="https://latex.codecogs.com/png.latex?K%5BC%5D"> 也被对角化 <img src="https://latex.codecogs.com/png.latex?C"> 的矩阵同时对角化，故 <img src="https://latex.codecogs.com/png.latex?A%20%5Cmapsto%20F%5E%7B-1%7D%20A%20F"> 确为 <img src="https://latex.codecogs.com/png.latex?K%5BC%5D%20%5Cto%20K%5B%5CLambda%5D"> 的代数同构，与先前的关于对角化的讨论结果一致．</p>
</section>
<section id="循环矩阵的对角化" class="level3">
<h3 class="anchored" data-anchor-id="循环矩阵的对角化">循环矩阵的对角化</h3>
<p>特别地，若取 <img src="https://latex.codecogs.com/png.latex?%0AC%20=%0A%5Cbegin%7Bpmatrix%7D%0A0%20&amp;%201%20&amp;%200%20&amp;%5Cldots%20&amp;%200%5C%5C%0A0%20&amp;%200%20&amp;%201%20&amp;%5Cldots%20&amp;%200%20%5C%5C%0A0%20&amp;%200%20&amp;%200%20&amp;%5Cldots%20&amp;%200%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;1%5C%5C%0A1%20&amp;%200%20&amp;%200%20&amp;%20%5Cldots%20&amp;%200%0A%5Cend%7Bpmatrix%7D%0A"> 它是基本循环矩阵，对应最小多项式 <img src="https://latex.codecogs.com/png.latex?m(x)%20=%20x%5En%20-%201">．<img src="https://latex.codecogs.com/png.latex?C"> 生成的代数 <img src="https://latex.codecogs.com/png.latex?K%5BC%5D"> 即 <img src="https://latex.codecogs.com/png.latex?K%5E%7Bn%20%5Ctimes%20n%7D"> 上的全体循环矩阵．此时 DFT 体现为利用 DFT 矩阵 <img src="https://latex.codecogs.com/png.latex?%0AF%20=%20%5Cbegin%7Bpmatrix%7D%0A1%20&amp;%201%20&amp;%20%5Cdots%20&amp;%201%20%5C%5C%0A1%20&amp;%20%5Comega_n%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A1%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B(n-1)(n-1)%7D%0A%5Cend%7Bpmatrix%7D%0A"> 对循环矩阵进行对角化的过程．</p>
</section>
<section id="结语" class="level3 fragile">
<h3 class="fragile anchored" data-anchor-id="结语">结语</h3>
<p>以刻画 DFT 的卷积性质为目标，以代数同构为构造手段，我们为理解 DFT 的代数含义提供了两个视角：</p>
<ul>
<li>DFT 是多项式商环上的多点求值插值</li>
<li>DFT 是矩阵代数上的相似对角化</li>
</ul>
<p>可见 DFT 背后的代数理论非常丰富，不失为联系起本科阶段代数课程的有趣实例，亦体现出代数工具与视角在工程实践中的强大效用．</p>
<div id="fig-big-picture-final" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-big-picture-final-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="231.333pt" height="101.8625pt" viewbox="0 -70.25 159.54 70.25">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M9.36233 45.36037C9.35233 45.39006 9.31233 45.46975 9.31233 45.49975C9.31233 45.50975 9.49171 45.64912 9.60139 45.72881L11.34452 47.07381C12.28077 47.761 12.66952 47.80069 12.96827 47.83069C13.04796 47.84069 13.14764 47.85069 13.14764 48.03006C13.14764 48.06975 13.11764 48.13944 13.03796 48.13944C12.81889 48.13944 12.56983 48.10975 12.33077 48.10975C11.97202 48.10975 11.58358 48.13944 11.22514 48.13944C11.15514 48.13944 11.03577 48.13944 11.03577 47.94037C11.03577 47.87069 11.08546 47.84069 11.15514 47.83069C11.37452 47.81069 11.46421 47.761 11.46421 47.62162C11.46421 47.44225 11.16514 47.21319 11.10546 47.16319L7.22077 44.17506L8.01764 47.37256C8.10702 47.731 8.12702 47.83069 8.85421 47.83069C9.10327 47.83069 9.19296 47.83069 9.19296 48.03006C9.19296 48.11944 9.11327 48.13944 9.05358 48.13944C8.77452 48.13944 8.05733 48.10975 7.77858 48.10975C7.48952 48.10975 6.78233 48.13944 6.49358 48.13944C6.42358 48.13944 6.29421 48.13944 6.29421 47.95037C6.29421 47.83069 6.38389 47.83069 6.58296 47.83069C6.71264 47.83069 6.89202 47.82069 7.01139 47.81069C7.17077 47.791 7.23046 47.761 7.23046 47.65131C7.23046 47.61162 7.22077 47.58162 7.19077 47.46225L5.85608 42.112874C5.75639 41.724436 5.73639 41.644749 4.949519 41.644749C4.780144 41.644749 4.670457 41.644749 4.670457 41.455686C4.670457 41.335999 4.790144 41.335999 4.819832 41.335999C5.098894 41.335999 5.80608 41.365999 6.08514 41.365999C6.29421 41.365999 6.51327 41.355999 6.72264 41.355999C6.94171 41.355999 7.16077 41.335999 7.37014 41.335999C7.43983 41.335999 7.56921 41.335999 7.56921 41.535374C7.56921 41.644749 7.47952 41.644749 7.29046 41.644749C6.92171 41.644749 6.64296 41.644749 6.64296 41.824124C6.64296 41.893811 6.70264 42.112874 6.73264 42.262249C6.87202 42.78037 7.00139 43.30819 7.13108 43.82631L8.61514 44.98194L9.77077 42.302249C9.89014 42.033186 9.89014 42.013499 9.89014 41.953499C9.89014 41.654749 9.46202 41.644749 9.37233 41.644749C9.26264 41.644749 9.15296 41.644749 9.15296 41.445686C9.15296 41.335999 9.27264 41.335999 9.29264 41.335999C9.69108 41.335999 10.10952 41.365999 10.50796 41.365999C10.72702 41.365999 11.26483 41.335999 11.48389 41.335999C11.53389 41.335999 11.66327 41.335999 11.66327 41.535374C11.66327 41.644749 11.55389 41.644749 11.46421 41.644749C11.05577 41.654749 10.92608 41.744436 10.77671 42.093186L9.36233 45.36037Z"></path>
<path d="M16.00598 38.84569V39.24412H15.03973V48.4085H16.00598V48.80694H14.64129V38.84569H16.00598Z"></path>
<path d="M19.56119 44.34444C19.62088 44.60319 19.84995 45.51975 20.54713 45.51975C20.59713 45.51975 20.83619 45.51975 21.04526 45.39006C20.76651 45.34037 20.56713 45.09131 20.56713 44.85225C20.56713 44.69287 20.67682 44.50381 20.94557 44.50381C21.16494 44.50381 21.48369 44.68287 21.48369 45.08131C21.48369 45.59944 20.89588 45.73881 20.55713 45.73881C19.97932 45.73881 19.63088 45.211 19.51119 44.98194C19.26213 45.63912 18.72432 45.73881 18.43557 45.73881C17.39932 45.73881 16.83182 44.45381 16.83182 44.20475C16.83182 44.10537 16.931195 44.10537 16.951195 44.10537C17.030883 44.10537 17.060883 44.12506 17.08057 44.21475C17.41932 45.27069 18.07682 45.51975 18.41557 45.51975C18.60463 45.51975 18.95338 45.43006 18.95338 44.85225C18.95338 44.5435 18.78401 43.876 18.41557 42.48162C18.2562 41.863811 17.90744 41.445686 17.46932 41.445686C17.40932 41.445686 17.180258 41.445686 16.971195 41.575061C17.220257 41.624749 17.43932 41.834124 17.43932 42.112874C17.43932 42.38194 17.220257 42.46162 17.070883 42.46162C16.77182 42.46162 16.522758 42.202561 16.522758 41.883811C16.522758 41.425686 17.020883 41.226311 17.45932 41.226311C18.11682 41.226311 18.47526 41.923811 18.50526 41.983499C18.62463 41.615061 18.98338 41.226311 19.58088 41.226311C20.60713 41.226311 21.17463 42.51131 21.17463 42.76037C21.17463 42.86006 21.08526 42.86006 21.05526 42.86006C20.96557 42.86006 20.94557 42.82037 20.92588 42.75037C20.59713 41.684749 19.91963 41.445686 19.60088 41.445686C19.21245 41.445686 19.05307 41.764436 19.05307 42.102874C19.05307 42.322249 19.11276 42.54131 19.22245 42.97975L19.56119 44.34444Z"></path>
<path d="M23.51178 48.80694H22.147096V48.4085H23.11335V39.24412H22.147096V38.84569H23.51178V48.80694ZM29.05077 48.4285C29.10046 48.55787 29.10046 48.58787 29.10046 48.60756C29.10046 48.71725 29.01077 48.80694 28.90139 48.80694C28.76171 48.80694 28.72202 48.70725 28.69202 48.60756L25.29514 39.22412C25.24546 39.09475 25.24546 39.06475 25.24546 39.04506C25.24546 38.93537 25.33514 38.84569 25.44483 38.84569C25.58421 38.84569 25.62389 38.94537 25.65389 39.04506L29.05077 48.4285ZM32.9661 38.94537C32.9661 38.97506 32.9661 38.99506 32.7967 39.16444C31.55171 40.419436 31.23296 42.302249 31.23296 43.82631C31.23296 45.55944 31.61139 47.29287 32.8367 48.53787C32.9661 48.65756 32.9661 48.67756 32.9661 48.70725C32.9661 48.77694 32.9261 48.80694 32.8664 48.80694C32.7667 48.80694 31.87046 48.12944 31.28264 46.86444C30.77452 45.76881 30.65514 44.66319 30.65514 43.82631C30.65514 43.04944 30.76452 41.844124 31.31264 40.718499C31.91014 39.49319 32.7667 38.84569 32.8664 38.84569C32.9261 38.84569 32.9661 38.87569 32.9661 38.94537Z"></path>
<path d="M34.427558 41.923811C34.397558 41.774436 34.337871 41.545061 34.337871 41.495374C34.337871 41.315999 34.477246 41.226311 34.62693 41.226311C34.74631 41.226311 34.92568 41.305999 34.99537 41.505374C35.00537 41.525374 35.12475 41.993499 35.18475 42.242561L35.40381 43.13912C35.4635 43.35819 35.52318 43.57725 35.57318 43.80631C35.61287 43.97569 35.69256 44.26475 35.70256 44.30444C35.85193 44.61319 36.38006 45.51975 37.32631 45.51975C37.77443 45.51975 37.86412 45.151 37.86412 44.82256C37.86412 44.5735 37.79443 44.29444 37.71475 43.99569L37.436 42.84006L37.23662 42.083186C37.19693 41.883811 37.10725 41.545061 37.10725 41.495374C37.10725 41.315999 37.24662 41.226311 37.396 41.226311C37.70475 41.226311 37.76475 41.475374 37.84443 41.794124C37.98381 42.35194 38.35225 43.80631 38.44193 44.19475C38.47193 44.32444 38.99975 45.51975 40.08568 45.51975C40.51381 45.51975 40.6235 45.181 40.6235 44.82256C40.6235 44.25475 40.20506 43.11912 40.006 42.591C39.91631 42.35194 39.87631 42.242561 39.87631 42.043186C39.87631 41.575061 40.22506 41.226311 40.69318 41.226311C41.62943 41.226311 41.99818 42.68069 41.99818 42.76037C41.99818 42.86006 41.9085 42.86006 41.8785 42.86006C41.77881 42.86006 41.77881 42.83006 41.72912 42.68069C41.57975 42.152874 41.261 41.445686 40.71318 41.445686C40.54381 41.445686 40.47412 41.545061 40.47412 41.774436C40.47412 42.023186 40.56381 42.262249 40.6535 42.48162C40.84256 42.99944 41.261 44.10537 41.261 44.67287C41.261 45.32037 40.86256 45.73881 40.11537 45.73881C39.3685 45.73881 38.86037 45.30069 38.49162 44.77256C38.48193 44.90225 38.45193 45.24069 38.17287 45.47975C37.92412 45.68912 37.60506 45.73881 37.35631 45.73881C36.45975 45.73881 35.97162 45.10131 35.80225 44.87225C35.75256 45.44006 35.33412 45.73881 34.88568 45.73881C34.427558 45.73881 34.238183 45.35037 34.148808 45.171C33.969433 44.82256 33.839746 44.23475 33.839746 44.20475C33.839746 44.10537 33.939433 44.10537 33.959433 44.10537C34.059121 44.10537 34.069121 44.11506 34.128808 44.33444C34.298183 45.04162 34.497246 45.51975 34.856 45.51975C35.01537 45.51975 35.16475 45.44006 35.16475 45.06162C35.16475 44.85225 35.13475 44.74287 35.00537 44.22475L34.427558 41.923811Z"></path>
<path d="M45.59517 38.94537C45.59517 38.97506 45.59517 38.99506 45.42579 39.16444C44.18079 40.419436 43.86204 42.302249 43.86204 43.82631C43.86204 45.55944 44.24048 47.29287 45.46579 48.53787C45.59517 48.65756 45.59517 48.67756 45.59517 48.70725C45.59517 48.77694 45.55516 48.80694 45.49548 48.80694C45.39579 48.80694 44.49954 48.12944 43.91173 46.86444C43.4036 45.76881 43.284228 44.66319 43.284228 43.82631C43.284228 43.04944 43.3936 41.844124 43.94173 40.718499C44.53923 39.49319 45.39579 38.84569 45.49548 38.84569C45.55516 38.84569 45.59517 38.87569 45.59517 38.94537Z"></path>
<path d="M49.49919 44.34444C49.55887 44.60319 49.78794 45.51975 50.48512 45.51975C50.53512 45.51975 50.77419 45.51975 50.98325 45.39006C50.7045 45.34037 50.50512 45.09131 50.50512 44.85225C50.50512 44.69287 50.61481 44.50381 50.88356 44.50381C51.10293 44.50381 51.42169 44.68287 51.42169 45.08131C51.42169 45.59944 50.83387 45.73881 50.49512 45.73881C49.91731 45.73881 49.56887 45.211 49.44918 44.98194C49.20012 45.63912 48.66231 45.73881 48.37356 45.73881C47.33731 45.73881 46.76981 44.45381 46.76981 44.20475C46.76981 44.10537 46.869185 44.10537 46.889185 44.10537C46.968873 44.10537 46.998873 44.12506 47.01856 44.21475C47.35731 45.27069 48.01481 45.51975 48.35356 45.51975C48.54262 45.51975 48.89137 45.43006 48.89137 44.85225C48.89137 44.5435 48.722 43.876 48.35356 42.48162C48.19419 41.863811 47.84544 41.445686 47.40731 41.445686C47.34731 41.445686 47.118248 41.445686 46.909185 41.575061C47.158248 41.624749 47.37731 41.834124 47.37731 42.112874C47.37731 42.38194 47.158248 42.46162 47.008873 42.46162C46.70981 42.46162 46.460748 42.202561 46.460748 41.883811C46.460748 41.425686 46.958873 41.226311 47.39731 41.226311C48.05481 41.226311 48.41325 41.923811 48.44325 41.983499C48.56262 41.615061 48.92137 41.226311 49.51887 41.226311C50.54512 41.226311 51.11262 42.51131 51.11262 42.76037C51.11262 42.86006 51.02325 42.86006 50.99325 42.86006C50.90356 42.86006 50.88356 42.82037 50.86387 42.75037C50.53512 41.684749 49.85762 41.445686 49.53887 41.445686C49.15044 41.445686 48.99106 41.764436 48.99106 42.102874C48.99106 42.322249 49.05075 42.54131 49.16044 42.97975L49.49919 44.34444Z"></path>
<path d="M54.74477 43.82631C54.74477 44.60319 54.6354 45.8085 54.08727 46.93412C53.48977 48.15944 52.632899 48.80694 52.533524 48.80694C52.473524 48.80694 52.433836 48.76694 52.433836 48.70725C52.433836 48.67756 52.433836 48.65756 52.623211 48.47819C53.59915 47.49194 54.16696 45.90819 54.16696 43.82631C54.16696 42.122874 53.79852 40.369749 52.563211 39.11475C52.433836 38.99506 52.433836 38.97506 52.433836 38.94537C52.433836 38.88569 52.473524 38.84569 52.533524 38.84569C52.632899 38.84569 53.52946 39.52319 54.11727 40.788186C54.6254 41.883811 54.74477 42.98944 54.74477 43.82631ZM58.61024 43.82631C58.61024 44.60319 58.50087 45.8085 57.95274 46.93412C57.35524 48.15944 56.49837 48.80694 56.39899 48.80694C56.33899 48.80694 56.29931 48.76694 56.29931 48.70725C56.29931 48.67756 56.29931 48.65756 56.48868 48.47819C57.46462 47.49194 58.03243 45.90819 58.03243 43.82631C58.03243 42.122874 57.66399 40.369749 56.42868 39.11475C56.29931 38.99506 56.29931 38.97506 56.29931 38.94537C56.29931 38.88569 56.33899 38.84569 56.39899 38.84569C56.49837 38.84569 57.39493 39.52319 57.98274 40.788186C58.49087 41.883811 58.61024 42.98944 58.61024 43.82631Z"></path>
<path d="M124.60931 45.36037C124.59931 45.39006 124.55931 45.46975 124.55931 45.49975C124.55931 45.50975 124.73869 45.64912 124.84838 45.72881L126.5915 47.07381C127.52775 47.761 127.9165 47.80069 128.21525 47.83069C128.29494 47.84069 128.39463 47.85069 128.39463 48.03006C128.39463 48.06975 128.36463 48.13944 128.28494 48.13944C128.06588 48.13944 127.81681 48.10975 127.57775 48.10975C127.219 48.10975 126.83056 48.13944 126.47213 48.13944C126.40213 48.13944 126.28275 48.13944 126.28275 47.94037C126.28275 47.87069 126.33244 47.84069 126.40213 47.83069C126.6215 47.81069 126.71119 47.761 126.71119 47.62162C126.71119 47.44225 126.41213 47.21319 126.35244 47.16319L122.46775 44.17506L123.26463 47.37256C123.354 47.731 123.374 47.83069 124.10119 47.83069C124.35025 47.83069 124.43994 47.83069 124.43994 48.03006C124.43994 48.11944 124.36025 48.13944 124.30056 48.13944C124.0215 48.13944 123.30431 48.10975 123.02556 48.10975C122.7365 48.10975 122.02931 48.13944 121.74056 48.13944C121.67056 48.13944 121.54119 48.13944 121.54119 47.95037C121.54119 47.83069 121.63088 47.83069 121.82994 47.83069C121.95963 47.83069 122.139 47.82069 122.25838 47.81069C122.41775 47.791 122.47744 47.761 122.47744 47.65131C122.47744 47.61162 122.46775 47.58162 122.43775 47.46225L121.10306 42.112874C121.00338 41.724436 120.98338 41.644749 120.196501 41.644749C120.027126 41.644749 119.917439 41.644749 119.917439 41.455686C119.917439 41.335999 120.037126 41.335999 120.066814 41.335999C120.345876 41.335999 121.05306 41.365999 121.33213 41.365999C121.54119 41.365999 121.76025 41.355999 121.96963 41.355999C122.18869 41.355999 122.40775 41.335999 122.61713 41.335999C122.68681 41.335999 122.81619 41.335999 122.81619 41.535374C122.81619 41.644749 122.7265 41.644749 122.53744 41.644749C122.16869 41.644749 121.88994 41.644749 121.88994 41.824124C121.88994 41.893811 121.94963 42.112874 121.97963 42.262249C122.119 42.78037 122.24838 43.30819 122.37806 43.82631L123.86213 44.98194L125.01775 42.302249C125.13713 42.033186 125.13713 42.013499 125.13713 41.953499C125.13713 41.654749 124.709 41.644749 124.61931 41.644749C124.50963 41.644749 124.39994 41.644749 124.39994 41.445686C124.39994 41.335999 124.51963 41.335999 124.53963 41.335999C124.93806 41.335999 125.3565 41.365999 125.75494 41.365999C125.974 41.365999 126.51181 41.335999 126.73088 41.335999C126.78088 41.335999 126.91025 41.335999 126.91025 41.535374C126.91025 41.644749 126.80088 41.644749 126.71119 41.644749C126.30275 41.654749 126.17306 41.744436 126.02369 42.093186L124.60931 45.36037Z"></path>
<path d="M129.563974 45.390339C129.536162 45.299714 129.494287 45.125339 129.494287 45.104402C129.494287 44.950964 129.619912 44.881277 129.73147 44.881277C129.85679 44.881277 129.96866 44.971902 130.00335 45.034714C130.03835 45.097527 130.09397 45.320652 130.12897 45.467214C130.16397 45.599714 130.24054 45.920339 130.28241 46.09471C130.32429 46.24846 130.36616 46.4019 130.40085 46.56221C130.47772 46.84815 130.49179 46.90409 130.69397 47.19003C130.88929 47.46909 131.2171 47.83159 131.74022 47.83159C132.1446 47.83159 132.15179 47.47596 132.15179 47.34346C132.15179 46.92503 131.85179 46.15065 131.74022 45.857839C131.66335 45.662527 131.63554 45.599714 131.63554 45.480964C131.63554 45.111277 131.94241 44.881277 132.29804 44.881277C132.99554 44.881277 133.30272 45.843777 133.30272 45.948464C133.30272 46.03909 133.21179 46.03909 133.19085 46.03909C133.09335 46.03909 133.08647 45.99721 133.05835 45.920339C132.89804 45.362527 132.59804 45.076589 132.31897 45.076589C132.17272 45.076589 132.1446 45.174089 132.1446 45.320652C132.1446 45.480964 132.1796 45.571589 132.30522 45.885652C132.38897 46.1019 132.67491 46.84128 132.67491 47.2319C132.67491 47.90846 132.13772 48.0269 131.76804 48.0269C131.18929 48.0269 130.79866 47.67128 130.58929 47.39221C130.54054 47.87346 130.12897 48.0269 129.84304 48.0269C129.543037 48.0269 129.382724 47.81065 129.292099 47.65034C129.138662 47.39221 129.040849 46.99471 129.040849 46.95971C129.040849 46.86909 129.138662 46.86909 129.159287 46.86909C129.257099 46.86909 129.263974 46.89003 129.313037 47.07846C129.417412 47.48971 129.549912 47.83159 129.8221 47.83159C130.00335 47.83159 130.0521 47.67815 130.0521 47.48971C130.0521 47.35721 129.9896 47.0994 129.94054 46.91096C129.89179 46.72253 129.8221 46.43659 129.7871 46.28315L129.563974 45.390339Z"></path>
<path d="M25.75332 10.16537C25.74332 10.19506 25.70332 10.27474 25.70332 10.30474C25.70332 10.31474 25.8827 10.45412 25.99239 10.53381L27.73551 11.8788C28.67176 12.56599 29.06051 12.60568 29.35926 12.63568C29.43895 12.64568 29.53864 12.65568 29.53864 12.83506C29.53864 12.87474 29.50864 12.94443 29.42895 12.94443C29.20989 12.94443 28.96082 12.91474 28.72176 12.91474C28.36301 12.91474 27.97457 12.94443 27.61614 12.94443C27.54614 12.94443 27.42676 12.94443 27.42676 12.74537C27.42676 12.67568 27.47645 12.64568 27.54614 12.63568C27.76551 12.61568 27.8552 12.56599 27.8552 12.42662C27.8552 12.24724 27.55614 12.01818 27.49645 11.96818L23.61176 8.98006L24.40864 12.17755C24.49801 12.53599 24.51801 12.63568 25.2452 12.63568C25.49426 12.63568 25.58395 12.63568 25.58395 12.83506C25.58395 12.92443 25.50426 12.94443 25.44457 12.94443C25.16551 12.94443 24.44832 12.91474 24.16957 12.91474C23.88051 12.91474 23.17332 12.94443 22.88457 12.94443C22.81457 12.94443 22.6852 12.94443 22.6852 12.75537C22.6852 12.63568 22.77489 12.63568 22.97395 12.63568C23.10364 12.63568 23.28301 12.62568 23.40239 12.61568C23.56176 12.59599 23.62145 12.56599 23.62145 12.4563C23.62145 12.41662 23.61176 12.38662 23.58176 12.26724L22.24707 6.917868C22.14739 6.52943 22.12739 6.449742 21.340512 6.449742C21.171137 6.449742 21.061449 6.449742 21.061449 6.26068C21.061449 6.140992 21.181137 6.140992 21.210824 6.140992C21.489887 6.140992 22.19707 6.170992 22.47614 6.170992C22.6852 6.170992 22.90426 6.160992 23.11364 6.160992C23.3327 6.160992 23.55176 6.140992 23.76114 6.140992C23.83082 6.140992 23.9602 6.140992 23.9602 6.340367C23.9602 6.449742 23.87051 6.449742 23.68145 6.449742C23.3127 6.449742 23.03395 6.449742 23.03395 6.629117C23.03395 6.698805 23.09364 6.917868 23.12364 7.067242C23.26301 7.58537 23.39239 8.11318 23.52207 8.6313L25.00614 9.78693L26.16176 7.107242C26.28114 6.83818 26.28114 6.818492 26.28114 6.758492C26.28114 6.459742 25.85301 6.449742 25.76332 6.449742C25.65364 6.449742 25.54395 6.449742 25.54395 6.25068C25.54395 6.140992 25.66364 6.140992 25.68364 6.140992C26.08207 6.140992 26.50051 6.170992 26.89895 6.170992C27.11801 6.170992 27.65582 6.140992 27.87489 6.140992C27.92489 6.140992 28.05426 6.140992 28.05426 6.340367C28.05426 6.449742 27.94489 6.449742 27.8552 6.449742C27.44676 6.459742 27.31707 6.54943 27.1677 6.89818L25.75332 10.16537Z"></path>
<path d="M32.39697 3.65068V4.04912H31.43072V13.21349H32.39697V13.61193H31.03228V3.65068H32.39697Z"></path>
<path d="M40.19562 13.06412C40.19562 13.09381 40.17562 13.16381 40.08594 13.16381C40.05594 13.16381 40.04625 13.1538 39.93656 13.04412L39.23938 12.27724C39.14969 12.41662 38.69125 13.16381 37.58563 13.16381C35.36438 13.16381 33.123125 10.96224 33.123125 8.6513C33.123125 7.007555 34.29844 5.92193 35.8225 5.92193C36.68906 5.92193 37.44625 6.320367 37.97406 6.778492C38.90063 7.59537 39.07 8.50193 39.07 8.53162C39.07 8.6313 38.97031 8.6313 38.95031 8.6313C38.89063 8.6313 38.84094 8.6113 38.82094 8.53162C38.73125 8.24287 38.50219 7.53568 37.81469 6.957867C37.1275 6.400055 36.5 6.23068 35.98187 6.23068C35.08531 6.23068 34.02969 6.748493 34.02969 8.30256C34.02969 8.87037 34.23875 10.48412 35.23469 11.64943C35.8425 12.35693 36.77875 12.85474 37.66531 12.85474C38.68156 12.85474 39.26906 12.08787 39.26906 10.93224C39.26906 10.53381 39.23938 10.5238 39.23938 10.42443C39.23938 10.32474 39.34875 10.32474 39.38875 10.32474C39.51813 10.32474 39.51813 10.34474 39.56812 10.5238L40.19562 13.06412Z"></path>
<path d="M42.04173 13.61193H40.677043V13.21349H41.64329V4.04912H40.677043V3.65068H42.04173V13.61193Z"></path>
<path d="M121.0943 10.16537C121.0843 10.19506 121.0443 10.27474 121.0443 10.30474C121.0443 10.31474 121.22368 10.45412 121.33336 10.53381L123.07649 11.8788C124.01274 12.56599 124.40149 12.60568 124.70024 12.63568C124.77993 12.64568 124.87961 12.65568 124.87961 12.83506C124.87961 12.87474 124.84961 12.94443 124.76993 12.94443C124.55086 12.94443 124.3018 12.91474 124.06274 12.91474C123.70399 12.91474 123.31555 12.94443 122.95711 12.94443C122.88711 12.94443 122.76774 12.94443 122.76774 12.74537C122.76774 12.67568 122.81743 12.64568 122.88711 12.63568C123.10649 12.61568 123.19618 12.56599 123.19618 12.42662C123.19618 12.24724 122.89711 12.01818 122.83743 11.96818L118.95274 8.98006L119.74961 12.17755C119.83899 12.53599 119.85899 12.63568 120.58618 12.63568C120.83524 12.63568 120.92493 12.63568 120.92493 12.83506C120.92493 12.92443 120.84524 12.94443 120.78555 12.94443C120.50649 12.94443 119.7893 12.91474 119.51055 12.91474C119.22149 12.91474 118.5143 12.94443 118.22555 12.94443C118.15555 12.94443 118.02618 12.94443 118.02618 12.75537C118.02618 12.63568 118.11586 12.63568 118.31493 12.63568C118.44461 12.63568 118.62399 12.62568 118.74336 12.61568C118.90274 12.59599 118.96243 12.56599 118.96243 12.4563C118.96243 12.41662 118.95274 12.38662 118.92274 12.26724L117.58805 6.917868C117.48836 6.52943 117.46836 6.449742 116.681489 6.449742C116.512114 6.449742 116.402426 6.449742 116.402426 6.26068C116.402426 6.140992 116.522114 6.140992 116.551801 6.140992C116.830864 6.140992 117.53805 6.170992 117.81711 6.170992C118.02618 6.170992 118.24524 6.160992 118.45461 6.160992C118.67368 6.160992 118.89274 6.140992 119.10211 6.140992C119.1718 6.140992 119.30118 6.140992 119.30118 6.340367C119.30118 6.449742 119.21149 6.449742 119.02243 6.449742C118.65368 6.449742 118.37493 6.449742 118.37493 6.629117C118.37493 6.698805 118.43461 6.917868 118.46461 7.067242C118.60399 7.58537 118.73336 8.11318 118.86305 8.6313L120.34711 9.78693L121.50274 7.107242C121.62211 6.83818 121.62211 6.818492 121.62211 6.758492C121.62211 6.459742 121.19399 6.449742 121.1043 6.449742C120.99461 6.449742 120.88493 6.449742 120.88493 6.25068C120.88493 6.140992 121.00461 6.140992 121.02461 6.140992C121.42305 6.140992 121.84149 6.170992 122.23993 6.170992C122.45899 6.170992 122.9968 6.140992 123.21586 6.140992C123.26586 6.140992 123.39524 6.140992 123.39524 6.340367C123.39524 6.449742 123.28586 6.449742 123.19618 6.449742C122.78774 6.459742 122.65805 6.54943 122.50868 6.89818L121.0943 10.16537Z"></path>
<path d="M127.73802 3.65068V4.04912H126.77177V13.21349H127.73802V13.61193H126.37334V3.65068H127.73802ZM131.64326 13.06412C131.58357 13.25318 131.52388 13.27318 131.4142 13.27318C131.25482 13.27318 131.23482 13.23349 131.18513 13.06412L129.27263 7.137242C129.17295 6.83818 128.97357 6.449742 128.27638 6.449742V6.140992C128.60513 6.160992 129.11326 6.170992 129.20263 6.170992C129.4917 6.170992 130.01951 6.150992 130.32826 6.140992V6.449742C129.79045 6.459742 129.56138 6.728805 129.56138 6.967867C129.56138 7.017555 129.56138 7.047555 129.61107 7.18693L131.10545 11.82881L132.6792 6.927867C132.7292 6.788492 132.7292 6.768492 132.7292 6.748493C132.7292 6.449742 132.14138 6.449742 131.88232 6.449742V6.140992C132.23107 6.170992 132.93826 6.170992 133.3167 6.170992C133.70513 6.170992 134.15357 6.150992 134.54201 6.140992V6.449742C133.78482 6.449742 133.75513 6.50943 133.63545 6.87818L131.64326 13.06412ZM136.4554 13.61193H135.09068V13.21349H136.0569V4.04912H135.09068V3.65068H136.4554V13.61193Z"></path>
<path d="M64.10938 43.8281H114.6484" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M112.77708 46.21879C113.15599 44.781291 113.999741 44.105509 114.847397 43.828166C113.999741 43.546916 113.15599 42.871134 112.77708 41.43754" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M91.60503 51.40709V51.67209H88.82878V51.40709H91.60503Z"></path>
<path d="M89.16204 47.466154C89.23892 47.459279 89.32236 47.459279 89.39923 47.459279C90.65486 47.459279 91.80548 48.484592 91.80548 49.58647C91.80548 50.2074 91.43579 50.6049 90.89173 50.6049C89.92923 50.6049 89.42017 49.3774 89.22486 48.85428C89.13423 48.59615 88.98079 48.108029 88.93892 47.975217C88.17173 48.079904 87.683293 48.428654 87.683293 48.9449C87.683293 48.95178 87.725168 49.73303 88.29017 50.36084C88.33892 50.40959 88.34611 50.42365 88.34611 50.45147C88.34611 50.53522 88.25548 50.53522 88.23454 50.53522C88.17173 50.53522 88.14361 50.53522 88.01111 50.38178C87.620481 49.90053 87.439231 49.17522 87.439231 48.87522C87.439231 48.254279 87.892668 47.717404 88.79236 47.522092C88.44361 46.44084 88.40173 46.30834 88.40173 46.24553C88.40173 46.05709 88.56236 46.0224 88.63892 46.0224C88.71579 46.0224 88.85517 46.07115 88.91111 46.17584C88.95986 46.28053 89.02267 46.636154 89.16204 47.466154ZM89.25267 47.940529C89.39236 48.74272 89.44798 49.05647 89.78298 49.5099C90.09673 49.93522 90.46642 50.13053 90.81517 50.13053C91.29642 50.13053 91.55454 49.8099 91.55454 49.44709C91.55454 48.74272 90.67579 47.933654 89.47611 47.933654C89.41329 47.933654 89.31548 47.933654 89.25267 47.940529Z"></path>
<path d="M31.9531 34.99609V17.85937" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M34.34373 19.73439C32.910137 19.35548 32.234355 18.511729 31.953105 17.660166C31.675762 18.511729 30.99998 19.35548 29.56248 19.73439" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M39.30305 29.70311V29.96811H36.526804V29.70311H39.30305Z"></path>
<path d="M38.09537 28.63717C38.11631 28.70718 38.11631 28.73499 38.11631 28.74186C38.11631 28.82561 38.02568 28.82561 38.00475 28.82561C37.90006 28.82561 37.90006 28.7978 37.86537 28.67217L36.72818 24.124362C36.15631 24.194362 35.84943 24.438425 35.84943 24.905613C35.84943 25.0103 35.84943 25.20561 36.19818 26.07061C36.25412 26.22405 36.30287 26.34249 36.30287 26.46124C36.30287 26.82374 35.996 27.06092 35.64006 27.06092C34.942558 27.06092 34.628808 26.1053 34.628808 25.99374C34.628808 25.90311 34.726621 25.90311 34.747246 25.90311C34.845058 25.90311 34.851933 25.93811 34.872871 26.01468C35.040371 26.58655 35.34725 26.86561 35.61912 26.86561C35.73787 26.86561 35.7935 26.78905 35.7935 26.62155C35.7935 26.46124 35.73787 26.32874 35.661 26.11936C35.31225 25.24061 35.31225 25.07999 35.31225 24.954362C35.31225 24.152487 36.15631 23.957175 36.67943 23.92905C36.63068 23.7478 36.36568 22.68061 36.36568 22.6528C36.36568 22.56218 36.44943 22.56218 36.47725 22.56218C36.57475 22.56218 36.58881 22.59686 36.61662 22.70843L36.91662 23.9153C37.1885 23.9153 37.83037 23.9153 38.56287 24.647488C38.751 24.8428 38.93943 25.08717 39.06506 25.39405C39.16256 25.62405 39.30912 26.19593 39.30912 26.51686C39.30912 27.06092 38.98131 27.0678 38.96037 27.0678C38.77881 27.0678 38.5835 26.87968 38.5835 26.69811C38.5835 26.57968 38.6535 26.52374 38.68131 26.50311C38.79287 26.4053 38.96037 26.23092 38.96037 25.92405C38.96037 25.33811 38.15818 24.110612 36.96537 24.110612L38.09537 28.63717Z"></path>
<path d="M126.8398 37.4883V17.85937" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M129.23023 19.73439C127.796634 19.35548 127.116946 18.511729 126.839603 17.660166C126.558353 18.511729 125.882571 19.35548 124.44898 19.73439" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M133.23747 25.769011V26.020261C132.76997 26.020261 132.71435 26.069011 132.71435 26.410573V30.60964L131.6681 30.53307V30.28182C132.13528 30.28182 132.19122 30.23307 132.19122 29.8912V28.44745C131.9331 28.69839 131.59841 28.84495 131.21466 28.84495C130.28716 28.84495 129.505909 28.14745 129.505909 27.2687C129.505909 26.396823 130.24528 25.699323 131.13091 25.699323C131.7031 25.699323 132.04466 26.006198 132.16341 26.131823V25.699323L133.23747 25.769011ZM132.16341 26.501511C131.98185 26.173698 131.62622 25.894636 131.17278 25.894636C130.78216 25.894636 130.5031 26.124636 130.36372 26.327136C130.22435 26.536198 130.140597 26.81526 130.140597 27.26151C130.140597 27.42214 130.140597 27.94526 130.42653 28.27307C130.7056 28.58682 131.04716 28.64964 131.24966 28.64964C131.58435 28.64964 131.88435 28.4962 132.07966 28.24526C132.16341 28.13339 132.16341 28.12651 132.16341 27.99401V26.501511ZM135.49661 25.769011V26.020261C135.09192 26.020261 135.02224 26.020261 135.02224 26.313073V28.84495L133.99692 28.76839V28.51714C134.4363 28.51714 134.49911 28.47526 134.49911 28.13339V26.319948C134.49911 26.020261 134.42942 26.020261 133.97599 26.020261V25.769011C133.97599 25.769011 134.47817 25.796823 134.75724 25.796823C135.0013 25.796823 135.25224 25.789948 135.49661 25.769011ZM135.11286 29.96807C135.11286 30.1912 134.93849 30.37245 134.71536 30.37245C134.47817 30.37245 134.31786 30.17714 134.31786 29.97495C134.31786 29.75182 134.49224 29.57026 134.71536 29.57026C134.95255 29.57026 135.11286 29.76557 135.11286 29.96807ZM139.6322 26.396823V26.78026H139.395V26.403698C139.395 26.334011 139.395 25.999323 139.13692 25.999323C138.87911 25.999323 138.87911 26.327136 138.87911 26.417761V27.63839C138.87911 28.00807 138.87911 28.27307 138.55817 28.5312C138.27224 28.76839 137.93724 28.87995 137.52567 28.87995C136.86317 28.87995 136.39599 28.6287 136.39599 28.20339C136.39599 27.97995 136.54942 27.86151 136.73067 27.86151C136.91911 27.86151 137.05849 28.00089 137.05849 28.18932C137.05849 28.30776 137.00255 28.45432 136.81442 28.51026C137.06536 28.68464 137.47005 28.68464 137.51192 28.68464C137.90255 28.68464 138.32786 28.42651 138.32786 27.84057V27.62432C137.94443 27.61026 137.48411 27.58964 136.97474 27.4012C136.34692 27.17089 136.15161 26.78745 136.15161 26.473386C136.15161 25.873698 136.87724 25.699323 137.37224 25.699323C137.93036 25.699323 138.25817 26.013073 138.40474 26.285261C138.43255 25.999323 138.62099 25.734011 138.94161 25.734011C138.94161 25.734011 139.6322 25.734011 139.6322 26.396823ZM138.32786 26.752448C138.32786 26.082761 137.74192 25.894636 137.42817 25.894636C137.07255 25.894636 136.73755 26.131823 136.73755 26.473386C136.73755 26.85714 137.07255 27.39432 138.32786 27.44307V26.752448ZM143.6072 28.55901C143.6072 28.71932 143.4747 28.91464 143.1959 28.91464C143.0912 28.91464 142.7143 28.8937 142.3865 28.59401C142.1775 28.74745 141.8843 28.84495 141.5775 28.84495C140.859 28.84495 140.3359 28.3637 140.3359 27.81964C140.3359 27.54776 140.4756 27.29651 140.6709 27.11526C140.615 27.05245 140.4615 26.82214 140.4615 26.550261C140.4615 26.459636 140.4825 26.131823 140.7547 25.929323C140.4406 25.824948 140.0778 25.594636 140.0778 25.231823C140.0778 24.72276 140.8453 24.33901 141.7868 24.33901C142.6728 24.33901 143.4956 24.68776 143.4956 25.245886C143.4956 25.455261 143.4118 25.831823 143.0284 26.040886C142.6168 26.257136 142.2053 26.257136 141.5287 26.257136C141.3753 26.257136 141.124 26.257136 141.0684 26.264323C140.8453 26.313073 140.7197 26.522448 140.7197 26.724636C140.7197 26.89901 140.7684 26.95464 140.8103 27.01057C140.915 26.94776 141.1659 26.79432 141.5706 26.79432C142.289 26.79432 142.8122 27.27557 142.8122 27.81964C142.8122 28.09182 142.6865 28.30776 142.519 28.48932C142.8331 28.71245 143.105 28.71932 143.2237 28.71932C143.1959 28.69151 143.1609 28.6637 143.1609 28.55214C143.1609 28.41245 143.2656 28.3287 143.384 28.3287C143.4818 28.3287 143.6072 28.3987 143.6072 28.55901ZM142.254 27.81964C142.254 27.70807 142.254 27.42901 142.1147 27.24776C142.0168 27.12901 141.8287 27.0037 141.5775 27.0037C140.894 27.0037 140.894 27.67307 140.894 27.81964C140.894 27.9312 140.894 28.21026 141.0334 28.39151C141.1312 28.51026 141.3193 28.63589 141.5706 28.63589C142.254 28.63589 142.254 27.9662 142.254 27.81964ZM143.0703 25.239011C143.0703 24.869323 142.519 24.54839 141.7868 24.54839C141.0543 24.54839 140.5034 24.876198 140.5034 25.239011C140.5034 25.483073 140.7265 25.783073 141.1731 25.789948H141.5775C142.1984 25.789948 143.0703 25.789948 143.0703 25.239011Z"></path>
<path d="M138.6328 42.7969C158.4805 41.0586 139.0703 70.0508 130.8164 52.3555" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M133.772963 53.042938C132.312021 53.304663 131.343266 52.824194 130.72999 52.171845C130.835456 53.06247 130.577646 54.113256 129.437022 55.062475" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M149.96542 59.01916H151.22792C152.40667 59.01916 153.40417 59.77259 153.40417 60.53291C153.40417 61.11884 152.83229 61.62103 151.87667 61.62103H149.43542C149.29573 61.62103 149.21229 61.62103 149.21229 61.46759C149.21229 61.36978 149.28885 61.36978 149.44229 61.36978C149.55385 61.36978 149.58198 61.36978 149.70729 61.35572C149.84698 61.34197 149.86073 61.32791 149.86073 61.25822C149.86073 61.24416 149.86073 61.20947 149.83292 61.10478L148.91229 57.428844C148.8426 57.156969 148.83542 57.108219 148.291354 57.108219C148.166041 57.108219 148.082291 57.108219 148.082291 56.954469C148.082291 56.947594 148.082291 56.856969 148.193854 56.856969C148.396041 56.856969 148.89823 56.884782 149.10042 56.884782C149.21917 56.884782 149.46323 56.884782 149.58198 56.877907C149.72135 56.871032 149.89573 56.856969 150.02823 56.856969C150.0701 56.856969 150.17479 56.856969 150.17479 57.010407C150.17479 57.108219 150.09104 57.108219 149.95135 57.108219C149.94448 57.108219 149.81198 57.108219 149.68635 57.121969C149.52604 57.136032 149.52604 57.156969 149.52604 57.226657C149.52604 57.233532 149.52604 57.275407 149.55385 57.380094L149.96542 59.01916ZM150.4676 61.13259C150.52354 61.34884 150.53042 61.36978 150.82323 61.36978H151.63948C152.28823 61.36978 152.6926 61.17447 152.6926 60.67916C152.6926 60.46291 152.60885 59.91197 152.2601 59.59822C152.00917 59.37509 151.61167 59.24228 151.10948 59.24228H149.99323L150.4676 61.13259Z"></path>
<path d="M156.09184 57.62874C156.18152 57.62874 156.23121 57.62874 156.3009 57.67842C156.3309 57.70343 156.38059 57.77311 156.38059 57.8478C156.38059 58.00718 156.23121 58.00718 156.15152 58.00718H154.69184C153.83965 58.00718 153.177148 57.25499 153.177148 56.652175C153.177148 56.13405 153.610586 55.8053 154.15871 55.8053C154.87121 55.8053 155.6334 56.363112 155.6334 57.10561C155.6334 57.30467 155.57871 57.47905 155.47402 57.62874H156.09184ZM154.16871 55.974675C153.94434 55.974675 153.585586 56.069362 153.585586 56.527488C153.585586 56.682175 153.650586 57.62874 154.61215 57.62874C154.98559 57.62874 155.21496 57.48905 155.21496 57.1453C155.21496 56.637175 154.83621 55.974675 154.16871 55.974675Z"></path>
<path d="M47.7188 8.6328H111.1328" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M109.26167 11.02344C109.64057 9.585937 110.484321 8.910155 111.331978 8.632812C110.484321 8.351562 109.64057 7.67578 109.26167 6.24219" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M57.3415 12.406985V12.658235C56.874 12.658235 56.81838 12.706985 56.81838 13.048548V17.24761L55.77213 17.17105V16.9198C56.23931 16.9198 56.29525 16.87105 56.29525 16.52917V15.08542C56.03713 15.33636 55.70244 15.48292 55.31869 15.48292C54.39119 15.48292 53.609939 14.78542 53.609939 13.90667C53.609939 13.034797 54.34931 12.337298 55.23494 12.337298C55.80713 12.337298 56.14869 12.644172 56.26744 12.769797V12.337298L57.3415 12.406985ZM56.26744 13.139485C56.08588 12.811673 55.73025 12.53261 55.27681 12.53261C54.88619 12.53261 54.60713 12.76261 54.46775 12.96511C54.32838 13.174173 54.244626 13.45323 54.244626 13.89949C54.244626 14.06011 54.244626 14.58323 54.53056 14.91105C54.80963 15.2248 55.15119 15.28761 55.35369 15.28761C55.68838 15.28761 55.98838 15.13417 56.18369 14.88323C56.26744 14.77136 56.26744 14.76449 56.26744 14.63198V13.139485ZM59.60064 12.406985V12.658235C59.19595 12.658235 59.12627 12.658235 59.12627 12.951047V15.48292L58.10095 15.40636V15.15511C58.54033 15.15511 58.60314 15.11323 58.60314 14.77136V12.957923C58.60314 12.658235 58.53345 12.658235 58.08002 12.658235V12.406985C58.08002 12.406985 58.5822 12.434798 58.86127 12.434798C59.10533 12.434798 59.35627 12.427922 59.60064 12.406985ZM59.21689 16.60605C59.21689 16.82917 59.04252 17.01042 58.81939 17.01042C58.5822 17.01042 58.42189 16.81511 58.42189 16.61292C58.42189 16.3898 58.59627 16.20823 58.81939 16.20823C59.05658 16.20823 59.21689 16.40355 59.21689 16.60605ZM63.7363 13.034797V13.41823H63.4991V13.041672C63.4991 12.971985 63.4991 12.637297 63.24095 12.637297C62.98314 12.637297 62.98314 12.96511 62.98314 13.055735V14.27636C62.98314 14.64605 62.98314 14.91105 62.6622 15.16917C62.37627 15.40636 62.04127 15.51792 61.6297 15.51792C60.9672 15.51792 60.50002 15.26667 60.50002 14.84136C60.50002 14.61792 60.65345 14.49948 60.8347 14.49948C61.02314 14.49948 61.16252 14.63886 61.16252 14.8273C61.16252 14.94573 61.10658 15.0923 60.91845 15.14824C61.16939 15.32261 61.57408 15.32261 61.61595 15.32261C62.00658 15.32261 62.43189 15.06449 62.43189 14.47855V14.2623C62.04845 14.24824 61.58814 14.22761 61.07877 14.03917C60.45095 13.80886 60.25564 13.42542 60.25564 13.11136C60.25564 12.511672 60.98127 12.337298 61.47627 12.337298C62.03439 12.337298 62.3622 12.651047 62.50877 12.923235C62.53658 12.637297 62.72502 12.371985 63.04564 12.371985C63.04564 12.371985 63.7363 12.371985 63.7363 13.034797ZM62.43189 13.390423C62.43189 12.720735 61.84595 12.53261 61.5322 12.53261C61.17658 12.53261 60.84158 12.769797 60.84158 13.11136C60.84158 13.49511 61.17658 14.0323 62.43189 14.08105V13.390423ZM67.7112 15.19698C67.7112 15.3573 67.5787 15.55261 67.2999 15.55261C67.1953 15.55261 66.8184 15.53167 66.4906 15.23199C66.2815 15.38542 65.9884 15.48292 65.6815 15.48292C64.9631 15.48292 64.4399 15.00167 64.4399 14.45761C64.4399 14.18574 64.5796 13.93449 64.7749 13.75324C64.719 13.69042 64.5656 13.46011 64.5656 13.188235C64.5656 13.09761 64.5865 12.769797 64.8587 12.567297C64.5446 12.462922 64.1818 12.23261 64.1818 11.869797C64.1818 11.36073 64.9493 10.97699 65.8909 10.97699C66.7768 10.97699 67.5996 11.32574 67.5996 11.88386C67.5996 12.093235 67.5159 12.469798 67.1324 12.67886C66.7209 12.89511 66.3093 12.89511 65.6328 12.89511C65.4793 12.89511 65.2281 12.89511 65.1724 12.902297C64.9493 12.951047 64.8237 13.160422 64.8237 13.36261C64.8237 13.53698 64.8724 13.59261 64.9143 13.64855C65.019 13.58574 65.2699 13.4323 65.6746 13.4323C66.3931 13.4323 66.9162 13.91355 66.9162 14.45761C66.9162 14.7298 66.7906 14.94573 66.6231 15.1273C66.9371 15.35042 67.209 15.3573 67.3278 15.3573C67.2999 15.32948 67.2649 15.30167 67.2649 15.19011C67.2649 15.05042 67.3696 14.96667 67.4881 14.96667C67.5859 14.96667 67.7112 15.03667 67.7112 15.19698ZM66.3581 14.45761C66.3581 14.34605 66.3581 14.06698 66.2187 13.88573C66.1209 13.76698 65.9328 13.64167 65.6815 13.64167C64.9981 13.64167 64.9981 14.31105 64.9981 14.45761C64.9981 14.56917 64.9981 14.84824 65.1374 15.02948C65.2353 15.14824 65.4234 15.27386 65.6746 15.27386C66.3581 15.27386 66.3581 14.60417 66.3581 14.45761ZM67.1743 11.876985C67.1743 11.507298 66.6231 11.18636 65.8909 11.18636C65.1584 11.18636 64.6074 11.514172 64.6074 11.876985C64.6074 12.121047 64.8306 12.421048 65.2771 12.427922H65.6815C66.3024 12.427922 67.1743 12.427922 67.1743 11.876985ZM71.5677 13.89261C71.5677 14.76449 70.8214 15.51792 69.8589 15.51792S68.1499 14.76449 68.1499 13.89261C68.1499 13.02761 68.9174 12.337298 69.8589 12.337298C70.8005 12.337298 71.5677 13.02761 71.5677 13.89261ZM70.933 13.95542C70.933 13.62073 70.912 13.251047 70.7099 12.96511C70.5214 12.699797 70.2008 12.560422 69.8589 12.560422C69.6008 12.560422 69.2242 12.644172 68.9939 12.986048C68.8058 13.271985 68.7849 13.63448 68.7849 13.95542C68.7849 14.25542 68.7917 14.66698 69.0358 14.96667C69.2102 15.16917 69.5033 15.32261 69.8589 15.32261C70.2705 15.32261 70.5633 15.1273 70.7167 14.91105C70.912 14.63886 70.933 14.29011 70.933 13.95542ZM75.9613 12.406985V12.658235C75.5079 12.658235 75.4382 12.658235 75.4382 12.957923V14.52042C75.4382 15.1273 75.1382 15.48292 74.392 15.48292C73.8201 15.48292 73.4504 15.16917 73.2551 14.80636H73.2479V15.48292L72.2226 15.40636V15.15511C72.6901 15.15511 72.7457 15.10636 72.7457 14.76449V12.957923C72.7457 12.658235 72.676 12.658235 72.2226 12.658235V12.406985C72.2226 12.406985 72.7248 12.434798 73.0179 12.434798C73.276 12.434798 73.7573 12.41386 73.8201 12.406985V12.658235C73.3667 12.658235 73.297 12.658235 73.297 12.957923V14.21355C73.297 14.94573 73.8757 15.28761 74.336 15.28761C74.8245 15.28761 74.8873 14.90417 74.8873 14.54823V12.957923C74.8873 12.658235 74.8173 12.658235 74.3642 12.658235V12.406985C74.3642 12.406985 74.8663 12.434798 75.1592 12.434798C75.4173 12.434798 75.8985 12.41386 75.9613 12.406985ZM80.0408 13.034797V13.41823H79.8036V13.041672C79.8036 12.971985 79.8036 12.637297 79.5455 12.637297C79.2877 12.637297 79.2877 12.96511 79.2877 13.055735V14.27636C79.2877 14.64605 79.2877 14.91105 78.9667 15.16917C78.6808 15.40636 78.3458 15.51792 77.9342 15.51792C77.2717 15.51792 76.8045 15.26667 76.8045 14.84136C76.8045 14.61792 76.958 14.49948 77.1392 14.49948C77.3277 14.49948 77.467 14.63886 77.467 14.8273C77.467 14.94573 77.4111 15.0923 77.223 15.14824C77.4739 15.32261 77.8786 15.32261 77.9205 15.32261C78.3111 15.32261 78.7364 15.06449 78.7364 14.47855V14.2623C78.353 14.24824 77.8927 14.22761 77.3833 14.03917C76.7555 13.80886 76.5602 13.42542 76.5602 13.11136C76.5602 12.511672 77.2858 12.337298 77.7808 12.337298C78.3389 12.337298 78.6667 12.651047 78.8133 12.923235C78.8411 12.637297 79.0295 12.371985 79.3502 12.371985C79.3502 12.371985 80.0408 12.371985 80.0408 13.034797ZM78.7364 13.390423C78.7364 12.720735 78.1505 12.53261 77.8367 12.53261C77.4811 12.53261 77.1461 12.769797 77.1461 13.11136C77.1461 13.49511 77.4811 14.0323 78.7364 14.08105V13.390423ZM82.1745 12.406985V12.658235C81.721 12.658235 81.6513 12.658235 81.6513 12.957923V17.24761L80.6051 17.17105V16.9198C81.0723 16.9198 81.1282 16.87105 81.1282 16.52917V12.957923C81.1282 12.658235 81.0585 12.658235 80.6051 12.658235V12.406985C80.6051 12.406985 81.1073 12.434798 81.3863 12.434798C81.6513 12.434798 81.9095 12.427922 82.1745 12.406985ZM84.3782 12.406985V12.658235C83.9735 12.658235 83.9038 12.658235 83.9038 12.951047V15.48292L82.8785 15.40636V15.15511C83.3179 15.15511 83.3807 15.11323 83.3807 14.77136V12.957923C83.3807 12.658235 83.311 12.658235 82.8576 12.658235V12.406985C82.8576 12.406985 83.3598 12.434798 83.6388 12.434798C83.8829 12.434798 84.1338 12.427922 84.3782 12.406985ZM83.9945 16.60605C83.9945 16.82917 83.8201 17.01042 83.597 17.01042C83.3598 17.01042 83.1995 16.81511 83.1995 16.61292C83.1995 16.3898 83.3738 16.20823 83.597 16.20823C83.8342 16.20823 83.9945 16.40355 83.9945 16.60605ZM87.8792 13.76011H87.642C87.5723 12.944172 87.4257 12.63011 86.5538 12.63011H85.696L87.7954 15.16917C87.8442 15.23199 87.8582 15.25292 87.8582 15.30167C87.8582 15.41323 87.7745 15.41323 87.6629 15.41323H85.1798L85.096 14.24824H85.3332C85.382 14.98073 85.5426 15.21792 86.3376 15.21792H87.1607L85.0542 12.671985C84.9913 12.595422 84.9913 12.567297 84.9913 12.53261C84.9913 12.406985 85.0613 12.406985 85.1867 12.406985H87.7535L87.8792 13.76011ZM92.0565 13.034797V13.41823H91.8193V13.041672C91.8193 12.971985 91.8193 12.637297 91.5612 12.637297C91.3034 12.637297 91.3034 12.96511 91.3034 13.055735V14.27636C91.3034 14.64605 91.3034 14.91105 90.9824 15.16917C90.6965 15.40636 90.3615 15.51792 89.9499 15.51792C89.2874 15.51792 88.8203 15.26667 88.8203 14.84136C88.8203 14.61792 88.9737 14.49948 89.1549 14.49948C89.3434 14.49948 89.4828 14.63886 89.4828 14.8273C89.4828 14.94573 89.4268 15.0923 89.2387 15.14824C89.4896 15.32261 89.8943 15.32261 89.9362 15.32261C90.3268 15.32261 90.7521 15.06449 90.7521 14.47855V14.2623C90.3687 14.24824 89.9084 14.22761 89.399 14.03917C88.7712 13.80886 88.5759 13.42542 88.5759 13.11136C88.5759 12.511672 89.3015 12.337298 89.7965 12.337298C90.3546 12.337298 90.6824 12.651047 90.829 12.923235C90.8568 12.637297 91.0453 12.371985 91.3659 12.371985C91.3659 12.371985 92.0565 12.371985 92.0565 13.034797ZM90.7521 13.390423C90.7521 12.720735 90.1662 12.53261 89.8524 12.53261C89.4968 12.53261 89.1618 12.769797 89.1618 13.11136C89.1618 13.49511 89.4968 14.0323 90.7521 14.08105V13.390423ZM94.8458 13.285735V13.66949H94.6086V13.292922C94.6086 12.818547 94.3855 12.560422 94.1133 12.560422C93.632 12.560422 93.632 13.14636 93.632 13.271985V15.16199H94.7202V15.41323H93.632V16.69667H93.3949C93.388 16.06886 93.102 15.37824 92.4324 15.3573V15.16199H93.0811V13.27886C93.0811 12.49761 93.667 12.337298 94.0577 12.337298C94.5249 12.337298 94.8458 12.734798 94.8458 13.285735ZM97.2517 12.406985V12.658235C96.847 12.658235 96.7774 12.658235 96.7774 12.951047V15.48292L95.752 15.40636V15.15511C96.1914 15.15511 96.2542 15.11323 96.2542 14.77136V12.957923C96.2542 12.658235 96.1845 12.658235 95.7311 12.658235V12.406985C95.7311 12.406985 96.2333 12.434798 96.5124 12.434798C96.7564 12.434798 97.0074 12.427922 97.2517 12.406985ZM96.868 16.60605C96.868 16.82917 96.6936 17.01042 96.4705 17.01042C96.2333 17.01042 96.073 16.81511 96.073 16.61292C96.073 16.3898 96.2474 16.20823 96.4705 16.20823C96.7077 16.20823 96.868 16.40355 96.868 16.60605ZM101.2827 13.89261C101.2827 14.76449 100.5364 15.51792 99.5739 15.51792S97.8649 14.76449 97.8649 13.89261C97.8649 13.02761 98.6324 12.337298 99.5739 12.337298C100.5155 12.337298 101.2827 13.02761 101.2827 13.89261ZM100.648 13.95542C100.648 13.62073 100.627 13.251047 100.4249 12.96511C100.2364 12.699797 99.9158 12.560422 99.5739 12.560422C99.3158 12.560422 98.9392 12.644172 98.7089 12.986048C98.5208 13.271985 98.4999 13.63448 98.4999 13.95542C98.4999 14.25542 98.5067 14.66698 98.7508 14.96667C98.9252 15.16917 99.2183 15.32261 99.5739 15.32261C99.9855 15.32261 100.2783 15.1273 100.4317 14.91105C100.627 14.63886 100.648 14.29011 100.648 13.95542ZM105.6763 12.406985V12.658235C105.2229 12.658235 105.1532 12.658235 105.1532 12.957923V14.52042C105.1532 15.1273 104.8532 15.48292 104.107 15.48292C103.5351 15.48292 103.1654 15.16917 102.9701 14.80636H102.9629V15.48292L101.9376 15.40636V15.15511C102.4051 15.15511 102.4607 15.10636 102.4607 14.76449V12.957923C102.4607 12.658235 102.391 12.658235 101.9376 12.658235V12.406985C101.9376 12.406985 102.4398 12.434798 102.7329 12.434798C102.991 12.434798 103.4723 12.41386 103.5351 12.406985V12.658235C103.0817 12.658235 103.012 12.658235 103.012 12.957923V14.21355C103.012 14.94573 103.5907 15.28761 104.051 15.28761C104.5395 15.28761 104.6023 14.90417 104.6023 14.54823V12.957923C104.6023 12.658235 104.5323 12.658235 104.0792 12.658235V12.406985C104.0792 12.406985 104.5813 12.434798 104.8742 12.434798C105.1323 12.434798 105.6135 12.41386 105.6763 12.406985Z"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-big-picture-final-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;6
</figcaption>
</figure>
</div>



</section>
</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-agarwal_number_1975" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">R. C. Agarwal 和 C. S. Burrus, <span>《Number theoretic transforms to implement fast digital convolution》</span>, <em>Proceedings of the IEEE</em>, 卷 63, 期 4, 页 550–560, 4月 1975, doi: <a href="https://doi.org/10.1109/PROC.1975.9791">10.1109/PROC.1975.9791</a>.</div>
</div>
<div id="ref-nicholson_algebraic_1971" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">P. J. Nicholson, <span>《Algebraic theory of finite fourier transforms》</span>, <em>Journal of Computer and System Sciences</em>, 卷 5, 期 5, 页 524–547, 10月 1971, doi: <a href="https://doi.org/10.1016/S0022-0000(71)80014-4">10.1016/S0022-0000(71)80014-4</a>.</div>
</div>
<div id="ref-furer_faster_2009" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline">M. Fürer, <span>《Faster <span>Integer</span> <span>Multiplication</span>》</span>, <em>SIAM Journal on Computing</em>, 卷 39, 期 3, 页 979–1005, 1月 2009, doi: <a href="https://doi.org/10.1137/070711761">10.1137/070711761</a>.</div>
</div>
<div id="ref-amiot_music_2016" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline">E. Amiot, <em>Music <span>Through</span> <span>Fourier</span> <span>Space</span></em>. 收入 Computational <span>Music</span> <span>Science</span>. Cham: Springer International Publishing, 2016. doi: <a href="https://doi.org/10.1007/978-3-319-45581-5">10.1007/978-3-319-45581-5</a>.</div>
</div>
<div id="ref-baraquin_uniqueness_2023" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">I. Baraquin 和 N. Ratier, <span>《Uniqueness of the discrete <span>Fourier</span> transform》</span>, <em>Signal Processing</em>, 卷 209, 页 109041, 8月 2023, doi: <a href="https://doi.org/10.1016/j.sigpro.2023.109041">10.1016/j.sigpro.2023.109041</a>.</div>
</div>
</div></section></div> ]]></description>
  <category>数学</category>
  <category>讲稿</category>
  <guid>https://blog.sun123zxy.top/posts/20240513-isodft/</guid>
  <pubDate>Sun, 12 May 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>矩阵代数的 Burnside 定理</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20240121-burnside/</link>
  <description><![CDATA[ 




<p>我们详细重述并证明 <span class="citation" data-cites="radjavi_simultaneous_2000">[1, Sec. 1.2]</span> 中的 Burnside 定理及其相关推论．</p>
<p>下面设 <img src="https://latex.codecogs.com/png.latex?V"> 是复数域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 上的有限维线性空间，<img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 是 <img src="https://latex.codecogs.com/png.latex?V"> 上的线性变换代数；<img src="https://latex.codecogs.com/png.latex?I"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的单位元．称线性变换族 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20C%20%5Csubset%20B(V)"> 可约，当且仅当其存在非平凡不变子空间——即存在非零且不是全空间的子空间 <img src="https://latex.codecogs.com/png.latex?M%20%5Csubset%20V">，使得对任意线性变换 <img src="https://latex.codecogs.com/png.latex?A%20%5Cin%20%5Cmathcal%20C">，都有 <img src="https://latex.codecogs.com/png.latex?AM%20:=%20%5C%7B%20Ax%20:%20x%20%5Cin%20M%20%5C%7D%20%5Csubset%20M">．</p>
<p>Burnside 定理证明较长．为使逻辑顺畅，先做一些准备工作．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="lem-cyclic-vector" class="theorem lemma">
<p><span class="theorem-title"><strong>Lemma 1</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的乘法半群，若 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 不可约，则对任意非零的 <img src="https://latex.codecogs.com/png.latex?x%20%5Cin%20V">，都有 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20x%20:=%20%5C%7B%20Ax%20:%20A%20%5Cin%20%5Cmathcal%20A%20%5C%7D%20=%20V">（此时称 <img src="https://latex.codecogs.com/png.latex?x"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 的循环向量）．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>首先 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20%5Cneq%20%5C%7B%200%20%5C%7D">，因为任何 <img src="https://latex.codecogs.com/png.latex?V"> 的子空间都是后者的不变子空间．</p>
<ul>
<li>注意到 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BKer%7D%5Cmathcal%20A%20:=%20%5Cbigcap_%7BA%20%5Cin%20%5Cmathcal%20A%7D%20%5Coperatorname%7BKer%7DA"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 的一个不变子空间，而 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 不可约，故 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BKer%7D%5Cmathcal%20A%20=%20%5C%7B%200%20%5C%7D"> 或 <img src="https://latex.codecogs.com/png.latex?V">．因为 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20%5Cneq%20%5C%7B0%5C%7D">，后者不可能发生，故 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BKer%7D%5Cmathcal%20A%20=%20%5C%7B%200%20%5C%7D">．</li>
<li>注意到 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20x%20:=%20%5C%7B%20A%20x%20:%20A%20%5Cin%20%5Cmathcal%20A%20%5C%7D"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 的一个不变子空间，而 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 不可约，故 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20x%20=%20%5C%7B%200%20%5C%7D"> 或 <img src="https://latex.codecogs.com/png.latex?V">．由 <img src="https://latex.codecogs.com/png.latex?x%20%5Cneq%200"> 和 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BKer%7D%5Cmathcal%20A%20=%20%5C%7B%200%20%5C%7D">，前者不可能发生，故 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20x%20=%20V">．</li>
</ul>
</div>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>事实上 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上半群的可约性等价于其线性生成的代数的可约性，见 <span class="citation" data-cites="radjavi_simultaneous_2000">[1], Definition 2.1.1</span>．</p>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="cor-cyclic-vector-dual" class="theorem corollary">
<p><span class="theorem-title"><strong>Corollary 1</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?V%5E*"> 是 <img src="https://latex.codecogs.com/png.latex?V"> 的对偶空间．设 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的乘法半群，<img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%5E*%20:=%20%5C%7BA%5E*%20:%20A%20%5Cin%20%5Cmathcal%20A%20%5C%7D"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 的对偶线性变换构成的集合（显然它也是个半群）．若 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 不可约，则对任意非零的线性函数 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi%20%5Cin%20V%5E*">，都有 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%5E*%20%5Cvarphi%20:=%20%5C%7B%20A%5E*%20%5Cvarphi%20:%20A%5E*%20%5Cin%20%5Cmathcal%20A%5E*%20%5C%7D%20=%20%5C%7B%20%20%5Cvarphi%20A%20:%20A%20%5Cin%20%5Cmathcal%20A%20%5C%7D%20=%20V%5E*">．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>定义 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%5E*%20%5Cvarphi"> 的 annihilator <img src="https://latex.codecogs.com/png.latex?(%5Cmathcal%20A%5E*%20%5Cvarphi)%5E0%20:=%20%5C%7B%20x%5E%7B**%7D%20%5Cin%20V%5E%7B**%7D%20:%20(%5Cmathcal%20A%5E*%20%5Cvarphi)(x)%20=%200%20%5C%7D">．由 <img src="https://latex.codecogs.com/png.latex?%5Cdim%20(A%5E*%20%5Cvarphi)%5E0%20=%20%5Cdim%20V%5E*%20-%20%5Cdim%20(A%5E*%20%5Cvarphi)"> <span class="citation" data-cites="axler_linear_2015">见 [2, Sec. 3F]</span>， <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathcal%20A%5E*%20%5Cvarphi%20=%20V%5E*%0A&amp;%5Ciff%20%5Cdim%20(%5Cmathcal%20A%5E*%20%5Cvarphi)%20=%20%5Cdim%20V%5E*%20%5C%5C%0A&amp;%5Ciff%20%5Cdim%20(%5Cmathcal%20A%5E*%20%5Cvarphi)%5E0%20=%200%20%5C%5C%0A&amp;%5Ciff%20(%5Cmathcal%20A%5E*%20%5Cvarphi)%5E0%20=%20%5C%7B0%5C%7D%0A%5Cend%7Baligned%7D%0A"> 由 annihilator 的定义和 Lemma&nbsp;1， <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A(%5Cmathcal%20A%5E*%20%5Cvarphi)%5E0%20=%20%5C%7B0%5C%7D%0A&amp;%5Ciff%20(%5Cmathcal%20A%5E*%20%5Cvarphi)%20x%20%5Cneq%20%5C%7B0%5C%7D,%5Cquad%20%5Cforall%20x%20%5Cneq%200%20%5C%5C%0A&amp;%5Ciff%20%5Cvarphi%20%5Cmathcal%20A%20x%20%20%5Cneq%20%5C%7B0%5C%7D,%5Cquad%20%5Cforall%20x%20%5Cneq%200%20%5C%5C%0A&amp;%5Ciff%20%5Cvarphi%20V%20%5Cneq%20%5C%7B0%5C%7D%20%5C%5C%0A&amp;%5Ciff%20%5Cvarphi%20%5Cneq%200%0A%5Cend%7Baligned%7D%0A"> 故最终我们得到 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%5E*%20%5Cvarphi%20=%20V%5E*%20%5Ciff%20%5Cvarphi%20%5Cneq%200">．</p>
</div>
<p>若下面的猜想成立，则上述推论将具有更简单的推导．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="cnj-cyclic-vector-dual" class="theorem conjecture">
<p><span class="theorem-title"><strong>Conjecture 1</strong></span> 若 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 不可约，则 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%5E*"> 也不可约．</p>
</div>
</div>
</div>
</div>
<p>我们暂未找到证明或证伪上述猜想的方法．</p>
<p>下面来证明 Burnside 定理．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-burnside" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 (Burnside 定理)</strong></span> <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的不可约子代数有且只有 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)">．</p>
</div>
</div>
</div>
</div>
<p>首先说明 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的不可约性．因为 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)%20M%20=%20V"> 对任意非零不变子空间 <img src="https://latex.codecogs.com/png.latex?M"> 成立，故 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 不可约．下面设 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 是一任意给定的 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的一个不可约子代数．显然 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20%5Cneq%20%5C%7B%200%20%5C%7D">，原因在 Lemma&nbsp;1 中已述．我们的证明分三步进行：</p>
<ol type="1">
<li>证明 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 中存在一个秩为 <img src="https://latex.codecogs.com/png.latex?1"> 的线性变换 <img src="https://latex.codecogs.com/png.latex?T_0">．</li>
<li>证明所有 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 中秩为 <img src="https://latex.codecogs.com/png.latex?1"> 的线性变换都在 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 中．</li>
<li>证明任何 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 中的线性变换都可被分解为若干个秩不超过 <img src="https://latex.codecogs.com/png.latex?1"> 的线性变换的和，从而（利用代数对加法的封闭性）<img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20=%20%5Cmathcal%20B(V)">．</li>
</ol>
<div class="proof">
<p><span class="proof-title"><em>Proof</em> (第一部分). </span>由 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A%20%5Cneq%20%5C%7B%200%20%5C%7D">，可以取 <img src="https://latex.codecogs.com/png.latex?T_0"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 中的一个秩最小的非零线性变换，<img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Brank%7DT_0%20%5Cgeq%201">．考虑反证，假设 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Brank%7DT_0%20%5Cgeq%202">，只要构造出一个非零线性变换 <img src="https://latex.codecogs.com/png.latex?S_*%20%5Cin%20%5Cmathcal%20A"> 使得 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DS_*%20%5Csubsetneq%20%5Coperatorname%7BIm%7DT_0">，就能推出矛盾．</p>
<p>由 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Brank%7DT_0%20%5Cgeq%202">，可设 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DT_0"> 中存在两个线性无关的非零向量 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20T_0%20x_1,T_0%20x_2%20%5C%7D">（因此 <img src="https://latex.codecogs.com/png.latex?x_1"> 与 <img src="https://latex.codecogs.com/png.latex?x_2"> 也线性无关）．由 Lemma&nbsp;1，存在线性变换 <img src="https://latex.codecogs.com/png.latex?A_0%20%5Cin%20%5Cmathcal%20A"> 使得 <img src="https://latex.codecogs.com/png.latex?A_0%20T_0%20x_1%20=%20x_2">，于是 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20T_0%20x_1,T_0%20x_2%20%5C%7D%20=%20%5C%7B%20T_0%20x_1,%20T_0%20A%20T_0%20x_1%20%5C%7D"> 线性无关．这意味着 <img src="https://latex.codecogs.com/png.latex?(%5Clambda%20T_0%20-%20T_0%20A_0%20T_0)x_1%20%5Cneq%200"> 对任意 <img src="https://latex.codecogs.com/png.latex?%5Clambda%20%5Cin%20%5Cmathbb%20C"> 成立，即线性变换 <img src="https://latex.codecogs.com/png.latex?S_%5Clambda%20:=%20%5Clambda%20T_0%20-%20T_0%20A_0%20T_0%20%5Cin%20%5Cmathcal%20A"> 非零．下面尝试从这些 <img src="https://latex.codecogs.com/png.latex?S_%5Clambda"> 中找到我们想要的 <img src="https://latex.codecogs.com/png.latex?S_*">．</p>
<ul>
<li>注意到 <img src="https://latex.codecogs.com/png.latex?S_%5Clambda%20=%20%20T_0(%5Clambda%20I%20-%20A_0%20T_0)">，故 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DS_%5Clambda%20%5Csubset%20%5Coperatorname%7BIm%7DT_0">．</li>
<li>注意到 <img src="https://latex.codecogs.com/png.latex?S_%5Clambda%20=%20%20(%5Clambda%20I%20-%20T_0%20A_0)%20T_0">，而 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DT_0"> 是 <img src="https://latex.codecogs.com/png.latex?T_0%20A_0"> 的一个不变子空间．故可以取 <img src="https://latex.codecogs.com/png.latex?T_0%20A_0"> 在 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DT_0"> 上的限制 <img src="https://latex.codecogs.com/png.latex?T_0%20A_0%20%7C_%7B%5Coperatorname%7BIm%7DT_0%7D">．设 <img src="https://latex.codecogs.com/png.latex?T_0%20A_0%20%7C_%7B%5Coperatorname%7BIm%7DT_0%7D"> 有一特征值 <img src="https://latex.codecogs.com/png.latex?%5Clambda_0">（由于 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DT_0"> 是复数域上有限维线性空间），这样 <img src="https://latex.codecogs.com/png.latex?%5Clambda_0%20I%20-%20T_0%20A_0%20%7C_%7B%5Coperatorname%7BIm%7DT_0%7D"> 就不是单射，因此也不是满射（由于 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DT_0"> 是有限维线性空间），即 <img src="https://latex.codecogs.com/png.latex?S_%7B%5Clambda_0%7D%20=%20(%5Clambda_0%20I%20-%20T_0%20A_0)%20T_0"> 不能映满 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DT_0">．</li>
</ul>
<p>综上 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7DS_%7B%5Clambda_0%7D%20%5Csubsetneq%20%5Coperatorname%7BIm%7DT_0"> 且 <img src="https://latex.codecogs.com/png.latex?0%20%5Cneq%20S_%7B%5Clambda_0%7D%20%5Cin%20%5Cmathcal%20A">，故 <img src="https://latex.codecogs.com/png.latex?S_%7B%5Clambda_0%7D"> 就是我们想要的 <img src="https://latex.codecogs.com/png.latex?S_*">．</p>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em> (第二部分). </span>对任意给定的某一秩为 <img src="https://latex.codecogs.com/png.latex?1"> 的线性变换 <img src="https://latex.codecogs.com/png.latex?T%20%5Cin%20%5Cmathcal%20B(V)">，任取非零的 <img src="https://latex.codecogs.com/png.latex?y%20%5Cin%20%5Coperatorname%7BIm%7DT">，存在线性函数 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi%20%5Cin%20V%5E*"> 使得 <img src="https://latex.codecogs.com/png.latex?T%20x%20=%20%5Cvarphi(x)%20y,%5C,%20%5Cforall%20x%20%5Cin%20V">．已经知道 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20A"> 中存在一个秩为 <img src="https://latex.codecogs.com/png.latex?1"> 的线性变换 <img src="https://latex.codecogs.com/png.latex?T_0">，则任取非零的 <img src="https://latex.codecogs.com/png.latex?y_0%20%5Cin%20%5Coperatorname%7BIm%7DT_0">，存在线性函数 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi_0%20%5Cin%20V%5E*"> 使得 <img src="https://latex.codecogs.com/png.latex?T_0%20x%20=%20%5Cvarphi_0(x)%20y_0,%5C,%20%5Cforall%20x%20%5Cin%20V">．</p>
<ul>
<li>由 Lemma&nbsp;1，存在 <img src="https://latex.codecogs.com/png.latex?A%20%5Cin%20%5Cmathcal%20A"> 使得 <img src="https://latex.codecogs.com/png.latex?A%20y_0%20=%20y">．</li>
<li>由 Corollary&nbsp;1，存在 <img src="https://latex.codecogs.com/png.latex?B%20%5Cin%20%5Cmathcal%20A"> 使得 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi_0%20B%20=%20%5Cvarphi">．</li>
</ul>
<p>综上， <img src="https://latex.codecogs.com/png.latex?%0AT%20x%20=%20%5Cvarphi(x)%20y%20=%20%5Cvarphi_0(Bx)%20A%20y_0%20=%20A(%5Cvarphi_0(Bx)%20y_0)%20=%20A%20T_0%20B%20x,%5Cquad%20%5Cforall%20x%20%5Cin%20V%0A"> 故 <img src="https://latex.codecogs.com/png.latex?T%20=%20A%20T_0%20B%20%5Cin%20%5Cmathcal%20A">．</p>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em> (第三部分). </span>设 <img src="https://latex.codecogs.com/png.latex?A%20%5Cin%20%5Cmathcal%20B(V)"> 是任一给定的线性变换，任取 <img src="https://latex.codecogs.com/png.latex?V"> 中的一组基 <img src="https://latex.codecogs.com/png.latex?b_1,%5Cdots,b_n">，设其对偶基为 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi_1,%5Cdots,%5Cvarphi_n">．定义关于基 <img src="https://latex.codecogs.com/png.latex?b_1,%5Cdots,b_n"> 的 <img src="https://latex.codecogs.com/png.latex?n"> 个投影变换 <img src="https://latex.codecogs.com/png.latex?P_k:%20x%20%5Cmapsto%20%5Cvarphi_k(x)%20b_k">，由对偶基性质，显然有 <img src="https://latex.codecogs.com/png.latex?I%20=%20%5Csum_%7Bk=1%7D%5En%20P_k">，于是 <img src="https://latex.codecogs.com/png.latex?%0AA%20=%20A%20I%20=%20A%20%5Csum_%7Bk=1%7D%5En%20P_k%20=%20%5Csum_%7Bk=1%7D%5En%20A%20P_k%0A"> 其中每一个 <img src="https://latex.codecogs.com/png.latex?A%20P_k"> 都是秩不超过 <img src="https://latex.codecogs.com/png.latex?1"> 的线性变换．</p>
</div>
<p>至此，Theorem&nbsp;1 得到完整证明．</p>
<p>Burnside 定理可以为下面的定理提供一个较为简单的证明．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-bv-simple" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2</strong></span> <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 是单代数，即 <img src="https://latex.codecogs.com/png.latex?%5C%7B%200%20%5C%7D"> 和 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 是代数 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上唯二的双边理想．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>显然 <img src="https://latex.codecogs.com/png.latex?%5C%7B%200%20%5C%7D"> 和 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20%5Cmathcal%20B(V)%20%5C%7D"> 都是双边理想．下面任取一 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的双边理想 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20I%20%5Cneq%20%5C%7B%200%20%5C%7D">，我们证明它不可约．任取 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20I"> 的一个非零不变子空间 <img src="https://latex.codecogs.com/png.latex?M">，由 <img src="https://latex.codecogs.com/png.latex?M,%5C,%20%5Cmathcal%20I"> 的非零性和 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20I%20V"> 的非零性， <img src="https://latex.codecogs.com/png.latex?%0AM%20%5Csupset%20%5Cmathcal%20I%20M%20%5Csupset%20%5Cmathcal%20B(V)%20%5Cmathcal%20I%20%5Cmathcal%20B(V)%20M%20=%20%5Cmathcal%20B(V)%20%5Cmathcal%20I%20V%20=%20%5Cmathcal%20B(V)%20(%5Cmathcal%20I%20V)%20=%20V%0A"> 故只能有 <img src="https://latex.codecogs.com/png.latex?M%20=%20V">，因此 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20I"> 确不可约．现在 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20I"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的不可约理想，理想一定是子代数，根据 Theorem&nbsp;1 就有 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20I%20=%20%5Cmathcal%20B(V)">．</p>
</div>
<p>下面的定理为 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的全体代数自同构提供了表示方法．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-bv-inner-aut" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3</strong></span> <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的全体代数自同构均为内自同构．即，任意 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的自同构 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi:%20%5Cmathcal%20B(V)%20%5Cto%20%5Cmathcal%20B(V)"> 都可写为 <img src="https://latex.codecogs.com/png.latex?A%20%5Cmapsto%20S%20A%20S%5E%7B-1%7D"> 的形式，其中 <img src="https://latex.codecogs.com/png.latex?S%20%5Cin%20%5Cmathcal%20B(V)"> 为与 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> 相关的某一可逆线性变换．</p>
</div>
</div>
</div>
</div>
<p>将矩阵表示和线性空间的语言相结合，可以为该定理提供思路更清晰的证明．</p>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>取定 <img src="https://latex.codecogs.com/png.latex?V"> 上的一组基 <img src="https://latex.codecogs.com/png.latex?x_1,%5Cdots,x_n">，定义 <img src="https://latex.codecogs.com/png.latex?%0AE_%7Bi,j%7D(x_1,%5Cdots,x_n)%20:=%20(x_1,%5Cdots,x_n)%20%5Chat%20E_%7Bi,j%7D%20%5Cpod%7Bi=1,2,%5Cdots,n;%5C;%20j=1,2,%5Cdots,n%7D%0A"> 其中全体 <img src="https://latex.codecogs.com/png.latex?%5Chat%20E_%7Bi,j%7D%20%5Cin%20%5Cmathrm%20M_n(%5Cmathbb%20C)"> 代表 <img src="https://latex.codecogs.com/png.latex?n"> 阶矩阵空间的一组自然基．于是全体 <img src="https://latex.codecogs.com/png.latex?E_%7Bi,j%7D"> 自然也是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的一组基．现在只需研究自同构 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> 将 <img src="https://latex.codecogs.com/png.latex?E_%7Bi,j%7D"> 映至何处．为显式地将 <img src="https://latex.codecogs.com/png.latex?S"> 确定出来，不妨先考虑 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D)"> 的性质．</p>
<p>首先指出，<img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D)"> 仍然是秩为 <img src="https://latex.codecogs.com/png.latex?1"> 的投影变换，因为：</p>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?E_%7Bi,i%7D"> 是投影变换，根据其幂等性和代数自同构保持乘法，<img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D)"> 也是投影变换．</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?E_%7Bi,i%7D%20%5Cmathcal%20B(V)%20E_%7Bi,i%7D"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的 <img src="https://latex.codecogs.com/png.latex?1"> 维子空间（从矩阵表示角度考虑），因此 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D%20%5Cmathcal%20B(V)%20E_%7Bi,i%7D)%20=%20%5Cvarphi(E_%7Bi,i%7D)%20%5Cmathcal%20B(V)%20%5Cvarphi(E_%7Bi,i%7D)"> 也是 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 的 <img src="https://latex.codecogs.com/png.latex?1"> 维子空间．考虑到 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D)"> 还是投影变换，故其秩只能为 <img src="https://latex.codecogs.com/png.latex?1">（同样从矩阵表示角度考虑）．</p></li>
</ul>
<p>现在设 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7BIm%7D%5Cvarphi(E_%7Bi,i%7D)%20=%20%5Coperatorname%7Bspan%7D%5C%7By_i%5C%7D">．因为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum_%7Bi=1%7D%5En%20%5Coperatorname%7Bspan%7D%5C%7By_i%5C%7D%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20%5Cvarphi(E_%7Bi,i%7D)%20V%20%5C%5C%0A&amp;%5Csupset%20%5Cleft(%20%5Csum_%7Bi=1%7D%5En%20%5Cvarphi(E_%7Bi,i%7D)%20%5Cright)%20V%20%5C%5C%0A&amp;=%20%5Cvarphi%20%5Cleft(%5Csum_%7Bi=1%7D%5En%20E_%7Bi,i%7D%20%5Cright)%20V%20%5C%5C%0A&amp;=%20%5Cvarphi(I)%20V%20=%20I%20V%20=%20V%0A%5Cend%7Baligned%7D%0A"> 故 <img src="https://latex.codecogs.com/png.latex?y_1,%5Cdots,y_n"> 仍是 <img src="https://latex.codecogs.com/png.latex?V"> 的一组基．定义可逆线性变换 <img src="https://latex.codecogs.com/png.latex?S(x_1,%5Cdots,x_n)%20:=%20(y_1,%5Cdots,y_n)">．至此，断言 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi"> 就是 <img src="https://latex.codecogs.com/png.latex?A%20%5Cmapsto%20S%20A%20S%5E%7B-1%7D">，为此下面证明 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,j%7D)%20=%20S%20E_%7Bi,j%7D%20S%5E%7B-1%7D">．</p>
<p>仍然先看 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D)">．已经知道 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D)"> 是秩为 <img src="https://latex.codecogs.com/png.latex?1"> 的投影变换，故 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A&amp;%5Cphantom%7B%5Cimplies%20.%7D%20%5Cvarphi(E_%7Bi,i%7D)%20y_i%20=%20y_i%20%5C%5C%0A&amp;%5Cimplies%20%5Cvarphi(E_%7Bi,i%7D)%20S%20x_i%20=%20S%20x_i%20%5C%5C%0A&amp;%5Cimplies%20S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,i%7D)%20S%20x_i%20=%20x_i%0A%5Cend%7Baligned%7D%0A"> 容易验证 <img src="https://latex.codecogs.com/png.latex?S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,i%7D)%20S"> 幂等且秩为 <img src="https://latex.codecogs.com/png.latex?1">，因此只能有 <img src="https://latex.codecogs.com/png.latex?S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,i%7D)%20S%20=%20E_%7Bi,i%7D">，即 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,i%7D)%20=%20S%20E_%7Bi,i%7D%20S%5E%7B-1%7D">．</p>
<p>现在看 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,j%7D)">，为此考察 <img src="https://latex.codecogs.com/png.latex?S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D)%20S"> 将 <img src="https://latex.codecogs.com/png.latex?x_1,%20%5Cdots,%20x_n"> 映至何处．事实上 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A&amp;%5Cphantom%7B%5Cimplies%20.%7D%20%5Cvarphi(E_%7Bi,j%7D)%20%5Cvarphi(E_%7Bj,j%7D)%20=%20%5Cvarphi(E_%7Bi,j%7D%20E_%7Bj,j%7D)%20=%20%5Cvarphi(E_%7Bi,j%7D)%20%5C%5C%0A&amp;%5Cimplies%20%5Cvarphi(E_%7Bi,j%7D)%20S%20E_%7Bj,j%7D%20S%5E%7B-1%7D%20=%20S%20E_%7Bi,j%7D%20S%5E%7B-1%7D%5C%5C%0A&amp;%5Cimplies%20S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D)%20S%20E_%7Bj,j%7D%20=%20E_%7Bi,j%7D%5C%5C%0A&amp;%5Cimplies%20S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D)%20S%20x_j%20=%20x_i%0A%5Cend%7Baligned%7D%0A"> 且对任何 <img src="https://latex.codecogs.com/png.latex?k%20%5Cneq%20j">， <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A(S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D)%20S)%20x_k%0A&amp;=%20S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D)%20y_k%20%5C%5C%0A&amp;=%20S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D%20E_%7Bj,j%7D)%20y_k%20%5C%5C%0A&amp;=%20S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D)%20(%5Cvarphi(E_%7Bj,j%7D)%20y_k)%20%5C%5C%0A&amp;=%200%0A%5Cend%7Baligned%7D%0A"> 故可以断定 <img src="https://latex.codecogs.com/png.latex?S%5E%7B-1%7D%20%5Cvarphi(E_%7Bi,j%7D)%20S%20=%20E_%7Bi,j%7D">，即 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(E_%7Bi,j%7D)%20=%20S%5E%7B-1%7D%20E_%7Bi,j%7D%20S">．</p>
</div>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>研究 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的自同态时，可能在应用线性变换关于其作用域 <img src="https://latex.codecogs.com/png.latex?V"> 的性质时遇到困难．这时需要将其合理转化为 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的代数性质，如考虑投影变换的幂等性，将投影变换秩为 <img src="https://latex.codecogs.com/png.latex?1"> 转化为 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20B(V)"> 上的 <img src="https://latex.codecogs.com/png.latex?1"> 维子空间等．这些技巧在证明中多次使用．</p>
</div>




<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-radjavi_simultaneous_2000" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">H. Radjavi and P. Rosenthal, <em>Simultaneous <span>Triangularization</span></em>. in Universitext. New York, NY: Springer, 2000. doi: <a href="https://doi.org/10.1007/978-1-4612-1200-3">10.1007/978-1-4612-1200-3</a>.</div>
</div>
<div id="ref-axler_linear_2015" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">S. Axler, <em>Linear <span>Algebra</span> <span>Done</span> <span>Right</span></em>. in Undergraduate <span>Texts</span> in <span>Mathematics</span>. Cham: Springer International Publishing, 2015. doi: <a href="https://doi.org/10.1007/978-3-319-11080-6">10.1007/978-3-319-11080-6</a>.</div>
</div>
</div></section></div> ]]></description>
  <category>数学</category>
  <guid>https://blog.sun123zxy.top/posts/20240121-burnside/</guid>
  <pubDate>Sat, 20 Jan 2024 16:00:00 GMT</pubDate>
  <media:content url="https://blog.sun123zxy.top/posts/20240121-burnside/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>一元多项式的 Delta 判别式</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20231018-discriminant/</link>
  <description><![CDATA[ 




<section id="e-基m-基与-p-基" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> <img src="https://latex.codecogs.com/png.latex?e">-基、<img src="https://latex.codecogs.com/png.latex?m">-基与 <img src="https://latex.codecogs.com/png.latex?p">-基</h1>
<section id="整数分拆" class="level3">
<h3 class="anchored" data-anchor-id="整数分拆">整数分拆</h3>
<p>设非负整数数列 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda%20:=%20(%5Clambda_1,%20%5Clambda_2,%20%5Cdots)"> 只有有限项非零且（不严格）单调递减．定义长度 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20L(%5Cboldsymbol%5Clambda)"> 为其非零项元素个数；定义 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20S(%5Cboldsymbol%5Clambda)"> 为其非零项元素之和．此时称 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda"> 是整数 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20S(%5Cboldsymbol%5Clambda)"> 的一个长度为 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20L(%5Cboldsymbol%5Clambda)"> 的<em>分拆</em>．</p>
<p>由于分拆只有有限项非零，对大于等于 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20L(%5Cboldsymbol%5Clambda)"> 的非负整数 <img src="https://latex.codecogs.com/png.latex?k">，我们也常省略从第 <img src="https://latex.codecogs.com/png.latex?k+1"> 项开始的全为 <img src="https://latex.codecogs.com/png.latex?0"> 的项，将 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda"> 直接记为长度为 <img src="https://latex.codecogs.com/png.latex?k"> 的非负整数数组 <img src="https://latex.codecogs.com/png.latex?(%5Clambda_1,%20%5Clambda_2,%20%5Cdots,%20%5Clambda_k)">．</p>
<p>Ferrers diagram 和 Young diagram 是图示分拆的常见方法．</p>
<p>通过沿主对角线翻转分拆的 Ferrers diagram 或 Young diagram，可以定义<em>分拆的转置</em>．分拆 <img src="https://latex.codecogs.com/png.latex?%5Clambda"> 的转置记为 <img src="https://latex.codecogs.com/png.latex?%5Clambda%5E%5Cmathrm%7BT%7D">．转置后分拆的长度变为原分拆的首项，而首项变为原分拆的长度．</p>
</section>
<section id="单项对称多项式" class="level3">
<h3 class="anchored" data-anchor-id="单项对称多项式">单项对称多项式</h3>
<p>设 <img src="https://latex.codecogs.com/png.latex?n"> 是正整数，<img src="https://latex.codecogs.com/png.latex?K"> 是一个域．记 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20x%20:=%20(x_1,%5Cdots,x_n)">．设 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda%20:=%20(%5Clambda_1,%20%5Clambda_2,%20%5Cdots%20%5Clambda_n)"> 是长度不超过 <img src="https://latex.codecogs.com/png.latex?n"> 的一个分拆．</p>
<p>定义 <img src="https://latex.codecogs.com/png.latex?n"> 元多项式环 <img src="https://latex.codecogs.com/png.latex?K%5B%5Cboldsymbol%20x%5D"> 上的关于分拆 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda"> 的<em>单项对称多项式</em>（monomial symmetric polynomial）<img src="https://latex.codecogs.com/png.latex?m_%7B%5Cboldsymbol%5Clambda%7D(%5Cboldsymbol%20x)"> 为各项系数为 <img src="https://latex.codecogs.com/png.latex?1"> 的含有单项式 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20x%5E%7B%5Cboldsymbol%5Clambda%7D%20:=%20x_1%5E%7B%5Clambda_1%7D%20x_2%5E%7B%5Clambda_2%7D%20%5Cdots%20x_n%5E%7B%5Clambda_n%7D"> 的项数最少的对称多项式．</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?m_%7B(2,1,0)%7D(x_1,x_2,x_3)%20=%20x_1%5E2%20x_2%20+%20x_1%5E2%20x_3%20+%20x_1%20x_2%5E2%20+%20x_1%20x_3%5E2%20+%20x_2%5E2%20x_3%20+%20x_2%20x_3%5E2"></li>
<li><img src="https://latex.codecogs.com/png.latex?m_%7B(2,2,1)%7D(x_1,x_2,x_3)%20=%20x_1%5E2%20x_2%5E2%20x_3%20+%20x_1%5E2%20x_2%20x_3%5E2%20+%20x_1%20x_2%5E2%20x_3%5E2"></li>
</ul>
<p>易见 <img src="https://latex.codecogs.com/png.latex?m_%7B%5Cboldsymbol%5Clambda%7D(%5Cboldsymbol%20x)"> 是次数为 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20S(%5Cboldsymbol%5Clambda)"> 的齐次（homogeneous）多项式．全体单项对称多项式构成 <img src="https://latex.codecogs.com/png.latex?n"> 元对称多项式环 <img src="https://latex.codecogs.com/png.latex?%5CLambda_n%20%5Csubset%20K%5B%5Cboldsymbol%20x%5D"> 作为 <img src="https://latex.codecogs.com/png.latex?K"> 上线性空间的一组基底．</p>
</section>
<section id="单项对称多项式-1" class="level3">
<h3 class="anchored" data-anchor-id="单项对称多项式-1">单项对称多项式</h3>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-mono-term-count" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 1</strong></span> 对一给定的长度不超过 <img src="https://latex.codecogs.com/png.latex?n"> 的分拆 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda%20:=%20(%5Clambda_1,%20%5Clambda_2,%20%5Cdots%20%5Clambda_n)">，<img src="https://latex.codecogs.com/png.latex?n"> 元单项对称多项式 <img src="https://latex.codecogs.com/png.latex?m_%5Clambda(%5Cboldsymbol%20x)"> 共有多少项？</p>
</div>
</div>
</div>
</div>
<p>在计数时根据分拆中重复项的分布情况进行消序．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-lambda-dim" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 2</strong></span> <img src="https://latex.codecogs.com/png.latex?n"> 元 <img src="https://latex.codecogs.com/png.latex?d"> 次单项对称多项式共有多少种可能的构型？设 <img src="https://latex.codecogs.com/png.latex?%5CLambda_n%5E%7B(d)%7D%20%5Csubset%20%5CLambda_n"> 由全体至多 <img src="https://latex.codecogs.com/png.latex?d"> 次的 <img src="https://latex.codecogs.com/png.latex?n"> 元对称多项式构成，其作为 <img src="https://latex.codecogs.com/png.latex?K"> 上线性空间的维数是多少？</p>
</div>
</div>
</div>
</div>
<p>该问题等价于求满足 <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20S(%5Cboldsymbol%5Clambda)%20=%20d">，<img src="https://latex.codecogs.com/png.latex?%5Cmathcal%20L(%5Cboldsymbol%5Clambda)%20%5Cleq%20n"> 的所有可能分拆 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda"> 的数量，也即“将 <img src="https://latex.codecogs.com/png.latex?d"> 个无标号球放入 <img src="https://latex.codecogs.com/png.latex?n"> 个可空置的无标号盒”的可行方案数．</p>
</section>
<section id="基本对称多项式" class="level3">
<h3 class="anchored" data-anchor-id="基本对称多项式">基本对称多项式</h3>
<p><img src="https://latex.codecogs.com/png.latex?n"> 元多项式环 <img src="https://latex.codecogs.com/png.latex?K%5B%5Cboldsymbol%20x%5D"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 个<em>基本对称多项式</em>（elementary symmetric polynomial）定义为 <img src="https://latex.codecogs.com/png.latex?%0Ae_k(x_1,%5Cdots,x_n)%20:=%20%5Csum_%7B1%20%5Cleq%20i_1%20%3C%20i_2%20%5Cdots%20%3C%20i_k%20%5Cleq%20n%7D%20x_%7Bi_1%7D%20x_%7Bi_2%7D%20%5Cdots%20x_%7Bi_k%7D,%20%5Cquad%20k%20=%201,2,%5Cdots,%20n%0A"> 使用单项对称多项式的记号，也可记为 <img src="https://latex.codecogs.com/png.latex?%0Ae_k(%5Cboldsymbol%20x)%20:=%20m_%7B%5Cboldsymbol%5Clambda_k%7D%20(%5Cboldsymbol%20x)%0A"> 其中分拆 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda_k%20:=%20(1,%5Cdots,1,0,%5Cdots)"> 的前 <img src="https://latex.codecogs.com/png.latex?k"> 项为 <img src="https://latex.codecogs.com/png.latex?1">，其余项皆为 <img src="https://latex.codecogs.com/png.latex?0">．</p>
<p>设分拆 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda%20:=%20(%5Clambda_1,%5Clambda_2,%5Cdots)"> 满足 <img src="https://latex.codecogs.com/png.latex?%5Clambda_i%20%5Cleq%20n,%20%5Cquad%20%5Cforall%20i%20%5Cin%20%5Cmathbb%20N_+">．我们记 <img src="https://latex.codecogs.com/png.latex?e_%7B%5Cboldsymbol%5Clambda%7D(%5Cboldsymbol%20x)%20:=%20e_%7B%5Clambda_1%7D(%5Cboldsymbol%20x)%20e_%7B%5Clambda_2%7D(%5Cboldsymbol%20x)%20%5Cdots%20e_%7B%5Clambda_%7B%5Cmathcal%20L(%5Cboldsymbol%5Clambda)%7D%7D(%5Cboldsymbol%20x)">．</p>
</section>
<section id="基本对称多项式-1" class="level3">
<h3 class="anchored" data-anchor-id="基本对称多项式-1">基本对称多项式</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-e-decomp" class="theorem">
<p><span class="theorem-title"><strong>定理 1 (对称多项式基本定理)</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?f(%5Cboldsymbol%20x)"> 是域 <img src="https://latex.codecogs.com/png.latex?K"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 元对称多项式，则存在唯一的 <img src="https://latex.codecogs.com/png.latex?g(%5Cboldsymbol%20x)%20%5Cin%20K%5B%5Cboldsymbol%20x%5D">，使得 <img src="https://latex.codecogs.com/png.latex?%0Af(%5Cboldsymbol%20x)%20=%20g(e_1(%5Cboldsymbol%20x),%5Cdots,e_n(%5Cboldsymbol%20x))%0A"></p>
</div>
</div>
</div>
</div>
<p>该定理对交换环上的对称多项式仍然成立．这意味着若 <img src="https://latex.codecogs.com/png.latex?f"> 是整系数对称多项式，则 <img src="https://latex.codecogs.com/png.latex?g"> 也是整系数多项式．</p>
<p>在定理的存在性证明中，为消去首项对应的单项对称多项式 <img src="https://latex.codecogs.com/png.latex?m_%7B%5Cboldsymbol%5Clambda%7D(%5Cboldsymbol%20x)">，我们构造的若干个基本对称多项式的乘积恰为 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20e_%7B%5Cboldsymbol%5Clambda%5E%5Cmathrm%7BT%7D%7D">．</p>
<p>考察全体满足 <img src="https://latex.codecogs.com/png.latex?%5Clambda_i%20%5Cleq%20n,%20%5Cquad%20%5Cforall%20i%20%5Cin%20%5Cmathbb%20N_+"> 的分拆 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%5Clambda"> 对应的 <img src="https://latex.codecogs.com/png.latex?e_%7B%5Cboldsymbol%5Clambda%7D(%5Cboldsymbol%20x)">，它们构成了 <img src="https://latex.codecogs.com/png.latex?n"> 元对称多项式环 <img src="https://latex.codecogs.com/png.latex?%5CLambda_n"> 作为 <img src="https://latex.codecogs.com/png.latex?K"> 上线性空间的另一组基底．</p>
</section>
<section id="幂和对称多项式" class="level3">
<h3 class="anchored" data-anchor-id="幂和对称多项式">幂和对称多项式</h3>
<p><img src="https://latex.codecogs.com/png.latex?n"> 元多项式环 <img src="https://latex.codecogs.com/png.latex?K%5B%5Cboldsymbol%20x%5D"> 上的<em>幂和对称多项式</em>（power sum symmetric polynomial）定义为 <img src="https://latex.codecogs.com/png.latex?%0Ap_k(x_1,%5Cdots,x_n)%20:=%20x_1%5Ek%20+%20x_2%5Ek%20+%20%5Cdots%20+%20x_n%5Ek,%5Cquad%20k%20%5Cin%20%5Cmathbb%20N%0A"> 使用单项对称多项式的记号，也可记为 <img src="https://latex.codecogs.com/png.latex?%0Ap_k(%5Cboldsymbol%20x)%20:=%20m_%7B(k,0,0,%5Cdots)%7D%0A"> 特别的，<img src="https://latex.codecogs.com/png.latex?p_0(%5Cboldsymbol%20x)%20=%20n">．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-p-decomp" class="theorem">
<p><span class="theorem-title"><strong>定理 2</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Q%20%5Csubset%20K%20%5Csubset%20%5Cmathbb%20C"> 是数域，设 <img src="https://latex.codecogs.com/png.latex?f(%5Cboldsymbol%20x)"> 是域 <img src="https://latex.codecogs.com/png.latex?K"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 元对称多项式，则存在唯一的 <img src="https://latex.codecogs.com/png.latex?g(%5Cboldsymbol%20x)%20%5Cin%20K%5B%5Cboldsymbol%20x%5D">，使得 <img src="https://latex.codecogs.com/png.latex?f(%5Cboldsymbol%20x)%20=%20g(p_1(%5Cboldsymbol%20x),%5Cdots,p_n(%5Cboldsymbol%20x))">．</p>
</div>
</div>
</div>
</div>
<p>一般地，结论对特征为 <img src="https://latex.codecogs.com/png.latex?0"> 的域 <img src="https://latex.codecogs.com/png.latex?K"> 也成立．</p>
</section>
<section id="幂和对称多项式-1" class="level3">
<h3 class="anchored" data-anchor-id="幂和对称多项式-1">幂和对称多项式</h3>
<p>以下定理递推地给出了幂和对称多项式 <img src="https://latex.codecogs.com/png.latex?p_1,%5Cdots,p_n"> 与基本对称多项式 <img src="https://latex.codecogs.com/png.latex?e_1,%5Cdots,e_n"> 间的关系．定理&nbsp;2 的存在性部分可由这一定理给出．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-newton" class="theorem">
<p><span class="theorem-title"><strong>定理 3 (Newton’s Identities)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ap_k%20&amp;=%20%5Csum_%7Bi=1%7D%5E%7Bk-1%7D%20(-1)%5E%7Bi-1%7D%20e_i%20p_%7Bk-i%7D%20+%20(-1)%5E%7Bk-1%7D%20k%20e_k%20&amp;%20k%20&amp;=%201,2,%5Cdots,n%20%5C%5C%0Ap_k%20&amp;=%20%5Csum_%7Bi=1%7D%5En%20(-1)%5E%7Bi-1%7D%20e_i%20p_%7Bk-i%7D%20&amp;%20k&amp;%3En%20%5C%5C%0Ak%20e_k%20&amp;=%20%5Csum_%7Bi=1%7D%5Ek%20(-1)%5E%7Bi-1%7D%20p_%7Bi%7D%20e_%7Bk-i%7D%20&amp;%20k%20&amp;=%201,2,%5Cdots,n%20%5C%5C%0A0%20&amp;=%20%5Csum_%7Bi=1%7D%5En%20(-1)%5E%7Bi-1%7D%20p_%7Bi%7D%20e_%7Bk-i%7D%20&amp;%20k%20&amp;%3E%20n%0A%5Cend%7Baligned%7D%0A"></p>
</div>
</div>
</div>
</div>
</section>
<section id="其它基底" class="level3">
<h3 class="anchored" data-anchor-id="其它基底">其它基底</h3>
<p>完全齐次对称多项式（Complete homogeneous symmetric polynomials）、Schur 多项式……</p>
<p>本节主要参考 <span class="citation" data-cites="wp_sympoly wp_e-basis wp_p-basis wp_newton">[1]–[4]</span>．</p>
</section>
</section>
<section id="delta-判别式" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Delta 判别式</h1>
<section id="vietas-formulas" class="level3">
<h3 class="anchored" data-anchor-id="vietas-formulas">Vieta’s formulas</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-vieta" class="theorem">
<p><span class="theorem-title"><strong>定理 4 (Vieta’s formulas)</strong></span> 设数域 <img src="https://latex.codecogs.com/png.latex?K%20%5Csubset%20%5Cmathbb%20C"> 上 <img src="https://latex.codecogs.com/png.latex?n"> 次首一多项式（monic polynomial） <img src="https://latex.codecogs.com/png.latex?%0AA(x)%20:=%20x%5En%20+%20a_%7Bn-1%7D%20x%5E%7Bn-1%7D%20+%20%5Cdots%20+%20a_0%20=%20(x-c_1)(x-c_2)%5Cdots(x-c_n)%0A"> 其 <img src="https://latex.codecogs.com/png.latex?n"> 个复根分别为 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20c%20:=%20(c_1,%20c_2,%5Cdots,c_n)">，则 <img src="https://latex.codecogs.com/png.latex?A(x)"> 的系数可由关于根的 <img src="https://latex.codecogs.com/png.latex?n"> 个 <img src="https://latex.codecogs.com/png.latex?n"> 元基本对称多项式表示 <img src="https://latex.codecogs.com/png.latex?%0Aa_%7Bn-k%7D%20=%20e_k(-%5Cboldsymbol%20c)%20=%20(-1)%5Ek%20%5Csum_%7B1%20%5Cleq%20i_1%20%3C%20%5Cdots%20%3C%20i_k%20%5Cleq%20n%7D%20c_%7Bi_1%7D%20c_%7Bi_2%7D%20%5Cdots%20c_%7Bi_k%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?k%20=%201,2,%5Cdots,n">．特别的 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Aa_0%20&amp;=%20e_n(-%5Cboldsymbol%20c)%20=%20(-1)%5En%20c_1%20c_2%20%5Cdots%20c_n%20%5C%5C%0Aa_%7Bn-1%7D%20&amp;=%20e_1(-%5Cboldsymbol%20c)%20=%20-(c_1%20+%20c_2%20+%20%5Cdots%20+%20c_n)%0A%5Cend%7Baligned%7D%0A"></p>
</div>
</div>
</div>
</div>
</section>
<section id="vieta-定理与对称多项式基本定理" class="level3">
<h3 class="anchored" data-anchor-id="vieta-定理与对称多项式基本定理">Vieta 定理与对称多项式基本定理</h3>
<ul>
<li><p>即使尚未获知多项式 <img src="https://latex.codecogs.com/png.latex?n"> 个复根 <img src="https://latex.codecogs.com/png.latex?c_1,%5Cdots,c_n"> 的具体取值，我们也能通过已知的多项式系数 <img src="https://latex.codecogs.com/png.latex?a_0,%5Cdots,a_%7Bn-1%7D"> 获知 <img src="https://latex.codecogs.com/png.latex?n"> 个 <img src="https://latex.codecogs.com/png.latex?n"> 元基本对称多项式在根处的取值．</p></li>
<li><p>对称多项式基本定理指出，任何对称多项式都可被（唯一）表示为关于 <img src="https://latex.codecogs.com/png.latex?n"> 个基本对称多项式的一个多项式．</p></li>
<li><p>仅需知晓多项式的系数，就可获得任意给定对称多项式在根处的取值．</p></li>
<li><p>目标：构造一个（数域 <img src="https://latex.codecogs.com/png.latex?K%20%5Csubset%20%5Cmathbb%20C"> 上的）<img src="https://latex.codecogs.com/png.latex?n"> 元对称多项式，使得能通过代入求值的方式，快速检测 <img src="https://latex.codecogs.com/png.latex?n"> 个复数是否两两不同．</p></li>
</ul>
</section>
<section id="vandermonde-行列式" class="level3">
<h3 class="anchored" data-anchor-id="vandermonde-行列式">Vandermonde 行列式</h3>
<p>考察作为（数域 <img src="https://latex.codecogs.com/png.latex?K%20%5Csubset%20%5Cmathbb%20C"> 上）<img src="https://latex.codecogs.com/png.latex?n"> 元多项式的 Vandermonde 行列式 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A%5Cdet%20V%20&amp;:=%20%5Cdet%20%5Cbegin%7Bpmatrix%7D%20x_j%5E%7Bi-1%7D%20%5Cend%7Bpmatrix%7D_%7Bi=1,j=1%7D%5E%7Bn,n%7D%20%5C%5C%0A&amp;=%0A%5Cdet%20%5Cbegin%7Bpmatrix%7D%0A1%20%20%20%20%20%20%20&amp;%201%20%20%20%20%20&amp;%20%5Cdots%20&amp;%201%20%20%20%20%20%5C%5C%0Ax_1%20%20%20%20%20&amp;%20x_2%20%20%20&amp;%20%5Cdots%20&amp;%20x_n%20%20%20%5C%5C%0A%5Cvdots%20%20&amp;%20%5Cvdots&amp;%20%5Cddots&amp;%20%5Cvdots%5C%5C%0Ax_1%5E%7Bn-1%7D%20&amp;%20x_2%5E%7Bn-1%7D%20&amp;%20%5Cdots%20&amp;%20x_n%5E%7Bn-1%7D%20%20%20%0A%5Cend%7Bpmatrix%7D%20=%20%5Cprod_%7B1%20%5Cleq%20i%20%3C%20j%20%5Cleq%20n%7D%20(x_j%20-%20x_i)%0A%5Cend%7Bsplit%7D%0A"> 它是否可用于判定重根？它是对称多项式吗？</p>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em>. </span><img src="https://latex.codecogs.com/png.latex?%5Cdet%20V"> 是一个斜对称多项式．事实上，<img src="https://latex.codecogs.com/png.latex?%5Cdet%20V"> 与所有对称多项式的乘积构成了全体斜对称多项式（alternating polynomials）．</p>
</div>
</section>
<section id="判别式" class="level3">
<h3 class="anchored" data-anchor-id="判别式">判别式</h3>
<p>设（数域 <img src="https://latex.codecogs.com/png.latex?K%20%5Csubset%20%5Cmathbb%20C"> 上的）<img src="https://latex.codecogs.com/png.latex?n"> 元对称多项式 <img src="https://latex.codecogs.com/png.latex?%0AD(x_1,%5Cdots,x_n)%20:=%20(%5Cdet%20V)%5E2%20=%20%5Cprod_%7B1%20%5Cleq%20i%20%3C%20j%20%5Cleq%20n%7D%20(x_j%20-%20x_i)%5E2%0A"> 称其为（数域 <img src="https://latex.codecogs.com/png.latex?K"> 上）一元 <img src="https://latex.codecogs.com/png.latex?n"> 次首一多项式的<em>判别式</em>（Discriminant）．当代入的 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20x%20:=%20(x_1,%5Cdots,x_n)%20%5Csubset%20%5Cmathbb%20C"> 互不相同时，<img src="https://latex.codecogs.com/png.latex?D(%5Cboldsymbol%20x)%20%5Cneq%200">；否则 <img src="https://latex.codecogs.com/png.latex?D(%5Cboldsymbol%20x)%20=%200">．</p>
<p>根据对称多项式基本定理，存在唯一数域 <img src="https://latex.codecogs.com/png.latex?K"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 元多项式 <img src="https://latex.codecogs.com/png.latex?d">，使得 <img src="https://latex.codecogs.com/png.latex?d(e_1(%5Cboldsymbol%20x),%5Cdots,e_n(%5Cboldsymbol%20x))%20=%20D(%5Cboldsymbol%20x)">．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-discriminant" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 1</strong></span> 数域 <img src="https://latex.codecogs.com/png.latex?K%20%5Csubset%20%5Cmathbb%20C"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 次首一多项式 <img src="https://latex.codecogs.com/png.latex?f(x)%20:=%20x%5En%20+%20a_%7Bn-1%7D%20x%5E%7Bn-1%7D%20+%20%5Cdots%20+%20a_0"> 在复数域中有重根的充分必要条件是 <img src="https://latex.codecogs.com/png.latex?d(a_%7Bn-1%7D,%5Cdots,a_0)%20=%200">．</p>
</div>
</div>
</div>
</div>
<p>这是因为 <img src="https://latex.codecogs.com/png.latex?f(x)"> 的 <img src="https://latex.codecogs.com/png.latex?n"> 个复根 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20c%20:=%20(c_1,%5Cdots,c_n)"> 满足 <img src="https://latex.codecogs.com/png.latex?%0AD(-%5Cboldsymbol%20c)%20=%20d(e_1(-%5Cboldsymbol%20c),%5Cdots,e_n(-%5Cboldsymbol%20c))%20=%20d(a_%7Bn-1%7D,%5Cdots,a_0)%0A"></p>
</section>
<section id="判别式-1" class="level3">
<h3 class="anchored" data-anchor-id="判别式-1">判别式</h3>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-2-discriminant" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 3</strong></span> 写出数域 <img src="https://latex.codecogs.com/png.latex?K%20%5Csubset%20%5Cmathbb%20C"> 上一元二次多项式 <img src="https://latex.codecogs.com/png.latex?x%5E2%20+%20bx%20+%20c"> 的判别式．</p>
</div>
</div>
</div>
</div>
<p>对次数更高的方程，直接使用消首项方法求解判别式 <img src="https://latex.codecogs.com/png.latex?D(%5Cboldsymbol%20x)"> 在基本对称多项式下的表示 <img src="https://latex.codecogs.com/png.latex?d(e_1,%5Cdots,e_n)"> 将变得相当繁琐．下面利用判别式与 Vandermonde 行列式的关系得到另一种分解方法．</p>
</section>
<section id="另一分解方法" class="level3">
<h3 class="anchored" data-anchor-id="另一分解方法">另一分解方法</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AD(%5Cboldsymbol%20x)%20&amp;=%20(%5Cdet%20V)%5E2%20=%20%5Cdet(V%20V%5ET)%20%5C%5C%0A&amp;=%20%5Cdet%20(%5Cbegin%7Bpmatrix%7D%0A1%20%20%20%20%20%20%20&amp;%201%20%20%20%20%20&amp;%20%5Cdots%20&amp;%201%20%20%20%20%20%5C%5C%0Ax_1%20%20%20%20%20&amp;%20x_2%20%20%20&amp;%20%5Cdots%20&amp;%20x_n%20%20%20%5C%5C%0A%5Cvdots%20%20&amp;%20%5Cvdots&amp;%20%5Cddots&amp;%20%5Cvdots%5C%5C%0Ax_1%5E%7Bn-1%7D%20&amp;%20x_2%5E%7Bn-1%7D%20&amp;%20%5Cdots%20&amp;%20x_n%5E%7Bn-1%7D%20%20%20%0A%5Cend%7Bpmatrix%7D%20%5Cbegin%7Bpmatrix%7D%0A1%20%20%20%20%20%20%20&amp;%20x_1%20%20%20&amp;%20%5Cdots%20%20%20%20%20&amp;%20x_1%5E%7Bn-1%7D%20%5C%5C%0A1%20%20%20%20%20%20%20&amp;%20x_2%20%20%20&amp;%20%5Cdots%20%20%20%20%20&amp;%20x_2%5E%7Bn-1%7D%20%5C%5C%0A%5Cvdots%20%20&amp;%20%5Cvdots&amp;%20%5Cddots%20%20%20%20&amp;%20%5Cvdots%20%20%20%20%5C%5C%0A1%20%20%20%20%20%20%20&amp;%20x_n%20%20%20&amp;%20%5Cdots%20%20%20%20%20&amp;%20x_n%5E%7Bn-1%7D%0A%5Cend%7Bpmatrix%7D)%20%5C%5C%0A&amp;=%20%5Cdet%20%5Cbegin%7Bpmatrix%7D%0An%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;%20p_1(%5Cboldsymbol%20x)%20%20%20&amp;%20%5Cdots%20%20%20%20%20&amp;%20p_%7Bn-1%7D(%5Cboldsymbol%20x)%20%20%20%5C%5C%0Ap_1(%5Cboldsymbol%20x)%20%20%20%20%20&amp;%20p_2(%5Cboldsymbol%20x)%20%20%20&amp;%20%5Cdots%20%20%20%20%20&amp;%20p_n(%5Cboldsymbol%20x)%20%20%20%20%20%20%20%5C%5C%0A%5Cvdots%20%20%20%20%20%20%20%20%20%20&amp;%20%5Cvdots%20%20%20%20%20%20%20%20&amp;%20%5Cddots%20%20%20%20&amp;%20%5Cvdots%20%20%20%20%20%20%20%20%20%20%20%20%5C%5C%0Ap_%7Bn-1%7D(%5Cboldsymbol%20x)%20&amp;%20p_n(%5Cboldsymbol%20x)%20%20%20&amp;%20%5Cdots%20%20%20%20%20&amp;%20p_%7B2n-2%7D(%5Cboldsymbol%20x)%0A%5Cend%7Bpmatrix%7D%0A=%20%5Cdet%20%5Cbegin%7Bpmatrix%7D%20p_%7Bi+j-2%7D(%5Cboldsymbol%20x)%20%5Cend%7Bpmatrix%7D_%7Bi=1,j=1%7D%5E%7Bn,n%7D%0A%5Cend%7Baligned%7D%0A"> 而由 Newton’s Identities，幂和对称多项式 <img src="https://latex.codecogs.com/png.latex?p_k(%5Cboldsymbol%20x)"> 可较容易地递推分解为基本对称多项式的多项式组合，故我们找到了分解 <img src="https://latex.codecogs.com/png.latex?D(%5Cboldsymbol%20x)"> 的一种更易操作的方法．</p>
</section>
<section id="另一分解方法-1" class="level3">
<h3 class="anchored" data-anchor-id="另一分解方法-1">另一分解方法</h3>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-3-discriminant" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 4</strong></span> 写出数域 <img src="https://latex.codecogs.com/png.latex?K%20%5Csubset%20%5Cmathbb%20C"> 上不完全三次多项式 <img src="https://latex.codecogs.com/png.latex?x%5E3%20+%20bx%20+%20c"> 的判别式．</p>
</div>
</div>
</div>
</div>
<p>本节主要参考 <span class="citation" data-cites="qiu-algebra lan-algebra wp_partition wp_alternating">[5]–[8]</span>．</p>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-wp_sympoly" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">Wikipedia, <span>《Symmetric polynomial》</span>. <a href="https://en.wikipedia.org/wiki/Symmetric_polynomial" class="uri">https://en.wikipedia.org/wiki/Symmetric_polynomial</a>.</div>
</div>
<div id="ref-wp_e-basis" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">Wikipedia, <span>《Elementary symmetric polynomial》</span>. <a href="https://en.wikipedia.org/wiki/Elementary_symmetric_polynomial" class="uri">https://en.wikipedia.org/wiki/Elementary_symmetric_polynomial</a>.</div>
</div>
<div id="ref-wp_p-basis" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline">Wikipedia, <span>《Power sum symmetric polynomial》</span>. <a href="https://en.wikipedia.org/wiki/Power_sum_symmetric_polynomial" class="uri">https://en.wikipedia.org/wiki/Power_sum_symmetric_polynomial</a>.</div>
</div>
<div id="ref-wp_newton" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline">Wikipedia, <span>《Newton’s identities》</span>. <a href="https://en.wikipedia.org/wiki/Newton%27s_identities" class="uri">https://en.wikipedia.org/wiki/Newton%27s_identities</a>.</div>
</div>
<div id="ref-qiu-algebra" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">丘维声, <span>《高等代数&nbsp;下册》</span>, 3 本北京: 高等教育出版社, 2015, 页 57–66.</div>
</div>
<div id="ref-lan-algebra" class="csl-entry">
<div class="csl-left-margin">[6] </div><div class="csl-right-inline">蓝以中, <span>《高等代数简明教程（下册）》</span>, 2 本北京: 北京大学出版社, 2007, 页 213–217.</div>
</div>
<div id="ref-wp_partition" class="csl-entry">
<div class="csl-left-margin">[7] </div><div class="csl-right-inline">Wikipedia, <span>《Partition (number theory)》</span>. <a href="https://en.wikipedia.org/wiki/Partition_(number_theory)" class="uri">https://en.wikipedia.org/wiki/Partition_(number_theory)</a>.</div>
</div>
<div id="ref-wp_alternating" class="csl-entry">
<div class="csl-left-margin">[8] </div><div class="csl-right-inline">Wikipedia, <span>《Alternating polynomial》</span>. <a href="https://en.wikipedia.org/wiki/Alternating_polynomial" class="uri">https://en.wikipedia.org/wiki/Alternating_polynomial</a>.</div>
</div>
</div></section></div> ]]></description>
  <category>数学</category>
  <category>讲稿</category>
  <category>slide</category>
  <guid>https://blog.sun123zxy.top/posts/20231018-discriminant/</guid>
  <pubDate>Tue, 17 Oct 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>A Convolution-Oriented FFT Tutorial</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230928-dft/</link>
  <description><![CDATA[ 




<section id="forewords" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Forewords</h1>
<section id="卷积但不止卷积---fft-漫谈" class="level3">
<h3 class="anchored" data-anchor-id="卷积但不止卷积---fft-漫谈">卷积，但不止卷积 - FFT 漫谈</h3>
<ul>
<li>先有 FT，再有 DFT，才有 FFT</li>
<li>时频转换是最初的用途</li>
<li>发现单位根优秀性质，James Cooley, John Tukey 发明现代 FFT 加速 DFT，但此前相似的发现早已有之</li>
<li>后来将 DFT 与卷积定理联系，FFT 才被用于计算多项式乘法</li>
<li>复数运算精度误差推动了 NTT 的发展</li>
<li>应用：任何需要频率和卷积的地方．频谱、滤波器、音乐、雷达、图像处理……</li>
<li>OI/XCPC 中主要关心卷积</li>
</ul>
</section>
<section id="推荐食用方法" class="level3">
<h3 class="anchored" data-anchor-id="推荐食用方法">推荐食用方法</h3>
<ul>
<li><p>初步要求</p>
<ul>
<li>知道 DFT、FFT 可用于快速计算多项式卷积</li>
<li>掌握 FFT 加速 DFT 计算的原理和实现</li>
<li>会应用结论改动 FFT 加速 NTT 计算</li>
<li>见识一些卷积解决的基本问题，初步了解生成函数在组合计数中的应用</li>
<li>题目可选择性完成，请多花时间消化原理和思想</li>
</ul></li>
<li><p>学有余力 / 集训后继续消化</p>
<ul>
<li>系统学习生成函数</li>
<li>实现多项式全家桶</li>
<li>对原理感兴趣的同学可对数学部分做进一步研究．本讲内容是线性代数、抽象代数、数论等多领域的综合应用．欢迎讨论．</li>
<li>学习集合幂级数相关知识点（FMT，FWT，……），体会其思想与 FFT 的同与异</li>
<li>学习 FFT 在信号、频谱等非算法竞赛向实际问题中的应用</li>
</ul></li>
<li><p>Learn for fun :)</p></li>
</ul>
</section>
<section id="记号说明" class="level3">
<h3 class="anchored" data-anchor-id="记号说明">记号说明</h3>
<ul>
<li><p>记 <img src="https://latex.codecogs.com/png.latex?%5Bn%5D%20=%20%5C%7B%200,1,%5Cdots,n-1%20%5C%7D">，此时可用 <img src="https://latex.codecogs.com/png.latex?k%20%5Cin%20%5Bn%5D"> 代替下标取值范围 <img src="https://latex.codecogs.com/png.latex?k=0,1,%5Cdots,n-1"> 的记法．</p>
<ul>
<li>集合论中已定义 <img src="https://latex.codecogs.com/png.latex?n%20=%20%5C%7B%200,1,%5Cdots,n-1%20%5C%7D">，这里的中括号是为了强调其集合含义．</li>
</ul></li>
<li><p>使用 Iverson 括号约定：设 <img src="https://latex.codecogs.com/png.latex?P"> 是一个命题，记 <img src="https://latex.codecogs.com/png.latex?%0A%5BP%5D%20:=%20%5Cbegin%7Bcases%7D%0A%20%20%20%20%20%20%20%201%20&amp;%20%5Ctext%7B$P$%20is%20true%7D%20%5C%5C%0A%20%20%20%20%20%20%20%200%20&amp;%20%5Ctext%7Botherwise%7D%0A%20%20%20%20%20%20%20%20%5Cend%7Bcases%7D%0A"></p></li>
<li><p>多项式的规模定义为多项式的次数加一．特别的，零多项式的规模为 <img src="https://latex.codecogs.com/png.latex?0">．</p>
<ul>
<li>以后会混用 <img src="https://latex.codecogs.com/png.latex?n-1"> 次多项式和规模为 <img src="https://latex.codecogs.com/png.latex?n"> 的多项式的说法．</li>
</ul></li>
</ul>
</section>
</section>
<section id="fftntt-in-a-nutshell" class="level1 page-columns page-full" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> FFT/NTT in a nutshell</h1>
<section id="fft" class="level2 page-columns page-full" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="fft"><span class="header-section-number">2.1</span> FFT</h2>
<section id="多项式卷积" class="level3">
<h3 class="anchored" data-anchor-id="多项式卷积">多项式卷积</h3>
<p>给定两个至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式 <img src="https://latex.codecogs.com/png.latex?%0AA(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_k%20x%5Ek,%5Cquad%20B(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20b_k%20x%5Ek%0A"> 如何快速计算两者的卷积，即它们相乘得到的多项式的系数？ <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20%20%20%20%20%20%20(A*B)(x)%20=%20A(x)B(x)%20&amp;=%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20a_i%20x%5Ei%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20b_j%20x%5Ej%20%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=%20%5Csum_%7Bk=0%7D%5E%7B2n-2%7D%20x%5Ek%20%5Csum_%7Bi+j=k%7D%20a_i%20b_j%0A%20%20%20%20%5Cend%7Baligned%7D%0A"> 上式给出了 <img src="https://latex.codecogs.com/png.latex?O(n%5E2)"> 的朴素做法．</p>
</section>
<section id="系数---点值---系数" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="系数---点值---系数">系数 - 点值 - 系数</h3>
<ul>
<li><p>代入任意 <img src="https://latex.codecogs.com/png.latex?x"> 可得到多项式在 <img src="https://latex.codecogs.com/png.latex?x"> 处的点值</p></li>
<li><p>点值意义下的多项式乘法是 <img src="https://latex.codecogs.com/png.latex?O(n)"> 的 <img src="https://latex.codecogs.com/png.latex?%0A(A*B)(x)%20=%20A(x)B(x)%0A"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?n"> 点确定一个至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式<sup>1</sup></p></li>
</ul>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;一种常见的证法是使用 Vandermonde 行列式证明矩阵可逆．后面会介绍多项式环风格的证明．</p></div></div><p>若计算至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式的某 <img src="https://latex.codecogs.com/png.latex?n"> 个点值存在快速算法，而通过多项式的某 <img src="https://latex.codecogs.com/png.latex?n"> 个点值确定原多项式系数亦存在快速算法，就有通过 <img src="https://latex.codecogs.com/png.latex?O(n)"> 的点值乘法加速多项式乘法计算的可能．</p>
</section>
<section id="系数---点值---系数---快速转换" class="level3">
<h3 class="anchored" data-anchor-id="系数---点值---系数---快速转换">系数 - 点值 - 系数 - 快速转换？</h3>
<ul>
<li><p>朴素计算任意指定 <img src="https://latex.codecogs.com/png.latex?n"> 个位置点值需要 <img src="https://latex.codecogs.com/png.latex?O(n%5E2)">．</p></li>
<li><p>Lagrange<span class="citation" data-cites="oiwiki-lagrange">[1]</span> 插值给出了 <img src="https://latex.codecogs.com/png.latex?O(n%5E2)"> 将任意位置 <img src="https://latex.codecogs.com/png.latex?n"> 个点值还原为多项式系数的算法．</p></li>
<li><p>能否选取 <img src="https://latex.codecogs.com/png.latex?n"> 个特殊的点值使系数 - 点值、点值 - 系数的变换支持快速计算？</p></li>
</ul>
</section>
<section id="discrete-fourier-transform" class="level3">
<h3 class="anchored" data-anchor-id="discrete-fourier-transform">Discrete Fourier Transform</h3>
<p>离散傅里叶变换（Discrete Fourier Transform, DFT）接受一个至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式的 <img src="https://latex.codecogs.com/png.latex?n"> 个系数，将复数域上的 <img src="https://latex.codecogs.com/png.latex?n"> 个 <img src="https://latex.codecogs.com/png.latex?n"> 次单位根代入系数表达式以得到给定多项式的 <img src="https://latex.codecogs.com/png.latex?n"> 个点值． <img src="https://latex.codecogs.com/png.latex?%0Aa_0,a_1,%5Cdots,a_%7Bn-1%7D%20%5Clongrightarrow%20A(1),A(%5Comega_n),%5Cdots,A(%5Comega_n%5E%7Bn-1%7D)%0A"></p>
<p>得益于单位根的特殊运算性质，二者均有被称为快速傅里叶变换（Fast Fourier Transform, FFT）的快速算法．</p>
</section>
<section id="复数域单位根" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="复数域单位根">复数域单位根</h3>
<p>复数域上的 <img src="https://latex.codecogs.com/png.latex?n"> 个 <img src="https://latex.codecogs.com/png.latex?n"> 次单位根<sup>2</sup> <img src="https://latex.codecogs.com/png.latex?%0A%5Comega_n%5Ek%20:=%20e%5E%7B%5Cfrac%20%7B2%20%5Cpi%20k%7D%7Bn%7D%20i%7D%20=%20%5Ccos%20%5Cfrac%7B2%20%5Cpi%20k%7D%7Bn%7D%20+%20i%20%5Csin%20%5Cfrac%7B2%20%5Cpi%20k%7D%7Bn%7D,%5Cquad%20k%20%5Cin%20%5Bn%5D%0A"> 是复平面单位圆上的 <img src="https://latex.codecogs.com/png.latex?n"> 等分点，易验证它们是复数域中唯一满足方程 <img src="https://latex.codecogs.com/png.latex?z%5En%20=%201"> 的解．</p>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;有的文献定义 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%20:=%20e%5E%7B-%5Cfrac%20%7B2%20%5Cpi%7D%7Bn%7D%20i%7D">，或是因为信号处理领域常用 IDFT 将信号时域采样数据变为频域信息．事实上，DFT/IDFT 的说法也常有反转，但这只是形式问题．</p></div></div><p>所有单位根模长均为 <img src="https://latex.codecogs.com/png.latex?1">．第 <img src="https://latex.codecogs.com/png.latex?k"> 个单位根的辐角为 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%20%7B2%20%5Cpi%20k%7D%7Bn%7D">．复数乘法”模长相乘，辐角相加”的性质告诉我们 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%5Ei%20%5Comega_n%5Ej%20=%20%5Comega_n%5E%7Bi+j%7D">．</p>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em> (Euler’s formula for nerds). </span>Euler 公式 <img src="https://latex.codecogs.com/png.latex?e%5E%7Bit%7D%20=%20%5Ccos%20t%20+%20i%20%5Csin%20t"> 的一种证明可用指数函数的另一定义 <img src="https://latex.codecogs.com/png.latex?%5Cexp%20z%20=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20(1+%5Cfrac%20z%20n)%5En"> 分析复数处极坐标的极限 <span class="citation" data-cites="euler-formula">[2]</span>．严格来讲，如果三角函数和指数函数都由级数定义 <span class="citation" data-cites="trigonometry">[3]</span>，Euler 公式几乎是显然的．总之，这里仅将 Euler 公式作为一种紧凑的记号使用，细节不做要求．</p>
</div>
</section>
<section id="复数域单位根---三个重要性质" class="level3">
<h3 class="anchored" data-anchor-id="复数域单位根---三个重要性质">复数域单位根 - 三个重要性质<sup>3</sup></h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-cancel" class="theorem">
<p><span class="theorem-title"><strong>定理 1 (消去引理)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Comega_%7Bdn%7D%5E%7Bdk%7D%20=%20%5Comega_n%5Ek,%5Cquad%20%5Cforall%20d%20%5Cin%20%5Cmathbb%20N_+%0A"></p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-half" class="theorem">
<p><span class="theorem-title"><strong>定理 2 (折半引理)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%20%5Comega_%7B2n%7D%5E%7B2k%7D%20:%20k%20%5Cin%20%5B2n%5D%20%5Cright%5C%7D%20=%20%5Cleft%5C%7B%20%5Comega_n%5Ek%20:%20k%20%5Cin%20%5Bn%5D%20%5Cright%5C%7D%0A"></p>
</div>
</div>
</div>
</div>
<p>消去 / 折半引理将在 FFT 的推导中使用．</p>
</section>
<div class="no-row-height column-margin column-container"><div id="fn3"><p><sup>3</sup>&nbsp;这三个引理是《算法导论》<span class="citation" data-cites="algointro">[4]</span> 引入的．</p></div></div><section id="复数域单位根---三个重要性质-1" class="level3">
<h3 class="anchored" data-anchor-id="复数域单位根---三个重要性质-1">复数域单位根 - 三个重要性质</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-summation" class="theorem">
<p><span class="theorem-title"><strong>定理 3 (求和引理)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%201%20n%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7Bik%7D%20=%20%5Bn%20%5Cmid%20i%5D%0A"></p>
</div>
</div>
</div>
</div>
<p>求和引理的证明使用了等比数列求和公式．将在 IDFT 的推导中用到．</p>
</section>
<section id="fast-fourier-transform" class="level3">
<h3 class="anchored" data-anchor-id="fast-fourier-transform">Fast Fourier Transform</h3>
<p>考虑将至多 <img src="https://latex.codecogs.com/png.latex?2n-1"> 次的待变换多项式 <img src="https://latex.codecogs.com/png.latex?A(x)%20=%20%5Csum_%7Bk=0%7D%5E%7B2n-1%7D%20a_k%20x%5Ek"> 奇偶分项两个至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式 <img src="https://latex.codecogs.com/png.latex?A(x)%20=%20A_0%20(x%5E2)%20+%20x%20A_1(x%5E2)">，其中 <img src="https://latex.codecogs.com/png.latex?%0AA_0%20(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k%7D%20x%5Ek,%5Cquad%0AA_1%20(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k+1%7D%20x%5Ek%0A"> 代入 <img src="https://latex.codecogs.com/png.latex?x%20=%20%5Comega_%7B2n%7D%5Ek,%5C,%20k%20%5Cin%20%5B2n%5D">，用单位根消去或折半引理（<img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D%5E%7B2k%7D%20=%20%5Comega_n%5Ek">）得 <img src="https://latex.codecogs.com/png.latex?%0AA(%5Comega_%7B2n%7D%5Ek)%20=%20A_0%20(%5Comega_%7Bn%7D%5Ek)%20+%20%5Comega_%7B2n%7D%5Ek%20A_1%20(%5Comega_%7Bn%7D%5Ek)%0A"> 再用 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D%5E%7Bn%7D%20=%20-1"> 得 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AA(%5Comega_%7B2n%7D%5Ek)%20&amp;=%20A_0%20(%5Comega_n%5Ek)%20+%20%5Comega_%7B2n%7D%5Ek%20A_1%20(%5Comega_n%5Ek)%20%5C%5C%0AA(%5Comega_%7B2n%7D%5E%7Bn+k%7D)%20&amp;=%20A_0%20(%5Comega_n%5Ek)%20-%20%5Comega_%7B2n%7D%5Ek%20A_1(%5Comega_n%5Ek)%0A%5Cend%7Baligned%7D%0A,%5Cquad%20k%20%5Cin%20%5Bn%5D%0A"> 原多项式 <img src="https://latex.codecogs.com/png.latex?A(x)"> 规模为 <img src="https://latex.codecogs.com/png.latex?2n"> 的 DFT 转化为规模为 <img src="https://latex.codecogs.com/png.latex?n"> 的 <img src="https://latex.codecogs.com/png.latex?A_0(x)"> 和 <img src="https://latex.codecogs.com/png.latex?A_1(x)"> 的 DFT．递归计算就可得到 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)"> 的算法．</p>
</section>
<section id="dft-的矩阵表示" class="level3">
<h3 class="anchored" data-anchor-id="dft-的矩阵表示">DFT 的矩阵表示</h3>
<p>记 <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bgathered%7D%0A%5Cboldsymbol%20a%20=%20%20%5Cbegin%7Bpmatrix%7Da_0%20%5C%5C%20a_1%20%5C%5C%20%5Cvdots%20%5C%5C%20a_%7Bn-1%7D%5Cend%7Bpmatrix%7D,%5Cquad%0AF%20=%20%5Cleft(%20%5Comega_n%5E%7Bij%7D%20%5Cright)_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D%20=%20%5Cbegin%7Bpmatrix%7D%0A1%20&amp;%201%20&amp;%20%5Cdots%20&amp;%201%20%5C%5C%0A1%20&amp;%20%5Comega_n%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A1%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B(n-1)(n-1)%7D%0A%5Cend%7Bpmatrix%7D%0A%5Cend%7Bgathered%7D%0A"> 则 DFT 的变换结果（给定系数 <img src="https://latex.codecogs.com/png.latex?a_0,a_1,%5Cdots,a_%7Bn-1%7D"> 的多项式在 <img src="https://latex.codecogs.com/png.latex?n"> 个 <img src="https://latex.codecogs.com/png.latex?n"> 次单位根处的点值）可表示为 <img src="https://latex.codecogs.com/png.latex?%0A%5Chat%7B%5Cboldsymbol%20a%7D%20=%20%5Cbegin%7Bpmatrix%7DA(1)%20%5C%5C%20A(%5Comega_n)%20%5C%5C%20%5Cvdots%20%5C%5C%20A(%5Comega_n%5E%7Bn-1%7D)%5Cend%7Bpmatrix%7D%20=%20F%20%5Cboldsymbol%20a%0A"></p>
</section>
<section id="idft" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="idft">IDFT</h3>
<p>由单位根的消去引理可证，DFT 矩阵 <img src="https://latex.codecogs.com/png.latex?F"> 的逆矩阵为<sup>4</sup> <img src="https://latex.codecogs.com/png.latex?%0AF%5E%7B-1%7D%20=%20%5Cfrac%201%20n%20%5Cleft(%20%5Comega_n%5E%7B-ij%7D%20%5Cright)_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D%20=%20%5Cfrac%201%20n%20%5Cbegin%7Bpmatrix%7D%0A1%20&amp;%201%20&amp;%20%5Cdots%20&amp;%201%20%5C%5C%0A1%20&amp;%20%5Comega_n%5E%7B-1%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B-(n-1)%7D%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A1%20&amp;%20%5Comega_n%5E%7B-(n-1)%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B-(n-1)(n-1)%7D%0A%5Cend%7Bpmatrix%7D%0A"> 于是 IDFT 的过程可表示为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cboldsymbol%20a%20%20=%20F%5E%7B-1%7D%20%5Chat%7B%5Cboldsymbol%20a%7D%0A"></p>
<div class="no-row-height column-margin column-container"><div id="fn4"><p><sup>4</sup>&nbsp;这也表明适当归一化后的 DFT 矩阵是一个酉矩阵．</p></div></div><p>故快速计算 IDFT 的方法与 FFT 几乎一致，只需将计算 DFT 时使用的本原单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 替换为 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%5E%7B-1%7D"> 并对最终结果除以 <img src="https://latex.codecogs.com/png.latex?n"> 即可．</p>
</section>
<section id="梳理" class="level3">
<h3 class="anchored" data-anchor-id="梳理">梳理</h3>
<ul>
<li><p>怎么计算卷积？</p>
<ul>
<li>把至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式 <img src="https://latex.codecogs.com/png.latex?A(x)"> 和至多 <img src="https://latex.codecogs.com/png.latex?m-1"> 次的多项式 <img src="https://latex.codecogs.com/png.latex?B(x)"> 写成至多 <img src="https://latex.codecogs.com/png.latex?n+m-2"> 次的多项式（高位补 <img src="https://latex.codecogs.com/png.latex?0">）．为计算 FFT 方便，还要继续补 <img src="https://latex.codecogs.com/png.latex?0"> 至一个大于其次数的 <img src="https://latex.codecogs.com/png.latex?2"> 的幂．</li>
<li>对 <img src="https://latex.codecogs.com/png.latex?A(x)"> 和 <img src="https://latex.codecogs.com/png.latex?B(x)"> 多点求值．</li>
<li>把两个多项式的点值逐点相乘．</li>
<li>多点插值还原 <img src="https://latex.codecogs.com/png.latex?(A*B)(x)"> 的系数．</li>
</ul></li>
<li><p>怎么快速求值？</p>
<ul>
<li>选点选单位根就是 DFT．</li>
<li>消去引理和折半引理使我们可以用 FFT 算法递归地计算 DFT．</li>
<li>推导已经给出了递归的写法，之后还会介绍常数更优的迭代实现．</li>
</ul></li>
<li><p>怎么快速插值？</p>
<ul>
<li>求和引理给出了 DFT 矩阵的逆矩阵．</li>
<li>计算方法很相似，最后逐项除掉一个规模．</li>
</ul></li>
</ul>
</section>
<section id="fft-递归实现---dft-部分" class="level3">
<h3 class="anchored" data-anchor-id="fft-递归实现---dft-部分">FFT 递归实现 - DFT 部分</h3>
<p>方便起见，我们只处理 <img src="https://latex.codecogs.com/png.latex?n"> 为 <img src="https://latex.codecogs.com/png.latex?2"> 的幂的情形．以下 C 风格的代码实现了递归的 DFT 和 IDFT．</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;bits/stdc++.h&gt;</span></span>
<span id="cb1-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;complex&gt;</span></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> complex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> CP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ll MXN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4E6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> PI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14159265358979323846</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">l</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6">CP tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>MXN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> _DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CP A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[],</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb1-8">    n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-11">    _DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> _DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-12">    CP w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)),</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))),</span> wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb1-14">        tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>  k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+</span>wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-15">        tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]-</span>wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-16">        wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CP A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[],</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb1-19">    _DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">l</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="fft-递归实现---卷积部分" class="level3">
<h3 class="anchored" data-anchor-id="fft-递归实现---卷积部分">FFT 递归实现 - 卷积部分</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// alternatively, use std::__lg() in GCC</span></span>
<span id="cb2-2">ll log2ceil<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>ll cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span> </span>
<span id="cb2-3">CP A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>MXN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>MXN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>MXN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> ll outC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>MXN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-4">ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> conv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll inA<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[],</span>ll aN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll inB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[],</span>ll bN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb2-5">    ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>log2ceil<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>aN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>bN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>aN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>inA<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>bN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>inB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-8">    DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb2-10">    DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> outC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>round<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>real<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">());</span></span>
<span id="cb2-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> outC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Drawbacks?</p>
<ul>
<li>递归实现慢</li>
<li>临时数组丑</li>
<li>封装性为零</li>
</ul>
</section>
<section id="fft-迭代" class="level3">
<h3 class="anchored" data-anchor-id="fft-迭代">FFT 迭代</h3>
<p>迭代地实现 FFT 不仅在常数上更加优秀，亦更便于使用 C++ 的容器进行封装．这并不困难，只需自底向上模拟 FFT 递归过程即可．</p>
<p>唯一的问题——最底层的顺序？</p>
<p>来观察一轮 <img src="https://latex.codecogs.com/png.latex?2%5E3">-FFT 自顶向下的置换过程 <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bmatrix%7D%0A2%5E3%20&amp;%200/000%20&amp;%201/001%20&amp;%202/010%20&amp;%203/011%20&amp;%204/100%20&amp;%205/101%20&amp;%206/110%20&amp;%207/111%20%5C%5C%0A2%5E2%20&amp;%200/000%20&amp;%202/010%20&amp;%204/100%20&amp;%206/110%20&amp;%201/001%20&amp;%203/011%20&amp;%205/101%20&amp;%207/111%20%5C%5C%0A2%5E1%20&amp;%200/000%20&amp;%204/100%20&amp;%202/010%20&amp;%206/110%20&amp;%201/001%20&amp;%205/101%20&amp;%203/011%20&amp;%207/111%20%5C%5C%0A2%5E0%20&amp;%200/000%20&amp;%204/100%20&amp;%202/010%20&amp;%206/110%20&amp;%201/001%20&amp;%205/101%20&amp;%203/011%20&amp;%207/111%0A%5Cend%7Bmatrix%7D%0A"></p>
<p>你发现了什么？</p>
</section>
<section id="蝶形运算" class="level3">
<h3 class="anchored" data-anchor-id="蝶形运算">蝶形运算</h3>
<p>在计算点值前，<img src="https://latex.codecogs.com/png.latex?2%5En">-FFT 事实上完成了一次 <img src="https://latex.codecogs.com/png.latex?n">-位逆序置换．分解来看，规模为 <img src="https://latex.codecogs.com/png.latex?2%5Ek"> 的层的置换完成了对 <img src="https://latex.codecogs.com/png.latex?2%5E%7Bn-k%7D"> 对应二进制位的分类．</p>
<p>我们有 <img src="https://latex.codecogs.com/png.latex?O(n)"> 的递推方法获得这一置换．</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> spawnrev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb3-2">    rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb3-4">        rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&lt;&lt;(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb3-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="fft-迭代实现" class="level3">
<h3 class="anchored" data-anchor-id="fft-迭代实现">FFT 迭代实现</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CP A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[],</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// rev[] should be spawned in advance</span></span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> swap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// a one-to-one permutation</span></span>
<span id="cb4-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb4-4">        CP w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)),</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))),</span> wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb4-6">            CP wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb4-8">                CP x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-9">                A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10">                wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">l</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>请自行实现更易用的容器封装版本．</p>
</section>
</section>
<section id="ntt" class="level2 page-columns page-full" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="ntt"><span class="header-section-number">2.2</span> NTT</h2>
<section id="ntt-速成" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="ntt-速成">NTT 速成<sup>5</sup></h3>
<p>FFT 的缺点？浮点数带来的大常数与精度问题．</p>
<p><img src="https://latex.codecogs.com/png.latex?998244353=2%5E%7B23%7D%20%5Ctimes%207%20%5Ctimes%2017%20+%201">，同时是一个质数．</p>
<p>我们指出，在系数和点值模 <img src="https://latex.codecogs.com/png.latex?p=998244353"> 的意义下，当规模 <img src="https://latex.codecogs.com/png.latex?n%20%5Cleq%20p"> 时<sup>6</sup>，至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式仍可由其 <img src="https://latex.codecogs.com/png.latex?n"> 个点值唯一确定，故仍可使用系数-点值-系数的方法求得多项式卷积．</p>
<div class="no-row-height column-margin column-container"><div id="fn6"><p><sup>6</sup>&nbsp;否则只有 <img src="https://latex.codecogs.com/png.latex?p"> 个不同元素的 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 中根本取不到 <img src="https://latex.codecogs.com/png.latex?n"> 个不同位置的点值．后面会深入讨论．</p></div></div><p>我们指出，对于满足 <img src="https://latex.codecogs.com/png.latex?n%20%5Cmid%20p-1"> 的 <img src="https://latex.codecogs.com/png.latex?n">，依 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%20:=%203%5E%7B%5Cfrac%7Bp-1%7D%7Bn%7D%7D"> 定义的 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 在模 <img src="https://latex.codecogs.com/png.latex?p"> 意义下与复数域中定义的 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 发挥相同的作用，仍可进行规模至多为 <img src="https://latex.codecogs.com/png.latex?2%5E%7B23%7D"> 的 FFT 作为模 <img src="https://latex.codecogs.com/png.latex?p=998244353"> 意义下 NTT 的快速算法．</p>
<p>只需修改单位根定义，把复数运算改为整数取模，就得到了能算 NTT 的 FFT 的实现．</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> PR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">998244353</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-2">ll w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,(</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/(</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<div class="no-row-height column-margin column-container"><div id="fn5"><p><sup>5</sup>&nbsp;NTT 原理需较多笔墨，稍后介绍．</p></div></div><section id="fftntt-in-a-nutshell---小结概念区分" class="level3">
<h3 class="anchored" data-anchor-id="fftntt-in-a-nutshell---小结概念区分">FFT/NTT in a nutshell - 小结：概念区分</h3>
<ul>
<li><p>关于 DFT</p>
<ul>
<li>Discrete Fourier Transform, DFT, 离散傅里叶变换</li>
<li>Fast Fourier Transform, FFT, 快速傅里叶变换</li>
<li>FFT 是计算 DFT 的快速算法</li>
</ul></li>
<li><p>关于 NTT</p>
<ul>
<li>Number Theoretic Transform, NTT, 数论变换</li>
<li>FFT 在复数域上的多项式环 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BC%7D%5Bx%5D"> 中进行，而 NTT 在模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BZ%7D_p%5Bx%5D"> 上进行</li>
<li>快速计算 DFT / IDFT, NTT 都用 FFT，故一般不使用”FNTT”的说法</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="applications" class="level1 page-columns page-full" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Applications</h1>
<section id="基本应用" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="基本应用"><span class="header-section-number">3.1</span> 基本应用</h2>
<section id="基本应用-1" class="level3">
<h3 class="anchored" data-anchor-id="基本应用-1">基本应用</h3>
<dl>
<dt>大整数乘法</dt>
<dd>
<p>十进制数可拆解为多项式表示，计算卷积后处理进位即可．由于数字最大只是 <img src="https://latex.codecogs.com/png.latex?9">，合理数据范围下卷起来不会爆模数，直接用 NTT 实现即可．</p>
</dd>
<dt>背包计数</dt>
<dd>
<p>两个背包的合并就是多项式卷积．</p>
</dd>
<dt>滤波器</dt>
<dd>
<p>反转多项式的系数数组再做卷积，可以快速得到两个多项式滑动窗口式的内积．</p>
</dd>
<dt>位运算</dt>
<dd>
<p>有些位运算可以写成卷积的形式．模 <img src="https://latex.codecogs.com/png.latex?2"> 意义下”异或”是加法，“与”是乘法，“或”可以通过取反转化为”与”．</p>
</dd>
<dt>字符串</dt>
<dd>
<p>通过巧妙设定字符串距离函数，FFT 可解决更广泛的字符串匹配问题．</p>
</dd>
<dt>值域次数化</dt>
<dd>
<p>当值域较小时，将待计算的值放在多项式次数上统计贡献次数，可以绕开某些极难求解的数值问题．例如 Vandermonde 行列式的快速计算．</p>
</dd>
</dl>
</section>
<section id="基本应用---分治-fft" class="level3">
<h3 class="anchored" data-anchor-id="基本应用---分治-fft">基本应用 - 分治 FFT</h3>
<p>对多个长度相同的多项式的卷积，分治地卷起来可降低时间复杂度．长度不一时，挑小的先卷也可减小常数（用堆维护）．</p>
<p>另有一种 CDQ 风格的分治 FFT．CDQ 长于处理带偏序的二元点对贡献，在处理形如 <img src="https://latex.codecogs.com/png.latex?c_k%20=%20%5Csum_%7Bi%3Ej%7D%20%5Bi+j=k%5D%20a_i%20b_j"> 的带偏序卷积时可以应用．</p>
<p>当卷积的前后项存在依赖关系时，也可使用此法保证处理顺序恰当．然而此类依赖问题往往也可通过解生成函数方程的方法求得封闭形式．</p>
<p>时间复杂度均为 <img src="https://latex.codecogs.com/png.latex?%0AT(n)%20=%202%20T%20%5Cleft(%20%5Cfrac%20n%202%20%5Cright)%20+%20O(n%20%5Clog%20n)%20=%20O(n%20%5Clog%5E2%20n)%0A"></p>
</section>
</section>
<section id="生成函数初步" class="level2 page-columns page-full" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="生成函数初步"><span class="header-section-number">3.2</span> 生成函数初步</h2>
<section id="生成函数初步---导言" class="level3">
<h3 class="anchored" data-anchor-id="生成函数初步---导言">生成函数初步 - 导言</h3>
<p>生成函数是一种对数列的操作技巧．通过将数列表示为多项式或形式幂级数，数列间复杂的和式操作可用简单函数的乘法、复合等运算进行表示，从而大大降低了数列变换技巧的使用门槛．</p>
<p>生成函数在组合数学中应用广泛，且生成函数的部分操作在组合意义下也有较为直观的理解．本节将带大家初窥其中的奥妙．限于篇幅和主讲人能力，我们仅以题带点地讲解，期冀为大家建立构造生成函数的直觉．请感兴趣的同学下来做进一步研究．</p>
<p>熟悉 Taylor 展开的同学或能较快上手此部分内容．</p>
</section>
<section id="ordinary-generating-function" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="ordinary-generating-function">Ordinary Generating Function</h3>
<p>序列 <img src="https://latex.codecogs.com/png.latex?a_n"> 的普通生成函数（Ordinary Generating Function, OGF）定义为其对应的多项式（形式幂级数）<img src="https://latex.codecogs.com/png.latex?A(x)%20=%20%5Csum_%7Bn=0%7D%5E%7B+%5Cinfty%7D%20a_n%20x%5En">．这样书写的目的是为了便于进行数列间的卷积操作．特别的，Taylor 展开（或广义二项式定理）风格的 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%20%7B1-x%7D%20=%201%20+%20x%20+%20x%5E2%20+%20%5Cdots"> 也是常用技巧之一<sup>7</sup>．</p>
<div class="no-row-height column-margin column-container"><div id="fn7"><p><sup>7</sup>&nbsp;多项式求逆等多项式进阶操作，我们后续讲解．</p></div></div><div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-ogf-basic" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 1</strong></span> 写出下列数列的 OGF．下标从 <img src="https://latex.codecogs.com/png.latex?0"> 开始．</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?1,0,0,0%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,1,1,1,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,0,1,0,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,-1,1,-1,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,2,3,4,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,2,4,8,%5Cdots"></li>
</ul>
</div>
</div>
</div>
</div>
</section>
<section id="ogf-组合意义" class="level3">
<h3 class="anchored" data-anchor-id="ogf-组合意义">OGF 组合意义</h3>
<p>OGF 相乘，是背包，是卷积，是两块无标号组合对象的有序拼接．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-ogf-comb" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 2</strong></span> 写出下列计数问题的 OGF，均以 <img src="https://latex.codecogs.com/png.latex?n"> 作为数列的下标．</p>
<ul>
<li>在 <img src="https://latex.codecogs.com/png.latex?m"> 个物品中选出 <img src="https://latex.codecogs.com/png.latex?n"> 个的方案数．</li>
<li>容量为 <img src="https://latex.codecogs.com/png.latex?n"> 的背包装下体积分别为 <img src="https://latex.codecogs.com/png.latex?a_i"> 的 <img src="https://latex.codecogs.com/png.latex?m"> 个物品的方案数．</li>
<li>同上，但每个物品有无限个．</li>
<li><img src="https://latex.codecogs.com/png.latex?n"> 个无标号球放入 <img src="https://latex.codecogs.com/png.latex?r"> 个有标号盒的方案数，要求盒非空．</li>
<li>同上，但盒可空．</li>
<li>将整数 <img src="https://latex.codecogs.com/png.latex?n"> 分拆为若干正整数之和的方案数．</li>
</ul>
</div>
</div>
</div>
</div>
</section>
<section id="exponential-generating-function" class="level3">
<h3 class="anchored" data-anchor-id="exponential-generating-function">Exponential Generating Function</h3>
<p>序列 <img src="https://latex.codecogs.com/png.latex?a_n"> 的指数生成函数（Exponential Generating Function, EGF）定义为 <img src="https://latex.codecogs.com/png.latex?%0AA(x)%20=%20%5Csum_%7Bn=0%7D%5E%7B+%5Cinfty%7D%20a_n%20%5Cfrac%20%7Bx%5En%7D%7Bn!%7D%0A"></p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-egf-basic" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 3</strong></span> 写出下列序列的 EGF，下标从 <img src="https://latex.codecogs.com/png.latex?0"> 开始．</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?1,0,0,0,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,1,1,1,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,2,4,8,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?0,1,0,-1,0,1,0,-1,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?1,0,-1,0,1,0,-1,0,%5Cdots"></li>
<li><img src="https://latex.codecogs.com/png.latex?0,1,-1,2!,-3!,4!,%5Cdots"></li>
</ul>
</div>
</div>
</div>
</div>
</section>
<section id="egf-组合意义" class="level3">
<h3 class="anchored" data-anchor-id="egf-组合意义">EGF 组合意义</h3>
<p>观察两个 EGF 的乘积 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AA(x)%20B(x)%20&amp;=%20%5Csum_%7Bi=0%7D%5E%7B+%5Cinfty%7D%20a_i%20%5Cfrac%7Bx%5Ei%7D%7Bi!%7D%20%5Csum_%7Bj=0%7D%5E%7B+%5Cinfty%7D%20b_j%20%5Cfrac%7Bx%5Ej%7D%7Bj!%7D%20%5C%5C%0A&amp;=%20%5Csum_%7Bi=0%7D%5E%7B+%5Cinfty%7D%20%5Csum_%7Bj=0%7D%5E%7B+%5Cinfty%7D%20a_i%20b_j%20%5Cfrac%7Bx%5E%7Bi+j%7D%7D%7Bi!%20j!%7D%20%5C%5C%0A&amp;=%20%5Csum_%7Bn=0%7D%5E%7B+%5Cinfty%7D%20%5Csum_%7Bi=0%7D%5En%20a_i%20b_%7Bn-i%7D%20%5Cfrac%7Bx%5En%7D%7Bi!%20(n-i)!%7D%20%5C%5C%0A&amp;=%20%5Csum_%7Bn=0%7D%5E%7B+%5Cinfty%7D%20%5Csum_%7Bi=0%7D%5En%20a_i%20b_%7Bn-i%7D%20%5Cbinom%20n%20i%20%5Cfrac%7Bx%5En%7D%7Bn!%7D%0A%5Cend%7Baligned%7D%0A"> EGF 的乘积，相当于两块有标号组合对象的有序拼接．</p>
</section>
<section id="egf-组合意义-1" class="level3">
<h3 class="anchored" data-anchor-id="egf-组合意义-1">EGF 组合意义</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0AA(x)%20B(x)%20=%20%5Csum_%7Bi=0%7D%5E%7B+%5Cinfty%7D%20a_i%20%5Cfrac%7Bx%5Ei%7D%7Bi!%7D%20%5Csum_%7Bj=0%7D%5E%7B+%5Cinfty%7D%20b_j%20%5Cfrac%7Bx%5Ej%7D%7Bj!%7D%0A=%20%5Csum_%7Bn=0%7D%5E%7B+%5Cinfty%7D%20%5Csum_%7Bi=0%7D%5En%20a_i%20b_%7Bn-i%7D%20%5Cbinom%20n%20i%20%5Cfrac%7Bx%5En%7D%7Bn!%7D"></p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-egf-comb" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 4</strong></span> 写出下列计数问题的 EGF，均以 <img src="https://latex.codecogs.com/png.latex?n"> 作为数列的下标．</p>
<ul>
<li>长度为 <img src="https://latex.codecogs.com/png.latex?n"> 的排列的构型数．</li>
<li>长度为 <img src="https://latex.codecogs.com/png.latex?n"> 的圆排列的构型数．</li>
<li>将 <img src="https://latex.codecogs.com/png.latex?n"> 个有标号球放入 <img src="https://latex.codecogs.com/png.latex?r"> 个有标号盒的方案数，要求盒非空．</li>
<li>将 <img src="https://latex.codecogs.com/png.latex?n"> 个有标号球放入 <img src="https://latex.codecogs.com/png.latex?r"> 个无标号盒的方案数，要求盒非空．</li>
<li>将 <img src="https://latex.codecogs.com/png.latex?n"> 元集合划分为 <img src="https://latex.codecogs.com/png.latex?r"> 个等价类的方案数．</li>
<li>划分 <img src="https://latex.codecogs.com/png.latex?n"> 元集合的方案数．</li>
</ul>
</div>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="mathematics-behind" class="level1 page-columns page-full" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Mathematics behind</h1>
<section id="ntt-原理" class="level2 page-columns page-full" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="ntt-原理"><span class="header-section-number">4.1</span> NTT 原理</h2>
<section id="ntt-原理---导言" class="level3">
<h3 class="anchored" data-anchor-id="ntt-原理---导言">NTT 原理 - 导言</h3>
<p>本节介绍 NTT 的原理．</p>
<p>FFT 加速卷积算法的核心，一是多项式的求值插值原理，二是单位根带来的分治快速算法．我们将在本节中证明，模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 中，只要 <img src="https://latex.codecogs.com/png.latex?n%20%5Cleq%20p">，仍可通过 <img src="https://latex.codecogs.com/png.latex?n"> 个点值唯一确定至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 上的多项式，这保证了系数-点值-系数方法的正确性；此外，基于原根构造出的 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 上的本原单位根，使得使用与 FFT 相同的分治算法加速 NTT 的计算成为可能．</p>
<p>NTT 原理涉及原根等数论内容．本讲的目标是建立 DFT 变换和 FFT 算法的通用数学框架，而非具体研究其某一特例．故我们只讲解 NTT 所需的基础数论知识，无关的细节则略过处理．对数论感兴趣的同学可前往 OI Wiki 学习．</p>
</section>
<section id="模-p-剩余类域-mathbb-z_p" class="level3">
<h3 class="anchored" data-anchor-id="模-p-剩余类域-mathbb-z_p">模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"></h3>
<p><em>模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域</em> <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 是刻画取模运算下整数加法、乘法运算规律的代数结构，其良定义性由 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bcases%7D%0A%20%20%20%20a_1%20%5Cequiv%20a_2%20%5Cpmod%7Bp%7D%20%5C%5C%0A%20%20%20%20b_1%20%5Cequiv%20b_2%20%5Cpmod%7Bp%7D%0A%5Cend%7Bcases%7D%0A%20%20%5Cimplies%0A%5Cbegin%7Bcases%7D%0A%20%20%20%20a_1%20+%20b_1%20%5Cequiv%20a_2%20+%20b_2%20%5Cpmod%7Bp%7D%20%5C%5C%0A%20%20%20%20a_1%20b_1%20%5Cequiv%20a_2%20b_2%20%5Cpmod%7Bp%7D%0A%5Cend%7Bcases%7D%0A"> 保证．</p>
<p>模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域的最大特点是其中每个元素都存在（唯一）逆元．这一点是数论中 Bézout 定理的直接应用．</p>
<p>模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域的另一优良性质是其满足消去律，即 <img src="https://latex.codecogs.com/png.latex?%0Aab%20%5Cequiv%200%20%5Cpmod%20p%20%5Cimplies%20a%20%5Cequiv%200%20%5Clor%20b%20%5Cequiv%200%20%5Cpmod%20p%0A"> 而模一般的数 <img src="https://latex.codecogs.com/png.latex?m"> 形成的代数结构则不满足此性质．</p>
</section>
<section id="mathbb-z_px-上的多点插值" class="level3">
<h3 class="anchored" data-anchor-id="mathbb-z_px-上的多点插值"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D"> 上的多点插值</h3>
<p>之后记系数均在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 上的多项式组成的集合为 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D">．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="lem-zp-remainder" class="theorem lemma">
<p><span class="theorem-title"><strong>引理 1 (<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%20%5Clbrack%20x%20%5Crbrack"> 上的多项式余式定理)</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?A(x)%20%5Cin%20%5Cmathbb%20Z_p%5Bx%5D">，用 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D"> 中的一次多项式 <img src="https://latex.codecogs.com/png.latex?(x-a)"> 对 <img src="https://latex.codecogs.com/png.latex?A(x)"> 进行带余除法，得到的余式为至多零次的多项式 <img src="https://latex.codecogs.com/png.latex?A(a)">．</p>
</div>
</div>
</div>
</div>
</section>
<section id="mathbb-z_px-上的多点插值-1" class="level3">
<h3 class="anchored" data-anchor-id="mathbb-z_px-上的多点插值-1"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D"> 上的多点插值</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-lagrange" class="theorem">
<p><span class="theorem-title"><strong>定理 4 (Lagrange 定理)</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?p"> 是一个质数，设 <img src="https://latex.codecogs.com/png.latex?A(x)%20%5Cin%20%5Cmathbb%20Z_p%5Bx%5D">．同余方程 <img src="https://latex.codecogs.com/png.latex?A(x)%20%5Cequiv%200%20%5Cpmod%7Bp%7D"> 只有至多 <img src="https://latex.codecogs.com/png.latex?%5Cdeg%20A(x)"> 个模 <img src="https://latex.codecogs.com/png.latex?p"> 意义下不同的整数解，除非这多项式的系数全为零．</p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="cor-lagrange-equal" class="theorem corollary">
<p><span class="theorem-title"><strong>推论 1</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?A(x),B(x)%20%5Cin%20%5Cmathbb%20Z_p%5Bx%5D"> 是至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的两个多项式．若同余方程 <img src="https://latex.codecogs.com/png.latex?A(x)%20%5Cequiv%20B(x)%20%5Cpmod%7Bp%7D"> 有 <img src="https://latex.codecogs.com/png.latex?n"> 个不同的模 <img src="https://latex.codecogs.com/png.latex?p"> 意义下的整数解，则两多项式一定相等．</p>
</div>
</div>
</div>
</div>
<p>推论告诉我们，欲确定 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 上的一个至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式，只需找到其 <img src="https://latex.codecogs.com/png.latex?n"> 个模 <img src="https://latex.codecogs.com/png.latex?p"> 意义下的点值即可．因此，使用系数 - 点值 - 系数方法加速 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D"> 上的卷积是可行的．</p>
</section>
<section id="本原单位根" class="level3">
<h3 class="anchored" data-anchor-id="本原单位根">本<strong>原</strong>单位<strong>根</strong></h3>
<p>回顾 DFT 中复数域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 上单位根的定义 <img src="https://latex.codecogs.com/png.latex?%0A%5Comega_n%5Ek%20:=%20e%5E%7B%5Cfrac%20%7B2%20%5Cpi%20k%7D%7Bn%7D%20i%7D%20=%20%5Ccos%20%5Cfrac%7B2%20%5Cpi%20k%7D%7Bn%7D%20+%20i%20%5Csin%20%5Cfrac%7B2%20%5Cpi%20k%7D%7Bn%7D,%5Cquad%20k%20%5Cin%20%5Bn%5D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 是最重要的单位根，因为它生成了所有其它的单位根．</p>
<p>事实上所有的 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%5E%7Bk%7D%20:%20%5Cgcd(n,k)=1"> 也都是重要的，它们的 <img src="https://latex.codecogs.com/png.latex?0"> 至 <img src="https://latex.codecogs.com/png.latex?n-1"> 次方也能生成所有的单位根．这也是数论中 Bézout 定理的直接应用．</p>
<p>我们把这一类重要的单位根称为<em>本原单位根</em>．抽象的来说，<img src="https://latex.codecogs.com/png.latex?n"> 次本原单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 可定义如下 <img src="https://latex.codecogs.com/png.latex?%0A%5Comega_n%5En%20=%201;%5Cquad%20%5Comega_n%5Ek%20%5Cneq%201,%5Cquad%20k=1,2,%5Cdots,n-1%0A"></p>
</section>
<section id="mathbb-z_m-上的阶" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="mathbb-z_m-上的阶"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的阶</h3>
<p>如何定义 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的“本原单位根”呢？</p>
<p>称在模 <img src="https://latex.codecogs.com/png.latex?m"> 意义下使得 <img src="https://latex.codecogs.com/png.latex?a%5En=1"> 的最小正整数 <img src="https://latex.codecogs.com/png.latex?n"> 为 <img src="https://latex.codecogs.com/png.latex?a"> 的<em>阶</em>，记为 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bord%7D_m(a)">．在不至混淆的情况下，也简记为 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bord%7D(a)">．</p>
<ul>
<li>阶最高有多高？</li>
</ul>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-fermat" class="theorem">
<p><span class="theorem-title"><strong>定理 5 (Fermat 小定理)</strong></span> 若 <img src="https://latex.codecogs.com/png.latex?p"> 是质数，<img src="https://latex.codecogs.com/png.latex?a"> 是非零数，则 <img src="https://latex.codecogs.com/png.latex?a%5E%7Bp-1%7D%20%5Cequiv%201%20%5Cpmod%7Bp%7D">．</p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-euler" class="theorem">
<p><span class="theorem-title"><strong>定理 6 (Euler 定理)</strong></span> 若 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(a,m)=1">，则 <img src="https://latex.codecogs.com/png.latex?a%5E%7B%5Cvarphi(m)%7D%20%5Cequiv%201%20%5Cpmod%7Bm%7D">，其中 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(m)"> 是数论中的 Euler 函数<sup>8</sup>．</p>
</div>
</div>
</div>
</div>
<div class="no-row-height column-margin column-container"><div id="fn8"><p><sup>8</sup>&nbsp;对质数 <img src="https://latex.codecogs.com/png.latex?p">，<img src="https://latex.codecogs.com/png.latex?%5Cvarphi(p)=p-1">．故 Euler 定理是 Fermat 小定理的一个推广．</p></div></div></section>
<section id="euler-定理的证明---简化剩余系" class="level3">
<h3 class="anchored" data-anchor-id="euler-定理的证明---简化剩余系">Euler 定理的证明 - 简化剩余系</h3>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m%5ER%20:=%20%5C%7Ba%20%5Cin%20%5Cmathbb%20Z_m:%20%5Cgcd(a,m)=1%20%5C%7D"> 被称为 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 的<em>简化剩余系</em>．简化剩余系对模 <img src="https://latex.codecogs.com/png.latex?m"> 乘法封闭．简化剩余系中的每个元素都具有模 <img src="https://latex.codecogs.com/png.latex?m"> 意义下的唯一逆元，且其也在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m%5ER"> 中．此二性质易由 <img src="https://latex.codecogs.com/png.latex?%5Cgcd"> 的线性组合意义证明．</p>
<p>简化剩余系的大小即 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(m)">．这是 Euler 函数的其中一种定义．</p>
<p>设 <img src="https://latex.codecogs.com/png.latex?a%20%5Cin%20%5Cmathbb%20Z_m%5ER">，其在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 中存在逆元，故我们有 <img src="https://latex.codecogs.com/png.latex?%0A%5Cforall%20x,y%20%5Cin%20%5Cmathbb%20Z_m,%5Cquad%20x%20%5Cequiv%20y%20%5Cpmod%7Bm%7D%20%5Ciff%20ax%20%5Cequiv%20ay%20%5Cpmod%7Bm%7D%0A"> 当限定 <img src="https://latex.codecogs.com/png.latex?x,y%20%5Cin%20%5Cmathbb%20Z_m%5ER"> 时，结合 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m%5ER"> 上述两个性质，就有 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20Z_m%5ER%20=%20a%20%5Cmathbb%20Z_m%5ER%20=%20%5C%7B%20ax%20%5Cbmod%20m%20:%20x%20%5Cin%20%5Cmathbb%20Z_m%5ER%20%5C%7D%0A"> 故 <img src="https://latex.codecogs.com/png.latex?%0Aa%5E%7B%5Cvarphi(m)%7D%20%5Cprod_%7Bx%20%5Cin%20%5Cmathbb%20Z_m%5ER%7D%20x%20%5Cequiv%20%5Cprod_%7Bx%20%5Cin%20%5Cmathbb%20Z_m%5ER%7D%20ax%20%5Cequiv%20%5Cprod_%7Bx%20%5Cin%20a%20%5Cmathbb%20Z_m%5ER%7D%20x%20%5Cequiv%20%5Cprod_%7Bx%20%5Cin%20%5Cmathbb%20Z_m%5ER%7D%20x%20%5Cimplies%20a%5E%7B%5Cvarphi(m)%7D%20%5Cequiv%201%20%5Cpmod%7Bm%7D%0A"></p>
</section>
<section id="an-的取值---a-m-互质时" class="level3">
<h3 class="anchored" data-anchor-id="an-的取值---a-m-互质时"><img src="https://latex.codecogs.com/png.latex?a%5En"> 的取值 - <img src="https://latex.codecogs.com/png.latex?a">, <img src="https://latex.codecogs.com/png.latex?m"> 互质时</h3>
<p>补充讨论 <img src="https://latex.codecogs.com/png.latex?a%5En%20%5Cbmod%20m,%5C,%20n%20%5Cin%20%5Cmathbb%20Z_%7B+%7D"> 可取得哪些 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 中的元素．</p>
<p>当 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(a,m)=1"> 时，用 <img src="https://latex.codecogs.com/png.latex?%5Cgcd"> 的线性组合含义，有 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cgcd(a,m)=1%20&amp;%5Cimplies%20%5Cexists%20x_0,%5Cquad%20a%20x_0%20=%201%20%5Cpmod%7Bm%7D%20%5C%5C%0A&amp;%5Cimplies%20%5Cexists%20x_0,%5Cquad%20a%5En%20x_0%5En%20=%201%20%5Cpmod%7Bm%7D%20%5C%5C%0A&amp;%5Cimplies%20%5Cgcd(a%5En,m)=1%0A%5Cend%7Baligned%7D%0A"> 故此时 <img src="https://latex.codecogs.com/png.latex?a%5En%20%5Cbmod%20m"> 只可能取得 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 的简化剩余系 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m%5ER"> 中的元素．</p>
</section>
<section id="an-的取值---一般情况" class="level3">
<h3 class="anchored" data-anchor-id="an-的取值---一般情况"><img src="https://latex.codecogs.com/png.latex?a%5En"> 的取值 - 一般情况<sup>9</sup></h3>
<p>当 <img src="https://latex.codecogs.com/png.latex?d_1%20=%20%5Cgcd(a,m)%20%5Cneq%201"> 时，设 <img src="https://latex.codecogs.com/png.latex?a%20=%20d_1%20a_1,%5C,%20m%20=%20d_1%20m_1">，当 <img src="https://latex.codecogs.com/png.latex?n%20%5Cgeq%201"> 时， <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0Aa%5En%20%5Cbmod%20m%20&amp;=%20d_1%20a_1%20a%5E%7Bn-1%7D%20%5Cbmod%20d_1%20m_1%20=%20d_1%20%5Cleft(%20a_1%20a%5E%7Bn-1%7D%20%5Cbmod%20m_1%20%5Cright)%0A%5Cend%7Baligned%7D"> 此时 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(a_1,m_1)=1">，根据线性同余方程理论，括号内表达式的取值集合仅与 <img src="https://latex.codecogs.com/png.latex?a%5E%7Bn-1%7D%20%5Cbmod%20m_1"> 有关．此时若 <img src="https://latex.codecogs.com/png.latex?d_2%20=%20%5Cgcd(a,m_1)"> 仍不等于 <img src="https://latex.codecogs.com/png.latex?1">，则令 <img src="https://latex.codecogs.com/png.latex?a_1%20=%20d_2%20a_2,%5C,%20m_1%20=%20d_2%20m_2">．类似地继续化归，最终有 <img src="https://latex.codecogs.com/png.latex?d_%7Bk+1%7D%20=%20%5Cgcd(a,m_k)%20=%201">， <img src="https://latex.codecogs.com/png.latex?%0Aa%5En%20%5Cbmod%20m%20=%20d_1%20%5Cleft(%20a_1%20d_2%20%5Cleft(%20%5Cdots%20a_%7Bk-1%7D%20d_k%20(a_k%20a%5E%7Bn-k%7D%20%5Cbmod%20m_k)%20%5Cdots%20%5Cright)%20%5Cbmod%20m_1%20%5Cright)%0A"> 故当 <img src="https://latex.codecogs.com/png.latex?n%20%5Cgeq%20k"> 时，<img src="https://latex.codecogs.com/png.latex?a%5En%20%5Cbmod%20m"> 的取值集合为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%20d_1%20d_2%20%5Cdots%20d_k%20(a%5Et%20%5Cbmod%20m_k)%20:%20t%20%5Cin%20%5Cmathbb%20Z_+%20%5Cright%5C%7D%20%5Csubset%20d_1%20d_2%20%5Cdots%20d_k%20%5Cmathbb%20Z_%7Bm_k%7D%5ER%0A"> 事实上，<img src="https://latex.codecogs.com/png.latex?%5Cprod_%7Bi=1%7D%5Ek%20d_i"> 恰为 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(a,m)"> 的各素因子在 <img src="https://latex.codecogs.com/png.latex?m"> 中全部成分的乘积．</p>
</section>
<div class="no-row-height column-margin column-container"><div id="fn9"><p><sup>9</sup>&nbsp;ExBSGS 求解离散对数 <span class="citation" data-cites="oiwiki-discretelog">[5]</span> 的推导与此相似．</p></div><div id="fn10"><p><sup>10</sup>&nbsp;部分证明稍复杂，我们略过处理．感兴趣的同学请参考 OI Wiki <span class="citation" data-cites="oiwiki-pr">[6]</span>．</p></div></div><section id="原根" class="level3">
<h3 class="anchored" data-anchor-id="原根">原根<sup>10</sup></h3>
<p>需要注意的是，Euler 定理只给出了 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上元素阶的一个上界．换言之，其说明 <img src="https://latex.codecogs.com/png.latex?%0A%5Cforall%20a%20%5Cin%20%5Cmathbb%20Z_m%5ER%20%5Cimplies%20%5Coperatorname%7Bord%7D_m(a)%20%5Cmid%20%5Cvarphi(m)%0A"> 而对于那些使得 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(a,m)%20%5Cneq%201"> 的元素 <img src="https://latex.codecogs.com/png.latex?a">，用 <img src="https://latex.codecogs.com/png.latex?%5Cgcd"> 的线性组合性质容易证明其永远不可能通过自乘变为 <img src="https://latex.codecogs.com/png.latex?1">．我们设定这类元素的阶为 <img src="https://latex.codecogs.com/png.latex?0">．</p>
<p>称 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上那些确能达到阶数上界 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(m)"> 的元素是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的<em>原根</em>，用符号 <img src="https://latex.codecogs.com/png.latex?g"> 表示．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-pr-exist" class="theorem">
<p><span class="theorem-title"><strong>定理 7 (原根存在定理)</strong></span> <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上存在原根，当且仅当 <img src="https://latex.codecogs.com/png.latex?m=2,4,p%5E%7B%5Calpha%7D,2p%5E%7B%5Calpha%7D"> ，其中 <img src="https://latex.codecogs.com/png.latex?p"> 是一奇质数．</p>
</div>
</div>
</div>
</div>
</section>
<section id="求阶和原根" class="level3">
<h3 class="anchored" data-anchor-id="求阶和原根">求阶和原根</h3>
<ul>
<li>求阶，用定理 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bord%7D_m(a)%20%5Cmid%20%5Cvarphi(m)">，求因子 + 快速幂即可 <img src="https://latex.codecogs.com/png.latex?O(%5Csqrt%20m%20%5Clog%20m)">．</li>
<li>找原根，从小到大用上述求阶方法暴力即可．最小原根一般不会太大．</li>
<li>更快的方法请参考洛谷求原根模板题题解．</li>
</ul>
<p>下面再介绍原根的两个定理．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-pr-check" class="theorem">
<p><span class="theorem-title"><strong>定理 8 (原根判定定理)</strong></span> 若 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(g,m)=1">，则 <img src="https://latex.codecogs.com/png.latex?g"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上原根的充要条件是，对 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(m)"> 的每个素因数 <img src="https://latex.codecogs.com/png.latex?p">，都有 <img src="https://latex.codecogs.com/png.latex?g%5E%7B%5Cfrac%7B%5Cvarphi(m)%7D%7Bp%7D%7D%5Cnot%5Cequiv%201%5Cpmod%20m">.</p>
</div>
</div>
</div>
</div>
<p>必要性显然．充分性，反证出所有 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(m)"> 的非平凡因子均不是 <img src="https://latex.codecogs.com/png.latex?g"> 的阶即可．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-pr-num" class="theorem">
<p><span class="theorem-title"><strong>定理 9 (原根个数定理)</strong></span> 若 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上存在原根，则它原根的个数为 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(%5Cvarphi(m))">.</p>
</div>
</div>
</div>
</div>
</section>
<section id="mathbb-z_m-上的本原单位根构造" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="mathbb-z_m-上的本原单位根构造"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的本原单位根构造</h3>
<p>设 <img src="https://latex.codecogs.com/png.latex?a"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上一元素，当 <img src="https://latex.codecogs.com/png.latex?n%20%5Cmid%20%5Coperatorname%7Bord%7D_m(a)">，令 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%20=%20a%5E%7B%5Cfrac%7B%5Coperatorname%7Bord%7D_m(a)%7D%7Bn%7D%7D">，容易发现 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 就是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 次本原单位根．</p>
<p>使用数论中 Bézout 定理，<strong><img src="https://latex.codecogs.com/png.latex?%5Comega_n%5Ek"> 是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%20n%20%7B%5Cgcd(n,k)%7D"> 次本原单位根</strong>．这是 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上本原单位根的<strong>消去引理</strong>．</p>
<p>遗憾的是，<strong>一般的 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 中，本原单位根不一定满足求和引理</strong><sup>11</sup> <img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%20n%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega_%7Bn%7D%5E%7Bik%7D%20=%20%5Bn%20%5Cmid%20i%5D">．这是因为，求和引理的证明中使用了等比数列求和和消去律，但<strong>一般的 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 中消去律并不成立</strong>．</p>
<div class="no-row-height column-margin column-container"><div id="fn11"><p><sup>11</sup>&nbsp;这是后文所述定理“整环上的本原单位根也是主要单位根”在一般环上的一个反例．</p></div></div></section>
<section id="mathbb-z_m-上的-ntt---m-是质数" class="level3">
<h3 class="anchored" data-anchor-id="mathbb-z_m-上的-ntt---m-是质数"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的 NTT - <img src="https://latex.codecogs.com/png.latex?m"> 是质数</h3>
<p>求和引理是保障 NTT 逆变换对应矩阵确为 <img src="https://latex.codecogs.com/png.latex?n%5E%7B-1%7D%20%5Cbegin%7Bpmatrix%7D%20%5Comega_n%5E%7B-ij%7D%20%5Cend%7Bpmatrix%7D_%7B(i,j)%5Cin%20n%20%5Ctimes%20n%7D"> 的关键性质．如果我们还想保留这一点，就必须要求 <img src="https://latex.codecogs.com/png.latex?m"> 是质数．</p>
<p>为保证 <img src="https://latex.codecogs.com/png.latex?n"> 在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 中存在逆元，必须要求 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(n,m)=1">．已经要求 <img src="https://latex.codecogs.com/png.latex?m"> 是质数，故无需做出额外要求．</p>
<p>综上，<strong>逆变换矩阵确为 <img src="https://latex.codecogs.com/png.latex?n%5E%7B-1%7D%20%5Cbegin%7Bpmatrix%7D%20%5Comega_n%5E%7B-ij%7D%20%5Cend%7Bpmatrix%7D_%7B(i,j)%5Cin%20n%20%5Ctimes%20n%7D"> 的 <img src="https://latex.codecogs.com/png.latex?n"> 点 NTT 要求 <img src="https://latex.codecogs.com/png.latex?m"> 是质数，且 <img src="https://latex.codecogs.com/png.latex?n%20%5Cmid%20%5Coperatorname%7Bord%7D_m(a)"></strong>．已经要求 <img src="https://latex.codecogs.com/png.latex?m"> 是质数，故 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 中必存在原根，不妨直接取 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 的一个原根 <img src="https://latex.codecogs.com/png.latex?g"> 构造 <img src="https://latex.codecogs.com/png.latex?n"> 次本原单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%20=%20g%5E%7B%5Cfrac%7B%5Cvarphi(m)%7D%7Bn%7D%7D%20=%20g%5E%7B%5Cfrac%7Bm-1%7D%7Bn%7D%7D">，这样的构造支持至多 <img src="https://latex.codecogs.com/png.latex?m-1"> 次单位根的存在，显然是最优的选择．</p>
</section>
<section id="mathbb-z_m-上的-fft-与卷积加速---998244353" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="mathbb-z_m-上的-fft-与卷积加速---998244353"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的 FFT 与卷积加速 - 998244353</h3>
<p>为满足 FFT 对 <img src="https://latex.codecogs.com/png.latex?2%5Em"> 次本原单位根的需求，只需选择 <img src="https://latex.codecogs.com/png.latex?p%20=%20k%202%5Em%20+%201"> 型的奇质数 <img src="https://latex.codecogs.com/png.latex?p">，就可以在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 上支持规模至多为 <img src="https://latex.codecogs.com/png.latex?2%5Em"> 的 NTT/FFT 及其逆变换运行．</p>
<p><img src="https://latex.codecogs.com/png.latex?998244353=2%5E%7B23%7D%20%5Ctimes%207%20%5Ctimes%2017%20+%201">，同时是一个质数，在 <code>int</code> 型中的单次加减操作不会溢出，是 OI/XCPC 计数题中不可多得的优秀模数<sup>12</sup>．</p>
<div class="no-row-height column-margin column-container"><div id="fn12"><p><sup>12</sup>&nbsp;网传此模数由 UOJ 站长 vfleaking 提出并推广．在所有需要取模的题目中使用该模数，可使选手无法通过模数判断题目的做法．</p></div></div><p>结合前述关于 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D"> 上多点插值的讨论，通过 NTT/FFT 加速卷积运算的正确性得到完整证明．</p>
</section>
<section id="mathbb-z_m-上的-ntt---对一般的-m" class="level3">
<h3 class="anchored" data-anchor-id="mathbb-z_m-上的-ntt---对一般的-m"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的 NTT - 对一般的 <img src="https://latex.codecogs.com/png.latex?m"></h3>
<p>当 <img src="https://latex.codecogs.com/png.latex?m"> 不一定是质数时，NTT 逆变换不能表示为 <img src="https://latex.codecogs.com/png.latex?n%5E%7B-1%7D%20%5Cbegin%7Bpmatrix%7D%20%5Comega_n%5E%7B-ij%7D%20%5Cend%7Bpmatrix%7D_%7B(i,j)%5Cin%20n%20%5Ctimes%20n%7D"> 的形式．但这并不代表 NTT 不可逆．因此，尽管不再实用，一般 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的 NTT 变换仍有讨论价值，即研究 <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bpmatrix%7D%20%5Comega_n%5E%7Bij%7D%20%5Cend%7Bpmatrix%7D_%7B(i,j)%5Cin%20n%20%5Ctimes%20n%7D"> 的可逆性．</p>
<p>我们找到一篇有关该问题的参考文献<span class="citation" data-cites="agarwal1974fast">[7, section 3 and appendix B]</span>，但尚不确定其证明的正确性．友情提示读者：<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 不是域，甚至不是整环，故线性空间中矩阵的性质不能直接应用于 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的矩阵，讨论可逆性时还需小心谨慎．</p>
</section>
<section id="从分析到代数" class="level3">
<h3 class="anchored" data-anchor-id="从分析到代数">从分析到代数</h3>
<p>后续数学内容导读 NTT 原理虽已非常”数学”，但也只是 DFT 在有限域上的一个实例．本节往后，我们要尝试为多项式系数位于复数域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 上的 DFT、位于模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 上的 NTT 及它们的快速算法 FFT 建立一个统一的数学框架．这需要我们剖析求值插值的基本原理，提炼出 FFT 算法成立的根本要求．</p>
<p>后续数学内容不再要求掌握．望同学们在纷繁的定理定义中抓住要旨，窥见抽象数学背后蕴藏的规律．熟悉高等代数和抽象代数的同学或会对某些内容感到熟悉．抽象地讨论 FFT 的资料并不多见，后续内容多为主讲人的新进探索，或有谬误，望不吝指正．</p>
</section>
</section>
<section id="求值与插值" class="level2 page-columns page-full" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="求值与插值"><span class="header-section-number">4.2</span> 求值与插值</h2>
<section id="求值与插值---导言" class="level3">
<h3 class="anchored" data-anchor-id="求值与插值---导言">求值与插值 - 导言</h3>
<p>本节将重新审视已经熟知的多项式，把抽象的、代数的多项式和具体的、分析的多项式函数区分开来．我们指出，多项式和多项式函数不同但关联紧密，形式幂级数与幂级数亦有此类联系．这些抽象的讨论将帮助我们剖析多项式求值插值的基本原理．</p>
<p>除常见代数书目（如<span class="citation" data-cites="qiu-algebra">[8]</span>），也推荐参考 OI Wiki 的多项式基础<span class="citation" data-cites="oiwiki-polynomial">[9]</span>和 Wikipedia 的形式幂级数<span class="citation" data-cites="wikipedia-formalpowerseries">[10]</span>．</p>
</section>
<section id="多项式" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="多项式">多项式</h3>
<p>设（无穷）序列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20a_n%20%5C%7D"> 是一个只有有限个非零项的序列，其元素均在环 <img src="https://latex.codecogs.com/png.latex?R"> 上．环 <img src="https://latex.codecogs.com/png.latex?R"> 上的<em>多项式环</em><sup>13</sup> <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D"> 是所有满足上述条件的序列构成的集合以及在它们之间定义的两种运算 <img src="https://latex.codecogs.com/png.latex?+,%20%5Ctimes"> 的合称．此语境下，我们也将构成 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D"> 的序列称为 <img src="https://latex.codecogs.com/png.latex?R"> 上的<em>多项式</em>．序列中的元素被称为多项式的系数．<strong>序列间定义的加法和乘法是普通序列升级为多项式的关键．</strong></p>
<div class="no-row-height column-margin column-container"><div id="fn13"><p><sup>13</sup>&nbsp;一般语境下讨论的多项式环是在域上的 <img src="https://latex.codecogs.com/png.latex?K%5Bx%5D">，而非环上的 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D">．</p></div></div><p>多项式环上的加法、乘法的定义已经为大家所熟知．系数所处的环保证了多项式加法和乘法的良定义，而在这两种运算下，<img src="https://latex.codecogs.com/png.latex?R"> 上多项式的集合也构成一个环的结构．</p>
<div class="proof remark page-columns page-full">
<p><span class="proof-title"><em>注记</em> (群、环、域). </span>群、环、域都是常见的代数结构，其中的元素在给定运算下封闭，并满足特定的运算性质．简单来说，环<sup>14</sup>上定义了加法和可能不可逆的、不一定交换的乘法，域上定义了加减乘除所有四则运算．交换环中的乘法满足交换律．除环中的所有元素有乘法逆元．域是交换除环．</p>
<div class="no-row-height column-margin column-container"><div id="fn14"><p><sup>14</sup>&nbsp;本篇中环的定义包含乘法单位元，即幺环．</p></div></div></div>
</section>
<section id="多项式-1" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="多项式-1">多项式</h3>
<p>习惯上也会将多项式 <img src="https://latex.codecogs.com/png.latex?A"> 写为 <img src="https://latex.codecogs.com/png.latex?A(x)%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_k%20x%5Ek"> 的形式．其中未定元 <img src="https://latex.codecogs.com/png.latex?x"> 只是一个符号，仅为方便加、乘法的理解而使用，并无任何含义．</p>
<p>多项式 <img src="https://latex.codecogs.com/png.latex?A"> 的<em>次数</em> <img src="https://latex.codecogs.com/png.latex?%5Cdeg%20A"> 定义为其最高非零项所处的位置下标．特别的，定义零多项式的次数为 <img src="https://latex.codecogs.com/png.latex?-%5Cinfty">．对任意多项式 <img src="https://latex.codecogs.com/png.latex?A,B%20%5Cin%20R%5Bx%5D">，<img src="https://latex.codecogs.com/png.latex?%5Cdeg(A+B)%20%5Cleq%20%5Cmax%5C%7B%20%5Cdeg%20A,%20%5Cdeg%20B%20%5C%7D">．当 <img src="https://latex.codecogs.com/png.latex?R"> 是整环<sup>15</sup>时，<img src="https://latex.codecogs.com/png.latex?A,B"> 的首项乘积非零，故 <img src="https://latex.codecogs.com/png.latex?%5Cdeg(A*B)%20=%20%5Cdeg%20A%20+%20%5Cdeg%20B">．</p>
<div class="no-row-height column-margin column-container"><div id="fn15"><p><sup>15</sup>&nbsp;无零因子的交换幺环，稍后介绍．</p></div></div><p>下面额外为多项式定义一种新的运算．多项式 <img src="https://latex.codecogs.com/png.latex?A"> 和多项式 <img src="https://latex.codecogs.com/png.latex?B"> 的<em>复合</em> <img src="https://latex.codecogs.com/png.latex?A%20%5Ccirc%20B"> 定义为 <img src="https://latex.codecogs.com/png.latex?%0AA%20%5Ccirc%20B%20:=%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20a_k%20B%5Ek%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?B%5Ek"> 代表 <img src="https://latex.codecogs.com/png.latex?k"> 个多项式 <img src="https://latex.codecogs.com/png.latex?B"> 的乘积．习惯上也会将多项式 <img src="https://latex.codecogs.com/png.latex?A"> 和多项式 <img src="https://latex.codecogs.com/png.latex?B"> 的复合写为 <img src="https://latex.codecogs.com/png.latex?A(B(x))%20=%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20a_k%20B%5Ek(x)"> 的形式．由于多项式的次数有限，复合运算中仅包含了有限次多项式加法和乘法．</p>
</section>
<section id="形式幂级数" class="level3">
<h3 class="anchored" data-anchor-id="形式幂级数">形式幂级数</h3>
<p><em>形式幂级数</em>定义与多项式的唯一区别是其不要求 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20a_n%20%5C%7D"> 只有有限项非零．类似的，<img src="https://latex.codecogs.com/png.latex?R"> 上的形式幂级数环记为 <img src="https://latex.codecogs.com/png.latex?R%5B%5Bx%5D%5D">．</p>
<p>由于涉及无限次运算，形式幂级数的复合运算需考虑环 <img src="https://latex.codecogs.com/png.latex?R"> 上的收敛问题．为回避此问题，一般规定复合右侧函数的常数项须为零．</p>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em>. </span>DFT, NTT 与多项式环 DFT/FFT 加速的多项式卷积在复数域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 上的多项式环 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5Bx%5D"> 中进行，NTT/FFT 加速的多项式卷积在模 <img src="https://latex.codecogs.com/png.latex?p"> 剩余类域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p"> 上的多项式环 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D"> 中进行．</p>
</div>
</section>
<section id="带余除法" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="带余除法">带余除法</h3>
<p><em>整环</em>是无零因子的交换幺环．所谓无零因子，即环中任意元素 <img src="https://latex.codecogs.com/png.latex?a,b"> 满足 <img src="https://latex.codecogs.com/png.latex?ab%20=%200%20%5Cimplies%20a=0%20%5Clor%20b=0">．所有域都是整环．当 <img src="https://latex.codecogs.com/png.latex?R"> 是整环时，<img src="https://latex.codecogs.com/png.latex?R%5Bx%5D"> 也是整环<sup>16</sup>．整环上可以定义整除相关理论．</p>
<div class="no-row-height column-margin column-container"><div id="fn16"><p><sup>16</sup>&nbsp;可用前述多项式乘积次数公式证明．</p></div><div id="fn17"><p><sup>17</sup>&nbsp;试试在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z%5Bx%5D"> 上用 <img src="https://latex.codecogs.com/png.latex?2x+1"> 去除 <img src="https://latex.codecogs.com/png.latex?x+1">．</p></div></div><p>定义有带余除法的环被称为 <em>Euclid 整环</em>．域上的多项式环都是 Euclid 整环<span class="citation" data-cites="qiu-algebra">[8, 第 7 章第 2 节定理 3, p.&nbsp;11]</span>．值得注意的是，<img src="https://latex.codecogs.com/png.latex?R"> 的 Euclid 性不可传递至 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D"><sup>17</sup>．</p>
<p>如在带余除法中保证除式是首一多项式<sup>18</sup>，则带余除法的良定义和进行过程也均可在整环上实现．</p>
<div class="no-row-height column-margin column-container"><div id="fn18"><p><sup>18</sup>&nbsp;首项为 <img src="https://latex.codecogs.com/png.latex?1"> 的多项式．</p></div></div></section>
<section id="多项式函数-幂级数" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="多项式函数-幂级数">多项式函数 / 幂级数</h3>
<p>刚刚强调，多项式 / 形式幂级数只是定义了加法和乘法的序列．现在介绍多项式函数和幂级数．它们不是序列，而是映射<sup>19</sup>．</p>
<div class="no-row-height column-margin column-container"><div id="fn19"><p><sup>19</sup>&nbsp;函数和映射几乎是等价名词．有时函数特指值域包含于复数域 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C"> 的映射．</p></div><div id="fn20"><p><sup>20</sup>&nbsp;为良定义 <img src="https://latex.codecogs.com/png.latex?x%5E0">，环 <img src="https://latex.codecogs.com/png.latex?R"> 必须有单位元．</p></div><div id="fn21"><p><sup>21</sup>&nbsp;这里再次涉及环 <img src="https://latex.codecogs.com/png.latex?R"> 上的收敛问题．由于实践中只关心形式幂级数的前有限项，后续讨论系数-点值-系数法转换卷积时不需要用到幂级数理论，可以回避．</p></div></div><p>多项式 <img src="https://latex.codecogs.com/png.latex?A"> 对应的环 <img src="https://latex.codecogs.com/png.latex?R"> 上的<em>多项式函数</em> <img src="https://latex.codecogs.com/png.latex?A(x)"> 定义为映射<sup>20</sup> <img src="https://latex.codecogs.com/png.latex?%0AA:%20R%20%5Cto%20R,%5Cquad%20x%20%5Cmapsto%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20a_k%20x%5Ek%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20a_n%20%5C%7D"> 只有有限项非零．环 <img src="https://latex.codecogs.com/png.latex?R"> 上的幂级数则无此限制<sup>21</sup>．</p>
<p>与多项式 / 形式幂级数不同，这里的 <img src="https://latex.codecogs.com/png.latex?x%20%5Cin%20R"> 代表函数的自变量，是会按环 <img src="https://latex.codecogs.com/png.latex?R"> 上运算法则参与运算的有意义的变量．</p>
<p>多项式函数的加法和乘法定义为函数的加法和乘法，即 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AA+B:%20x%20&amp;%5Cmapsto%20A(x)+B(x)%20%5C%5C%0AA%20%5Cotimes%20B:%20x%20&amp;%5Cmapsto%20A(x)B(x)%0A%5Cend%7Baligned%7D%0A"></p>
</section>
<section id="求值" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="求值">求值</h3>
<p>多项式和多项式函数似乎在许多情况下有着平行的关系．下面介绍一个较直观的结论．</p>
<p><strong>若环 <img src="https://latex.codecogs.com/png.latex?R"> 是交换环，则环 <img src="https://latex.codecogs.com/png.latex?R"> 上每个多项式都唯一确定一个 <img src="https://latex.codecogs.com/png.latex?R"> 上的多项式函数，且该映射保持加法和乘法运算</strong><sup>22</sup>．形式化地可以记为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20%20%20(A+B)(x)%20&amp;=%20A(x)+B(x)%20%5C%5C%0A%20%20%20%20(A*B)(x)%20&amp;=%20A(x)B(x)%0A%20%20%20%20%5Cend%7Baligned%7D%0A"> 可用于证明上述结论的定理证明见<span class="citation" data-cites="qiu-algebra">[8, 第 7 章第 1 节定理 4, p.&nbsp;7]</span><sup>23</sup>．由于多项式的复合由多项式加法和乘法组成，而多项式函数的复合（定义为函数的复合）亦可在环上平行地展开，故上述映射也保持了复合运算．</p>
<div class="no-row-height column-margin column-container"><div id="fn22"><p><sup>22</sup>&nbsp;这种保持结构不变的映射被称为同态（homomorphism）．</p></div><div id="fn23"><p><sup>23</sup>&nbsp;其证明了域上一元多项式环的通用性质．仿照该证明应可证明环上的版本，从而证明这一同态关系．</p></div></div><p>多项式和多项式函数的这一关系为多项式在任意点的求值操作提供了理论基础．在多项式函数的 <img src="https://latex.codecogs.com/png.latex?t"> 处求值也被称为用 <img src="https://latex.codecogs.com/png.latex?t"> 代入多项式 <img src="https://latex.codecogs.com/png.latex?A">，记为 <img src="https://latex.codecogs.com/png.latex?A(t)">．</p>
</section>
<section id="插值" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="插值">插值</h3>
<p>需要注意的是，前述结论的逆命题不一定成立，即<strong>环 <img src="https://latex.codecogs.com/png.latex?R"> 上的一个多项式函数不一定与 <img src="https://latex.codecogs.com/png.latex?R"> 上多项式一一对应</strong>．一个经典反例是有限域上多项式环 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_p%5Bx%5D"> 上的 <img src="https://latex.codecogs.com/png.latex?(x+1)%5Ep%20%5Cequiv%20x%5Ep%20+%201%20%5Cpmod%7Bp%7D">．我们指出其成立的一个充分条件是 <strong><img src="https://latex.codecogs.com/png.latex?R"> 是无限整环</strong><sup>24</sup>．</p>
<div class="no-row-height column-margin column-container"><div id="fn24"><p><sup>24</sup>&nbsp;该定理是下方高亮定理的一个自然的推论．</p></div></div><p>该逆命题的本质是通过多项式函数的所有函数值反过来确定多项式（系数）的过程．而如果在确定时只使用一部分函数值，就是所谓的多点插值过程．很多时候待求多项式的次数是已知的，这在相当程度上缩小了待定多项式的范围．我们指出，<strong>只要 <img src="https://latex.codecogs.com/png.latex?R"> 是整环，就可以通过多项式任意 <img src="https://latex.codecogs.com/png.latex?n"> 个不同位置的点值确定一个至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式．</strong></p>
<p>证明的关键是用带余除法<sup>25</sup>讨论多项式根与其一次因式的关系，即多项式余式定理或小 Bézout 定理<span class="citation" data-cites="qiu-algebra">[8, 第 7 章第 6 节定理 6, p.&nbsp;35]</span>．</p>
<div class="no-row-height column-margin column-container"><div id="fn25"><p><sup>25</sup>&nbsp;由于一次因式均为首一多项式，可以在整环上对其使用带余除法．</p></div></div><p>需要强调，上述结论只能说明，只有那些确实可通过多项式 <img src="https://latex.codecogs.com/png.latex?n"> 点求值得到的点值组，才能与多项式建立保持加法和乘法运算的双射．对于任取的 <img src="https://latex.codecogs.com/png.latex?R"> 中的一个 <img src="https://latex.codecogs.com/png.latex?n"> 元组，则无法确定是否存在与之对应的多项式．</p>
</section>
<section id="求值与插值的线性表示" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="求值与插值的线性表示">求值与插值的线性表示</h3>
<p>到这里，多项式的求值与插值的线性表示已经呼之欲出了．若将交换环 <img src="https://latex.codecogs.com/png.latex?R"> 上的至多 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的多项式看做模<sup>26</sup> <img src="https://latex.codecogs.com/png.latex?R%5En"> 中的一个向量，则多项式多点求值的过程就是 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的一个线性变换（记为 <img src="https://latex.codecogs.com/png.latex?V">），其矩阵表示正是 Vandermonde 矩阵．由先前对求值的讨论，我们还知道其保持模 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的加法运算，并将结果不超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 次的卷积运算转化为 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的逐项乘法．</p>
<div class="no-row-height column-margin column-container"><div id="fn26"><p><sup>26</sup>&nbsp;模是定义在环上的“线性空间”．</p></div><div id="fn27"><p><sup>27</sup>&nbsp;Lagrange 插值的构造用到了除法，且行列式非零推出矩阵可逆仅在域上的线性空间中适用，因此必须要求 <img src="https://latex.codecogs.com/png.latex?R"> 是域．</p></div></div><p>若将对 <img src="https://latex.codecogs.com/png.latex?R"> 的要求<strong>加强到域</strong>，注意到 Vandermonde 行列式在参数互不相同时非零，故此时 <img src="https://latex.codecogs.com/png.latex?V"> 可逆．事实上，<strong>Vandermonde 矩阵求逆的过程就是 Lagrange 插值</strong>，从而给出了将任意 <img src="https://latex.codecogs.com/png.latex?R%5En"> 中向量还原为其对应多项式的构造方法<sup>27</sup>．这与数论中中国剩余定理的构造有异曲同工之妙<span class="citation" data-cites="wikipedia-lagrange">[11, section: A perspective from linear algebra]</span>．</p>
</section>
<section id="求值与插值---小结" class="level3">
<h3 class="anchored" data-anchor-id="求值与插值---小结">求值与插值 - 小结</h3>
<p>本节的核心是多项式和多项式函数的区别与联系，两个方向的”确定”分别给出了多项式多点求值和多点插值的理论基础．</p>
<p>由于多项式和多项式函数这种若即若离的关系，往往在记号上也有意无意地混淆了它们，某些情况下加大了区分的难度．本篇使用的记号体系将尽量用单个字母 <img src="https://latex.codecogs.com/png.latex?A"> 表示多项式，用 <img src="https://latex.codecogs.com/png.latex?A(x)"> 表示多项式 <img src="https://latex.codecogs.com/png.latex?A"> 对应的多项式函数，用 <img src="https://latex.codecogs.com/png.latex?A(t)"> 表示用 <img src="https://latex.codecogs.com/png.latex?t"> 代入多项式 <img src="https://latex.codecogs.com/png.latex?A">，同时在需要区分的符号前加上适当的名词．</p>
</section>
</section>
<section id="环上的-dft" class="level2 page-columns page-full" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="环上的-dft"><span class="header-section-number">4.3</span> 环上的 DFT</h2>
<section id="环上的-dft---导言" class="level3">
<h3 class="anchored" data-anchor-id="环上的-dft---导言">环上的 DFT - 导言</h3>
<p>前面讨论了在多项式任意点处求值插值的基本原理，但 DFT/FFT 的运行只需在单位根处求值和插值．本节将进一步放宽对多项式环的限制，介绍定义在有主要单位根的环上的一般的 DFT 及其快速算法 FFT．</p>
<p>本节内容主要参考了 <span class="citation" data-cites="furer2009faster">[12, section 2, pp.&nbsp;983–984]</span> 和 <span class="citation" data-cites="wikipedia-dft-over-ring">[13]</span>．</p>
</section>
<section id="环上的单位根---两个定义" class="level3">
<h3 class="anchored" data-anchor-id="环上的单位根---两个定义">环上的单位根 - 两个定义</h3>
<p>定义环 <img src="https://latex.codecogs.com/png.latex?R"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 次<em>主要单位根</em>（principal n-th root of unity）<img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 是满足如下条件的环 <img src="https://latex.codecogs.com/png.latex?R"> 中的一个元素： <img src="https://latex.codecogs.com/png.latex?%0A%5Comega_n%5En%20=%201;%5Cquad%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7Bik%7D%20=%200,%5Cquad%20i=1,2,%5Cdots,n-1%0A"> 由定义立得 <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7Bik%7D%20=%20%5Bn%20%5Cmid%20i%5D%20n">，可见主要单位根的定义即求和引理本身．</p>
<p>定义环 <img src="https://latex.codecogs.com/png.latex?R"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 次<em>本原单位根</em>（primitive n-th root of unity）<img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 是满足如下条件的环 <img src="https://latex.codecogs.com/png.latex?R"> 中的一个元素： <img src="https://latex.codecogs.com/png.latex?%0A%5Comega_n%5En%20=%201;%5Cquad%20%5Comega_n%5Ek%20%5Cneq%201,%5Cquad%20k=1,2,%5Cdots,n-1%0A"></p>
<p>本原单位根在许多情况下与主要单位根等价，但亦非完全相同．</p>
</section>
<section id="环上的单位根---区别与联系" class="level3">
<h3 class="anchored" data-anchor-id="环上的单位根---区别与联系">环上的单位根 - 区别与联系</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-root-relation-1" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 1</strong></span> 若环 <img src="https://latex.codecogs.com/png.latex?R"> 是整环，则环上的本原单位根也是一个主要单位根．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>证明</em>. </span>对任意正整数 <img src="https://latex.codecogs.com/png.latex?i%20%5Cin%20%5Bn%5D">，令 <img src="https://latex.codecogs.com/png.latex?S%20=%20%5Csum_%7Bk=0%7D%5En%20%5Comega_n%5E%7Bik%7D">，则 <img src="https://latex.codecogs.com/png.latex?(1-%5Comega_n%5Ei)%20S%20=%20S%20-%20%5Comega_n%5Ei%20S%20=%201%20-%20%5Comega_n%5En%20=%200">，由 <img src="https://latex.codecogs.com/png.latex?R"> 是整环及 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%5Ei=0"> 得 <img src="https://latex.codecogs.com/png.latex?S=0">．</p>
</div>
</section>
<section id="环上的单位根---区别与联系-1" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="环上的单位根---区别与联系-1">环上的单位根 - 区别与联系</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-root-relation-2" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 2</strong></span> 若环 <img src="https://latex.codecogs.com/png.latex?R"> 的特征<sup>28</sup> <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bchar%7DR"> 满足 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bchar%7DR%20%5Cnmid%20n">，则环上的主要单位根也是一个本原单位根．</p>
</div>
</div>
</div>
</div>
<div class="no-row-height column-margin column-container"><div id="fn28"><p><sup>28</sup>&nbsp;使得 <img src="https://latex.codecogs.com/png.latex?m%201%20=%20%5Csum_%7Bk=0%7D%5E%7Bm-1%7D1%20=%200"> 的最小正整数 <img src="https://latex.codecogs.com/png.latex?m">．不存在则记为 <img src="https://latex.codecogs.com/png.latex?0">．<img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bchar%7D%5Cmathbb%20C%20=%200">，<img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bchar%7D%5Cmathbb%20Z_p%20=%20p">．可以证明域的特征一定是 <img src="https://latex.codecogs.com/png.latex?0"> 或一质数<span class="citation" data-cites="qiu-algebra">[8, 第 7 章第 11 节定理 3，p.&nbsp;70]</span>．</p></div></div><div class="proof">
<p><span class="proof-title"><em>证明</em>. </span>反证．若存在一正整数 <img src="https://latex.codecogs.com/png.latex?i%20%5Cin%20%5Bn%5D"> 使得 <img src="https://latex.codecogs.com/png.latex?n"> 次主要单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 的某一幂次 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%5Ei=1">，则 <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7Bik%7D%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%201%5Ek%20=%20n%201%20%5Cneq%200">，与主要单位根定义矛盾．</p>
</div>
</section>
<section id="环上的单位根---其它性质" class="level3">
<h3 class="anchored" data-anchor-id="环上的单位根---其它性质">环上的单位根 - 其它性质</h3>
<p>分别根据定义和数论中的 Bézout 定理，容易证明主要单位根和本原单位根的消去引理：设 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7Bn%7D"> 是环上的 <img src="https://latex.codecogs.com/png.latex?n"> 次主要（本原）单位根，则 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7Bn%7D%5E%7Bk%7D"> 是环上的 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%20n%20%7B%5Cgcd(n,k)%7D"> 次主要（本原）单位根．</p>
<p>注意到 <img src="https://latex.codecogs.com/png.latex?%5Cleft(%5Comega_%7B2n%7D%5En%20%5Cright)%5E2=1%20%5Cimplies%20(%5Comega_%7B2n%7D%5En%20+%201)(%5Comega_%7B2n%7D%5En%20-%201)=0">，故整环上的 <img src="https://latex.codecogs.com/png.latex?2n"> 次主要单位根或本原单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D"> 均满足 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D%5En%20=%20-1">．</p>
<p>环上的 <img src="https://latex.codecogs.com/png.latex?n"> 次主要单位根或本原单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 都存在逆元 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%5E%7B-1%7D%20=%20%5Comega_n%5E%7Bn-1%7D">．</p>
</section>
<section id="环上的-dft-1" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="环上的-dft-1">环上的 DFT</h3>
<p>设 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 是环 <img src="https://latex.codecogs.com/png.latex?R"> 上的一个 <img src="https://latex.codecogs.com/png.latex?n"> 次主要单位根，其对应的 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的 <em><img src="https://latex.codecogs.com/png.latex?n"> 点 DFT</em> 定义为线性映射（或矩阵） <img src="https://latex.codecogs.com/png.latex?%0AF%20=%20%5Cleft(%20%5Comega_n%5E%7Bij%7D%20%5Cright)_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D%20=%20%5Cbegin%7Bpmatrix%7D%0A%20%20%20%201%20&amp;%201%20&amp;%20%5Cdots%20&amp;%201%20%5C%5C%0A%20%20%20%201%20&amp;%20%5Comega_n%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20%5C%5C%0A%20%20%20%20%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A%20%20%20%201%20&amp;%20%5Comega_n%5E%7Bn-1%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B(n-1)(n-1)%7D%0A%20%20%20%20%5Cend%7Bpmatrix%7D%0A"> 若 <img src="https://latex.codecogs.com/png.latex?n%201"> 在环 <img src="https://latex.codecogs.com/png.latex?R"> 中存在乘法逆元，则 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的 DFT 可逆，其逆映射为<sup>29</sup> <img src="https://latex.codecogs.com/png.latex?%0AF%5E%7B-1%7D%20=%20(n%201)%5E%7B-1%7D%20%5Cleft(%20%5Comega_n%5E%7B-ij%7D%20%5Cright)_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D%20=%20(n%201)%5E%7B-1%7D%20%5Cbegin%7Bpmatrix%7D%0A%20%20%20%201%20&amp;%201%20&amp;%20%5Cdots%20&amp;%201%20%5C%5C%0A%20%20%20%201%20&amp;%20%5Comega_n%5E%7B-1%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B-(n-1)%7D%20%5C%5C%0A%20%20%20%20%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A%20%20%20%201%20&amp;%20%5Comega_n%5E%7B-(n-1)%7D%20&amp;%20%5Cdots%20&amp;%20%5Comega_n%5E%7B-(n-1)(n-1)%7D%0A%20%20%20%20%5Cend%7Bpmatrix%7D%0A"></p>
<div class="no-row-height column-margin column-container"><div id="fn29"><p><sup>29</sup>&nbsp;证明使用主要单位根的定义（求和引理）即可．</p></div></div></section>
<section id="环上的-fft" class="level3">
<h3 class="anchored" data-anchor-id="环上的-fft">环上的 FFT</h3>
<p>除无法在任意环上使用 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D%5En%20=%20-1">，现有的抽象已足够让我们写出与之前类似的推导 FFT 的过程．</p>
<p>设 <img src="https://latex.codecogs.com/png.latex?R"> 是任意环，<img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D"> 是环 <img src="https://latex.codecogs.com/png.latex?R"> 上的一个 <img src="https://latex.codecogs.com/png.latex?2n"> 次主要单位根．由主要单位根的消去引理，<img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D%5E2"> 是环 <img src="https://latex.codecogs.com/png.latex?R"> 上的 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%20%7B2n%7D%7B%5Cgcd(2n,2)%7D%20=%20n"> 次主要单位根．方便起见，记 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%20=%20%5Comega_%7B2n%7D%5E2">．</p>
<p>考虑对模 <img src="https://latex.codecogs.com/png.latex?R%5E%7B2n%7D"> 中向量 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20a%20=%20%5Cleft(%20a_0,a_1,%5Cdots,a_%7B2n-1%7D%20%5Cright)%5ET"> 做 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D"> 对应的 <img src="https://latex.codecogs.com/png.latex?2n"> 点 DFT 变换，得到向量 <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cboldsymbol%20a%7D%20=%20%5Cleft(%20%5Chat%20a_0,%20%5Chat%20a_1,%20%5Cdots,%20%5Chat%20a_%7B2n-1%7D%20%5Cright)%5ET">，其中 <img src="https://latex.codecogs.com/png.latex?%5Chat%20a_i%20=%20%5Csum_%7Bk=0%7D%5E%7B2n-1%7D%20a_k%20%5Comega_%7B2n%7D%5E%7Bik%7D">．将其奇偶分项为 <img src="https://latex.codecogs.com/png.latex?%5Chat%20a_i=A_0(i)+A_1(i)%20%5Comega_%7B2n%7D%5Ei">，其中 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20%20%20A_0(i)%20&amp;:=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k%7D%20%5Comega_%7Bn%7D%5E%7Bik%7D%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k%7D%20%5Comega_%7B2n%7D%5E%7B2ik%7D%20%5C%5C%0A%20%20%20%20A_1(i)%20&amp;:=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k+1%7D%20%5Comega_%7Bn%7D%5E%7Bik%7D%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k+1%7D%20%5Comega_%7B2n%7D%5E%7B2ik%7D%0A%20%20%20%20%5Cend%7Baligned%7D%0A"></p>
</section>
<section id="环上的-fft-1" class="level3">
<h3 class="anchored" data-anchor-id="环上的-fft-1">环上的 FFT</h3>
<p>注意到 <img src="https://latex.codecogs.com/png.latex?A_0(i)=A_0(n+i)">，<img src="https://latex.codecogs.com/png.latex?A_1(i)=A_1(n+i)">，故 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20%20%20%5Chat%20a_i%20%20%20%20%20&amp;=%20A_0(i)%20+%20A_1(i)%20%5Comega_%7B2n%7D%5Ei%20%5C%5C%0A%20%20%20%20%5Chat%20a_%7Bn+i%7D%20&amp;=%20A_0(i)%20+%20A_1(i)%20%5Comega_%7B2n%7D%5E%7Bn+i%7D%0A%20%20%20%20%5Cend%7Baligned%7D,%5Cquad%20i%20%5Cin%20%5Bn%5D%0A"> 而 <img src="https://latex.codecogs.com/png.latex?A_0(i),%5C,%20i%20%5Cin%20%5Bn%5D"> 的计算即计算向量 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7Ba_0%7D%20=%20%5Cleft(%20a_0,%20a_2,%20%5Cdots,%20a_%7B2n-2%7D%20%5Cright)"> 对应于 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 的 <img src="https://latex.codecogs.com/png.latex?n"> 点 DFT 的过程；<img src="https://latex.codecogs.com/png.latex?A_1(i),%5C,%20i%20%5Cin%20%5Bn%5D"> 的计算即计算向量 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%7Ba_1%7D%20=%20%5Cleft(%20a_1,%20a_3,%20%5Cdots,%20a_%7B2n-1%7D%20%5Cright)"> 对应于 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 的 <img src="https://latex.codecogs.com/png.latex?n"> 点 DFT 的过程．</p>
<p>因此，令 <img src="https://latex.codecogs.com/png.latex?n%20=%202%5Em">，则只要环 <img src="https://latex.codecogs.com/png.latex?R"> 上存在 <img src="https://latex.codecogs.com/png.latex?2%5Em"> 次主要单位根，如上形式的 FFT 递归算法就可在 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)"> 的时间复杂度内快速计算 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 点 DFT．而若 <img src="https://latex.codecogs.com/png.latex?2%5Ek%201,%5C,%200%20%5Cleq%20k%20%5Cleq%20m"> 在 <img src="https://latex.codecogs.com/png.latex?R"> 内均存在逆元，<img src="https://latex.codecogs.com/png.latex?R%5En"> 上的 <img src="https://latex.codecogs.com/png.latex?n"> 点 IDFT 也可类似地快速计算．</p>
</section>
</section>
<section id="循环卷积与卷积定理" class="level2 page-columns page-full" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="循环卷积与卷积定理"><span class="header-section-number">4.4</span> 循环卷积与卷积定理</h2>
<section id="循环卷积与卷积定理---导言" class="level3">
<h3 class="anchored" data-anchor-id="循环卷积与卷积定理---导言">循环卷积与卷积定理 - 导言</h3>
<p>上一节中，我们建立了在有主要单位根的环上的 DFT 及其快速算法 FFT 的相关理论，但由于放宽了对多项式环 <img src="https://latex.codecogs.com/png.latex?R%5Bx%5D"> 的限制，多项式的求值插值理论无法在此直接得到应用，环上 DFT 加速多项式卷积的理论尚需重新构建．</p>
<p>在求值与插值部分已经介绍求值变换 <img src="https://latex.codecogs.com/png.latex?V"> 在 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的线性表示，其保持 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的加法运算，并将规模不超过 <img src="https://latex.codecogs.com/png.latex?n"> 的两向量的卷积转化为 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的逐项乘法．本节中，我们来证明 DFT 变换 <img src="https://latex.codecogs.com/png.latex?F"> 也满足同样的性质，且将这一结果推广到卷积规模超过 <img src="https://latex.codecogs.com/png.latex?n"> 时的情况．</p>
</section>
<section id="循环卷积" class="level3">
<h3 class="anchored" data-anchor-id="循环卷积">循环卷积</h3>
<p>设 <img src="https://latex.codecogs.com/png.latex?R"> 是<strong>交换环</strong>，我们记 <img src="https://latex.codecogs.com/png.latex?A%20%5Cotimes%20B"> 代表模 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上两个向量的逐项乘法．</p>
<p>设 <img src="https://latex.codecogs.com/png.latex?F"> 是 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上主要单位根 <img src="https://latex.codecogs.com/png.latex?%5Comega_n"> 对应的 <img src="https://latex.codecogs.com/png.latex?n"> 点可逆 DFT 变换，<img src="https://latex.codecogs.com/png.latex?A,B"> 是 <img src="https://latex.codecogs.com/png.latex?R%5En"> 中两个任意取定的向量．显然 <img src="https://latex.codecogs.com/png.latex?F(A+B)=FA+FB">，故 DFT 变换保持 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上的加法运算．现在的主要问题是，求值与插值部分计算卷积的方法 <img src="https://latex.codecogs.com/png.latex?F%5E%7B-1%7D(FA%20%5Cotimes%20FB)"> 在放宽环限制的 <img src="https://latex.codecogs.com/png.latex?R%5En"> 上进行时，将会得到什么结果？</p>
<p>令 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0A%20%20%20%20%5Chat%7B%5Cboldsymbol%20a%7D%20=%20F%20%5Cboldsymbol%20a,%5Cquad%20%5Chat%7B%5Cboldsymbol%20b%7D%20=%20F%20%5Cboldsymbol%20b%20%5C%5C%0A%20%20%20%20%5Chat%20%7B%5Cboldsymbol%20c%7D=%20%5Chat%7B%5Cboldsymbol%20a%7D%20%5Cotimes%20%5Chat%7B%5Cboldsymbol%20b%7D,%5Cquad%20%5Cboldsymbol%20c%20=%20F%5E%7B-1%7D%20%5Chat%7B%5Cboldsymbol%20c%7D%0A%20%20%20%20%5Cend%7Bgathered%7D%0A"> 则 <img src="https://latex.codecogs.com/png.latex?%0A%5Chat%20a_i%20=%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20a_j%20%5Comega_n%5E%7Bij%7D,%5Cquad%20%5Chat%20b_i%20=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20b_k%20%5Comega_n%5E%7Bik%7D%0A"></p>
</section>
<section id="循环卷积-1" class="level3">
<h3 class="anchored" data-anchor-id="循环卷积-1">循环卷积</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Chat%20c_i%20=%20%5Chat%20a_i%20%5Chat%20b_i%20=%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20a_j%20%5Comega_n%5E%7Bij%7D%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20b_k%20%5Comega_n%5E%7Bik%7D%20=%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_j%20b_k%20%5Comega_n%5E%7Bi(j+k)%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%0Ac_i%20=%20%5Csum_%7Bt=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7B-it%7D%20%5Chat%20c_t%20=%20%20%5Csum_%7Bt=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7B-it%7D%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_j%20b_k%20%5Comega_n%5E%7Bt(j+k)%7D%0A%20%20%20%20=%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_j%20b_k%20%5Csum_%7Bt=0%7D%5E%7Bn-1%7D%20%5Comega_n%5E%7Bt(j+k-i)%7D%0A"> 对最里侧的求和使用主要单位根的定义（求和引理），就有 <img src="https://latex.codecogs.com/png.latex?%0Ac_i%20=%20%5Csum_%7Bj=0%7D%5E%7Bn-1%7D%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_j%20b_k%20%5Bn%20%5Cmid%20j+k-i%5D%20=%20%5Csum_%7Bj+k%20%5Cequiv%20i%20%5Cbmod%7Bn%7D%7D%20a_j%20b_k%0A"> 这便是所谓的循环卷积．以后将 <img src="https://latex.codecogs.com/png.latex?R%5En"> 中向量 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20a"> 和 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20b"> 的循环卷积记为 <img src="https://latex.codecogs.com/png.latex?%5Cboldsymbol%20a%20*%20%5Cboldsymbol%20b">．形象地来看，循环卷积中，次数超过 <img src="https://latex.codecogs.com/png.latex?n-1"> 的卷积项被模意义地地叠加到了以次数为 <img src="https://latex.codecogs.com/png.latex?0"> 为始的项上．</p>
</section>
<section id="卷积定理" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="卷积定理">卷积定理</h3>
<p>前述讨论已经证明<sup>30</sup> <img src="https://latex.codecogs.com/png.latex?%0AF(A%20*%20B)%20=%20FA%20%5Cotimes%20FB%0A"> 这便是一般交换环上 DFT 变换的（循环）卷积定理．</p>
<div class="no-row-height column-margin column-container"><div id="fn30"><p><sup>30</sup>&nbsp;虽然前面用到了 <img src="https://latex.codecogs.com/png.latex?F"> 可逆的要求，但该定理在 <img src="https://latex.codecogs.com/png.latex?F"> 不可逆时也成立．只需类似地验证两边相等即可．</p></div><div id="fn31"><p><sup>31</sup>&nbsp;具体来说，该变换只能是 DFT 矩阵的某个行置换．在 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20C%5En"> 上的证明可参见<span class="citation" data-cites="baraquin2023uniqueness">[14]</span>，主讲人目前正在研究整环上的版本，欢迎讨论．</p></div></div><p>我们指出，当要求所作变换可逆时，卷积定理反过来也要求所作变换是一类似 DFT 映射的变换<sup>31</sup>．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-2timesdft" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 5</strong></span> 尝试将任意序列 DFT 两次，观察结果．证明你的结论．</p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-detdft" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 6</strong></span> 求 DFT 矩阵的行列式．尽可能缩小可行解范围．</p>
</div>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="advanced-operations" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Advanced Operations</h1>
<section id="多项式全家桶---序言" class="level3">
<h3 class="anchored" data-anchor-id="多项式全家桶---序言">多项式全家桶 - 序言</h3>
<ul>
<li><p>有哪些？</p>
<ul>
<li>求逆、开根、对数、指数、快速幂、复合等</li>
</ul></li>
<li><p>咋推的？</p>
<ul>
<li>求解思路几乎都是倍增，时间复杂度几乎都是大常数 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)"></li>
<li>Newton 迭代法是推导全家桶迭代公式的通法</li>
<li>严格化需要进一步的形式幂级数理论，主讲人不会</li>
</ul></li>
<li><p>有啥用？</p>
<ul>
<li>当你一波操作化出生成函数发现不会求系数</li>
</ul></li>
<li><p>怎么讲？</p>
<ul>
<li>受限于篇幅和主讲人能力，我们讲不完</li>
<li>只讲求逆和对数，其余请左转 OI Wiki</li>
</ul></li>
</ul>
</section>
<section id="多项式求逆" class="level3">
<h3 class="anchored" data-anchor-id="多项式求逆">多项式求逆</h3>
<p>给定一多项式 <img src="https://latex.codecogs.com/png.latex?A(x)">，求解满足 <img src="https://latex.codecogs.com/png.latex?A(x)%20B(x)%20=%201%20%5Cpmod%7Bx%5E%7Bn%7D%7D"> 的多项式 <img src="https://latex.codecogs.com/png.latex?B(x)">．</p>
<p>多项式逆元存在的充分必要条件是其常数项非零（这是因为边界条件 <img src="https://latex.codecogs.com/png.latex?b_0%20=%20%5Cfrac%201%20%7Ba_0%7D">），若存在则在模意义下一定唯一．这结论可直接由下述求解方法得到．不失一般性，只研究 <img src="https://latex.codecogs.com/png.latex?A(x)"> 的次数至多为奇数 <img src="https://latex.codecogs.com/png.latex?2n-1"> 的情况．设 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AA(x)%20&amp;=%20A_0(x)%20+%20x%5En%20A_1(x)%20%5C%5C%0AB(x)%20&amp;=%20B_0(x)%20+%20x%5En%20B_1(x)%0A%5Cend%7Baligned%7D%0A"> 考虑递归地在已知 <img src="https://latex.codecogs.com/png.latex?%0AA(x)%20B_0(x)%20=%20A_0(x)%20B_0(x)%20=%201%20%5Cpmod%7Bx%5En%7D%0A"> 的基础上求解 <img src="https://latex.codecogs.com/png.latex?A(x)"> 的逆元．先指出该方法的时间复杂度为 <img src="https://latex.codecogs.com/png.latex?%0AT(n)%20=%20T(%5Cfrac%20n%202)%20+%20O(n%20%5Clog%20n)%20=%20O(n%20%5Clog%20n)%0A"></p>
</section>
<section id="多项式求逆-1" class="level3">
<h3 class="anchored" data-anchor-id="多项式求逆-1">多项式求逆</h3>
<p>以下简记 <img src="https://latex.codecogs.com/png.latex?A(x)"> 为 <img src="https://latex.codecogs.com/png.latex?A">，其它多项式同理．注意到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bcases%7D%0AA%20B_0%20=%201%20%5Cpmod%7Bx%5En%7D%20%5C%5C%0AA%20B%20=%201%20%5Cpmod%7Bx%5En%7D%0A%5Cend%7Bcases%7D%20%5Cimplies%20A%20(B-B_0)%20=%200%20%5Cpmod%7Bx%5En%7D%0A"> 由于 <img src="https://latex.codecogs.com/png.latex?A%20%5Cbmod%7Bx%5En%7D"> 非零，故 <img src="https://latex.codecogs.com/png.latex?%0AB-B_0%20=%200%20%5Cpmod%7Bx%5En%7D%0A"> 这也说明，多项式逆元在模不同 <img src="https://latex.codecogs.com/png.latex?x%5En"> 下的前缀保持一致．</p>
<p>两边平方得 <img src="https://latex.codecogs.com/png.latex?B%5E2%20-%202%20B%20B_0%20+%20B_0%5E2%20=%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D"> 两侧同乘 <img src="https://latex.codecogs.com/png.latex?A"> 并移项得 <img src="https://latex.codecogs.com/png.latex?%0AB%20=%202%20B_0%20-%20A%20B_0%5E2%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A"></p>
</section>
<section id="多项式求逆---实现" class="level3">
<h3 class="anchored" data-anchor-id="多项式求逆---实现">多项式求逆 - 实现</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb6-1">Poly inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-2">    ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> Poly B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-4">        B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li>常数巨大的写法，仅作演示，请勿学习．</li>
<li>正确的写法是在 DFT 后的点值上操作多项式，请小心实现封装．</li>
</ul>
</section>
<section id="多项式-ln" class="level3">
<h3 class="anchored" data-anchor-id="多项式-ln">多项式 <img src="https://latex.codecogs.com/png.latex?%5Cln"></h3>
<p>给定一多项式 <img src="https://latex.codecogs.com/png.latex?A(x)">，求解满足 <img src="https://latex.codecogs.com/png.latex?B(x)%20=%20%5Cln%20A(x)%20%5Cpmod%7Bx%5E%7Bn%7D%7D"> 的多项式 <img src="https://latex.codecogs.com/png.latex?B(x)">．</p>
<p>次数为 <img src="https://latex.codecogs.com/png.latex?+%5Cinfty"> 的形式幂级数的 <img src="https://latex.codecogs.com/png.latex?%5Cln"> 存在的充分必要条件为其常数项非零（这是因为边界条件 <img src="https://latex.codecogs.com/png.latex?b_0%20=%20%5Cln%20a_0">），同样一旦存在则唯一．注意到仅整数 <img src="https://latex.codecogs.com/png.latex?a_0=1"> 时，<img src="https://latex.codecogs.com/png.latex?%5Cln%20a_0"> 可取得整数，故合理的 <img src="https://latex.codecogs.com/png.latex?a_0"> 只能是 <img src="https://latex.codecogs.com/png.latex?1">．</p>
<p>推导是容易的．方程两侧同时求导得 <img src="https://latex.codecogs.com/png.latex?%0AB'(x)%20=%20%5Cfrac%7BA'(x)%7D%7BA(x)%7D%20%5Cpmod%7Bx%5E%7Bn-1%7D%7D%0A"> 两侧再积分得 <img src="https://latex.codecogs.com/png.latex?%0AB(x)%20=%20%5Cint%20%5Cfrac%7BA'(x)%7D%7BA(x)%7D%20%5Coperatorname%7Bd%7D%5C!x%20+%20C%20%5Cpmod%7Bx%5E%7Bn%7D%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?C=%20%5Cln%20a_0">．多项式求逆、求导、积分即可．时间复杂度 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)">．</p>
</section>
<section id="多项式-ln---实现" class="level3">
<h3 class="anchored" data-anchor-id="多项式-ln---实现">多项式 <img src="https://latex.codecogs.com/png.latex?%5Cln"> - 实现</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb7-1">Poly drv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// derivative</span></span>
<span id="cb7-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-3">    A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pop_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-5">Poly itg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// integral</span></span>
<span id="cb7-6">    A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-7">    A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-9">Poly ln<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> itg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>drv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)).</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*log(A[0])*/</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="acknowledgements" class="level3">
<h3 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h3>
<ul>
<li><p>感谢 <code>keke_046</code> 学长教授 FFT、集合幂级数与生成函数．微言大义，博大精深，至今仍在消化．</p></li>
<li><p>感谢队友 <code>ItzDesert</code> 提供位运算典题一道并提供内容编排建议．</p></li>
</ul>
</section>
<section id="题单" class="level3 allowframebreaks">
<h3 class="allowframebreaks anchored" data-anchor-id="题单">题单</h3>
<p>主讲人练题少，仅供参考．</p>
<dl>
<dt>模板</dt>
<dd>
<ul>
<li><p><a href="https://www.luogu.com.cn/problem/P3803">洛谷 P3803</a> 【模板】多项式乘法（FFT）</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P6091">洛谷 P6091</a> 【模板】原根</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P4238">洛谷 P4238</a> 【模板】多项式乘法逆</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P5205">洛谷 P5205</a> 【模板】多项式开根</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P4725">洛谷 P4725</a> 【模板】多项式对数函数（多项式 ln）</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P4726">洛谷 P4726</a> 【模板】多项式指数函数（多项式 exp）</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P5245">洛谷 P5245</a> 【模板】多项式快速幂</p></li>
</ul>
</dd>
<dt>大整数乘法</dt>
<dd>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1919">洛谷 P1919</a> 【模板】A*B Problem 升级版（FFT 快速傅里叶变换）</li>
</ul>
</dd>
<dt>基础计数</dt>
<dd>
<ul>
<li><p><a href="https://www.spoj.com/problems/TSUM/">SPOJ-TSUM</a> Triple Sums</p></li>
<li><p>BZOJ3513-MUTC2013 Idiots</p>
<p>上面两道题都是 OGF 消序，较 EGF 消序困难．一般的方法是使用 Polya 计数原理．</p></li>
</ul>
</dd>
<dt>位运算</dt>
<dd>
<ul>
<li><p><a href="https://atcoder.jp/contests/abc291/tasks/abc291_g">ABC291G</a> OR Sum</p>
<p>也是滤波器的应用．</p></li>
</ul>
</dd>
<dt>分治 FFT</dt>
<dd>
<ul>
<li><p>百度之星 2023 初赛第二场 T8</p>
<p>容斥后需要计算若干一次多项式乘积，分治 NTT 即可．</p></li>
<li><p><a href="https://www.bilibili.com/video/BV1p14y1z7sF">百度之星 2023 初赛第一场 T6</a></p>
<p>求 <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi%3Ej%7D%20%5Cfrac%7Ba_i%7D%7Ba_i%20+%20a_j%7D">．值域次数化后 CDQ 处理偏序．</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P4721">洛谷 P4721</a> 【模板】分治 FFT</p>
<p>CDQ 偏序化处理前后项依赖．也可解生成函数方程再多项式求逆．</p></li>
</ul>
</dd>
<dt>字符串</dt>
<dd>
<ul>
<li><p><a href="https://atcoder.jp/contests/abc196/tasks/abc196_f">ABC196F</a> Substring 2</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P4173">洛谷 P4173</a> 残缺的字符串</p>
<p>带单字符通配符的字符串匹配．体会设定字符串距离函数的方法．</p></li>
</ul>
</dd>
<dt>全家桶</dt>
<dd>
<ul>
<li><p><a href="https://www.luogu.com.cn/problem/P4721">洛谷 P4721</a> 【模板】分治 FFT</p>
<p>体验生成函数简化复杂数列递推的威力．</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P4389">洛谷 P4389</a> 付公主的背包</p>
<p>解决此问题的方法也可用于分拆数计算．</p></li>
<li><p><a href="https://www.luogu.com.cn/problem/P4841">洛谷 P4841</a> 【集训队作业2013】城市规划</p>
<p>EGF 消序划分典题．体验生成函数风格的计数方法．</p></li>
<li><p><a href="https://loj.ac/p/6538">LOJ6538</a> 烷基计数 - 加强版 - 加强版</p>
<p>对生成函数使用的 Polya 计数．</p>
<p>Polya ex. 苯环碳接 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B-C_4H_9%7D"> 同分异构体计数</p></li>
</ul>
</dd>
<dt>其它</dt>
<dd>
<ul>
<li><p><a href="https://qoj.ac/problem/5748">QOJ5748</a>-UCUP2023-Stage7-K Determinant, or...?</p>
<p>看似人畜无害的 <img src="https://latex.codecogs.com/png.latex?%5Cleft(%20a_%7Bi%20%5Coperatorname%7Bor%7D%20j%7D%20%5Cright)_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D"> 行列式求值，解法的背后却潜藏 FMT 的思想．此类行列式与各类反演、卷积有密切联系，我们给出一篇研究了其与偏序集上反演的关系的参考文献<span class="citation" data-cites="wilf1968hadamard">[15]</span>，欢迎讨论．</p></li>
</ul>
</dd>
</dl>



</section>
</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-oiwiki-lagrange" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">OI-Wiki, <span>《拉格朗日插值》</span>. <a href="https://oi-wiki.org/math/numerical/lagrange/" class="uri">https://oi-wiki.org/math/numerical/lagrange/</a>.</div>
</div>
<div id="ref-euler-formula" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">张筑生, <span>《数学分析新讲（重排本）（第二册）》</span>, 2 本北京: 北京大学出版社, 2021, 页 256–262.</div>
</div>
<div id="ref-trigonometry" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline">杨树森, <span>《三角函数的严格定义》</span>. <a href="https://zhuanlan.zhihu.com/p/58814328/" class="uri">https://zhuanlan.zhihu.com/p/58814328/</a>, 2023年.</div>
</div>
<div id="ref-algointro" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline">T. H. Cormen, C. E. Leiserson, R. L. Rivest, 和 C. Stein, <span>《算法导论（原书第三版）》</span>, 北京: 机械工业出版社, 2013.</div>
</div>
<div id="ref-oiwiki-discretelog" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">OI-Wiki, <span>《离散对数》</span>. <a href="https://oi-wiki.org/math/number-theory/discrete-logarithm/" class="uri">https://oi-wiki.org/math/number-theory/discrete-logarithm/</a>.</div>
</div>
<div id="ref-oiwiki-pr" class="csl-entry">
<div class="csl-left-margin">[6] </div><div class="csl-right-inline">OI-Wiki, <span>《原根》</span>. <a href="https://oi-wiki.org/math/number-theory/primitive-root/" class="uri">https://oi-wiki.org/math/number-theory/primitive-root/</a>.</div>
</div>
<div id="ref-agarwal1974fast" class="csl-entry">
<div class="csl-left-margin">[7] </div><div class="csl-right-inline">R. Agarwal 和 C. Burrus, <span>《Fast Convolution using fermat number transforms with applications to digital filtering》</span>, <em>IEEE Transactions on Acoustics, Speech, and Signal Processing</em>, 卷 22, 期 2, 页 87–97, 1974, doi: <a href="https://doi.org/10.1109/TASSP.1974.1162555">10.1109/TASSP.1974.1162555</a>.</div>
</div>
<div id="ref-qiu-algebra" class="csl-entry">
<div class="csl-left-margin">[8] </div><div class="csl-right-inline">丘维声, <span>《高等代数&nbsp;下册》</span>, 3 本北京: 高等教育出版社, 2015.</div>
</div>
<div id="ref-oiwiki-polynomial" class="csl-entry">
<div class="csl-left-margin">[9] </div><div class="csl-right-inline">OI-Wiki, <span>《多项式与生成函数简介》</span>. <a href="https://oi-wiki.org/math/poly/intro/" class="uri">https://oi-wiki.org/math/poly/intro/</a>.</div>
</div>
<div id="ref-wikipedia-formalpowerseries" class="csl-entry">
<div class="csl-left-margin">[10] </div><div class="csl-right-inline">Wikipedia, <span>《Formal power series》</span>. <a href="https://en.wikipedia.org/wiki/Formal_power_series" class="uri">https://en.wikipedia.org/wiki/Formal_power_series</a>.</div>
</div>
<div id="ref-wikipedia-lagrange" class="csl-entry">
<div class="csl-left-margin">[11] </div><div class="csl-right-inline">Wikipedia, <span>《Lagrange polynomial》</span>. <a href="https://en.wikipedia.org/wiki/Lagrange_polynomial" class="uri">https://en.wikipedia.org/wiki/Lagrange_polynomial</a>.</div>
</div>
<div id="ref-furer2009faster" class="csl-entry">
<div class="csl-left-margin">[12] </div><div class="csl-right-inline">M. Fürer, <span>《Faster Integer Multiplication》</span>, <em>SIAM Journal on Computing</em>, 卷 39, 期 3, 页 979–1005, 2009, doi: <a href="https://doi.org/10.1137/070711761">10.1137/070711761</a>.</div>
</div>
<div id="ref-wikipedia-dft-over-ring" class="csl-entry">
<div class="csl-left-margin">[13] </div><div class="csl-right-inline">Wikipedia, <span>《Discrete Fourier transform over a ring》</span>. <a href="https://en.wikipedia.org/wiki/Discrete_Fourier_transform_over_a_ring" class="uri">https://en.wikipedia.org/wiki/Discrete_Fourier_transform_over_a_ring</a>.</div>
</div>
<div id="ref-baraquin2023uniqueness" class="csl-entry">
<div class="csl-left-margin">[14] </div><div class="csl-right-inline">I. Baraquin 和 N. Ratier, <span>《Uniqueness of the discrete Fourier transform》</span>, <em>Signal Processing</em>, 卷 209, 页 109041, 2023.</div>
</div>
<div id="ref-wilf1968hadamard" class="csl-entry">
<div class="csl-left-margin">[15] </div><div class="csl-right-inline">H. S. Wilf, <span>《Hadamard determinants M<span>ö</span>bius functions, and the chromatic number of a graph》</span>, 1968.</div>
</div>
</div></section></div> ]]></description>
  <category>OI</category>
  <category>数学</category>
  <category>讲稿</category>
  <category>slide</category>
  <guid>https://blog.sun123zxy.top/posts/20230928-dft/</guid>
  <pubDate>Mon, 31 Jul 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>算法 &amp; 数学碎碎念</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230621-cpmodel/</link>
  <description><![CDATA[ 




<p>前半部分主要为公式、推导、证明等速成提纲，大部分实现、模板、表格放在文末．</p>
<section id="数论" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="数论"><span class="header-section-number">1</span> 数论</h2>
<section id="exgcd" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="exgcd"><span class="header-section-number">1.1</span> ExGCD</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-exgcd" class="theorem">
<p><span class="theorem-title"><strong>定理 1 (ExGCD)</strong></span> 给定线性方程组 <img src="https://latex.codecogs.com/png.latex?ax+by=%5Cgcd(a,b)">，其解可递归地由下式求得 <img src="https://latex.codecogs.com/png.latex?%0Aa%20y_1%20+%20b%20%5Cleft(%20x_1%20-%20%5Cleft%5Clfloor%20%5Cfrac%20a%20b%20%5Cright%5Crfloor%20y_1%20%5Cright)%20=%20%5Cgcd(b,%20a%20%5Cbmod%20b)%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?x_1,%20y_1"> 是 <img src="https://latex.codecogs.com/png.latex?b%20x%20+%20(a%20%5Cbmod%20b)%20y%20=%20%5Cgcd(b,%20a%20%5Cbmod%20b)"> 的一组解．</p>
</div>
</div>
</div>
</div>
</section>
<section id="crt" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="crt"><span class="header-section-number">1.2</span> CRT</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-crt" class="theorem">
<p><span class="theorem-title"><strong>定理 2 (CRT)</strong></span> 给定 <img src="https://latex.codecogs.com/png.latex?n"> 个同余方程 <img src="https://latex.codecogs.com/png.latex?%0Ax%20%5Cequiv%20a_i%20%5Cpmod%7Bm_i%7D%20%5Cpod%7Bi%20=%201,%20%5Cdots,%20n%7D%0A"></p>
<p>其中各 <img src="https://latex.codecogs.com/png.latex?m_i"> 两两互质，则上式等价于 <img src="https://latex.codecogs.com/png.latex?%0Ax%20%5Cequiv%20%5Csum_%7Bi=1%7D%5En%20a_i%20M_i%20%5Coperatorname%7Binv%7D_%7Bm_i%7D(M_i)%20%5Cpmod%20M%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?M%20=%20%5Csum_%7Bi=1%7D%5En%20m_i">，<img src="https://latex.codecogs.com/png.latex?M_i%20=%20%5Cfrac%7BM%7D%7Bm_i%7D">．</p>
</div>
</div>
</div>
</div>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em>. </span><img src="https://latex.codecogs.com/png.latex?%0AM_i%20%5Coperatorname%7Binv%7D_%7Bm_i%7D(M_i)%20%5Cmod%20m_j%20=%20%5Bi%20=%20j%5D%0A"></p>
</div>
<section id="excrt" class="level4">
<h4 class="anchored" data-anchor-id="excrt">ExCRT</h4>
<p>对一般的情况，考虑合并两个同余方程．给定 <img src="https://latex.codecogs.com/png.latex?2"> 个同余方程 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%0A%5Cbegin%7Baligned%7D%0A%20%20x%20&amp;%5Cequiv%20a_1%20%5Cpmod%7Bm_1%7D%20%5C%5C%0A%20%20x%20&amp;%5Cequiv%20a_2%20%5Cpmod%7Bm_2%7D%0A%5Cend%7Baligned%7D%0A%5Cright.%0A"> 考虑化为不定方程形式 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20x%20=%20k_1%20m_1%20+%20a_1%20%5C%5C%0A%20%20x%20=%20k_2%20m_2%20+%20a_2%0A%5Cend%7Baligned%7D%0A"> 合并得到 <img src="https://latex.codecogs.com/png.latex?%0Ak_1%20m_1%20+%20a_1%20=%20k_2%20m_2%20+%20a_2%0A"> 即 <img src="https://latex.codecogs.com/png.latex?%0Ak_1%20m_1%20-%20k_2%20m_2%20=%20a_2%20-%20a_1%0A"> 此即关于 <img src="https://latex.codecogs.com/png.latex?k_1,%20k_2"> 的不定方程．若 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(m_1,%20m_2)%20%5Cmid%20a_2%20-%20a_1">，则可应用 ExGCD 求得方程的一组解，带回即得 <img src="https://latex.codecogs.com/png.latex?%0Ax%20%5Cequiv%20k_1%20m_1%20+%20a_1%20%5Cpmod%7B%5Coperatorname%7Blcm%7D(m_1,%20m_2)%7D%0A"> 否则同余方程组无解．</p>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em>. </span>若一组同余方程两两可合并，则全部均可合并．当判断大规模同余方程组是否有解时可能用到．</p>
</div>
</section>
</section>
<section id="bsgs" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="bsgs"><span class="header-section-number">1.3</span> BSGS</h3>
<p>求 <img src="https://latex.codecogs.com/png.latex?a%5Ex%20%5Cequiv%20b%20%5Cpmod%7Bm%7D"> 的一个特解，其中 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(a,m)%20=%201">．</p>
<p>实质是非常暴力的根号分治．根据 Euler 定理，只需检测连续 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(m)"> 个 <img src="https://latex.codecogs.com/png.latex?x"> 就可判定是否有解．令 <img src="https://latex.codecogs.com/png.latex?x%20=%20q%20%5Cleft%5Clceil%20%5Csqrt%20m%20%5Cright%5Crceil%20-r">，其中 <img src="https://latex.codecogs.com/png.latex?q,r%20%5Cin%20%5B1,%5Cleft%5Clceil%20%5Csqrt%20m%20%5Cright%5Crceil%5D">，于是 <img src="https://latex.codecogs.com/png.latex?x%20%5Cin%20%5B0,%5Cleft%5Clceil%20%5Csqrt%20m%20%5Cright%5Crceil%5E2)">．代入原方程移项即得 <img src="https://latex.codecogs.com/png.latex?a%5E%7Bq%20%5Cleft%5Clceil%20%5Csqrt%20m%20%5Cright%5Crceil%7D%20%5Cequiv%20b%20a%5Er%20%5Cpmod%7Bm%7D">，右边使用 <code>map</code> 提前存下即可．时间复杂度 <img src="https://latex.codecogs.com/png.latex?O(%5Csqrt%20m)">．</p>
</section>
<section id="miller-rabintodo" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="miller-rabintodo"><span class="header-section-number">1.4</span> Miller-Rabin【TODO】</h3>
</section>
<section id="pollard-rhotodo" class="level3" data-number="1.5">
<h3 data-number="1.5" class="anchored" data-anchor-id="pollard-rhotodo"><span class="header-section-number">1.5</span> Pollard-Rho【TODO】</h3>
</section>
<section id="原根euler-定理等" class="level3" data-number="1.6">
<h3 data-number="1.6" class="anchored" data-anchor-id="原根euler-定理等"><span class="header-section-number">1.6</span> 原根、Euler 定理等</h3>
<p>见 <a href="../..\posts/20230928-dft/">FFT/NTT 讲稿</a>．</p>
</section>
<section id="lucas-定理" class="level3" data-number="1.7">
<h3 data-number="1.7" class="anchored" data-anchor-id="lucas-定理"><span class="header-section-number">1.7</span> Lucas 定理</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-nt-lucas" class="theorem">
<p><span class="theorem-title"><strong>定理 3 (Lucas 定理)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbinom%7Bn%7D%7Bm%7D%20%5Cequiv%20%5Cprod_%7Bi%7D%20%5Cbinom%7Bn_i%7D%7Bm_i%7D%20%5Cequiv%20%5Cbinom%7B%5Cleft%5Clfloor%20n/p%20%5Cright%5Crfloor%7D%7B%5Cleft%5Clfloor%20m/p%20%5Cright%5Crfloor%7D%20%5Cbinom%7Bn%20%5Cbmod%20p%7D%7Bn%20%5Cbmod%20p%7D%20%5Cpmod%20p%0A"></p>
<p>其中 <img src="https://latex.codecogs.com/png.latex?p"> 是质数，<img src="https://latex.codecogs.com/png.latex?n_i"> 和 <img src="https://latex.codecogs.com/png.latex?m_i"> 是 <img src="https://latex.codecogs.com/png.latex?n"> 和 <img src="https://latex.codecogs.com/png.latex?m"> 的 <img src="https://latex.codecogs.com/png.latex?p"> 进制表示下的各数位．</p>
</div>
</div>
</div>
</div>
<p>证明的要点有二：一是 <img src="https://latex.codecogs.com/png.latex?%5Cbinom%20%7Bp%5Ei%7D%20m%20%5Cbmod%20%7Bp%7D%20=%20%5Bm%20=%200%20%5Cland%20m%20=%20p%5Ei%5D">，即 <img src="https://latex.codecogs.com/png.latex?(1+x)%5E%7Bp%5Ei%7D%20%5Cequiv%201%20+%20x%5E%7Bp%5Ei%7D%20%5Cpmod%20p">；二是 Vandermonde 卷积按 <img src="https://latex.codecogs.com/png.latex?p"> 进制拆分．生成函数食用风味更佳．</p>
<p>参考：</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Lucas%27s_theorem">Lucas’s theorem - Wikipedia</a></li>
<li><a href="https://oi-wiki.org/math/number-theory/lucas/">卢卡斯定理 - OI Wiki</a></li>
</ul>
</section>
<section id="legendre-公式和-kummer-定理" class="level3" data-number="1.8">
<h3 data-number="1.8" class="anchored" data-anchor-id="legendre-公式和-kummer-定理"><span class="header-section-number">1.8</span> Legendre 公式和 Kummer 定理</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-nt-legendre" class="theorem">
<p><span class="theorem-title"><strong>定理 4 (Legendre 公式)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cnu_p%20(n!)%20=%20%5Csum_%7Bi=1%7D%5E%7B+%5Cinfty%7D%20%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bp%5Ei%7D%20%5Cright%5Crfloor%20=%20%5Cfrac%7Bn-S_p(n)%7D%7Bp-1%7D%0A"></p>
<p>其中 <img src="https://latex.codecogs.com/png.latex?p"> 是质数，<img src="https://latex.codecogs.com/png.latex?S_p(n)"> 是 <img src="https://latex.codecogs.com/png.latex?n"> 在 <img src="https://latex.codecogs.com/png.latex?p"> 进制下各数位数字之和．<img src="https://latex.codecogs.com/png.latex?%5Cnu_p%20(n!)"> 为 <img src="https://latex.codecogs.com/png.latex?n!"> 中质因子 <img src="https://latex.codecogs.com/png.latex?p"> 的含量，即所谓的 <img src="https://latex.codecogs.com/png.latex?p">-adic valuation of <img src="https://latex.codecogs.com/png.latex?n!">．</p>
</div>
</div>
</div>
</div>
<p>左侧显然，按和式统计贡献即证．对于右侧， <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum_%7Bi=1%7D%5E%7B+%5Cinfty%7D%20%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bp%5Ei%7D%20%5Cright%5Crfloor%20&amp;=%20%5Csum_%7Bi=1%7D%5E%7B+%5Cinfty%7D%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20n_%7Bk+i%7D%20p%5Ek%20%5C%5C%0A&amp;=%20%5Csum_%7Bj=1%7D%5E%7B+%5Cinfty%7D%20n_j%20%5Csum_%7Bk=0%7D%5E%7Bj-1%7D%20p%5Ek%20%5C%5C%0A&amp;=%20%5Csum_%7Bj=1%7D%5E%7B+%5Cinfty%7D%20n_j%20%5Cfrac%7Bp%5Ej-1%7D%7Bp-1%7D%20%5C%5C%0A&amp;=%20%5Cfrac%201%20%7Bp-1%7D%20%5Cleft(%5Csum_%7Bj=1%7D%5E%7B+%5Cinfty%7D%20n_j%20p%5Ej%20-%20%5Csum_%7Bj=1%7D%5E%7B+%5Cinfty%7D%20n_j%5Cright)%20%5C%5C%0A&amp;=%20%5Cfrac%201%20%7Bp-1%7D%20%5Cleft(%5Csum_%7Bj=0%7D%5E%7B+%5Cinfty%7D%20n_j%20p%5Ej%20-%20%5Csum_%7Bj=0%7D%5E%7B+%5Cinfty%7D%20n_j%5Cright)%20%5C%5C%0A&amp;=%20%5Cfrac%20%7Bn%20-%20S_p(n)%7D%7Bp-1%7D%0A%5Cend%7Baligned%7D%0A"></p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-nt-kummer" class="theorem">
<p><span class="theorem-title"><strong>定理 5 (Kummer 定理)</strong></span> <img src="https://latex.codecogs.com/png.latex?%5Cbinom%20%7Ba+b%7D%20a"> 中质因子 <img src="https://latex.codecogs.com/png.latex?p"> 的含量等于 <img src="https://latex.codecogs.com/png.latex?p"> 进制下加法 <img src="https://latex.codecogs.com/png.latex?a+b"> 发生的进位次数，也可表示为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cnu_p%20%5Cleft(%20%5Cbinom%20%7Ba+b%7D%7Ba%7D%20%5Cright)%20=%20%5Cfrac%7BS_p(a)+S_p(b)-S_p(a+b)%7D%7Bp-1%7D%0A"></p>
</div>
</div>
</div>
</div>
<p>大力使用 定理&nbsp;4 考察 <img src="https://latex.codecogs.com/png.latex?%5Cbinom%20%7Ba+b%7D%7Ba%7D"> 的含 <img src="https://latex.codecogs.com/png.latex?p"> 量： <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cnu_p%20%5Cleft(%20%5Cbinom%20%7Ba+b%7D%7Ba%7D%20%5Cright)%20&amp;=%20%5Cnu_p((a+b)!)%20-%20%5Cnu_p(a!)%20-%20%5Cnu_p(b!)%20%5C%5C%0A&amp;=%20%5Csum_%7Bk=1%7D%5E%5Cinfty%20%5Cleft(%20%5Cleft%5Clfloor%20%5Cfrac%20%7Ba+b%7D%7Bp%5Ek%7D%20%5Cright%5Crfloor%20-%20%5Cleft%5Clfloor%20%5Cfrac%20%7Ba%7D%7Bp%5Ek%7D%20%5Cright%5Crfloor%20-%20%5Cleft%5Clfloor%20%5Cfrac%20%7Bb%7D%7Bp%5Ek%7D%20%5Cright%5Crfloor%20%5Cright)%0A%5Cend%7Baligned%7D%0A"> 该公式恰好对 <img src="https://latex.codecogs.com/png.latex?a+b"> 在 <img src="https://latex.codecogs.com/png.latex?p"> 进制计算过程中每一位发生的进位进行了求和．定理的 <img src="https://latex.codecogs.com/png.latex?S_p"> 形式容易通过 定理&nbsp;4 的另一形式得到．</p>
<p>研究该定理 <img src="https://latex.codecogs.com/png.latex?a+b%20=%20p%5Em"> 的特例．用下降阶乘幂形式考虑二项式系数中 <img src="https://latex.codecogs.com/png.latex?k"> 递增的过程，注意到 <img src="https://latex.codecogs.com/png.latex?%5Cnu_p%20(p%5Em-k)%20=%20%5Cnu_p(k)">，可以发现分子新增的 <img src="https://latex.codecogs.com/png.latex?n-k+1"> 和分母新增的 <img src="https://latex.codecogs.com/png.latex?k"> 恰好错一位，于是 <img src="https://latex.codecogs.com/png.latex?%0A%5Cnu_p%20%5Cleft(%20%5Cbinom%20%7Bp%5Em%7D%20k%20%5Cright)%20=%20m%20-%20%5Cnu_p%20(k),%5Cquad%20k%20=%201,2,%5Cdots,p%5Em%0A"></p>
<p>作为 Kummer 定理和上述特殊情况的推论，我们有 <img src="https://latex.codecogs.com/png.latex?%0A%5Cgcd_%7Bk=1%7D%5E%7Bn-1%7D%20%5Cbinom%7Bn%7D%7Bk%7D%20=%20%5Cbegin%7Bcases%7D%0Ap%20&amp;%20n%20=%20p%5Em%20%5C%5C%0A1%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Bcases%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?p"> 是某一质数．这符合 Kummer 定理的直观描述．得到 <img src="https://latex.codecogs.com/png.latex?p%5Em"> 的加法必然会出现进位，在加法 <img src="https://latex.codecogs.com/png.latex?p%5E%7Bm-1%7D%20+%20(p-1)%20p%5E%7Bm-1%7D"> 时达到最小进位次数 <img src="https://latex.codecogs.com/png.latex?1">；否则在任一质数进制 <img src="https://latex.codecogs.com/png.latex?p"> 下，都可以取加法 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Blowbit%7D_p%20(n)%20+%20(n%20-%20%5Coperatorname%7Blowbit%7D_p%20(n))"> 使得不发生进位．</p>
<p>参考：</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Legendre%27s_formula">Legendre’s formula - Wikipedia</a></li>
<li><a href="https://en.wiokipedia.org/wiki/Kummer%27s_theorem">Kummer’s theorem - Wikipedia</a></li>
</ul>
</section>
<section id="扩展-euler-定理" class="level3" data-number="1.9">
<h3 data-number="1.9" class="anchored" data-anchor-id="扩展-euler-定理"><span class="header-section-number">1.9</span> 扩展 Euler 定理</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0Aa%5Eb%20%5Cequiv%20a%5E%7Bb%20%5Cbmod%20%5Cvarphi(m)%20+%20%5Cvarphi(m)%7D%20%5Cpmod%7Bm%7D%0A"></p>
<p>进入循环所需步骤其实很少，一定小于 <img src="https://latex.codecogs.com/png.latex?%5Cvarphi(m)">．（疑似量级在 <img src="https://latex.codecogs.com/png.latex?%5Clog%20m"> 以下，存疑，见 FFT 讲稿）</p>
</section>
<section id="lagrange-定理" class="level3" data-number="1.10">
<h3 data-number="1.10" class="anchored" data-anchor-id="lagrange-定理"><span class="header-section-number">1.10</span> Lagrange 定理</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-nt-lagrange" class="theorem">
<p><span class="theorem-title"><strong>定理 6 (Lagrange 定理)</strong></span> 设 <img src="https://latex.codecogs.com/png.latex?p"> 是质数，<img src="https://latex.codecogs.com/png.latex?A(x)%20%5Cin%20%5Cmathbb%20Z_p%5Bx%5D">．同余方程 <img src="https://latex.codecogs.com/png.latex?A(x)%20%5Cequiv%200%20%5Cpmod%20p"> 只有至多 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bdeg%7D%20A(x)"> 个模 <img src="https://latex.codecogs.com/png.latex?p"> 意义下不同的整数解，除非这多项式的系数在模 <img src="https://latex.codecogs.com/png.latex?p"> 意义下全为零．</p>
</div>
</div>
</div>
</div>
<p>这是域上的多项式理论在模 <img src="https://latex.codecogs.com/png.latex?p"> 整数域上的应用．</p>
</section>
<section id="wilson-定理" class="level3" data-number="1.11">
<h3 data-number="1.11" class="anchored" data-anchor-id="wilson-定理"><span class="header-section-number">1.11</span> Wilson 定理</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-nt-wilson" class="theorem">
<p><span class="theorem-title"><strong>定理 7 (Wilson 定理)</strong></span> 对质数 <img src="https://latex.codecogs.com/png.latex?p">， <img src="https://latex.codecogs.com/png.latex?%0A(p-1)!%20%5Cequiv%20-1%20%5Cpmod%20p%0A"></p>
</div>
</div>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?p=2"> 容易特判证明．现在只考虑 <img src="https://latex.codecogs.com/png.latex?p"> 是奇质数的情况．</p>
<p><img src="https://latex.codecogs.com/png.latex?(p-1)!"> 中，互为逆元的数相互抵消，仅剩下逆元为自身的数 <img src="https://latex.codecogs.com/png.latex?%5Cpm%201">，立得上述定理．</p>
<p>另一种证法注意到 <img src="https://latex.codecogs.com/png.latex?x%5E%7Bp-1%7D%20-%201%20=%20%5Cprod_%7Bk=1%7D%5E%7Bp-1%7D%20(x-k)">．这是因为 Fermat 小定理指出 <img src="https://latex.codecogs.com/png.latex?1"> 至 <img src="https://latex.codecogs.com/png.latex?p-1"> 的所有数的 <img src="https://latex.codecogs.com/png.latex?p-1"> 次幂均为 <img src="https://latex.codecogs.com/png.latex?1">，而 Lagrange 定理又保证了多项式点值到系数映射的唯一性．随后代入 <img src="https://latex.codecogs.com/png.latex?x=0"> 立得结论．</p>
<p>参见 <a href="https://en.wikipedia.org/wiki/Wilson%27s_theorem">Wilson’s theorem - Wikipedia</a>．</p>
</section>
<section id="线性预处理" class="level3" data-number="1.12">
<h3 data-number="1.12" class="anchored" data-anchor-id="线性预处理"><span class="header-section-number">1.12</span> 线性预处理</h3>
<section id="线性求逆元" class="level4">
<h4 class="anchored" data-anchor-id="线性求逆元">线性求逆元</h4>
<p>现欲求出 <img src="https://latex.codecogs.com/png.latex?a"> 模质数 <img src="https://latex.codecogs.com/png.latex?p"> 意义下的逆元 <img src="https://latex.codecogs.com/png.latex?a%5E%7B-1%7D">．用 <img src="https://latex.codecogs.com/png.latex?a"> 对 <img src="https://latex.codecogs.com/png.latex?p"> 做带余除法，<img src="https://latex.codecogs.com/png.latex?p=qa+r">，于是 <img src="https://latex.codecogs.com/png.latex?-qa%20%5Cequiv%20r%20%5Cpmod%20p">．两侧同时乘 <img src="https://latex.codecogs.com/png.latex?r"> 的逆元 <img src="https://latex.codecogs.com/png.latex?r%5E%7B-1%7D"> 得 <img src="https://latex.codecogs.com/png.latex?-q%20r%5E%7B-1%7D%20a%20%5Cequiv%201%20%5Cpmod%20p">，故 <img src="https://latex.codecogs.com/png.latex?%0Aa%5E%7B-1%7D%20=%20-%20q%20r%5E%7B-1%7D%20=%20-%20%5Cleft%5Clfloor%20%5Cfrac%20p%20a%20%5Cright%5Crfloor%20%5Ccdot%20(p%20%5Cbmod%20a)%5E%7B-1%7D%0A"></p>
</section>
<section id="线性阶乘逆" class="level4">
<h4 class="anchored" data-anchor-id="线性阶乘逆">线性阶乘逆</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%201%20%7Bn!%7D%20=%20(n+1)%20%5Ccdot%20%5Cfrac%201%20%7B(n+1)!%7D%0A"></p>
</section>
</section>
</section>
<section id="积性函数" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="积性函数"><span class="header-section-number">2</span> 积性函数</h2>
<section id="整除分块" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="整除分块"><span class="header-section-number">2.1</span> 整除分块</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1">ll ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb1-3">    d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">    ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=(</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))*</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>此 <img src="https://latex.codecogs.com/png.latex?O(%5Csqrt%20n)"> 较满，极大劣于因子个数的 <img src="https://latex.codecogs.com/png.latex?O(%5Csqrt%20n)">．</p>
<p>另有变种枚举 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bd%5E2%7D%20%5Cright%5Crfloor"> 的整除分块如下，复杂度为 <img src="https://latex.codecogs.com/png.latex?O(n%5E%7B1/3%7D)">．</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1">ll ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb2-3">    d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-4">    ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=(</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))*</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<section id="上取整整除分块" class="level4">
<h4 class="anchored" data-anchor-id="上取整整除分块">上取整整除分块</h4>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1">ll cdiv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//ceil(a/b)</span></span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)?</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-4">ll ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb3-6">    d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cdiv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cdiv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-7">    ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=(</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))*</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="杜教筛" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="杜教筛"><span class="header-section-number">2.2</span> 杜教筛</h3>
<p>设 <img src="https://latex.codecogs.com/png.latex?f"> 为一数论函数，我们希望快速求得其前缀和 <img src="https://latex.codecogs.com/png.latex?%5Chat%20f%20(n)%20=%20%5Csum_%7Bi=1%7D%5En%20f(i)">. 考虑数论函数 <img src="https://latex.codecogs.com/png.latex?g"> 和 <img src="https://latex.codecogs.com/png.latex?h%20=%20g%20*%20f">， <img src="https://latex.codecogs.com/png.latex?%0Ah(n)%20=%20%5Csum_%7Bd%20%5Cmid%20n%7D%20g(d)%20f(%5Cfrac%20n%20d)%0A"> 两端做前缀和得 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Chat%20h%20(n)%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20h(i)%20%5C%5C%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bd%20%5Cmid%20i%7D%20g(d)%20f(%5Cfrac%20i%20d)%20%5C%5C%0A&amp;=%20%5Csum_%7Bd=1%7D%5En%20g(d)%20%5Csum_%7Bi=1%7D%5E%7B%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%7D%20f(i)%20%5C%5C%0A&amp;=%20%5Csum_%7Bd=1%7D%5En%20g(d)%20%5Chat%20f%20(%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor)%20%5C%5C%0A&amp;=%20g(1)%20%5Chat%20f%20(n)%20+%20%5Csum_%7Bd=2%7D%5En%20g(d)%20%5Chat%20f%20(%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor)%0A%5Cend%7Baligned%7D%0A"> 因此 <img src="https://latex.codecogs.com/png.latex?%0A%5Chat%20f%20(n)%20=%20%5Cfrac%201%20%7Bg(1)%7D%20%5Cleft(%20%5Chat%20h%20(n)%20-%20%5Csum_%7Bd=2%7D%5En%20g(d)%20%5Chat%20f%20(%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor)%20%5Cright)%0A"></p>
<p>故若 <img src="https://latex.codecogs.com/png.latex?g">、<img src="https://latex.codecogs.com/png.latex?h"> 的前缀和可 <img src="https://latex.codecogs.com/png.latex?O(1)"> 算得，根据上式整除分块即可递归地计算出 <img src="https://latex.codecogs.com/png.latex?f"> 的前缀和．预处理前 <img src="https://latex.codecogs.com/png.latex?O(n%5E%7B2/3%7D)"> 项并记忆化得到的时间复杂度为 <img src="https://latex.codecogs.com/png.latex?O(n%5E%7B2/3%7D)">．外层整除分块不会增加时间复杂度．</p>
<p>关于时间复杂度证明可参考 <a href="https://blog.sun123zxy.top/posts/20230418-complexity/#%E6%9D%9C%E6%95%99%E7%AD%9B">sun123zxy’s blog - OI 数论中的上界估计与时间复杂度证明 # 杜教筛</a>．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0Af%20=%20%5Cmu,%20g%20=%20I,%20h%20=%20%5Cvarepsilon%20%5C%5C%0Af%20=%20%5Cvarphi,%20g%20=%20I,%20h%20=%20%5Coperatorname%7Bid%7D%5C%5C%0Af%20=%20%5Coperatorname%7Bid%7D%5Ek%20%5Cmu,%20g%20=%20%5Coperatorname%7Bid%7D%5Ek,%20h%20=%20%5Cvarepsilon%20%5C%5C%0Af%20=%20%5Coperatorname%7Bid%7D%5Ek%20%5Cvarphi,%20g%20=%20%5Coperatorname%7Bid%7D%5Ek,%20h%20=%20%5Coperatorname%7Bid%7D%5E%7Bk+1%7D%0A%5Cend%7Bgathered%7D%0A"></p>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em>. </span>杜教筛的这种化法事实上也是 Eratosthenes 筛法的应用．一般的我们有 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bd=1%7D%5En%20f(d)%20%5Chat%20g(%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%20)%20=%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bd%20%5Cmid%20i%7D%20f(d)%20g(%5Cfrac%20i%20d)%20=%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bd%20%5Cmid%20i%7D%20f(%5Cfrac%20i%20d)%20g(d)%20%20%20=%20%5Csum_%7Bd=1%7D%5En%20g(d)%20%5Chat%20f(%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%20)%0A"></p>
</div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1">unordered_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">s_mu</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2">ll S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb4-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>MXG<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb4-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// already accumulated</span></span>
<span id="cb4-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">s_mu</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)){</span></span>
<span id="cb4-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">s_mu</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb4-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-8">    ll ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb4-10">        d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11">        ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">s_mu</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="杂式" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="杂式"><span class="header-section-number">2.3</span> 杂式</h3>
<p>无平方因子数计数： <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5En%20%5Cmu%5E2(i)%20=%20%5Csum_%7Bi=1%7D%5E%7B%5Cleft%5Clfloor%20%5Csqrt%20n%20%5Cright%5Crfloor%7D%20%5Cmu(i)%20%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bi%5E2%7D%20%5Cright%5Crfloor%0A"></p>
<p><a href="../..\posts/20200220-factor/">约数个数函数的一个性质</a>：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ad(ab)%20=%20%5Csum_%7Bx%7Ca%7D%20%5Csum_%7By%7Cb%7D%20%5B%5Cgcd%20(x,y)%20=%201%5D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ad(abc)%20=%20%5Csum_%7Bx%7Ca%7D%20%5Csum_%7By%7Cb%7D%20%5Csum_%7Bz%7Cc%7D%20%5B%5Cgcd%20(x,y)%20=%201%5D%20%5B%5Cgcd%20(y,z)%20=%201%5D%20%5B%5Cgcd%20(x,z)%20=1%5D%0A"></p>
<p>广义约数个数函数性质扩展：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csigma_k%20(ab)%20=%20%5Csum_%7Bx%7Ca%7D%20%5Csum_%7By%7Cb%7D%20%5B%5Cgcd(x,y)=1%5D%20(x%20%5Cfrac%7Bb%7D%7By%7D)%5Ek%20=%20%5Csum_%7Bx%7Ca%7D%20%5Csum_%7By%7Cb%7D%20%5B%5Cgcd(x,%5Cfrac%7Bb%7D%7By%7D)=1%5D%20(x%20y)%5Ek%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csigma_k%20(abc)%20=%20%5Csum_%7Bx%7Ca%7D%20%5Csum_%7By%7Cb%7D%20%5Csum_%7Bz%7Cc%7D%20%5B%5Cgcd(x,%5Cfrac%7Bb%7D%7By%7D)=1%5D%20%5B%5Cgcd(y,%5Cfrac%7Bc%7D%7Bz%7D)=1%5D%20%5B%5Cgcd(x,%20%5Cfrac%7Bc%7D%7Bz%7D=1)%5D%20(x%20y%20z)%5Ek%0A"></p>
</section>
</section>
<section id="组合" class="level2 page-columns page-full" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="组合"><span class="header-section-number">3</span> 组合</h2>
<section id="容斥-二项式反演" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="容斥-二项式反演"><span class="header-section-number">3.1</span> 容斥 / 二项式反演</h3>
<section id="形式一" class="level4">
<h4 class="anchored" data-anchor-id="形式一">形式一</h4>
<p>容斥原理的第一种形式给出了“子集和变换”的逆变换．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-inex-first-set" class="theorem">
<p><span class="theorem-title"><strong>定理 8 (容斥原理，形式一，集合)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Ag(S)%20=%20%5Csum_%7BT%20%5Csubset%20S%7D%20f(T)%20%5Ciff%20f(S)%20=%20%5Csum_%7BT%20%5Csubset%20S%7D%20(-1)%5E%7B%7CS%7C%20-%20%7CT%7C%7D%20g(T)%0A"></p>
</div>
</div>
</div>
</div>
<p>证明的关键是 <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bk=0%7D%5En%20%5Cbinom%20n%20k%20(-1)%5Ek%20=%20(1-1)%5En%20=%20%5Bn=0%5D">．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-inex-first-binomial" class="theorem">
<p><span class="theorem-title"><strong>定理 9 (容斥原理，形式一，二项式反演)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Ag(n)%20=%20%5Csum_%7Bk=0%7D%5En%20%5Cbinom%20n%20k%20f(k)%20%5Ciff%20f(n)%20=%20%5Csum_%7Bk=0%7D%5En%20(-1)%5E%7Bn-k%7D%20%5Cbinom%20n%20k%20g(k)%0A"></p>
<p>若设 <img src="https://latex.codecogs.com/png.latex?F(x)"> 和 <img src="https://latex.codecogs.com/png.latex?G(x)"> 分别为 <img src="https://latex.codecogs.com/png.latex?f(n)"> 和 <img src="https://latex.codecogs.com/png.latex?g(n)"> 的指数生成函数（EGF），则结论可等价地表示为</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AG(x)%20=%20e%5Ex%20F(x)%20%5Ciff%20F(x)%20=%20e%5E%7B-x%7D%20G(x)%0A"></p>
</div>
</div>
</div>
</div>
<p>生成函数的形式使我们可在 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)"> 的优秀时间复杂度之内在 <img src="https://latex.codecogs.com/png.latex?f(n)"> 和 <img src="https://latex.codecogs.com/png.latex?g(n)"> 间做出变换．</p>
</section>
<section id="形式二" class="level4">
<h4 class="anchored" data-anchor-id="形式二">形式二</h4>
<p>形式一的补集形式，给出了全集 <img src="https://latex.codecogs.com/png.latex?U"> 下“超集和变换”的逆变换．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-inex-second-set" class="theorem">
<p><span class="theorem-title"><strong>定理 10 (容斥原理，形式二，集合)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Ag(S)%20=%20%5Csum_%7BS%20%5Csubset%20T%20%5Csubset%20U%7D%20f(T)%20%5Ciff%20f(S)%20=%20%5Csum_%7BS%20%5Csubset%20T%20%5Csubset%20U%7D%20(-1)%5E%7B%7CT%7C%20-%20%7CS%7C%7D%20g(T)%0A"></p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-inex-second-binomal" class="theorem">
<p><span class="theorem-title"><strong>定理 11 (容斥原理，形式二，二项式反演)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0Ag(n)%20=%20%5Csum_%7Bk=0%7D%5E%7BN-n%7D%20%5Cbinom%20%7BN-n%7D%20k%20f(n+k)%20%5Ciff%20f(n)%20=%20%5Csum_%7Bk=0%7D%5E%7BN-n%7D%20(-1)%5Ek%20%5Cbinom%20%7BN-n%7D%20k%20g(n+k)%0A"></p>
</div>
</div>
</div>
</div>
</section>
<section id="应用" class="level4">
<h4 class="anchored" data-anchor-id="应用">应用</h4>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-inex-extraordinary" class="theorem example">
<p><span class="theorem-title"><strong>例 1 (不太常见的“容斥原理”)</strong></span> 满足全部性质的元素数量可容斥地通过下式计算 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcap_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%20&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Csum_%7B%7CS%7C=k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U-S%7D%20A_i%20%5Cright)%20%5C%5C%0A&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Csum_%7B%7CS%7C=k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcup_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20%5C%5C%0A&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Csum_%7Bi_1%20%3C%20%5Cdots%20%3C%20i_k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20A_%7Bi_1%7D%20%5Ccup%20%5Cdots%20%5Ccup%20A_%7Bi_k%7D%20%5Cright)%0A%5Cend%7Baligned%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?A"> 代表全集，<img src="https://latex.codecogs.com/png.latex?A_i"> 代表满足第 <img src="https://latex.codecogs.com/png.latex?i"> 个性质的元素构成的集合，<img src="https://latex.codecogs.com/png.latex?U"> 是非空有限的性质指标集．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>证明</em>. </span>令 <img src="https://latex.codecogs.com/png.latex?f(S)"> 为恰好只满足 <img src="https://latex.codecogs.com/png.latex?S"> 中各性质的元素数量，<img src="https://latex.codecogs.com/png.latex?g(S)"> 为至多只满足 <img src="https://latex.codecogs.com/png.latex?S"> 中各性质的元素数量，即 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0Af(S)%20:=%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cleft(%20A%20%5Ccap%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20-%20%5Cbigcup_%7Bi%20%5Cin%20U-S%7D%20A_i%20%5Cright)%20%5C%5C%0Ag(S)%20:=%20%5Coperatorname%7Bcard%7D%5Cleft(%20A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U-S%7D%20A_i%20%5Cright)%0A=%20%5Coperatorname%7Bcard%7D%5Cleft(A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%20+%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcup_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%0A%5Cend%7Bgathered%7D%0A"> 取 <img src="https://latex.codecogs.com/png.latex?S=U"> 代入 定理&nbsp;8 右侧就得到结论第一行的等式．继续化简 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcap_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%20&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Csum_%7B%7CS%7C=k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U-S%7D%20A_i%20%5Cright)%20%5C%5C%0A&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Csum_%7B%7CS%7C=k%7D%20%5Cleft(%20%5Coperatorname%7Bcard%7D%5Cleft(A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%20+%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcup_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20%5Cright)%20%5C%5C%0A&amp;=%20%5Coperatorname%7Bcard%7D%5Cleft(A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Cbinom%7B%7CU%7C%7D%7Bk%7D%20+%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Csum_%7B%7CS%7C=k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcup_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%0A%5Cend%7Baligned%7D%0A"> 注意到 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7B%7CU%7C-k%7D%20%5Cbinom%7B%7CU%7C%7D%7Bk%7D%20=%20%5B%7CU%7C%20=%200%5D%0A"> 而 <img src="https://latex.codecogs.com/png.latex?U%20%5Cneq%20%5Cvarnothing">，故上式左项为 <img src="https://latex.codecogs.com/png.latex?0">，即得结论式第二行．</p>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-inex-ordinary-out" class="theorem example">
<p><span class="theorem-title"><strong>例 2 (有点常见的“容斥原理”)</strong></span> 不满足任何性质的元素数量可容斥地通过下式计算 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Coperatorname%7Bcard%7D%5Cleft(%20A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%0A&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5Ek%20%5Csum_%7B%7CS%7C%20=%20k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20A%20%5Ccap%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20%5C%5C%0A&amp;=%20%5Coperatorname%7Bcard%7DA%20+%20%5Csum_%7Bk=1%7D%5E%7B%7CU%7C%7D%20(-1)%5Ek%20%5Csum_%7B%7CS%7C%20=%20k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20%5C%5C%0A&amp;=%20%5Coperatorname%7Bcard%7DA%20+%20%5Csum_%7Bk=1%7D%5E%7B%7CU%7C%7D%20(-1)%5Ek%20%5Csum_%7Bi_1%20%3C%20%5Cdots%20%3C%20i_k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20A_%7Bi_1%7D%20%5Ccap%20%5Cdots%20%5Ccap%20A_%7Bi_k%7D%20%5Cright)%0A%5Cend%7Baligned%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?A"> 代表全集，<img src="https://latex.codecogs.com/png.latex?A_i"> 代表满足第 <img src="https://latex.codecogs.com/png.latex?i"> 个性质的元素构成的集合，<img src="https://latex.codecogs.com/png.latex?U"> 是非空有限的性质指标集．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>证明</em>. </span>令 <img src="https://latex.codecogs.com/png.latex?f(S)"> 为恰好只满足 <img src="https://latex.codecogs.com/png.latex?S"> 中各性质的元素数量，<img src="https://latex.codecogs.com/png.latex?g(S)"> 为至少满足 <img src="https://latex.codecogs.com/png.latex?S"> 中各性质的元素数量，即 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0Af(S)%20:=%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cleft(%20A%20%5Ccap%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20-%20%5Cbigcup_%7Bi%20%5Cin%20U-S%7D%20A_i%20%5Cright)%20%5C%5C%0Ag(S)%20:=%20%5Coperatorname%7Bcard%7D%5Cleft(%20A%20%5Ccap%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%0A=%20%5Cbegin%7Bcases%7D%0A%5Coperatorname%7Bcard%7DA%20&amp;%20S%20=%20%5Cvarnothing%20%5C%5C%0A%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Bcases%7D%0A%5Cend%7Bgathered%7D%0A"> 取 <img src="https://latex.codecogs.com/png.latex?S=%5Cvarnothing"> 代入 定理&nbsp;10 右侧就得到结论．</p>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-inex-shuffle" class="theorem exercise">
<p><span class="theorem-title"><strong>习题 1 (错排)</strong></span> 计算 <img src="https://latex.codecogs.com/png.latex?n"> 元错排的数量．</p>
</div>
</div>
</div>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>解</em>. </span>设 <img src="https://latex.codecogs.com/png.latex?A_i"> 表示第 <img src="https://latex.codecogs.com/png.latex?i"> 个位置配对正确的置换构成的集合．直接应用 例&nbsp;2 立得</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Coperatorname%7Bcard%7D%5Cleft(%20A%20-%20%5Cbigcup_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%20&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5Ek%20%5Csum_%7B%7CS%7C%20=%20k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20A%20%5Ccap%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20%5C%5C%0A&amp;=%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5Ek%20%5Cbinom%20n%20k%20(n-k)!%20%5C%5C%0A&amp;=%20n!%20%5Csum_%7Bk=0%7D%5E%7B%7CU%7C%7D%20(-1)%5Ek%20%5Cfrac%201%20%7Bk!%7D%20%5Csim%20%5Cfrac%7Bn!%7D%7Be%7D%0A%5Cend%7Baligned%7D%0A"></p>
</div>
<p>这说明随机取一排列，其错排的概率趋近于 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%20e">．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-inex-ordinary-in" class="theorem example">
<p><span class="theorem-title"><strong>例 3 (常见的“容斥原理”)</strong></span> 满足至少 <img src="https://latex.codecogs.com/png.latex?1"> 个性质的元素数量可容斥地通过下式计算 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcup_%7Bi%20%5Cin%20U%7D%20A_i%20%5Cright)%0A&amp;=%20%5Csum_%7Bk=1%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7Bk-1%7D%20%5Csum_%7B%7CS%7C%20=%20k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20%5Cbigcap_%7Bi%20%5Cin%20S%7D%20A_i%20%5Cright)%20%5C%5C%0A&amp;=%20%5Csum_%7Bk=1%7D%5E%7B%7CU%7C%7D%20(-1)%5E%7Bk-1%7D%20%5Csum_%7Bi_1%20%3C%20%5Cdots%20%3C%20i_k%7D%20%5Coperatorname%7Bcard%7D%5Cleft(%20A_%7Bi_1%7D%20%5Ccap%20%5Cdots%20%5Ccap%20A_%7Bi_k%7D%20%5Cright)%0A%5Cend%7Baligned%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?A_i"> 代表满足第 <img src="https://latex.codecogs.com/png.latex?i"> 个性质的元素构成的集合，<img src="https://latex.codecogs.com/png.latex?i%20%5Cin%20U">．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>证明</em>. </span>对 例&nbsp;2 做简单移项即得．</p>
</div>
</section>
</section>
<section id="球盒问题" class="level3 page-columns page-full" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="球盒问题"><span class="header-section-number">3.2</span> 球盒问题</h3>
<p>组合数学的万恶之源．</p>
<div class="column-screen-inset">
<table class="table">
<colgroup>
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 15%">
<col style="width: 15%">
<col style="width: 23%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">ID</th>
<th style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?n"> balls</th>
<th style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r"> boxes</th>
<th style="text-align: center;">allow empty?</th>
<th style="text-align: center;">recurrence / closed-form</th>
<th style="text-align: center;">generating functions</th>
<th style="text-align: center;">notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B1,1,0%7D"></td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">MAY empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r%5En"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%5Cmathrm%7BEGF%7D_r(x)%20&amp;=%20(e%5E%7Bx%7D)%5Er%20=%20e%5E%7Brx%7D%20%5C%5C%20%5Cmathrm%7BOGF%7D_r(x)%20&amp;=%20%5Cfrac%7B1%7D%7B1-rx%7D%5Cend%7Baligned%7D"></td>
<td style="text-align: center;">number of <img src="https://latex.codecogs.com/png.latex?%5Bn%5D%20%5Cto%20%5Br%5D"> mappings</td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B1,1,1%7D"></td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r!%20%7Bn%20%5Cbrace%20r%7D%20=%20%5Csum_%7Bk=0%7D%5Er%20(-1)%5E%7Br-k%7D%20%5Cbinom%20r%20k%20k%5En"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%20%5Cmathrm%7BEGF%7D_r(x)&amp;=(e%5Ex%20-%201)%5Er%20%5C%5C%20%5Cmathrm%7BEGF%7D_n(x)%20&amp;=%20e%5E%7B-x%7D%20%5Csum_%7Br=0%7D%5E%7B+%5Cinfty%7D%20r%5En%20%5Cfrac%7Bx%5Er%7D%7Br!%7D%20%5Cend%7Baligned%7D"></td>
<td style="text-align: center;">number of <img src="https://latex.codecogs.com/png.latex?%5Bn%5D%20%5Cto%20%5Br%5D"> surjections</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B1,1/%5CSigma,1%7D"></td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">Labeled; <img src="https://latex.codecogs.com/png.latex?r">-disabled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bk=0%7D%5En%20k!%20%7Bn%20%5Cbrace%20k%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D_r(x)=%5Cfrac%7B1%7D%7B2-e%5Ex%7D%20=%20%5Cfrac%7B1%7D%7B1-(e%5Ex-1)%7D"></td>
<td style="text-align: center;">ordered Bell number; number of weak orderings / ordered set partitions on <img src="https://latex.codecogs.com/png.latex?%5Bn%5D"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B1,0,0%7D"></td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bk=0%7D%5Er%20%7Bn%20%5Cbrace%20k%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D_r(x)%20=%20%5Csum_%7Bk=0%7D%5Er%20%5Cfrac%20%7B(e%5Ex%20-%201)%5Ek%7D%7Bk!%7D"></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B1,0,1%7D"></td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%20%7Bn%20%5Cbrace%20r%7D%20&amp;=%20%5Csum_%7Bk=0%7D%5Er%20%5Cfrac%7Bk%5En%7D%7Bk!%7D%20%5Ccdot%20%5Cfrac%7B(-1)%5E%7Br-k%7D%7D%7B(r-k)!%7D%20%5C%5C%20%7Bn+1%20%5Cbrace%20r%7D%20&amp;=%20r%20%7Bn%20%5Cbrace%20r%7D%20+%20%7Bn%20%5Cbrace%20r-1%7D%20%5Cend%7Baligned%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%20%5Cmathrm%7BEGF%7D_r(x)%20&amp;=%20%5Cfrac%7B(e%5Ex%20-%201)%5Er%7D%7Br!%7D%20%5C%5C%20%5Cmathrm%7BOGF%7D_n(x)%20&amp;=%20e%5E%7B-x%7D%20%5Csum_%7Br=0%7D%5E%7B+%5Cinfty%7D%20r%5En%20%5Cfrac%7Bx%5Er%7D%7Br!%7D%20%5Cend%7Baligned%7D"></td>
<td style="text-align: center;">Stirling number of the second kind</td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B1,0/%5CSigma,1%7D"></td>
<td style="text-align: center;">labeled</td>
<td style="text-align: center;">UNLabeled; <img src="https://latex.codecogs.com/png.latex?r">-disabled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%20B(n)%20&amp;=%20%5Csum_%7Bk=0%7D%5En%20%7Bn%20%5Cbrace%20k%7D%20%5C%5C%20B(n+1)%20&amp;=%20%5Csum_%7Bk=0%7D%5En%20%5Cbinom%20n%20k%20B(k)%20%5Cend%7Baligned%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D(x)=e%5E%7Be%5Ex%20-%201%7D"></td>
<td style="text-align: center;">Bell number; number of equivialent relations / set partitions on <img src="https://latex.codecogs.com/png.latex?%5Bn%5D"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B0,1,0%7D"></td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">MAY empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbinom%7Bn+r-1%7D%7Br-1%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BOGF_r%7D(x)%20=%20%5Cleft(%5Cfrac%201%20%7B1-x%7D%5Cright)%5Er"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r"> 元不定方程非负整数解个数</td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B0,1,1%7D"></td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">Labeled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbinom%7Bn-1%7D%7Br-1%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%20%5Cmathrm%7BOGF_r%7D(x)%20&amp;=%20%5Cleft(%5Cfrac%20x%20%7B1-x%7D%5Cright)%5Er%20%5C%5C%20&amp;=%20x%5Er%20%5Cleft(%5Cfrac%201%20%7B1-x%7D%5Cright)%5Er%20%5Cend%7Baligned%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r"> 元 <img src="https://latex.codecogs.com/png.latex?n"> 次单项式构型数</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B0,1/%5CSigma,1%7D"></td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">Labeled; <img src="https://latex.codecogs.com/png.latex?r">-disabled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?a(n)=%5Cbegin%7Bcases%7D1%20&amp;%20n=1%20%5C%5C%202%5E%7Bn-1%7D%20&amp;%20n%5Cgeq%202%20%5Cend%7Bcases%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BOGF%7D(x)%20=%201+%5Cfrac%7Bx%7D%7B1-2x%7D%20=%20%5Cfrac%7B1%7D%7B1-%5Cfrac%7Bx%7D%7B1-x%7D%7D"></td>
<td style="text-align: center;">考虑“是否向前拼接”的 <img src="https://latex.codecogs.com/png.latex?n-1"> 个选择</td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B0,0,0%7D"></td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">MAY empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bk=0%7D%5Er%20p(n,k)"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r"> 元 <img src="https://latex.codecogs.com/png.latex?n"> 次单项对称多项式（monomial symmetric polynomial）构型数</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B0,0,1%7D"></td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?p(n,r)=p(n-1,r-1)+p(n-r,r)"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r"> 部分拆数</td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7B0,0/%5CSigma,1%7D"></td>
<td style="text-align: center;">UNLabeled</td>
<td style="text-align: center;">UNLabeled; <img src="https://latex.codecogs.com/png.latex?r">-disabled</td>
<td style="text-align: center;">NON empty</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%20p(n)%20&amp;=%20%5Csum_%7B%5Csubstack%7Bk%20%5Cin%20%5Cmathbb%20Z%7D%7D%20(-1)%5Ek%20p_%7Bn-k(3k-1)/2%7D%20%5C%5C%20&amp;=%20p_%7Bn-1%7D%20+%20p_%7Bn-2%7D%20-%20p_%7Bn-5%7D%20-%20p_%7Bn-7%7D%20+%20%5Cdots%20%5Cend%7Baligned%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%20%5Cmathrm%7BOGF%7D(x)&amp;=%5Cprod_%7Bk=1%7D%5E%7B+%5Cinfty%7D%20%5Cfrac%201%20%7B1-x%5Ek%7D%20%5C%5C%20&amp;=%20%5Cleft(%20%5Csum_%7Bk%20%5Cin%20%5Cmathbb%20Z%7D%20(-1)%5Ek%20x%5E%7Bk(3k-1)/2%7D%20%5Cright)%5E%7B-1%7D%20%5Cend%7Baligned%7D"></td>
<td style="text-align: center;">partition function（分拆数）; number of partitions of <img src="https://latex.codecogs.com/png.latex?n">; <img src="https://latex.codecogs.com/png.latex?n"> 元（含）以上 <img src="https://latex.codecogs.com/png.latex?n"> 次单项对称多项式构型数</td>
</tr>
</tbody>
</table>
</div>
<p>以后我们约定：</p>
<ul>
<li>形如 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BBB_%7B1,1,0%7D%7D"> 的记号表示代号 <img src="https://latex.codecogs.com/png.latex?1,1,0"> 对应球盒问题的方案数；</li>
<li>形如 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D_n%5E%7B1,1,0%7D(x)"> 代表代号 <img src="https://latex.codecogs.com/png.latex?1,1,0"> 对应 <img src="https://latex.codecogs.com/png.latex?n"> 球球盒问题的指数生成函数；</li>
<li>形如 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D_r%5E%7B1,1,0%7D(x)"> 代表代号 <img src="https://latex.codecogs.com/png.latex?1,1,0"> 对应 <img src="https://latex.codecogs.com/png.latex?r"> 球球盒问题的指数生成函数；</li>
<li>普通生成函数 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BOGF%7D_r%5E%7B1,1,0%7D(x)"> 同理．</li>
</ul>
<p>在不至混淆的情况下，也可省略下标或上标上的代号．</p>
<section id="通用性质" class="level4">
<h4 class="anchored" data-anchor-id="通用性质">通用性质</h4>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-bb-sigma" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 1 (非空盒数量不限制)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0A%5Cmathrm%7BBB%7D_%7B*,*/%5CSigma,1%7D(n)%20=%20%5Csum_%7Bk=0%7D%5En%20%5Cmathrm%7BBB%7D_%7B*,*,1%7D(n,k)%20%5C%5C%0A%5Cmathrm%7BEGF%7D%5E%7B*,*/%5CSigma,1%7D(x)%20=%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20%5Cmathrm%7BEGF%7D_%7Br=k%7D%5E%7B*,*,1%7D(x)%0A%5Cend%7Bgathered%7D%0A"></p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-bb-x10-x11" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 2 (有标号盒空置)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0A%5Cmathrm%7BBB%7D_%7B*,1,0%7D(n,r)%20=%20%5Csum_%7Bk=0%7D%5Er%20%5Cbinom%20r%20k%20%5Cmathrm%7BBB%7D_%7B*,1,1%7D(n,k)%20%5C%5C%0A%5Cmathrm%7BEGF%7D_n%5E%7B*,1,0%7D(x)%20=%20e%5Ex%20%5Cmathrm%7BEGF%7D_n%5E%7B*,1,1%7D(x)%0A%5Cend%7Bgathered%7D%0A"></p>
</div>
</div>
</div>
</div>
<p>对有标号盒的二项式反演．在 <img src="https://latex.codecogs.com/png.latex?1,1,0">-球盒问题中，上式体现为第二类 Stirling 数的通项公式；在 <img src="https://latex.codecogs.com/png.latex?0,1,0">-球盒问题中，上式体现为 Vandermonde 卷积．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-bb-x00-x01" class="theorem proposition">
<p><span class="theorem-title"><strong>命题 3 (无标号盒空置)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0A%5Cmathrm%7BBB%7D_%7B*,0,0%7D(n,r)%20=%20%5Csum_%7Bk=0%7D%5Er%20%5Cmathrm%7BBB%7D_%7B*,0,1%7D(n,k)%20%5C%5C%0A%5Cmathrm%7BOGF%7D_n%5E%7B*,0,0%7D(x)%20=%20%5Cfrac%201%20%7B1-x%7D%20%5Cmathrm%7BOGF%7D_n%5E%7B*,0,1%7D(x)%0A%5Cend%7Bgathered%7D%0A"></p>
</div>
</div>
</div>
</div>
<p>对无标号盒，直接求和即可．</p>
</section>
</section>
<section id="第二类-stirling-数" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="第二类-stirling-数"><span class="header-section-number">3.3</span> 第二类 Stirling 数</h3>
<p>第二类 Stirling 数的组合定义即 <img src="https://latex.codecogs.com/png.latex?1,0,1">-球盒问题的方案数 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BBB%7D_%7B1,0,1%7D(n,r)%20=%20%7Bn%20%5Cbrace%20r%7D">，亦作将 <img src="https://latex.codecogs.com/png.latex?n"> 个元素划分入 <img src="https://latex.codecogs.com/png.latex?r"> 个集合的方案数．</p>
<section id="递推" class="level4">
<h4 class="anchored" data-anchor-id="递推">递推</h4>
<p>由组合意义，考虑在已有 <img src="https://latex.codecogs.com/png.latex?n"> 个球时加入新球，此时面临将其放入原有的 <img src="https://latex.codecogs.com/png.latex?r"> 个集合或新开辟一个集合的两种选择，由此得递推式 <img src="https://latex.codecogs.com/png.latex?%0A%7Bn+1%20%5Cbrace%20r%7D%20=%20r%20%7Bn%20%5Cbrace%20r%7D%20+%20%7Bn%20%5Cbrace%20r-1%7D%0A"> 边界在 <img src="https://latex.codecogs.com/png.latex?%0A%7Bn%20%5Cbrace%200%7D%20=%20%5Bn%20=%200%5D,%5Cquad%20%7Bn%20%5Cbrace%20n%7D%20=%201%0A"></p>
</section>
<section id="第二类-striling-数同行计算mathrmogf_n101x-或-mathrmegf_n111x" class="level4">
<h4 class="anchored" data-anchor-id="第二类-striling-数同行计算mathrmogf_n101x-或-mathrmegf_n111x">第二类 Striling 数同行计算：<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BOGF%7D_n%5E%7B1,0,1%7D(x)"> 或 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D_n%5E%7B1,1,1%7D(x)"></h4>
<p>来考虑用两种方法得到 <img src="https://latex.codecogs.com/png.latex?1,1,1">-球盒问题的方案数．</p>
<p>我们的第一种方法注意到，上述问题的方案数恰好是 <img src="https://latex.codecogs.com/png.latex?1,0,1">-球盒问题方案数 <img src="https://latex.codecogs.com/png.latex?r!"> 倍——这是对后者的盒进行标号的结果．我们得到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BBB%7D_%7B1,1,1%7D(n,r)%20=%20r!%20%5Cmathrm%7BBB%7D_%7B1,0,1%7D(n,r)%20=%20r!%20%7Bn%20%5Cbrace%20r%7D%0A"></p>
<p>第二种方法考虑用容斥非空盒的方法与 <img src="https://latex.codecogs.com/png.latex?1,1,0">-球盒问题 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BBB%7D_%7B1,1,0%7D(n,r)%20=%20r%5En"> 建立联系．我们有 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BBB%7D_%7B1,1,0%7D(n,r)%20=%20%5Csum_%7Bk=0%7D%5Er%20%5Cbinom%20r%20k%20%5Cmathrm%7BBB%7D_%7B1,1,1%7D(n,k)%0A"> 即 <img src="https://latex.codecogs.com/png.latex?%0Ar%5En%20=%20%5Csum_%7Bk=0%7D%5Er%20%5Cbinom%20r%20k%20k!%20%7Bn%20%5Cbrace%20k%7D%0A"> 二项式反演即得 <img src="https://latex.codecogs.com/png.latex?%0Ar!%20%7Bn%20%5Cbrace%20r%7D%20=%20%5Csum_%7Bk=0%7D%5Er%20(-1)%5E%7Br-k%7D%20%5Cbinom%20r%20k%20k%5En%0A"> 即 <img src="https://latex.codecogs.com/png.latex?%0A%7Bn%20%5Cbrace%20r%7D%20=%20%5Csum_%7Bk=0%7D%5Er%20%5Cfrac%7B(-1)%5E%7Br-k%7D%20k%5En%7D%7Bk!%20(r-k)!%7D%20=%20%5Csum_%7Bk=0%7D%5Er%20%5Cfrac%7Bk%5En%7D%7Bk!%7D%20%5Ccdot%20%5Cfrac%7B(-1)%5E%7Br-k%7D%7D%7B(r-k)!%7D%0A"> 这正是第二类 Stirling 数的通项公式．注意到其具有卷积的形式，由此可快速计算出同一行的第二类 Stirling 数．事实上，二项式反演的生成函数形式已向我们道尽一切 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BOGF%7D_n%5E%7B1,0,1%7D(x)%20=%20%5Cmathrm%7BEGF%7D_n%5E%7B1,1,1%7D(x)%20=%20e%5E%7B-x%7D%20%5Cmathrm%7BEGF%7D_n%5E%7B1,1,0%7D(x)%20=%20e%5E%7B-x%7D%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20k%5En%20%5Cfrac%7Bx%5Ek%7D%7Bk!%7D%0A"></p>
</section>
<section id="第二类-striling-数同列计算mathrmegf_r101xmathrmegf_r110x-与-mathrmegf10sigma1x" class="level4">
<h4 class="anchored" data-anchor-id="第二类-striling-数同列计算mathrmegf_r101xmathrmegf_r110x-与-mathrmegf10sigma1x">第二类 Striling 数同列计算：<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D_r%5E%7B1,0,1%7D(x)">，<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D_r%5E%7B1,1,0%7D(x)"> 与 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D%5E%7B1,0/%5CSigma,1%7D(x)"></h4>
<p>为快速计算同一列的第二类 Stirling 数，考虑用生成函数的思路构造 <img src="https://latex.codecogs.com/png.latex?1,1,0">-球盒问题和 <img src="https://latex.codecogs.com/png.latex?1,0,1">-球盒问题的方案数．前者将大小为 <img src="https://latex.codecogs.com/png.latex?n"> 的有标号集合划分为 <img src="https://latex.codecogs.com/png.latex?r"> 个有标号等价类，这相当于有序拼接 <img src="https://latex.codecogs.com/png.latex?r"> 个非空有标号集合；后者则是前者除掉 <img src="https://latex.codecogs.com/png.latex?r!"> 消序的版本．写成生成函数即 <span id="eq-egf-110-101"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathrm%7BEGF%7D_r%5E%7B1,1,0%7D(x)%20&amp;=%20(e%5Ex%20-%201)%5Er%20%5C%5C%0A%5Cmathrm%7BEGF%7D_r%5E%7B1,0,1%7D(x)%20&amp;=%20%5Cfrac%7B(e%5Ex%20-%201)%5Er%7D%7Br!%7D%0A%5Cend%7Baligned%7D%0A%5Ctag%7B1%7D"></span></p>
</section>
<section id="bell-数" class="level4">
<h4 class="anchored" data-anchor-id="bell-数">Bell 数</h4>
<p>Bell 数 <img src="https://latex.codecogs.com/png.latex?B(n)"> 的组合定义即 <img src="https://latex.codecogs.com/png.latex?1,0/%5CSigma,1">-球盒问题的方案数 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BBB%7D_%7B1,0/%5CSigma,1%7D">，亦可描述为 <img src="https://latex.codecogs.com/png.latex?n"> 元集合上等价关系（划分）的数量．</p>
<p>注意到 <img src="https://latex.codecogs.com/png.latex?1,0,1">-球盒问题和 <img src="https://latex.codecogs.com/png.latex?1,0/%5CSigma,1">-球盒问题的关系 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BBB%7D_%7B1,0/%5CSigma,1%7D(n)%20=%20%5Csum_%7Br=0%7D%5E%7Bn%7D%20%5Cmathrm%7BBB%7D_%7B1,0,1%7D(n,r)%20=%20%5Csum_%7Br=0%7D%5E%7B+%5Cinfty%7D%20%5Cmathrm%7BBB%7D_%7B1,0,1%7D(n,r)%0A"> 我们首先有 <img src="https://latex.codecogs.com/png.latex?%0AB(n)%20=%20%5Csum_%7Br=0%7D%5En%20%7Bn%20%5Cbrace%20r%7D%0A"> 其次，根据 式&nbsp;1 写出此关系的 EGF 形式就有 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathrm%7BEGF%7D%5E%7B1,0/%5CSigma,1%7D(x)%20=%20%5Csum_%7Br=0%7D%5E%7B+%5Cinfty%7D%20%5Cmathrm%7BEGF%7D_r%5E%7B1,0,1%7D(x)%20=%20%5Csum_%7Br=0%7D%5E%7B+%5Cinfty%7D%20%5Cfrac%7B(e%5Ex%20-%201)%5Er%7D%7Br!%7D%20=%20e%5E%7Be%5Ex%20-%201%7D%0A"> 我们得到 Bell 数的可用于快速计算的 EGF．</p>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em>. </span>有标号集合的无序划分是指数型生成函数的一类重要应用．例如，有标号连通图计数可视为对有标号一般图的无序划分，故有标号连通图的 EGF <img src="https://latex.codecogs.com/png.latex?G(x)"> 和有标号一般图的 EGF <img src="https://latex.codecogs.com/png.latex?F(x)"> 间有着 <img src="https://latex.codecogs.com/png.latex?e%5E%7BG(x)%7D%20=%20F(x)"> 的关系．</p>
</div>
<p>Bell 数还有递推形式 <img src="https://latex.codecogs.com/png.latex?%0AB(n+1)%20=%20%5Csum_%7Bk=0%7D%5En%20%5Cbinom%20n%20k%20B(k)%0A"> 边界 <img src="https://latex.codecogs.com/png.latex?B(0)=1">．组合的解释是，枚举第 <img src="https://latex.codecogs.com/png.latex?n+1"> 个元素被放入的集合的大小，再对除该集合之外的元素进行划分．从指数生成函数的角度来看，设 <img src="https://latex.codecogs.com/png.latex?B(n)"> 的 EGF 为 <img src="https://latex.codecogs.com/png.latex?F(x)">，由 EGF 的移位性质和二项式反演的 EGF 形式，上式等价于 <img src="https://latex.codecogs.com/png.latex?F'(x)%20=%20e%5Ex%20F(x)">，解此微分方程也能得到 Bell 数的生成函数．</p>
</section>
<section id="第一类-stirling-数stirling-数与阶乘幂todo" class="level4">
<h4 class="anchored" data-anchor-id="第一类-stirling-数stirling-数与阶乘幂todo">第一类 Stirling 数、Stirling 数与阶乘幂【TODO】</h4>
<p>更多参考：</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Stirling_number">Stirling number - Wikipedia</a></li>
<li><a href="https://oi-wiki.org/math/combinatorics/stirling/">斯特林数 - OI Wiki</a></li>
</ul>
</section>
</section>
<section id="分拆数todo" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="分拆数todo"><span class="header-section-number">3.4</span> 分拆数【TODO】</h3>
<p>关于 <img src="https://latex.codecogs.com/png.latex?k"> 部分拆数，</p>
<blockquote class="blockquote">
<p>By taking conjugates, the number <img src="https://latex.codecogs.com/png.latex?p_k(n)"> of partitions of <img src="https://latex.codecogs.com/png.latex?n"> into exactly <img src="https://latex.codecogs.com/png.latex?k"> parts is equal to the number of partitions of <img src="https://latex.codecogs.com/png.latex?n"> in which the largest part has size <img src="https://latex.codecogs.com/png.latex?k">.</p>
</blockquote>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Partition_(number_theory)">Partition (number theory) - Wikipedia</a></li>
<li><a href="https://oi-wiki.org/math/combinatorics/partition/">分拆数 - OI Wiki</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/530925142">组合数学（2）分拆数 - 知乎</a></li>
</ul>
</section>
<section id="背包计数" class="level3" data-number="3.5">
<h3 data-number="3.5" class="anchored" data-anchor-id="背包计数"><span class="header-section-number">3.5</span> 背包计数</h3>
<p>通式： <img src="https://latex.codecogs.com/png.latex?%0A%5Cprod_%7Bi=1%7D%5En%20(1+%20s_i%20x%5E%7Bv_i%7D)%5E%7Bm_i%7D%20=%20%5Cexp%20%5Csum_%7Bi=1%7D%5En%20m_i%20%5Cln%20(1%20+%20s_i%20x%5E%7Bv_i%7D)%20=%20%5Cexp%20%5Csum_%7Bi=1%7D%5En%20m_i%20%5Csum_%7Bk=1%7D%5E%7B+%5Cinfty%7D%20(-1)%5E%7Bk-1%7D%20%5Cfrac%20%7Bs_i%5Ek%7D%7Bk%7D%20x%5E%7Bk%20v_i%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?v_i"> 互不相同（相同者体现在 <img src="https://latex.codecogs.com/png.latex?m_i"> 上）．后者可以埃筛调和级数计算贡献 + 多项式 <img src="https://latex.codecogs.com/png.latex?%5Cexp"> 地在 <img src="https://latex.codecogs.com/png.latex?O(t%20%5Clog%20t)">（这里的 <img src="https://latex.codecogs.com/png.latex?t"> 指我们所关心的体积上限）内快速计算．</p>
<p>下面问题的 OGF 都可化归至通式，从而 <img src="https://latex.codecogs.com/png.latex?O(t%20%5Clog%20t)"> 地得到计算．</p>
<p>设有 <img src="https://latex.codecogs.com/png.latex?n"> 种可区分的物品，体积分别为 <img src="https://latex.codecogs.com/png.latex?v_i">．当每种物品只有一件时，方案数 OGF 为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cprod_%7Bi=1%7D%5En%20(1+%20x%5E%7Bv_i%7D)%0A"> 当每种物品有无限件时，方案数 OGF 为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cprod_%7Bi=1%7D%5En%20(1+%20x%5E%7Bv_i%7D%20+%20x%5E%7B2%20v_i%7D%20+%20%5Cdots)%20=%20%5Cprod_%7Bi=1%7D%5En%20(1%20-%20x%5E%7Bv_i%7D)%5E%7B-1%7D%0A"> 当每种物品分别有 <img src="https://latex.codecogs.com/png.latex?c_i"> 件时，方案数 OGF 为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cprod_%7Bi=1%7D%5En%20(1+%20x%5E%7Bv_i%7D%20+%20x%5E%7B2%20v_i%7D%20+%20%5Cdots%20+%20x%5E%7Bc_i%20v_i%7D)%20=%20%5Cprod_%7Bi=1%7D%5En%20%5Cfrac%7B1%20-%20x%5E%7B(c_i+1)%20v_i%7D%7D%7B1%20-%20x%5E%7Bv_i%7D%7D%20=%20%5Cprod_%7Bi=1%7D%5En%20(1%20-%20x%5E%7B(c_i+1)%20v_i%7D)%20%5Cprod_%7Bi=1%7D%5En%20(1%20-%20x%5E%7Bv_i%7D)%5E%7B-1%7D%0A"></p>
<p>ex：普通的最优化背包也有卷积视角的理解，见 <a href="https://codeforces.com/blog/entry/98663">Knapsack, Subset Sum and the (max,+) Convolution - Codeforces</a>．</p>
</section>
<section id="各种图计数" class="level3" data-number="3.6">
<h3 data-number="3.6" class="anchored" data-anchor-id="各种图计数"><span class="header-section-number">3.6</span> 各种图计数</h3>
<section id="有无标号有无根树计数todo" class="level4">
<h4 class="anchored" data-anchor-id="有无标号有无根树计数todo">有（无）标号有（无）根树计数【TODO】</h4>
</section>
<section id="有标号-dag-计数" class="level4">
<h4 class="anchored" data-anchor-id="有标号-dag-计数">有标号 DAG 计数</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0Af_n=%5Csum_%7Bi=1%7D%5En(-1)%5E%7Bi+1%7D%5Cbinom%7Bn%7D%7Bi%7D2%5E%7Bi(n-i)%7Df_%7Bn-i%7D%0A"> 思路是对 DAG 的入度为零的点做容斥．进一步推导可拆出卷积形式，再用类似分治 FFT 的生成函数方法可得封闭形式．</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Directed_acyclic_graph#Combinatorial_enumeration">Wikipedia</a></li>
<li><a href="https://oeis.org/A003024">OEIS</a></li>
<li><a href="https://oi-wiki.org/math/combinatorics/inclusion-exclusion-principle/#dag-%E8%AE%A1%E6%95%B0">OI-Wiki</a></li>
<li><a href="https://www.cnblogs.com/cjyyb/p/10134575.html">cjyyb 题解</a></li>
</ul>
</section>
<section id="有标号偏序图计数" class="level4">
<h4 class="anchored" data-anchor-id="有标号偏序图计数">有标号偏序图计数</h4>
<p>问得好，但这是个著名的 open problem．各种类型的偏序图计数参考 <a href="https://en.wikipedia.org/wiki/Partially_ordered_set#Number_of_partial_orders">Partially ordered set - Wikipedia # Number of partial orders</a>．</p>
<ul>
<li><a href="https://math.stackexchange.com/questions/2677986/how-many-partial-orders-can-be-defined-on-varnothing-and-a-finite-set">Stack Exchange</a></li>
<li><a href="https://oeis.org/A001035">OEIS</a></li>
<li><a href="https://doi.org/10.1007/BF00383446">Erné, M., Stege, K. Counting finite posets and topologies. Order 8, 247–265 (1991)</a>（内有研究历史综述）</li>
</ul>
</section>
<section id="有标号连通图计数" class="level4">
<h4 class="anchored" data-anchor-id="有标号连通图计数">有标号连通图计数</h4>
<p>标准的有标号无序划分．EGF 是有标号一般图计数 EGF 的 <img src="https://latex.codecogs.com/png.latex?%5Cln">．</p>
</section>
<section id="竞赛图" class="level4">
<h4 class="anchored" data-anchor-id="竞赛图">竞赛图</h4>
<p>强连通的竞赛图一定存在 Hamilton 回路（归纳证明）；无环的竞赛图是全序图．两者结合可推出竞赛图一定存在 Hamilton 路径．同时，强连通竞赛图中存在所有大小的环路．</p>
</section>
<section id="有标号划分为-k-个全序图" class="level4">
<h4 class="anchored" data-anchor-id="有标号划分为-k-个全序图">有标号划分为 <img src="https://latex.codecogs.com/png.latex?k"> 个全序图</h4>
<p>Lah 数 <img src="https://latex.codecogs.com/png.latex?%0AL(n,k)%20=%20%5Cfrac%7Bn!%7D%7Bk!%7D%20%5Cbinom%7Bn-1%7D%7Bk-1%7D%0A"> 思路是先 <img src="https://latex.codecogs.com/png.latex?n!"> 排个大序，再无标号球入非空有标号桶，再除 <img src="https://latex.codecogs.com/png.latex?k!"> 给桶消序．</p>
<p>生成函数的思路是，考虑非空全序计数的 EGF 为 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%20%7B1-x%7D%20-%201%20=%20%5Cfrac%20x%20%7B1-x%7D">，<img src="https://latex.codecogs.com/png.latex?k"> 次有序拼接再消序即得 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum%20_%7Bn%5Cgeq%20k%7DL(n,k)%7B%5Cfrac%20%7Bx%5E%7Bn%7D%7D%7Bn!%7D%7D=%7B%5Cfrac%20%7B1%7D%7Bk!%7D%7D%5Cleft(%7B%5Cfrac%20%7Bx%7D%7B1-x%7D%7D%5Cright)%5E%7Bk%7D%0A"></p>
<p>更多信息参考 Wikipedia．</p>
</section>
<section id="有根树拓扑序计数" class="level4">
<h4 class="anchored" data-anchor-id="有根树拓扑序计数">有根树拓扑序计数</h4>
<p>对于外向树，<img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bn!%7D%7B%5Cprod_%7Bu%20%5Cin%20V%7D%20%5Coperatorname%7Bsize%7D(u)%7D">，其中 <img src="https://latex.codecogs.com/png.latex?V"> 是所有节点的集合，<img src="https://latex.codecogs.com/png.latex?n"> 是树大小，<img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bsize%7D(u)"> 是以 <img src="https://latex.codecogs.com/png.latex?u"> 为根的子树大小．</p>
<p>树形 DP 风格的归纳证明是可以的．下面的链接中提供了一个有趣的组合理解，其思路是从全序出发，逐步按照拓扑序的要求对每个节点下的子树消序．</p>
<p>题目常见要求对每个节点作为根节点求出方案数，换根 DP 即可．</p>
<p>注意到每个合法的外向树拓扑序 reverse 后立刻与内向树拓扑序形成一一对应，故内向树拓扑序计数与外向树相同．</p>
<ul>
<li><a href="https://codeforces.com/blog/entry/75627">[Insight] Number of Topological Orderings of a Directed Tree - Codeforces</a></li>
</ul>
</section>
<section id="dag-拓扑序计数" class="level4">
<h4 class="anchored" data-anchor-id="dag-拓扑序计数">DAG 拓扑序计数</h4>
<p>对一般的 DAG 上的拓扑序计数，其本质上是偏序上线性扩张的计数问题，这被证明是 #P-complete 的问题（总之就是很困难）．</p>
<ul>
<li><a href="https://math.stackexchange.com/questions/814177/how-many-topological-orderings-exist-for-a-graph">How many topological orderings exist for a graph? - Mathematics Stack Exchange</a></li>
<li><a href="https://en.wikipedia.org/wiki/Topological_sorting#Relation_to_partial_orders">Topological sorting - Wikipedia # Relation to partial orders</a></li>
<li><a href="https://en.wikipedia.org/wiki/Linear_extension">Linear extension - Wikipedia</a></li>
</ul>
</section>
<section id="无向图的色多项式chromatic-polynomial和无环定向acyclic-orientations" class="level4">
<h4 class="anchored" data-anchor-id="无向图的色多项式chromatic-polynomial和无环定向acyclic-orientations">无向图的色多项式（chromatic polynomial）和无环定向（acyclic orientations）</h4>
<p>色多项式是对图的 <img src="https://latex.codecogs.com/png.latex?k">-colorings 的数量在 <img src="https://latex.codecogs.com/png.latex?k=0,1,%5Cdots,n"> 进行 Lagrange 插值后得到的多项式．<img src="https://latex.codecogs.com/png.latex?k%3En"> 的 <img src="https://latex.codecogs.com/png.latex?k">-colorings 的数量也可通过在色多项式的 <img src="https://latex.codecogs.com/png.latex?x=k"> 处求值得到．这一证明主要依赖所谓的 deletion–contraction 递推关系式．</p>
<p>对一般的图而言，色多项式的大部分系数和求值问题都是 “NP” 相关的，但在一些特殊的图上有好的形式：</p>
<ul>
<li>完全图 <img src="https://latex.codecogs.com/png.latex?K_n">：<img src="https://latex.codecogs.com/png.latex?x%5E%7B%5Cunderline%7Bn%7D%7D">（下降阶乘幂）</li>
<li>无边图 <img src="https://latex.codecogs.com/png.latex?%5Coverline%20K_n">：<img src="https://latex.codecogs.com/png.latex?x%5En"></li>
<li>链 / 树：<img src="https://latex.codecogs.com/png.latex?P_n">：<img src="https://latex.codecogs.com/png.latex?x(x-1)%5E%7Bn-1%7D"></li>
<li>环：<img src="https://latex.codecogs.com/png.latex?(x-1)%5En%20+%20(-1)%5En%20(x-1)"></li>
</ul>
<p>多个连通分量拼接时，色多项式满足乘法性．</p>
<p>关于图的无环定向的方案数，Richard Stanley 在一篇 1973 年的论文中证明其恰为图的色多项式在 <img src="https://latex.codecogs.com/png.latex?-1"> 处的取值．</p>
<ul>
<li><a href="https://mathworld.wolfram.com/ChromaticPolynomial.html">Chromatic Polynomial - from Wolfram MathWorld</a></li>
<li><a href="https://en.wikipedia.org/wiki/Chromatic_polynomial">Chromatic polynomial - Wikipedia</a></li>
<li><a href="https://en.wikipedia.org/wiki/Orientation_(graph_theory)">Orientation (graph theory) - Wikipedia</a></li>
<li>Stanley, R. P. “Acyclic Orientations of Graphs.” Disc. Math. 5, 171-178, 1973.</li>
</ul>
</section>
</section>
<section id="矩阵树定理" class="level3" data-number="3.7">
<h3 data-number="3.7" class="anchored" data-anchor-id="矩阵树定理"><span class="header-section-number">3.7</span> 矩阵树定理</h3>
<section id="无向图的情形" class="level4">
<h4 class="anchored" data-anchor-id="无向图的情形">无向图的情形</h4>
<p>对无向图，度数矩阵 <img src="https://latex.codecogs.com/png.latex?D%20=%20%5Coperatorname%7Bdiag%7D%20%5C%7B%20%5Coperatorname%7Bdeg%7D(i)%20%5C%7D">，邻接矩阵 <img src="https://latex.codecogs.com/png.latex?A"> 定义为 <img src="https://latex.codecogs.com/png.latex?%0AA_%7Bi,j%7D%20=%20%5Cbegin%7Bcases%7D%0A0%20&amp;%20i=j%20%5C%5C%0Ae(i,j)%20&amp;%20i%20%5Cneq%20j%0A%5Cend%7Bcases%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?e(i,j)"> 表示点 <img src="https://latex.codecogs.com/png.latex?i"> 到点 <img src="https://latex.codecogs.com/png.latex?j"> 的边的数量（对无向图，<img src="https://latex.codecogs.com/png.latex?e(i,j)%20=%20e(j,i)">）．</p>
<p>定义 Laplace 矩阵（Kirchhoff 矩阵）<img src="https://latex.codecogs.com/png.latex?L=D-A">．</p>
<p>Laplace 矩阵有性质 <img src="https://latex.codecogs.com/png.latex?L=%20B%20B%5ET">，其中关联矩阵 <img src="https://latex.codecogs.com/png.latex?B"> 按如下方式定义 <img src="https://latex.codecogs.com/png.latex?%0AB_%7Bi,j%7D%20=%20%5Cbegin%7Bcases%7D%0A1%20&amp;%20%5Ctext%7Bnode%20$i$%20is%20the%20ID-smaller%20endpoint%20of%20edge%20$j$%7D%20%5C%5C%0A-1%20&amp;%20%5Ctext%7Bnode%20$i$%20is%20the%20ID-larger%20endpoint%20of%20edge%20$j$%7D%20%5C%5C%0A0%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Bcases%7D%0A"></p>
<p>这里 <img src="https://latex.codecogs.com/png.latex?1"> 与 <img src="https://latex.codecogs.com/png.latex?-1"> 的引入完成了一种对边的“手动定向”，其用途将在后文介绍．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-mattree-nondirected" class="theorem">
<p><span class="theorem-title"><strong>定理 12 (矩阵树定理，无向图)</strong></span> <img src="https://latex.codecogs.com/png.latex?n"> 点无向图的生成树的个数与该图的 Laplace 矩阵 <img src="https://latex.codecogs.com/png.latex?L"> 的任意主子式的值相等．其也与 <img src="https://latex.codecogs.com/png.latex?L"> 所有 <img src="https://latex.codecogs.com/png.latex?n-1"> 个非零特征值乘积的 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%20n"> 倍相等．</p>
</div>
</div>
</div>
</div>
<p>Laplace 矩阵同行的代数余子式均相等（这性质由行和为 <img src="https://latex.codecogs.com/png.latex?0"> 得到），因此去掉任意一行一列均可得到正确的无向图生成树计数．此外，由于 <img src="https://latex.codecogs.com/png.latex?L%20=%20B%20B%5ET"> 至少半正定，<img src="https://latex.codecogs.com/png.latex?L"> 的所有特征值非负．</p>
<p>证明的要点在于对 <img src="https://latex.codecogs.com/png.latex?L%20=%20B%20B%5ET"> 的某个主子式（一般选择去掉第一行第一列）应用 Cauchy-Binet 公式，随后说明行列式的组合意义中，环的情况一定相互抵消．关于特征值的结论可从特征多项式、各 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶主子式与韦达定理的关系中得到（依此方法能进一步得到有关 <img src="https://latex.codecogs.com/png.latex?k"> - 生成森林的一些结论）．</p>
<p>事实上，去掉第 <img src="https://latex.codecogs.com/png.latex?i"> 行第 <img src="https://latex.codecogs.com/png.latex?i"> 列，即是统计以 <img src="https://latex.codecogs.com/png.latex?i"> 为根的根向生成树的数量．先前定义关联矩阵 <img src="https://latex.codecogs.com/png.latex?B"> 时“手动定向”，是为了使换向过程中环的情况相互抵消，只留下树的唯一一种情况．当然，因为是无向图，这里树的朝向和根的具体位置并不重要．</p>
</section>
<section id="有向图的情形" class="level4">
<h4 class="anchored" data-anchor-id="有向图的情形">有向图的情形</h4>
<p>对有向图，我们明确统计的对象为根向（或叶向）生成树的数量．根向树形图与出度 Laplace 矩阵相关，<img src="https://latex.codecogs.com/png.latex?L%5E%7Bout%7D%20=%20D%5E%7Bout%7D%20-%20A">，其中 <img src="https://latex.codecogs.com/png.latex?D%5E%7Bout%7D"> 是出度矩阵．</p>
<p>为体现有向图的要求，出度 Laplace 矩阵对应的关联矩阵需要一些修改．令矩阵 <img src="https://latex.codecogs.com/png.latex?B"> 满足 <img src="https://latex.codecogs.com/png.latex?%0AB_%7Bi,j%7D%20=%20%5Cbegin%7Bcases%7D%0A1%20&amp;%20%5Ctext%7Bnode%20$i$%20is%20the%20head%20of%20edge%20$j$%7D%20%5C%5C%0A0%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Bcases%7D%0A"> 矩阵 <img src="https://latex.codecogs.com/png.latex?C"> 满足 <img src="https://latex.codecogs.com/png.latex?%0AC_%7Bi,j%7D%20=%20%5Cbegin%7Bcases%7D%0A1%20&amp;%20%5Ctext%7Bnode%20$i$%20is%20the%20head%20of%20edge%20$j$%7D%20%5C%5C%0A-1%20&amp;%20%5Ctext%7Bnode%20$i$%20is%20the%20tail%20of%20edge%20$j$%7D%20%5C%5C%0A0%20&amp;%20%5Ctext%7Botherwise%7D%0A%5Cend%7Bcases%7D%0A"> 则出度 Laplace 矩阵满足性质 <img src="https://latex.codecogs.com/png.latex?L%5E%7Bout%7D%20=%20B%20C%5ET">．我们构造的矩阵 <img src="https://latex.codecogs.com/png.latex?B"> 体现了对出边方向的要求，在此基础上矩阵 <img src="https://latex.codecogs.com/png.latex?C"> 进一步完成了“手动定向”的工作．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-mattree-rootwise" class="theorem">
<p><span class="theorem-title"><strong>定理 13 (矩阵树定理，根向树形图)</strong></span> <img src="https://latex.codecogs.com/png.latex?n"> 点有向图以 <img src="https://latex.codecogs.com/png.latex?i"> 为根的生成根向树形图的数量与该图出度 Laplace 矩阵 <img src="https://latex.codecogs.com/png.latex?L%5E%7Bout%7D"> 去掉第 <img src="https://latex.codecogs.com/png.latex?i"> 行第 <img src="https://latex.codecogs.com/png.latex?i"> 列的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶主子式的值相等．该有向图的所有生成根向树形图的数量也与 <img src="https://latex.codecogs.com/png.latex?L%5E%7Bout%7D"> 的所有 <img src="https://latex.codecogs.com/png.latex?n-1"> 个非零特征值的乘积相等．</p>
</div>
</div>
</div>
</div>
<p>由于 <img src="https://latex.codecogs.com/png.latex?L%5E%7Bout%7D"> 的行和仍为 <img src="https://latex.codecogs.com/png.latex?0">，其同行代数余子式仍然相等．</p>
<p>关于叶向树形图，我们有类似的结论：</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-mattree-leafwise" class="theorem">
<p><span class="theorem-title"><strong>定理 14 (矩阵树定理，叶向树形图)</strong></span> <img src="https://latex.codecogs.com/png.latex?n"> 点有向图以 <img src="https://latex.codecogs.com/png.latex?i"> 为根的生成叶向树形图的数量与该图入度 Laplace 矩阵 <img src="https://latex.codecogs.com/png.latex?L%5E%7Bin%7D"> 去掉第 <img src="https://latex.codecogs.com/png.latex?i"> 行第 <img src="https://latex.codecogs.com/png.latex?i"> 列的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶主子式的值相等．该有向图的所有生成根向树形图的数量也与 <img src="https://latex.codecogs.com/png.latex?L%5E%7Bin%7D"> 的所有 <img src="https://latex.codecogs.com/png.latex?n-1"> 个非零特征值的乘积相等．</p>
</div>
</div>
</div>
</div>
<p>由于 <img src="https://latex.codecogs.com/png.latex?L%5E%7Bin%7D"> 的列和（而非行和）为 <img src="https://latex.codecogs.com/png.latex?0">，其同列（而非同行）代数余子式均相等．</p>
<p>更多内容，参考</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Laplacian_matrix">Laplacian matrix - Wikipedia</a></li>
<li><a href="https://oi-wiki.org/graph/matrix-tree/">矩阵树定理 - OI Wiki</a></li>
<li><a href="https://en.wikipedia.org/wiki/Kirchhoff's_theorem">Kirchhoff’s theorem - Wikipedia</a></li>
</ul>
</section>
</section>
<section id="polya-计数" class="level3" data-number="3.8">
<h3 data-number="3.8" class="anchored" data-anchor-id="polya-计数"><span class="header-section-number">3.8</span> Polya 计数</h3>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-burnside" class="theorem">
<p><span class="theorem-title"><strong>定理 15 (Burnside)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%E7%AD%89%E4%BB%B7%E7%B1%BB%E8%AE%A1%E6%95%B0%20&amp;=%20%5Cfrac%7B1%7D%7B%7CG%7C%7D%5Csum_%7Bf%20%5Cin%20G%7D%20%7CC(f)%7C%0A%5Cend%7Baligned%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?G"> 是等价操作群，<img src="https://latex.codecogs.com/png.latex?C(f)"> 是操作 <img src="https://latex.codecogs.com/png.latex?f"> 下的不动点集合．</p>
</div>
</div>
</div>
</div>
</section>
<section id="杂数选提" class="level3" data-number="3.9">
<h3 data-number="3.9" class="anchored" data-anchor-id="杂数选提"><span class="header-section-number">3.9</span> 杂数选提</h3>
<section id="catalan-数" class="level4">
<h4 class="anchored" data-anchor-id="catalan-数">Catalan 数</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0AC_n%20=%20%5Cbinom%7B2n%7D%7Bn%7D%20-%20%5Cbinom%7B2n%7D%7Bn+1%7D%20=%20%5Cfrac%201%20%7Bn+1%7D%20%5Cbinom%7B2n%7D%7Bn%7D%20=%20%5Cprod_%7Bk=2%7D%5En%20%5Cfrac%7Bn+k%7D%7Bk%7D%0A"></p>
<p>Segner’s recurrence relation: <img src="https://latex.codecogs.com/png.latex?%0AC_0%20=%201;%5Cquad%20C_%7Bn+1%7D%20=%20%5Csum_%7Bi=0%7D%5En%20C_i%20C_%7Bn-i%7D%0A"></p>
<p>OGF: <img src="https://latex.codecogs.com/png.latex?%0AA(z)%20=%201%20+%20z%20A%5E2(z)%20%5Cimplies%20A(z)%20=%20%5Cfrac%7B1-%5Csqrt%7B1-4z%7D%7D%7B2z%7D%0A"></p>
<p>注意下面组合意义间的前后逻辑顺序．</p>
<ul>
<li><p>number of full binary tree with <img src="https://latex.codecogs.com/png.latex?n"> interior nodes / <img src="https://latex.codecogs.com/png.latex?n+1"> leaves / <img src="https://latex.codecogs.com/png.latex?2n+1"> nodes</p>
<p>在数内点意义下可以导出 Catalan 数的生成函数．</p></li>
<li><p>number of ways of associating <img src="https://latex.codecogs.com/png.latex?n"> binary operators / parenthesizing <img src="https://latex.codecogs.com/png.latex?n+1"> factors completely</p></li>
<li><p>number of proper parenthesis sequences with <img src="https://latex.codecogs.com/png.latex?n"> pairs of parentheses</p>
<p>【TODO】暂时不知道怎么从上面推过来的．另一种理解是长度为 <img src="https://latex.codecogs.com/png.latex?n"> 的出栈序列的数量．</p></li>
<li><p>number of ordered trees with <img src="https://latex.codecogs.com/png.latex?n+1"> vertices</p>
<p>最外层要补一对括号．</p></li>
<li><p>number of binary trees with <img src="https://latex.codecogs.com/png.latex?n"> vertices</p>
<p>by left-child right-sibling encoding of ordered trees. 最后删去只有左儿子的根．</p>
<p>该组合意义可以导出 Catalan 数的生成函数．</p></li>
</ul>
<p>Catalan 数的组合意义并不止如此几种．cf.&nbsp;<a href="https://en.wikipedia.org/wiki/Catalan_number">Wikipedia</a></p>
</section>
</section>
<section id="代数组合todo" class="level3" data-number="3.10">
<h3 data-number="3.10" class="anchored" data-anchor-id="代数组合todo"><span class="header-section-number">3.10</span> 代数组合【TODO】</h3>
<section id="q-analog" class="level4">
<h4 class="anchored" data-anchor-id="q-analog"><img src="https://latex.codecogs.com/png.latex?q">-analog</h4>
</section>
<section id="有限域上的线性空间" class="level4">
<h4 class="anchored" data-anchor-id="有限域上的线性空间">有限域上的线性空间</h4>
</section>
<section id="有限群构型计数" class="level4">
<h4 class="anchored" data-anchor-id="有限群构型计数">有限群构型计数</h4>
</section>
</section>
</section>
<section id="多项式" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="多项式"><span class="header-section-number">4</span> 多项式</h2>
<p>此部分详细介绍请移步 <a href="../..\posts/20230928-dft/">FFT/NTT 讲稿</a>．</p>
<section id="通用" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="通用"><span class="header-section-number">4.1</span> 通用</h3>
</section>
<section id="fft-fntt-卷积" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="fft-fntt-卷积"><span class="header-section-number">4.2</span> FFT / FNTT / 卷积</h3>
<ul>
<li><p>DFT：（本原）单位根构造 <img src="https://latex.codecogs.com/png.latex?%5Comega_n%20=%20e%5E%7B%5Cfrac%20%7B2%20%5Cpi%7D%7Bn%7Di%7D">．</p></li>
<li><p>NTT：<img src="https://latex.codecogs.com/png.latex?P=998244353%20=%207%20%5Ctimes%2017%20%5Ctimes%202%5E%7B23%7D%20+%201">，<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BPR%7D%20=%203"> 是它的一个原根．（本原）单位根构造 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7Bn%7D%20=%20%5Cmathrm%7BPR%7D%5E%7B%5Cfrac%7BP-1%7D%7Bn%7D%7D%20%5Cbmod%20P">．</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?P=1004535809%20=%20479%20%5Ctimes%202%5E%7B21%7D%20+%201">，<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BPR%7D%20=%203"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?P=469762049%20=%207%20%5Ctimes%202%5E%7B26%7D+1">，<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BPR%7D%20=%203"></p></li>
</ul>
<p>考虑将待变换多项式 <img src="https://latex.codecogs.com/png.latex?%0AA(x)%20=%20%5Csum_%7Bk=0%7D%5E%7B2n-1%7D%20a_k%20x%5Ek%0A"> 奇偶分项为两个多项式 <img src="https://latex.codecogs.com/png.latex?%0AA(x)%20=%20A_0%20(x%5E2)%20+%20x%20A_1(x%5E2)%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AA_0%20(x)%20&amp;=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k%7D%20x%5Ek%20%5C%5C%0AA_1%20(x)%20&amp;=%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20a_%7B2k+1%7D%20x%5Ek%0A%5Cend%7Baligned%7D%0A"> 代入 <img src="https://latex.codecogs.com/png.latex?x%20=%20%5Comega_%7B2n%7D%5Ek%20%5Cpod%7Bk%20=%200,%5Cdots,%202n-1%7D">，用单位根消去 / 折半性质（<img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D%5E%7B2k%7D%20=%20%5Comega_n%5Ek">） <img src="https://latex.codecogs.com/png.latex?%0AA(%5Comega_%7B2n%7D%5Ek)%20=%20A_0%20(%5Comega_%7Bn%7D%5Ek)%20+%20%5Comega_%7B2n%7D%5Ek%20A_1%20(%5Comega_%7Bn%7D%5Ek)%0A"> 用 <img src="https://latex.codecogs.com/png.latex?%5Comega_%7B2n%7D%5E%7Bn+k%7D%20=%20-%20%5Comega_%7B2n%7D%5Ek"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AA(%5Comega_%7B2n%7D%5Ek)%20&amp;=%20A_0%20(%5Comega_n%5Ek)%20+%20%5Comega_%7B2n%7D%5Ek%20A_1%20(%5Comega_n%5Ek)%20%5C%5C%0AA(%5Comega_%7B2n%7D%5E%7Bn+k%7D)%20&amp;=%20A_0%20(%5Comega_n%5Ek)%20-%20%5Comega_%7B2n%7D%5Ek%20A_1(%5Comega_n%5Ek)%0A%5Cend%7Baligned%7D%0A%5Cpod%7Bk%20=%200,%20%5Cdots,%20n-1%7D%0A"> 即得 FFT/FNTT 递归算法．用单位根求和性质 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%201%20n%20%5Csum_%7Bk=0%7D%5E%7Bn-1%7D%20%5Comega%5E%7Bik%7D%20=%20%5Bi%20%5Cmid%20n%5D%0A"> 可知 DFT/NTT 变换矩阵 <img src="https://latex.codecogs.com/png.latex?F%20=%20%5Cbegin%7Bpmatrix%7D%5Comega_%7Bn%7D%5E%7Bij%7D%5Cend%7Bpmatrix%7D_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D"> 满足 <img src="https://latex.codecogs.com/png.latex?F%20F%5EH%20=%20F%5EH%20F%20=%20n%20I_n">，故 <img src="https://latex.codecogs.com/png.latex?F%5E%7B-1%7D%20=%20%5Cfrac%201%20n%20F%5EH%20=%20%5Cbegin%7Bpmatrix%7D%20%5Cfrac%201%20n%20%5Comega_%7Bn%7D%5E%7B-ij%7D%5Cend%7Bpmatrix%7D_%7B(i,j)%20%5Cin%20n%20%5Ctimes%20n%7D">，此即 DFT/NTT 逆变换矩阵．</p>
<section id="蝶形运算与迭代算法" class="level4">
<h4 class="anchored" data-anchor-id="蝶形运算与迭代算法">蝶形运算与迭代算法</h4>
<p>为使用迭代算法，需要快速得到递归算法向下深入过程中 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20a_n%20%5C%7D"> 置换后的最终结果．观察知该置换是位逆序置换，可按如下方法线性求出．</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1">rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&lt;&lt;(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span></code></pre></div>
</section>
</section>
<section id="多项式方程求解newton-迭代法todo" class="level3" data-number="4.3">
<h3 data-number="4.3" class="anchored" data-anchor-id="多项式方程求解newton-迭代法todo"><span class="header-section-number">4.3</span> 多项式方程求解（Newton 迭代法）【TODO】</h3>
<p>给定一多项式 <img src="https://latex.codecogs.com/png.latex?A(x)">，求解满足 <img src="https://latex.codecogs.com/png.latex?A(B(x))%20=%200%20%5Cpmod%7Bx%5En%7D"> 的多项式 <img src="https://latex.codecogs.com/png.latex?B(x)">．</p>
<p>显然 <img src="https://latex.codecogs.com/png.latex?B(x)"> 只有前 <img src="https://latex.codecogs.com/png.latex?n"> 项有效．目前我们尚不清楚解的存在性、唯一性等性质，但注意到 <img src="https://latex.codecogs.com/png.latex?%0AA(B(x))%20=%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D%20%5Cimplies%20A(B(x))%20=%200%20%5Cpmod%7Bx%5En%7D%0A"> 故考虑递推求解．首先，边界条件 <img src="https://latex.codecogs.com/png.latex?A(b_0)%20=%200"> 需要单独求解．在确定某一 <img src="https://latex.codecogs.com/png.latex?b_0"> 的基础上，我们开始递推．考虑已经获得 <img src="https://latex.codecogs.com/png.latex?A(B(x))%20=%200%20%5Cpmod%7Bx%5En%7D"> 的一个解 <img src="https://latex.codecogs.com/png.latex?B(x)%20=%20B_0(x)">，下面尝试得到方程 <img src="https://latex.codecogs.com/png.latex?A(B(x))%20=%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D"> 的解．</p>
<p>将待求解方程 <img src="https://latex.codecogs.com/png.latex?A(B(x))%20=%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D"> 左式多项式 <img src="https://latex.codecogs.com/png.latex?A"> 在 <img src="https://latex.codecogs.com/png.latex?B_0"> 处 Taylor 展开 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0AA(B(x))%20=%20A(B_0(x))%20&amp;+%20A'(B_0(x))%20(B(x)-B_0(x))%20%5C%5C%20&amp;+%20%5Cfrac%7BA''(B_0(x))%7D%7B2!%7D%20(B(x)-B_0(x))%5E2%20+%20%5Cdots%0A=%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A%5Cend%7Bsplit%7D%0A"> <strong>假若</strong> <img src="https://latex.codecogs.com/png.latex?B(x)-B_0(x)%20=%200%20%5Cpmod%7Bx%5En%7D">，那么模 <img src="https://latex.codecogs.com/png.latex?x%5E%7B2n%7D"> 意义下二次方以上的项可以舍去，上式等价于 <img src="https://latex.codecogs.com/png.latex?%0AA(B_0(x))%20+%20A'(B_0(x))%20(B(x)-B_0(x))%20=%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A"> 移项即可解出待求 <img src="https://latex.codecogs.com/png.latex?B(x)"> <img src="https://latex.codecogs.com/png.latex?%0AB(x)%20=%20%20B_0(x)%20-%20%5Cfrac%7BA(B_0(x))%7D%7BA'(B_0(x))%7D%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A"> 这里要求 <img src="https://latex.codecogs.com/png.latex?A'(B_0(x))"> 需在 <img src="https://latex.codecogs.com/png.latex?x%5E%7B2n%7D"> 意义下可逆，即 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bsplit%7D%0A%5Bx%5E0%5D%20A'(B_0(x))%20=%20%5Bx%5E0%5D%20A'(b_0)%20&amp;=%20%5Csum_%7Bk=0%7D%5E%5Cinfty%20%5Cleft(%20%5Bx%5Ek%5D%20A'%20%5Cright)%20b_0%5Ek%20%5C%5C%0A&amp;=%20%5Csum_%7Bk=0%7D%5E%5Cinfty%20(k+1)%20a_%7Bk+1%7D%20b_0%5Ek%20%5Cneq%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A%5Cend%7Bsplit%7D%0A"> 注意到 <img src="https://latex.codecogs.com/png.latex?B(x)%20-%20B_0(x)%20=%20-%5Cfrac%7BA(B_0(x))%7D%7BA'(B_0(x))%7D%20=%200%20%5Cpmod%7Bx%5E%7Bn%7D%7D">，故满足上述“假若”的解存在且唯一．然而，若不要求这一“假若”成立，则每步迭代解的唯一性无法得到保证．考虑到边界条件 <img src="https://latex.codecogs.com/png.latex?b_0"> 的解亦不一定唯一，故一般的 Newton 迭代法解唯一性的讨论较为复杂．当然，上述推导至少为我们提供了一种寻找特解的方法．</p>
<p>Newton 迭代法作为通用求解框架，可涵盖几乎所有多项式初等运算．【TODO】</p>
</section>
<section id="多项式求逆" class="level3" data-number="4.4">
<h3 data-number="4.4" class="anchored" data-anchor-id="多项式求逆"><span class="header-section-number">4.4</span> 多项式求逆</h3>
<p>给定一多项式 <img src="https://latex.codecogs.com/png.latex?A(x)">，求解满足 <img src="https://latex.codecogs.com/png.latex?A(x)%20B(x)%20=%201%20%5Cpmod%7Bx%5E%7Bn%7D%7D"> 的多项式 <img src="https://latex.codecogs.com/png.latex?B(x)">．</p>
<p>多项式逆元存在的充分必要条件是其常数项非零（这是因为边界条件 <img src="https://latex.codecogs.com/png.latex?b_0%20=%20%5Cfrac%201%20%7Ba_0%7D">），若存在则在模意义下一定唯一．这结论可直接由下述求解方法得到．不失一般性，我们只研究 <img src="https://latex.codecogs.com/png.latex?A(x)"> 的次数为奇数 <img src="https://latex.codecogs.com/png.latex?2n-1"> 的情况．设 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AA(x)%20&amp;=%20A_0(x)%20+%20x%5En%20A_1(x)%20%5C%5C%0AB(x)%20&amp;=%20B_0(x)%20+%20x%5En%20B_1(x)%0A%5Cend%7Baligned%7D%0A"> 下述两种方法均递归地在已知 <img src="https://latex.codecogs.com/png.latex?%0AA(x)%20B_0(x)%20=%20A_0(x)%20B_0(x)%20=%201%20%5Cpmod%7Bx%5En%7D%0A"> 的基础上求解 <img src="https://latex.codecogs.com/png.latex?A(x)"> 的逆元．时间复杂度均为 <img src="https://latex.codecogs.com/png.latex?%0AT(n)%20=%20T(%5Cfrac%20n%202)%20+%20O(n%20%5Clog%20n)%20=%20O(n%20%5Clog%20n)%0A"></p>
<p>以下简记 <img src="https://latex.codecogs.com/png.latex?A(x)"> 为 <img src="https://latex.codecogs.com/png.latex?A">，其它多项式同理．</p>
<section id="倍增法一原创" class="level4">
<h4 class="anchored" data-anchor-id="倍增法一原创">倍增法一（原创）</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A&amp;%20A%20B%20=%201%20%5Cpmod%7Bx%5E%7B2n%7D%7D%20%5C%5C%0A%5Ciff&amp;%20(A_0%20+%20x%5En%20A_1)(B_0%20+%20x%5En%20B_1)%20=%201%20%5Cpmod%7Bx%5E%7B2n%7D%7D%20%5C%5C%0A%5Ciff&amp;%20x%5En(A_1%20B_0%20+%20A_0%20B_1)%20+%20A_0%20B_0%20=%201%20%5Cpmod%7Bx%5E%7B2n%7D%7D%20%5C%5C%0A%5Ciff&amp;%20A_1%20B_0%20+%20A_0%20B_1%20+%20%5Cleft%5Clfloor%20%5Cfrac%7BA_0%20B_0%7D%7Bx%5En%7D%20%5Cright%5Crfloor%20=%200%20%5Cpmod%7Bx%5E%7Bn%7D%7D%20%5C%5C%0A%5Ciff&amp;%20%20A_0%20B_1%20=%20-%5Cleft%5Clfloor%20%5Cfrac%7BA_0%20B_0%7D%7Bx%5En%7D%20%5Cright%5Crfloor%20-%20A_1%20B_0%20%5Cpmod%7Bx%5E%7Bn%7D%7D%20%5C%5C%0A%5Ciff&amp;%20%20B_1%20=%20-%20B_0%20%5Cleft(%20%5Cleft%5Clfloor%20%5Cfrac%7BA_0%20B_0%7D%7Bx%5En%7D%20%5Cright%5Crfloor%20+%20A_1%20B_0%20%5Cright)%20%5Cpmod%7Bx%5E%7Bn%7D%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>常数偏大，这里就不放代码了．</p>
</section>
<section id="倍增法二" class="level4">
<h4 class="anchored" data-anchor-id="倍增法二">倍增法二</h4>
<p>注意到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bcases%7D%0AA%20B_0%20=%201%20%5Cpmod%7Bx%5En%7D%20%5C%5C%0AA%20B%20=%201%20%5Cpmod%7Bx%5En%7D%0A%5Cend%7Bcases%7D%20%5Cimplies%20A%20(B-B_0)%20=%200%20%5Cpmod%7Bx%5En%7D%0A"> 由于 <img src="https://latex.codecogs.com/png.latex?A"> 的常数项非零，故 <img src="https://latex.codecogs.com/png.latex?%0AB-B_0%20=%200%20%5Cpmod%7Bx%5En%7D%0A"> （这证明了逆元在不同模数下的前缀保持一致）</p>
<p>两边平方得 <img src="https://latex.codecogs.com/png.latex?%0AB%5E2%20-%202%20B%20B_0%20+%20B_0%5E2%20=%200%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A"> 两侧同乘 <img src="https://latex.codecogs.com/png.latex?A"> 并移项得 <img src="https://latex.codecogs.com/png.latex?%0AB%20=%202%20B_0%20-%20A%20B_0%5E2%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A"></p>
</section>
</section>
<section id="多项式开方todo" class="level3" data-number="4.5">
<h3 data-number="4.5" class="anchored" data-anchor-id="多项式开方todo"><span class="header-section-number">4.5</span> 多项式开方【TODO】</h3>
<p>和多项式求逆类似的推导可得递推方程 <img src="https://latex.codecogs.com/png.latex?%0AB%20=%20%5Cfrac%201%202%20%5Cleft(%5Cfrac%20A%20%7BB_0%7D%20+%20B_0%20%5Cright)%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A"> 有一些和 Newton 法一样麻烦的边界条件讨论，也会出现复杂的多解情况．<img src="https://latex.codecogs.com/png.latex?a_0%20=%201"> 时 <img src="https://latex.codecogs.com/png.latex?b_0%20=%20%5Cpm%201">，按 <img src="https://latex.codecogs.com/png.latex?b_0%20=%201"> 的实现如下．</p>
<p>亦可 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%20A%20=%20%5Cexp%20%5Cleft(%20%5Cfrac%201%202%20%5Cln%20A%20%5Cright)">，此法可处理多项式任意幂指数运算．</p>
</section>
<section id="多项式-ln" class="level3" data-number="4.6">
<h3 data-number="4.6" class="anchored" data-anchor-id="多项式-ln"><span class="header-section-number">4.6</span> 多项式 <img src="https://latex.codecogs.com/png.latex?%5Cln"></h3>
<p>给定一多项式 <img src="https://latex.codecogs.com/png.latex?A(x)">，求解满足 <img src="https://latex.codecogs.com/png.latex?B(x)%20=%20%5Cln%20A(x)%20%5Cpmod%7Bx%5E%7Bn%7D%7D"> 的多项式 <img src="https://latex.codecogs.com/png.latex?B(x)">．</p>
<p>次数为 <img src="https://latex.codecogs.com/png.latex?+%5Cinfty"> 的多项式 <img src="https://latex.codecogs.com/png.latex?%5Cln"> 存在的充分必要条件为其常数项非零（这是因为边界条件 <img src="https://latex.codecogs.com/png.latex?b_0%20=%20%5Cln%20a_0">），同样一旦存在则唯一．注意到仅整数 <img src="https://latex.codecogs.com/png.latex?a_0=1"> 时，<img src="https://latex.codecogs.com/png.latex?%5Cln%20a_0"> 可取得整数，故合理的 <img src="https://latex.codecogs.com/png.latex?a_0"> 只能是 <img src="https://latex.codecogs.com/png.latex?1">．另一种解释参见<a href="https://oi-wiki.org/math/poly/elementary-func/#%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%AF%B9%E6%95%B0%E5%87%BD%E6%95%B0--%E6%8C%87%E6%95%B0%E5%87%BD%E6%95%B0">多项式初等函数 - OI Wiki # 多项式对数函数 &amp; 指数函数</a>．</p>
<p>推导是容易的．方程两侧同时求导得 <img src="https://latex.codecogs.com/png.latex?%0AB'(x)%20=%20%5Cfrac%7BA'(x)%7D%7BA(x)%7D%20%5Cpmod%7Bx%5E%7Bn-1%7D%7D%0A"> 两侧再积分得 <img src="https://latex.codecogs.com/png.latex?%0AB(x)%20=%20%5Cint%20%5Cfrac%7BA'(x)%7D%7BA(x)%7D%20%5Coperatorname%7Bd%7D%5C!x%20+%20C%20%5Cpmod%7Bx%5E%7Bn%7D%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?C=%20%5Cln%20a_0">．多项式求逆、求导、积分即可．时间复杂度 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)">．</p>
</section>
<section id="多项式-exptodo" class="level3" data-number="4.7">
<h3 data-number="4.7" class="anchored" data-anchor-id="多项式-exptodo"><span class="header-section-number">4.7</span> 多项式 <img src="https://latex.codecogs.com/png.latex?%5Cexp">【TODO】</h3>
<p>Newton 迭代法可推出 <img src="https://latex.codecogs.com/png.latex?%0AB%20=%20B(1%20-%20%5Cln%20B_0%20+%20A)%20%5Cpmod%7Bx%5E%7B2n%7D%7D%0A"> 时间复杂度 <img src="https://latex.codecogs.com/png.latex?%0AT(n)%20=%20T(%5Cfrac%20n%202)%20+%20O(n%20%5Clog%20n)%20=%20O(n%20%5Clog%20n)%0A"></p>
<p>存在的充要条件是 <img src="https://latex.codecogs.com/png.latex?a_0=0">．唯一性证明暂不明确．</p>
</section>
<section id="多项式快速幂" class="level3" data-number="4.8">
<h3 data-number="4.8" class="anchored" data-anchor-id="多项式快速幂"><span class="header-section-number">4.8</span> 多项式快速幂</h3>
<p>普通的多项式快速幂实现当然是 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n%20%5Clog%20k)"> 的．下面介绍基于指对数性质的 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)"> 求法．</p>
<p>对常数项 <img src="https://latex.codecogs.com/png.latex?a_0=1"> 的 <img src="https://latex.codecogs.com/png.latex?n-1"> 次多项式 <img src="https://latex.codecogs.com/png.latex?A(x)">， <img src="https://latex.codecogs.com/png.latex?%0AA%5Ek(x)%20=%20e%5E%7Bk%20%5Cln%20A(x)%7D%0A"></p>
<p>我们指出，在系数对质数 <img src="https://latex.codecogs.com/png.latex?p"> 取模的意义下，当我们关心的多项式长度 <img src="https://latex.codecogs.com/png.latex?n%20%5Cleq%20p"> 时，有 <img src="https://latex.codecogs.com/png.latex?%0AA%5Ep(x)%20%5Cequiv%20a_0%20%5Cequiv%201%20%5Cpmod%20p%0A"> 这是因为 <img src="https://latex.codecogs.com/png.latex?%0A(a+b)%5Ep%20%5Cequiv%20a%5Ep%20+%20b%5Ep%20%5Cpmod%20p%0A"> 故 <img src="https://latex.codecogs.com/png.latex?%0AA%5Ep(x)%20=%20(a_0%20+%20x%20A_1%20(x))%5Ep%20%5Cequiv%20a_0%5Ep%20+%20x%5Ep%20A_1%5Ep(x)%20%5Cpmod%20p%0A"> 由费马小定理，<img src="https://latex.codecogs.com/png.latex?a_0%5Ep%20=%20a_0">，而 <img src="https://latex.codecogs.com/png.latex?n%20%5Cleq%20p"> 表明 <img src="https://latex.codecogs.com/png.latex?x%5Ep%20A_1%5Ep(x)"> 一项可被忽略，故上述结论得到证明．这些讨论可用于处理幂指数 <img src="https://latex.codecogs.com/png.latex?k%20%5Cgeq%20p"> 的情况．</p>
<p>一般的，当常数项非 <img src="https://latex.codecogs.com/png.latex?1"> 时，为满足多项式 <img src="https://latex.codecogs.com/png.latex?%5Cln"> 的要求，设多项式 <img src="https://latex.codecogs.com/png.latex?A(x)"> 的最低次项为 <img src="https://latex.codecogs.com/png.latex?a_t%20x%5Et">，则 <img src="https://latex.codecogs.com/png.latex?%0AA%5Ek(x)%20=%20(a_t%20x%5Et)%5Ek%20%5Cleft(%20%5Cfrac%7BA(x)%7D%7Ba_t%20x%5Et%7D%20%5Cright)%5Ek%0A"> 右侧的多项式常数项归一，故可再应用上述方法计算．</p>
<p>关于多项式，更代数的内容参考 <a href="https://en.wikipedia.org/wiki/Formal_power_series">Formal power series - Wikipedia</a></p>
</section>
</section>
<section id="集合幂级数todo" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="集合幂级数todo"><span class="header-section-number">5</span> 集合幂级数【TODO】</h2>
</section>
<section id="矩阵" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="矩阵"><span class="header-section-number">6</span> 矩阵</h2>
<section id="矩阵乘法" class="level3" data-number="6.1">
<h3 data-number="6.1" class="anchored" data-anchor-id="矩阵乘法"><span class="header-section-number">6.1</span> 矩阵乘法</h3>
<p>普通的 <img src="https://latex.codecogs.com/png.latex?O(n%5E3)"> 实现．</p>
</section>
<section id="矩阵快速幂" class="level3" data-number="6.2">
<h3 data-number="6.2" class="anchored" data-anchor-id="矩阵快速幂"><span class="header-section-number">6.2</span> 矩阵快速幂</h3>
<p>普通的 <img src="https://latex.codecogs.com/png.latex?O(n%5E3%20%5Clog%20k)"> 实现．</p>
</section>
<section id="行列式" class="level3" data-number="6.3">
<h3 data-number="6.3" class="anchored" data-anchor-id="行列式"><span class="header-section-number">6.3</span> 行列式</h3>
<p>普通的实现是使用逆元进行高斯消元，可用于域上的线性空间．若求解逆元的时间复杂度为 <img src="https://latex.codecogs.com/png.latex?O(%5Clog%20p)">，则时间复杂度为 <img src="https://latex.codecogs.com/png.latex?O(n%5E3+%20n%5E2%20%5Clog%20p)">．</p>
<p>这里给出另一种做法．该做法在消去时使用辗转相除法，可用于任意 Euclid 整环（Euclidean domain，有带余除法的无零因子的交换幺环）上的模（环上的线性空间），且时间复杂度不会增加．一个常见的应用是模 <img src="https://latex.codecogs.com/png.latex?m"> 整数环 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20Z_m"> 上的行列式求值，其中 <img src="https://latex.codecogs.com/png.latex?m"> 不是质数．</p>
<p>消去各目标行第 <img src="https://latex.codecogs.com/png.latex?c"> 列元素时，以第 <img src="https://latex.codecogs.com/png.latex?c"> 行的 <img src="https://latex.codecogs.com/png.latex?a_%7Bc,c%7D"> 为除数与目标行的第 <img src="https://latex.codecogs.com/png.latex?c"> 列元素辗转相除，最终使 <img src="https://latex.codecogs.com/png.latex?a_%7Bc,c%7D"> 变为 <img src="https://latex.codecogs.com/png.latex?0">，再做一次行交换将其换至目标行，就完成了一次行消去过程．注意到当 <img src="https://latex.codecogs.com/png.latex?a_%7Bc,c%7D"> 非零时，一次行消去操作结束后 <img src="https://latex.codecogs.com/png.latex?a_%7Bc,c%7D"> 单调不增，且过程中 <img src="https://latex.codecogs.com/png.latex?a_%7Bc,c%7D"> 不会从非零变为零，故辗转相除带来的 <img src="https://latex.codecogs.com/png.latex?%5Clog%20p"> 次额外操作开销被分摊到整轮对第 <img src="https://latex.codecogs.com/png.latex?c"> 列的消去过程中，因此时间复杂度仍为 <img src="https://latex.codecogs.com/png.latex?O(n%5E3+%20n%5E2%20%5Clog%20p)">．</p>
</section>
</section>
<section id="字符串-自动机" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="字符串-自动机"><span class="header-section-number">7</span> 字符串 / 自动机</h2>
<p>基于 DFA 理论，<a href="https://oi-wiki.org/string/automaton/">OI-Wiki</a> 上有对 KMP / AC 自动机，SAM / GSAM 和 PAM 简明扼要的概括．<a href="https://oi-wiki.org/string/sam/">OI-Wiki</a> 的后缀自动机讲解亦值得参考．</p>
</section>
<section id="图论todo" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="图论todo"><span class="header-section-number">8</span> 图论【TODO】</h2>
<section id="最短路" class="level3" data-number="8.1">
<h3 data-number="8.1" class="anchored" data-anchor-id="最短路"><span class="header-section-number">8.1</span> 最短路</h3>
</section>
<section id="强连通分量" class="level3" data-number="8.2">
<h3 data-number="8.2" class="anchored" data-anchor-id="强连通分量"><span class="header-section-number">8.2</span> 强连通分量</h3>
</section>
<section id="网络流" class="level3" data-number="8.3">
<h3 data-number="8.3" class="anchored" data-anchor-id="网络流"><span class="header-section-number">8.3</span> 网络流</h3>
</section>
</section>
<section id="杂项" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="杂项"><span class="header-section-number">9</span> 杂项</h2>
<section id="模板" class="level3" data-number="9.1">
<h3 data-number="9.1" class="anchored" data-anchor-id="模板"><span class="header-section-number">9.1</span> 模板</h3>
<p>见 <a href="code/model.cpp">model.cpp</a>, <a href="code/model_temp.cpp">model_temp.cpp</a>．</p>
<section id="model.cpp" class="level4">
<h4 class="anchored" data-anchor-id="model.cpp">MODEL.CPP</h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb6-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;bits/stdc++.h&gt;</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> ull<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> db<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">double</span> ldb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- read ---</span></span>
<span id="cb6-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span> T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-11">T rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for bigint read</span></span>
<span id="cb6-12">    T ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> sgn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>getchar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> sgn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>getchar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();}</span></span>
<span id="cb6-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>getchar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();}</span></span>
<span id="cb6-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sgn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-18"></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- variable mod ---</span></span>
<span id="cb6-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">998244353</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>PR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-21"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define pmod_m</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&lt;(</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)?(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">):(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-(</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb6-22"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define nmod_m</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+(</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">):(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb6-23"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define hmod_m</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>nmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)%(</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),(</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// slow!</span></span>
<span id="cb6-24"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define pmod</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>pmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-25"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define nmod</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>nmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-26"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define hmod</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span>hmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span> T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span> U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-28">T qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>U x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>T mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-29">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> T ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb6-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(;</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span> T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span> U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-34">ll inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>T x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>T mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>mod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assume mod prime</span></span>
<span id="cb6-35"></span>
<span id="cb6-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- Number Theory ---</span></span>
<span id="cb6-37">ll gcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>gcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span></span>
<span id="cb6-38">ll lcm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>gcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span></span>
<span id="cb6-39">tuple<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> exgcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// capable of +/- integers</span></span>
<span id="cb6-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-41">    ll x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tie<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>exgcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-43"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-44">ll inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-45">    ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tie<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>exgcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span>hmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">):</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-47"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-48">tuple<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> solve_equ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// return solution with min non-negative x</span></span>
<span id="cb6-49">    ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tie<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>exgcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// !!!</span></span>
<span id="cb6-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-52">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ll dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-53">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span>dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ensure dx positive</span></span>
<span id="cb6-54">    ll t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=(</span>hmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-56"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">CAUTION</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> __int128</span></span>
<span id="cb6-58">pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> excrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> p1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> p2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// merge (a1,m1) (a2,m2)</span></span>
<span id="cb6-59">    ll a1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>a2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tie<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>p1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tie<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>p2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-60">    ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tie<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>solve_equ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>m1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>a2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>a1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-61">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-62">    ll l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lcm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>m1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>m2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hmod_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>m1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>a1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-63"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-64">ll bsgs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// solve a^x=b mod m, gcd(a,m)=1</span></span>
<span id="cb6-65">    unordered_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ll sqrtM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ceil<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb6-66">    ll cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>sqrtM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb6-68">        cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-69">        mp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-70">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-71">    ll nw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-72">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>sqrtM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb6-73">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>nw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sqrtM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>mp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>nw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-74">        nw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-75">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-76">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-77"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">CAUTION</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> uncensored / __int128 / rand() ---</span></span>
<span id="cb6-79"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> is_prime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// miller rabin</span></span>
<span id="cb6-80">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-81">    ll u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-82">    ll test_time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>test_time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--){</span></span>
<span id="cb6-83">        ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()%(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">__int128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-85">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb6-87">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-88">            v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">__int128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-89">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-90">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-91"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">CAUTION</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> uncensored __int128 rand() ---</span></span>
<span id="cb6-93">ll pollard_rho<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-94">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span> f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=[&amp;](</span>ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-&gt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">__int128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)%</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb6-95">    ll c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()%(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-96">    ll t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-97">    ll r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-98">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-99">        ll d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>abs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-101">        t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-102">        r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-103">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-104"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> ll get_factor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-105">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span>is_prime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-106">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-107">    ll d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pollard_rho<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-108">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-109"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-110"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> _prime_test<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-111">    srand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb6-112">    ll N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-113">    cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;(</span>is_prime<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)?</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YES"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NO"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&lt;&lt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>get_factor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-114"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-115"></span>
<span id="cb6-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- constant mod, can be modified to be variable ---</span></span>
<span id="cb6-117"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span> T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span> U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-118"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-119">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">inline</span> ModInt uroot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>T n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),(</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span></span>
<span id="cb6-120"></span>
<span id="cb6-121">    T dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ModInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">():</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{}</span></span>
<span id="cb6-122">    ModInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>initializer_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> lst<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">):</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{*</span>lst<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>begin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()}{}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for mod-free number, use this</span></span>
<span id="cb6-123">    ModInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>U dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">):</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>hmod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))}{}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// implicit conversion, slow!</span></span>
<span id="cb6-124">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">explicit</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> T <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-125">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ostream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ostream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>mi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// negative number version</span></span>
<span id="cb6-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// friend ostream&amp; operator &lt;&lt; (ostream &amp;out,const ModInt&amp; mi){out&lt;&lt;(mi.dat+mi.dat&lt;MOD?mi.dat:mi.dat-MOD)&lt;&lt;" "; return out;}</span></span>
<span id="cb6-128">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ModInt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pmod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)};}</span></span>
<span id="cb6-129">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ModInt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>nmod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)};}</span></span>
<span id="cb6-130">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ModInt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>nmod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)};}</span></span>
<span id="cb6-131">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ModInt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)};}</span></span>
<span id="cb6-132">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ModInt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Euclidean division</span></span>
<span id="cb6-133">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ModInt <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Euclidean division</span></span>
<span id="cb6-134">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ModInt qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModInt x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-135">        ModInt ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(;</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-136">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">inline</span> ModInt inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)};}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assume MOD is prime</span></span>
<span id="cb6-137">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-138">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-139">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-140">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-141">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-142">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-143">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ModInt b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-144"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-145"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> ModInt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-146"></span>
<span id="cb6-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- linear init ---</span></span>
<span id="cb6-148">vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> fac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>facinv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>inv_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-149"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> linear_init<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-150">    fac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> facinv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> inv_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-151">    inv_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> inv_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=-(</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>inv_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>MOD<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-152">    fac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> fac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>fac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-153">    facinv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]));</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--)</span> facinv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>facinv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-154"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-155"></span>
<span id="cb6-156"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- polynomial ---</span></span>
<span id="cb6-157"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> log2ceil<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-158">vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-159"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> spawn_rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// n=log2ceil(N)</span></span>
<span id="cb6-160">    rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-161">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&gt;&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+((</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&lt;&lt;(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb6-162"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-163"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-164">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-165">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">inline</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to avoid strange glitches caused by size_t</span></span>
<span id="cb6-166">    Poly subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// [l,r), zero padded (support negative number)</span></span>
<span id="cb6-167">        Poly B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()?</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">):</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-168">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-169">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ostream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ostream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&lt;&lt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-170">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-171">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">());</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-172">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+=</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()?</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-173">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-174">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=-</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-175">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+(-</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span></span>
<span id="cb6-176">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MI c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-177">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// to be called by opt() only (with proper length and rev array)</span></span>
<span id="cb6-178">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-179">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>swap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]));</span></span>
<span id="cb6-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-181">            MI w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>uroot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-182">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-183">                MI wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-184">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb6-185">                    MI x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-186">                    at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-187">                    wk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-188">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-189">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-190">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-191">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>typ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>MI inv_n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>inv_n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-192">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-193">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly opt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>Poly B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MI a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MI b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;</span> func<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-194">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>log2ceil<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> spawn_rev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-195">        A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-196">        Poly C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>func<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb6-197">        C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>DFT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-198">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-199">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-200">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> opt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()+</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,[](</span>MI a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MI b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;});</span></span>
<span id="cb6-201">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-202">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-203">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> Poly B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">={</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])};</span></span>
<span id="cb6-204">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-205">            B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,[](</span>MI a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MI b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;});</span></span>
<span id="cb6-206">            B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-207">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-208">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-209">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-210">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> Poly B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">={</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assume a_0 = 1 and b_0 positive</span></span>
<span id="cb6-211">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-212">            B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))+</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb6-213">            B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-214">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-215">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-216">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly drv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// derivative</span></span>
<span id="cb6-217">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-218">        A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pop_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-219">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-220">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly itg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MI c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// integral</span></span>
<span id="cb6-221">        A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb6-222">        A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-223">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-224">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">inline</span> Poly ln<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-225">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> itg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>drv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>inv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)).</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*log(A[0])*/</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-226">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-227">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Poly exp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-228">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> Poly B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">={</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*exp(A[0])*/</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-229">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-230">            B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*(</span>Poly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}-</span>ln<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))+</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>hf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-231">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-232">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-233">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-234">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">inline</span> Poly qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Poly <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>MI up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> exp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ln<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assume a_0 = 1</span></span>
<span id="cb6-235">    </span>
<span id="cb6-236">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> _test<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-237">        ll N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>M<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-238">        Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>M<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-239">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-240">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>M<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-241">        Poly C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-242">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*ll N=rd(); Poly A(N);</span></span>
<span id="cb6-243"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        for(ll i=0;i&lt;N;i++) A[i]=rd();</span></span>
<span id="cb6-244"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        A=inv(A); cout&lt;&lt;A;*/</span></span>
<span id="cb6-245">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-246"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-247"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> divntt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-248">    Poly A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-249">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> divntt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// capable of non-negative [l,r), "i&lt;j" order</span></span>
<span id="cb6-250">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-251">        ll mid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-252">        Poly T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>mid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>subpoly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-253">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()&amp;&amp;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>mid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">CAUTION</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">: time complexity</span></span>
<span id="cb6-254">            C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>mid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+=</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-255">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-256">        divntt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>mid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> divntt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-257">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-258"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-259"></span>
<span id="cb6-260"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- matrix ---</span></span>
<span id="cb6-261"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-262">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">static</span> Matrix I<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-263">        Matrix A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-264">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-265">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-266">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-267">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typename</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span> Args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-268">    Matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>Args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span> args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...){}</span></span>
<span id="cb6-269">    Matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>initializer_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> lst<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>lst<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){}</span></span>
<span id="cb6-270">    MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;::</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span></span>
<span id="cb6-271">    MI cat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*(</span>cbegin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()+</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span></span>
<span id="cb6-272">    MI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);}</span></span>
<span id="cb6-273">    Matrix submat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> sr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> sc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> tc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-274">        Matrix A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>tc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,{});</span></span>
<span id="cb6-275">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>tc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-276">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-277">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-278">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> ostream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ostream <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-279">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&lt;&lt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-280">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-281"></span>
<span id="cb6-282">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Matrix <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-283">        Matrix C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-284">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb6-285">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb6-286">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb6-287">                    C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-288">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-289">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-290">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> Matrix qpow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Matrix X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-291">        Matrix A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>I<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-292">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(;</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-293">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-294">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> stair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// row reduce to upper stair matrix, return swap time % 2. capable of any ring</span></span>
<span id="cb6-295">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> swp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-296">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb6-297">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span> swpl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=[&amp;](</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-298">                swp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>swap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb6-299">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-300">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span></span>
<span id="cb6-301">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-302">                    MI factor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-303">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-=</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>factor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-304">                    swpl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-305">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> swpl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-306">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>at<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-307">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> swp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-308">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-309">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> MI det<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Matrix A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-310">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-311">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> opt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-312">        MI ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-313">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> opt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?-</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-314">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-315">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">friend</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> rk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Matrix A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// rank (confuse with std::rank)</span></span>
<span id="cb6-316">        A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-317">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--)</span></span>
<span id="cb6-318">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb6-319">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-320">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb6-321">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-322"></span>
<span id="cb6-323">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> _test<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-324">        ll N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span>M<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> Matrix A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>M<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,{});</span></span>
<span id="cb6-325">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>M<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">());</span></span>
<span id="cb6-326">        A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-327">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-328"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-329"></span>
<span id="cb6-330"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- automata ---</span></span>
<span id="cb6-331"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> STRN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> CHAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> OFFSET<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-332"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ACAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// id: 0 is null, 1 is start</span></span>
<span id="cb6-333">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-334">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-335">        array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>CHAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-336">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-337">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>STRN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-338">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-339">    ACAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-340">        sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]={</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-341">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CHAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-342">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-343">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> insert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>string s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-344">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-345">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span>OFFSET<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-346">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=++</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-347">            p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-348">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-349">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-350">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> buildFail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-351">        queue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> que<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> que<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-352">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>que<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>empty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()){</span></span>
<span id="cb6-353">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>que<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>front<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> que<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-354">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CHAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++){</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-355">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>que<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-356">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-357">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-358">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-359">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-360">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// below: subject to problem Lugou P5357</span></span>
<span id="cb6-361">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-362">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> match<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>string s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-363">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-364">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-365">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span>OFFSET<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-366">            p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-367">            cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]++;</span></span>
<span id="cb6-368">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-369">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-370">    vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-371">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> buildTree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// fail tree</span></span>
<span id="cb6-372">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-373">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-374">        function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;</span> dfs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=[&amp;](</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-375">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> dfs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+=</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-376">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> dfs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-377">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-378">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-379">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]&lt;&lt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-380">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-381"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-382"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> ACAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1E6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1E6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ACAM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-383"></span>
<span id="cb6-384"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2 * length of string suffices</span></span>
<span id="cb6-385"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> SuffixAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// id: 0 is null, 1 is start</span></span>
<span id="cb6-386">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-387">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> real<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-388">        map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// feel free to modify to array&lt;int,26&gt;</span></span>
<span id="cb6-389">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-390">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-391">    SuffixAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]={</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb6-392">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> insert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-393">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=++</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]={</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-394">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(;</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;!</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-395">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-396">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-397">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-398">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vtx[q].len&gt;vtx[p].len+1, partition needed</span></span>
<span id="cb6-399">            vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>real<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-400">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(;</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]==</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-401">            vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-402">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-403">        last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-404">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-405">    ll LCSWith<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>string s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// as an example of matching</span></span>
<span id="cb6-406">        ll p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ll ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-407">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-408">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb6-409">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-410">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(;</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;!</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-411">                cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-412">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-413">            p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-414">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-415">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-416">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// below: subject to problem Luogu P3804</span></span>
<span id="cb6-417">    vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-418">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> buildTree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-419">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-420">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-421">        function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;</span> dfs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=[&amp;](</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-422">            sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>real<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-423">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> dfs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+=</span>sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-424">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> dfs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-425">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-426">    ll answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-427">        ll ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-428">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]*</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-429">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb6-430">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-431"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-432"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> SuffixAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2E6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;</span> SAM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-433"></span>
<span id="cb6-434"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">template</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb6-435"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PalindromicAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// id: 1 is odd root, 0 is even root (as fallback)</span></span>
<span id="cb6-436">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-437">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-438">        map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// feel free to modify to array&lt;int,26&gt;</span></span>
<span id="cb6-439">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-440">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-441">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// subject to problem Luogu P5496</span></span>
<span id="cb6-442">    PalindromicAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-443">        vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]={</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]={</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// fail[even]=odd, fail[odd]=even</span></span>
<span id="cb6-444">        last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-445">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-446">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> getValid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// even is never valid, odd is always valid</span></span>
<span id="cb6-447">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(;</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]!=</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-448">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-449">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-450">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> insert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb6-451">        s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>sn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>getValid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> </span>
<span id="cb6-452">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]){</span></span>
<span id="cb6-453">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>getValid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// when p=odd, fail[p]=even, then f is still odd</span></span>
<span id="cb6-454">            vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]={</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// len[odd]=-1 useful here</span></span>
<span id="cb6-455">                                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// vtx[f].ch[c]=0 only happens when p=odd</span></span>
<span id="cb6-456">                                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for s[sn-vtx[p].len-1..sn] is already a palindrome</span></span>
<span id="cb6-457">            vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-458">            cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>vn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>fail<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// subject...</span></span>
<span id="cb6-459">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vtx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-460">        cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>cnt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&lt;&lt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// subject...</span></span>
<span id="cb6-461">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-462"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-463"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> PalindromicAutomation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1E6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;</span> PAM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-464"></span>
<span id="cb6-465"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-466">    </span>
<span id="cb6-467"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-468"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb6-469">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//freopen("t1.in","r",stdin);</span></span>
<span id="cb6-470">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//freopen("t1.out","w",stdout);</span></span>
<span id="cb6-471">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//ll T=rd(); while(T--){</span></span>
<span id="cb6-472">        entry<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-473">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//}</span></span>
<span id="cb6-474">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-475"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="model_temp.cpp" class="level4">
<h4 class="anchored" data-anchor-id="model_temp.cpp">MODEL_TEMP.CPP</h4>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb7-1"></span>
<span id="cb7-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;bits/stdc++.h&gt;</span></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// --- </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">CAUTION</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> uncensored ---</span></span>
<span id="cb7-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> MaxFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> INF<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999999999</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20005</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>EDN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400005</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nxt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>EDN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> graN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> GraphInit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb7-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> AddBscEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-15">        edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>Edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]};</span></span>
<span id="cb7-16">        last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> AddNetEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-19">        AddBscEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>AddBscEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> Un<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb7-22"></span>
<span id="cb7-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>gap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> bomb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> Send<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-27">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> gone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>nxt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-29">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-31">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Send<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb7-32">            edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-33">            edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Un<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)].</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-34">            ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>gone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>tmp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-35">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span>bomb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> gone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-36">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(--</span>gap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> bomb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-38">        gap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]]++;</span></span>
<span id="cb7-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> gone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ISAP<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> st<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-42">        ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>st<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>graN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>gap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-44">        gap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>graN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-45">        bomb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> mxFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>bomb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-47">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>graN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> cur<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-48">            mxFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>Send<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>INF<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-49">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> mxFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-51">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-53"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> CostFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-54">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> INF<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999999999</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-55">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10005</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>EDN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200005</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-56">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-57">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nxt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-58">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>EDN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-59">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> graN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> GraphInit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb7-61">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> AddBscEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-62">        edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>Edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]};</span></span>
<span id="cb7-63">        last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-64">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-65">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> AddNetEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-66">        AddBscEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>AddBscEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,-</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-67">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-68">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> Un<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb7-69"></span>
<span id="cb7-70">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> mxFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>miCost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-71">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>isQ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-72">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> Q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>hd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>tl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-73">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> SPFA<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb7-74">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>graN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>INF<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>isQ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-75">        hd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>tl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-76">        dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>isQ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>Q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>tl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>hd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>tl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-78">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>hd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++];</span>isQ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-79">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>nxt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-80">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-81">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-82">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&gt;</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-83">                    dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]+</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-84">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>isQ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]){</span></span>
<span id="cb7-85">                        isQ<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-86">                        Q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>tl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-87">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-88">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-89">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-90">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-91">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]&gt;=</span>INF<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-92">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-93">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-94">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> Adjust<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb7-95">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> dlt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>INF<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-96">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]].</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-97">            dlt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dlt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]].</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-98">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]].</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-99">            edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]].</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span>dlt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-100">            edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>Un<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pre<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])].</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>dlt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-101">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-102">        mxFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>dlt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>miCost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span>dlt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-103">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-104">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> EK<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> st<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-105">        ST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>st<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ED<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-106">        mxFlow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>miCost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-107">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SPFA<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span> Adjust<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb7-108">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-109"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> Tarjan<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-111">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> ll PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1E6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>EDN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2E6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-112">    ll N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-113">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ll u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>ll nxt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;};</span></span>
<span id="cb7-114">    Edge edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>EDN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-115">    ll graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-116">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> GraphInit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;}</span></span>
<span id="cb7-117">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> AddBscEdge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-118">        edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=(</span>Edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]};</span></span>
<span id="cb7-119">        last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>graM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-120">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-121">    ll bel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>cN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>rps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//belong, number of components, representative vertax of the component</span></span>
<span id="cb7-122">    ll dfn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>dN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-123">    ll stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>tp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> isI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>PTN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-124">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> Tarjan<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-125">        dfn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=++</span>dN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-126">        stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>tp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>isI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>nxt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb7-128">            ll v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-129">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>isI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]){</span></span>
<span id="cb7-130">                low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>dfn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb7-131">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>dfn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]){</span></span>
<span id="cb7-132">                Tarjan<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-133">                low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span>low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb7-134">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-135">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-136">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dfn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]==</span>low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]){</span></span>
<span id="cb7-137">            rps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[++</span>cN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>ll t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-138">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-139">                t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>tp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--];</span></span>
<span id="cb7-140">                isI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>bel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span>cN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-141">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-142">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-143">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-144"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-145"></span></code></pre></div>
</section>
</section>
<section id="对拍" class="level3" data-number="9.2">
<h3 data-number="9.2" class="anchored" data-anchor-id="对拍"><span class="header-section-number">9.2</span> 对拍</h3>
<section id="windows-batch" class="level4">
<h4 class="anchored" data-anchor-id="windows-batch">Windows Batch</h4>
<pre class="batch"><code>:loop
    gen.exe&gt;dat.in
    my.exe&lt;dat.in&gt;my.out
    std.exe&lt;dat.in&gt;std.out
    fc my.out std.out
    if not errorlevel 1 goto loop
pause</code></pre>
</section>
<section id="linux-shell" class="level4">
<h4 class="anchored" data-anchor-id="linux-shell">Linux Shell</h4>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">true</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb9-2">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./gen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>dat.in</span>
<span id="cb9-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./std</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>dat.in<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>std.out</span>
<span id="cb9-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./my</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>dat.in<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>my.out</span>
<span id="cb9-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span> std.out my.out<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb9-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> OK</span>
<span id="cb9-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb9-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> DIFF</span>
<span id="cb9-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb9-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">fi</span></span>
<span id="cb9-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">done</span></span></code></pre></div>
</section>
</section>
<section id="表" class="level3" data-number="9.3">
<h3 data-number="9.3" class="anchored" data-anchor-id="表"><span class="header-section-number">9.3</span> 表</h3>
<section id="质数表" class="level4">
<h4 class="anchored" data-anchor-id="质数表">质数表</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb10-1">1e2     1e3     1e4       1e5       1e6</span>
<span id="cb10-2">101         1009        10007       100003      1000003</span>
<span id="cb10-3"></span>
<span id="cb10-4">1e7       1e8         1e9         1e10        1e11          </span>
<span id="cb10-5">10000019    100000007   1000000007  10000000019 100000000003</span>
<span id="cb10-6"></span>
<span id="cb10-7">1e12          1e13            1e14            1e15</span>
<span id="cb10-8">1000000000039   10000000000037  100000000000031 1000000000000037</span>
<span id="cb10-9"></span>
<span id="cb10-10">1e16              1e17                1e18</span>
<span id="cb10-11">10000000000000061   100000000000000003  1000000000000000003</span></code></pre></div>
</section>
<section id="典列" class="level4">
<h4 class="anchored" data-anchor-id="典列">典列</h4>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb11-1">index         0   1   2   3   4   5   6   7   8     9     10</span>
<span id="cb11-2">Catalan       1   1   2   5   14  42  132 429 1430  4862  16796</span>
<span id="cb11-3">Bell          1   1   2   5   15  52  203 877 4140  21147 115975</span>
<span id="cb11-4">partition     1   1   2   3   5   7   11  15  22    30    42</span>
<span id="cb11-5">group         0   1   1   1   2   1   2   1   5     2     2</span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb12-1">binomial</span>
<span id="cb12-2">x   0   1   2   3   4   5</span>
<span id="cb12-3">0 | 1</span>
<span id="cb12-4">1 | 1   1</span>
<span id="cb12-5">2 | 1   2   1</span>
<span id="cb12-6">3 | 1   3   3   1</span>
<span id="cb12-7">4 | 1   4   6   4   1</span>
<span id="cb12-8">5 | 1   5   10  10  5  1</span>
<span id="cb12-9"></span>
<span id="cb12-10">Stirling I</span>
<span id="cb12-11">x   0   1   2   3   4   5</span>
<span id="cb12-12">0 | 1</span>
<span id="cb12-13">1 |     1</span>
<span id="cb12-14">2 |     1   1</span>
<span id="cb12-15">3 |     2   3   1</span>
<span id="cb12-16">4 |     6   11  6   1</span>
<span id="cb12-17">5 |     24  50  355 10  1</span>
<span id="cb12-18"></span>
<span id="cb12-19">Stirling II</span>
<span id="cb12-20">x   0   1   2   3   4   5</span>
<span id="cb12-21">0 | 1</span>
<span id="cb12-22">1 |     1</span>
<span id="cb12-23">2 |     1   1</span>
<span id="cb12-24">3 |     1   3   1</span>
<span id="cb12-25">4 |     1   7   6   1</span>
<span id="cb12-26">5 |     1   15  25  10  1</span>
<span id="cb12-27"></span>
<span id="cb12-28">Lah</span>
<span id="cb12-29">x   0   1   2   3   4   5</span>
<span id="cb12-30">0 | 1</span>
<span id="cb12-31">1 |     1</span>
<span id="cb12-32">2 |     2   1</span>
<span id="cb12-33">3 |     6   6   1</span>
<span id="cb12-34">4 |     24  36  12  1</span>
<span id="cb12-35">5 |     120 240 120 20  1</span>
<span id="cb12-36"></span>
<span id="cb12-37">k-partition</span>
<span id="cb12-38">    0   1   2   3   4   5</span>
<span id="cb12-39">0 | 1</span>
<span id="cb12-40">1 |     1</span>
<span id="cb12-41">2 |     1   1</span>
<span id="cb12-42">3 |     1   1   1</span>
<span id="cb12-43">4 |     1   2   1   1</span>
<span id="cb12-44">5 |     1   2   2   1   1</span></code></pre></div>


</section>
</section>
</section>

 ]]></description>
  <category>OI</category>
  <category>数学</category>
  <guid>https://blog.sun123zxy.top/posts/20230621-cpmodel/</guid>
  <pubDate>Tue, 20 Jun 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>CCPC 2023 湘潭邀请赛游记</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230530-xiangtan/</link>
  <description><![CDATA[ 




<section id="序" class="level2">
<h2 class="anchored" data-anchor-id="序">序</h2>
<p>04:36，长沙返程的硬卧列车上。</p>
<p>禁不起隔壁大叔富有特色的鼾声，对着窗外发愣。</p>
<p>写写游记吧。</p>
</section>
<section id="day--inf-0" class="level2">
<h2 class="anchored" data-anchor-id="day--inf-0">Day (-inf, 0)</h2>
<p>由于 UCUP Taiwan 场神奇的发挥，意外获得湘潭邀请赛名额 x1。公费旅游万岁！</p>
<p>然而，飞机不给报，高铁不给报，软卧不给报，打车也不给报，路途时间高达 30h，还被迫翘掉周五周一头尾三节大课，体验并不良好。祸不单行，赛前十余日惊悉普物 27 日下午期末考试，若申请缓考，本学期的奖学金怕是无了。思量再三，还是想去，决定与队友兵分两路，考完直接空降长沙，再想办法到湘潭。晚上城铁已经收班，要是想当天到，恐怕只能高价打车了。这么算下来……</p>
<p>自费金额 +1000 : (</p>
<p>火车票意外地非常抢手，稍不留神，返程火车就只剩晚上 11 点半的了——赶上明天的早课是没必要再想了。不过，岳麓山橘子洲恰在长沙站西不远处，看看夜景也是不错的。</p>
<p>其它队伍似乎并不太着急……</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/whynot.jpg" class="img-fluid figure-img"></p>
<figcaption>你先别急</figcaption>
</figure>
</div>
<p>最后竟因抢票太积极，被迫与大部队分道扬镳 : (</p>
</section>
<section id="day-0" class="level2">
<h2 class="anchored" data-anchor-id="day-0">Day 0</h2>
<p>去湘潭的路途并无太多亮点，感受是 <img src="https://latex.codecogs.com/png.latex?%0A1000%20%5Ctext%7BCNY%7D%20=%20%5Ctext%7B%E9%A3%9E%E6%9C%BA%7D%20+%20%5Ctext%7B%E6%89%93%E8%BD%A6%7D%20+%20%5Ctext%7B%E4%B9%9F%E4%B8%8D%E7%9F%A5%E9%81%93%E6%80%8E%E4%B9%88%E5%9B%9E%E4%BA%8B%E5%8F%8D%E6%AD%A3%E8%8E%AB%E5%90%8D%E5%85%B6%E5%A6%99%E5%B0%B1%E5%88%B0%E4%BA%86%E7%9A%84%E4%BD%93%E9%AA%8C%7D%0A"></p>
<p>从半径来看，大兴机场并没有想象中的大。但其空间设计非常有意思。雪花状的航站楼中间高两头低，下站点、值机、安检全部集中在中心区域，而航站楼、廊桥、登机口通过几只触角向远端延伸，空间利用率极高，极大地节省了转场行走花费的时间。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/daxing.jpg" class="img-fluid figure-img"></p>
<figcaption>颇有商圈风范</figcaption>
</figure>
</div>
<p>与队友联系，惊悉热身赛诸多不尽人意之处。这小破赛居然不用 DOMJudge？Pending 一发 20 min？评测机 32 位没 <code>__int128</code>？PE 是什么鬼东西？Dev C++ 只提供魔改版？VSCode 给了但机子带不动？……感觉不如校赛。希望不是所有 CCPC 都这样（</p>
<p>队友给看了道热身赛题说是签到数论，飞机上吭哧吭哧半天无果，结果发现被诈骗了，赛时场内一人未过（</p>
<p>到达 XX 电竞酒店，半夜。发现机子上竟有 Age of Empires 2——更神奇的是，队友竟突然指出 AoE2 是其机房的传统艺能！？小众中的小众，从未发现同好的 RTS/AoE 玩家落泪了。遗憾的是到得太晚，没来得及切磋一把。01:00 左右睡下。</p>
</section>
<section id="day-1" class="level2">
<h2 class="anchored" data-anchor-id="day-1">Day 1</h2>
<p>湖南的清晨从一碗米粉开始——味道不错，但口感并不太中意。</p>
<p>一出门才感受到湖南的湿热：湿度高达 90% 的头顶烈日，走上两分钟就汗水淋漓，可不比某火炉城市好到那里。已经可以想象无法洗澡就要登上返程火车的我们会有多臭了 : ( 。更别说湘潭大学惊人的大小，坚持到开幕式现场的根本就没几个队（</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/xiangtan-1.jpg" class="img-fluid figure-img"></p>
<figcaption>湘大某入口</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/xiangtan-2.jpg" class="img-fluid figure-img"></p>
<figcaption>校徽版（据说存在缺漏）</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>有气球（没有 CCPC 图标），有打印（比评测快），有汉堡套餐（没怎么认真吃），志愿者人手似乎不太够，每个考室甚至分不到一个监考。</p>
<p>随便开题。两位队友秒了 I 然后 J（牛！）。随机游走开题，L 感觉是什么大力数据结构嵌套，E 数学题玩了玩感觉并没有什么思路，但发现并秒了 H，然后第一梯队的签到题好像就做完了。继续随机游走，看了 G 以为队友做过，确认后发现并没有，那应该就不太容易了。看榜开 F，干碎臭长题面发现就是个基础<del>随机运筹学</del>期望 dp，队友灵魂提醒需要特判 <img src="https://latex.codecogs.com/png.latex?B=1">，成功 1A。这期间两位队友也开了 A 但一发 WA 一发 TLE——怎么会 T 呢？在此之间卡壳卡爆。三人干瞪眼贡献四发罚时浪费 1h，结果竟是 <img src="https://latex.codecogs.com/png.latex?10%5E5"> 次 <code>printf</code> 在老爷评测上跑的太慢！写题的队友表示以后彻底切割 C 风格读写（</p>
<p>然后三人回头看之前和一位队友讨论一半的 K（J 是 K 的 checker 海星）。想到了 <code>aa</code>, <code>bb</code>, <code>cc</code>, …, <code>ab</code>, <code>ac</code>, <code>ad</code>, … 的构造方式，但在考虑后续延伸时莫名认为要继续移位构造超大置换环 <code>abcde...</code>, <code>acegi...</code>，于是开始大力计算 <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=0%7D%5E%7B25%7D%20%5Cgcd(26,i)">。队友打断吟唱，指出只需 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%20%7B25%20%5Ctimes%2024%7D%7B2%7D"> 两位循环并在后面填充 <code>z</code> 即可，遂暴毙，决定先拿下汉堡套餐，然后继续游走摆烂。然而队友小脑转的比大脑快，光速敲完遗憾 WA，似乎他的特判有亿点多。调试无果，打印，换我重写。写得差不多了，两位队友合力调试突然成功，于是历经坎坷终于进入 6 题区。</p>
<p>距比赛结束还有一个半小时左右。看 B 看 D，深感星穹铁道题面之博大精深，决定搏一搏 L。上了个厕所发现会二维了，三维似乎也只是颗二维线段树，维护 max/min 判断当前操作方块是否平整 + 区间覆盖的修改操作即可。然而队友思路是神奇的二维扫描线，顿感自己非常不熟悉这种非标线段树。激烈讨论后，还是让擅长数据结构的队友按他熟悉的方法实现。然而队友实现一半算法竟然假了，又紧急更换写法，此前表现正常的电脑突然开始变卡，三个人对着电脑大吼大叫，最后 2 min 写完了代码！F11！输出“No”！摆！</p>
<p>第一次外出比赛就这样结束了。比较遗憾的，无疑是 A <code>printf</code> 吃的四发罚时了。给你校老爷评测机跪了（</p>
<p>滚榜环节的操作非常迷惑，不从奖牌区滚起，又跳过了 Cu Ag 区，滚了个寂寞。因为老爷评测机的原因，封榜前后的排名也几乎没有发生变化。6 题金银铜，这是我能见着的区分度吗（</p>
<p>最后冠军颁奖倒意外地有节目效果。主持人抑扬顿挫念出“梦想天生”，BGM 和掌声突然响起，恍惚有 Dream Battle 前奏噔噔咚，灵梦按在地上揍的感觉（</p>
</section>
<section id="day-1-赛后" class="level2">
<h2 class="anchored" data-anchor-id="day-1-赛后">Day 1 赛后</h2>
<p>返程继续暴汗。从湘潭乘城铁至长沙。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/city-railway.jpg" class="img-fluid figure-img"></p>
<figcaption>高铁风格，地铁运营</figcaption>
</figure>
</div>
<p>队友来时已经踩好点了，拉着啥也不知道的我就往五一广场走……</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout="[75,25]">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 75.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/plaza.jpg" class="img-fluid figure-img"></p>
<figcaption>五一广场</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 25.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/tea.jpg" class="img-fluid figure-img"></p>
<figcaption>到处都是的某神奇奶茶店</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>队友在前面慢悠悠地寻找吃饭的地方，看上去是准备边吃边坐挨到火车到点了。还想出去逛逛，于是暂时各奔东西。街边随便点了份牛杂面（超辣！）和臭豆腐（完全不臭），乘地铁二号线至橘子洲西岸，向岳麓山前进。然而功课未做充足，到达山门才发现索道已停，大巴收班。天色已晚，爬上去显然赶不上 11 点半的火车，只好悻悻而去。</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/mount-2.jpg" class="img-fluid figure-img"></p>
<figcaption>岳麓山门</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/mount-1.jpg" class="img-fluid figure-img"></p>
<figcaption>岳麓山麓</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>然而……</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/young.jpg" height="600" class="figure-img"></p>
<figcaption>年轻真好</figcaption>
</figure>
</div>
<p>于是从麓山路返回，上至橘子洲大桥。由此可直接步行至江心的橘子洲。</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/orange-1.jpg" class="img-fluid figure-img"></p>
<figcaption>橘子洲西望</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/orange-2.jpg" class="img-fluid figure-img"></p>
<figcaption>橘子洲东望</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>时间来到 10 点整。准备返程。地铁至五一广场，与队友汇合，前往长沙站。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230530-xiangtan/img/station.jpg" class="img-fluid figure-img"></p>
<figcaption>旅途的终点</figcaption>
</figure>
</div>
<p>疲惫，忘记买早饭就过安检了。候车大厅已无空位，站着闲聊了小会儿，时间到了。之前车上刷夜的豪言壮语早已抛之脑后，上车一躺——Day 1, end.</p>
<p>upd x1: 酒店登录过 Steam 的群友都被盗号了 <img src="https://latex.codecogs.com/png.latex?%5CSigma%20(%20%5Csupset%20%5Cmathrm%7BO%7D%20_%5Cfrown%20%5Cmathrm%7BO%7D%20)%20%5Csupset"></p>
<p>upd x2: 报销疑似仍然有戏，感谢学校感谢党 <img src="https://latex.codecogs.com/png.latex?%5CSigma%20(%20%5Csupset%20%5Cmathrm%7BO%7D%20_%5Csmile%20%5Cmathrm%7BO%7D%20)%20%5Csupset"></p>
</section>
<section id="补题" class="level2">
<h2 class="anchored" data-anchor-id="补题">补题</h2>
<p><a href="https://codeforces.com/gym/104396">GYM104396</a></p>
<section id="l" class="level3">
<h3 class="anchored" data-anchor-id="l">L</h3>
<p>需要注意的是，四分树 / K-D 树不存在时间复杂度优秀的区间修改。对于任意区间修改，树套树的实现是必要的。</p>
<p>L 其实有基于差分的非常容易的解法，见解法二。随机分划长度的类似 hash 的解法三也非常震撼。</p>


</section>
</section>

 ]]></description>
  <category>游记</category>
  <category>OI</category>
  <category>回忆</category>
  <guid>https://blog.sun123zxy.top/posts/20230530-xiangtan/</guid>
  <pubDate>Mon, 29 May 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Hilbert 曲线与集合势理论</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230519-hilbert/</link>
  <description><![CDATA[ 




<section id="空间填充曲线" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="空间填充曲线"><span class="header-section-number">1</span> 空间填充曲线</h2>
<section id="曲线" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="曲线"><span class="header-section-number">1.1</span> 曲线</h3>
<p>（我们所讨论的）曲线：定义域为 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D"> 的连续映射．</p>
</section>
<section id="空间填充曲线-1" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="空间填充曲线-1"><span class="header-section-number">1.2</span> 空间填充曲线</h3>
<p>（我们所讨论的）空间填充曲线的定义：连续满射 <img src="https://latex.codecogs.com/png.latex?f:%20%5B0,1%5D%20%5Cto%20%5B0,1%5D%5E2">．</p>
</section>
</section>
<section id="hilbert-曲线" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="hilbert-曲线"><span class="header-section-number">2</span> Hilbert 曲线</h2>
<section id="n-阶伪-hilbert-曲线-h_nt" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="n-阶伪-hilbert-曲线-h_nt"><span class="header-section-number">2.1</span> <img src="https://latex.codecogs.com/png.latex?n"> 阶伪 Hilbert 曲线 <img src="https://latex.codecogs.com/png.latex?H_n(t)"></h3>
<p>理解一：将 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D%5E2"> 等分成 <img src="https://latex.codecogs.com/png.latex?2%5En%20%5Ctimes%202%5En"> 个小方块，按特定顺序将每个小方块的中心点用直线连接起来．这顺序是递归构造的．</p>
<p>理解二：构造 <img src="https://latex.codecogs.com/png.latex?n"> 阶伪 Hilbert 曲线时，将所研究的方块区域四等分．左下角填入左上-右下翻转的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶伪 Hilbert 曲线；左上、右上角填入未翻转的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶伪 Hilbert 曲线；右下角填入左下-右上翻转的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶伪 Hilbert 曲线．最后用三条直线连接各小方块内曲线的起止点．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-fakehil-len" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 1</strong></span> <img src="https://latex.codecogs.com/png.latex?n"> 阶伪 Hilbert 曲线的长度 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Blen%7DH_n%20=%202%5En%20-%202%5E%7B-n%7D">．</p>
</div>
</div>
</div>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>Solution</em> (递推). </span>由伪 Hilbert 曲线的递归定义得 <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7Blen%7DH_n%20=%202%20%5Coperatorname%7Blen%7DH_%7Bn-1%7D%20+%20%5Cfrac%203%20%7B2%5En%7D%0A"> 边界为 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Blen%7DH_0%20=%200">．求解该递推式即可．</p>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>Solution</em> (直观). </span>注意到 <img src="https://latex.codecogs.com/png.latex?n"> 阶伪 Hilbert 曲线将区间分为 <img src="https://latex.codecogs.com/png.latex?2%5En%20%5Ctimes%202%5En%20=%204%5En"> 个小方块，除首尾方块，其余小方块内的曲线长度均为小方块边长 <img src="https://latex.codecogs.com/png.latex?2%5En">．因此 <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7Blen%7DH_n%20=%204%5E%7B-n%7D%20%5Ccdot%202%5E%7B-n%7D%20-%202%20%5Ccdot%20%5Cfrac%20%7B2%5E%7B-n%7D%7D%7B2%7D%20=%202%5En%20-%202%5E%7B-n%7D%0A"></p>
</div>
<p>式中 “<img src="https://latex.codecogs.com/png.latex?-%202%5E%7B-n%7D">” 部分并不讨人喜爱．我们考虑水平或垂直地延长首尾方块曲线至任意边界，这样曲线长度 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Blen%7DH_n%20=%202%5En"> 就恒成立了．我们在后文的讨论中使用这一改进．</p>
</section>
<section id="hilbert-曲线-ht" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="hilbert-曲线-ht"><span class="header-section-number">2.2</span> Hilbert 曲线 <img src="https://latex.codecogs.com/png.latex?H(t)"></h3>
<p>真正的 Hilbert 曲线是由 <img src="https://latex.codecogs.com/png.latex?n"> 阶伪 Hilbert 曲线取逐点极限得到的．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AH(t)%20=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20H_n(t)%0A"></p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-converge" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 (良定义性)</strong></span> 伪 Hilbert 曲线一致收敛（因此也是逐点收敛的）．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>对一给定的 <img src="https://latex.codecogs.com/png.latex?t%20%5Cin%20%5B0,1%5D">，设其落在区间 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5B%20k%204%5E%7B-n_0%7D,%20(k+1)%204%5E%7B-n_0%7D%20%5Cright%5D">，则对任意 <img src="https://latex.codecogs.com/png.latex?n%20%5Cgeq%20n_0">，<img src="https://latex.codecogs.com/png.latex?H_n(t)"> 均落在 <img src="https://latex.codecogs.com/png.latex?H_%7Bn_0%7D(t)"> 所确定的边长为 <img src="https://latex.codecogs.com/png.latex?2%5E%7B-n%7D"> 的小闭方块内，即 <img src="https://latex.codecogs.com/png.latex?%5C%7C%20H_%7Bn%7D(t)%20-%20H_%7Bn_0%7D(t)%20%5C%7C_%5Cinfty%20%5Cleq%202%5E%7B-n%7D">．由 Cauchy 收敛原理即得其一致收敛性．</p>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-surjective" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2 (满射性)</strong></span> Hilbert 曲线是 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D%20%5Cto%20%5B0,1%5D%5E2"> 的满射．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>对一给定的 <img src="https://latex.codecogs.com/png.latex?(x,y)%20%5Cin%20%5B0,1%5D%5E2">，将所研究的闭方块区域四等分，任取一 <img src="https://latex.codecogs.com/png.latex?(x,y)"> 所在小闭方块作为下一个研究的闭方块．如此进行下去，构造出一列框住 <img src="https://latex.codecogs.com/png.latex?(x,y)"> 的收缩的闭方块套．闭方块套里的每一个半径为 <img src="https://latex.codecogs.com/png.latex?2%5E%7B-n%7D"> 的闭方块都对应着 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D"> 上长 <img src="https://latex.codecogs.com/png.latex?4%5E%7B-n%7D"> 的一个闭区间，这些区间同样构成了 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D"> 上的一个闭区间套．由闭区间套原理，这列闭区间套确定了一个实数 <img src="https://latex.codecogs.com/png.latex?t%20%5Cin%20%5B0,1%5D">，它就是使得 <img src="https://latex.codecogs.com/png.latex?f(t)%20=%20(x,y)"> 的一个解．</p>
</div>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>需要注意的是，当 <img src="https://latex.codecogs.com/png.latex?(x,y)"> 落在某两个闭方块的公共边界上时，证明中我们任取其中一个闭方块继续讨论．因此，选择不同闭方块将可能使我们得到不同的 <img src="https://latex.codecogs.com/png.latex?t"> 值，这是 Hilbert 曲线不是单射的原因之一．</p>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-surjective" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 (连续性)</strong></span> Hilbert 曲线在其定义域内连续．</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>对一给定的 <img src="https://latex.codecogs.com/png.latex?t%20%5Cin%20%5B0,1%5D">，考虑 <img src="https://latex.codecogs.com/png.latex?H(t)"> 任意取定的 <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon"> 邻域 <img src="https://latex.codecogs.com/png.latex?U_%7B%5Cvarepsilon%7D(H(t))%20=%20%5C%7B%20(x,y)%20:%20%5C%7C%20H(t)%20-%20(x,y)%20%5C%7C_%7B%5Cinfty%7D%20%3C%20%5Cvarepsilon%20%5C%7D">，取 <img src="https://latex.codecogs.com/png.latex?n_0%20=%20%5Clog_2%20%5Cvarepsilon%20-%202">，即可使第 <img src="https://latex.codecogs.com/png.latex?n_0"> 阶伪 Hillbert 曲线划分出的各闭方块边长为<img src="https://latex.codecogs.com/png.latex?2%5E%7B-n_0%7D%20%3C%20%5Cfrac%20%5Cvarepsilon%202">．设此时 <img src="https://latex.codecogs.com/png.latex?t"> 落在闭区间 <img src="https://latex.codecogs.com/png.latex?I%20=%20%5Cleft%5B%20k%204%5E%7B-n_0%7D,%20(k+1)%204%5E%7B-n_0%7D%20%5Cright%5D">（如在边界，则任取），其对应闭方块 <img src="https://latex.codecogs.com/png.latex?J%20=%20H(I)">．由于 <img src="https://latex.codecogs.com/png.latex?I"> 已经是 <img src="https://latex.codecogs.com/png.latex?t"> 的一个（单侧）邻域，为证明 <img src="https://latex.codecogs.com/png.latex?H(t)"> 在点 <img src="https://latex.codecogs.com/png.latex?t"> 的连续性，下面只需证 <img src="https://latex.codecogs.com/png.latex?J%20%5Csubset%20U_%5Cvarepsilon(H(t))">．由于我们构造的 <img src="https://latex.codecogs.com/png.latex?n_0"> 使闭方块 <img src="https://latex.codecogs.com/png.latex?J"> 的边长为 <img src="https://latex.codecogs.com/png.latex?2%5E%7B-n_0%7D%20%3C%20%5Cfrac%20%5Cvarepsilon%202">，<img src="https://latex.codecogs.com/png.latex?H(t)"> 与这闭方块中任意点 <img src="https://latex.codecogs.com/png.latex?(x,y)"> 的距离 <img src="https://latex.codecogs.com/png.latex?%0A%5C%7C%20H(t)%20-%20(x,y)%20%5C%7C_%7B%5Cinfty%7D%20%5Cleq%20%5Cfrac%20%5Cvarepsilon%202%20%3C%20%5Cvarepsilon%0A"> 故 <img src="https://latex.codecogs.com/png.latex?J%20%5Csubset%20U_%5Cvarepsilon(H(t))">．</p>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-hil-len" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 2</strong></span> Hilbert 曲线是不可求长的．</p>
</div>
</div>
</div>
</div>
<p>对一般的曲线而言，逐点收敛于曲线 <img src="https://latex.codecogs.com/png.latex?f"> 的曲线族 <img src="https://latex.codecogs.com/png.latex?f_n"> 的长度的极限 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Coperatorname%7Blen%7Df_n"> 与 <img src="https://latex.codecogs.com/png.latex?f"> 的长度 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Blen%7Df"> 并不一定相同．这一事实有一简单有力的实例验证：用锯齿状曲线逼近圆．</p>
<p>因此，直接取 Exercise&nbsp;1 的极限并不可行．根据曲线长度的定义，只有构造出一族直接由 <img src="https://latex.codecogs.com/png.latex?H(t)"> 上点构成的近似曲线，我们才能从这族曲线长度的极限中得到 Hilbert 曲线的正确长度．</p>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>考虑划分 <img src="https://latex.codecogs.com/png.latex?P_%7Bn%7D%20:%20t_k%20=%20k%204%5E%7B-%7Bn%7D%7D%20%5Cpod%7Bk%20=%200,%201,%20%5Cdots,%204%5E%7Bn%7D%7D">，将 <img src="https://latex.codecogs.com/png.latex?H(t_k)"> 依次用折线连接，就得到了《Space-filling curves》2.6 节<span class="citation" data-cites="sagan">[1]</span>讨论的 Hilbert 曲线的 <img src="https://latex.codecogs.com/png.latex?n"> 阶近似多边形曲线 <img src="https://latex.codecogs.com/png.latex?P_n(t)">（Approximating polygon for the Hilbert curve）．我们指出，与 <img src="https://latex.codecogs.com/png.latex?n"> 阶伪 Hilbert 曲线相同，<img src="https://latex.codecogs.com/png.latex?n"> 阶 Hilbert 近似多边形曲线仍然可以类似的由递归方法得到，遍历 <img src="https://latex.codecogs.com/png.latex?2%5En%20%5Ctimes%202%5En"> 个小方块，且平均每个小方块内的曲线长度为 <img src="https://latex.codecogs.com/png.latex?2%5E%7B-n%7D">．因此，<img src="https://latex.codecogs.com/png.latex?n"> 阶 Hilbert 近似多边形曲线的长度 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Blen%7DP_n(t)%20=%20(2%5En%20%5Ctimes%202%5En)%20%5Ccdot%202%5E%7B-n%7D%20=%202%5En">．由于该数列没有上界，故我们说明了 Hilbert 曲线的不可求长性．</p>
</div>
</section>
<section id="全平面填充" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="全平面填充"><span class="header-section-number">2.3</span> 全平面填充</h3>
<p>环绕填充并连接相邻曲线即可．</p>
</section>
<section id="四进制小数表示" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="四进制小数表示"><span class="header-section-number">2.4</span> 四进制小数表示</h3>
<p><img src="https://latex.codecogs.com/png.latex?n"> 阶伪 Hilbert 曲线对 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D"> 区间的划分操作可被一一对应地记为 <img src="https://latex.codecogs.com/png.latex?n"> 位四进制小数，从而为 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D"> 上被划分出的区间和对应的 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D%5E2"> 上的方块赋予了一种简洁的表示方法．但由于递归构造时左下、右下角涉及翻转操作，为每个实数 <img src="https://latex.codecogs.com/png.latex?t">（无限位规范四进制小数）写出其平面对应点 <img src="https://latex.codecogs.com/png.latex?H(t)"> 的非递归封闭形式表达稍显复杂．《Space-filling curves》<span class="citation" data-cites="sagan">[1]</span>的 2.3 节给出了基于复数和四进制小数的精确表示．</p>
</section>
<section id="小结" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="小结"><span class="header-section-number">2.5</span> 小结</h3>
<ul>
<li>Hilbert 曲线确实遍历了 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D%5E2"> 区域的所有点.</li>
<li>Hilbert 曲线是满射, 但不是单射，所以不是从线段到正方形区域的双射．</li>
<li><img src="https://latex.codecogs.com/png.latex?%5B0,1%5D%5E2%20%5Cto%20%5B0,1%5D"> 的单射（甚至双射）？集合势理论．</li>
<li>（补充）空间填充曲线必自交，即不能是单射．（Pf：否则与 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D%5E2"> 同胚，这显然荒谬．）（证明同胚逆映射连续需用拓扑定理：any continuous bijection from a compact space onto a Hausdorff space is a homeomorphism）</li>
<li>（补充）不自交但有面积的曲线：Osgood 曲线．但它不是空间填充曲线．</li>
</ul>
</section>
</section>
<section id="集合势理论" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="集合势理论"><span class="header-section-number">3</span> 集合势理论</h2>
<section id="集合的势" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="集合的势"><span class="header-section-number">3.1</span> 集合的势</h3>
<ul>
<li><p>等势，劣势于，优势于．</p></li>
<li><p>“劣势于”是集合上的序关系：自反性、反对称性（Bernstein 定理）、传递性．</p>
<p>事实上更是全序关系，证明需用到选择公理．</p></li>
</ul>
</section>
<section id="有限集可列集与无限集" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="有限集可列集与无限集"><span class="header-section-number">3.2</span> 有限集、可列集与无限集</h3>
<ul>
<li><p>有限集，可列集，无限集．</p></li>
<li><p>无限集的充要条件：与某一真子集等势（Dedekind 定义）．</p>
<p>充分性：归纳取出可列集，该部分映射到后继形成双射．</p>
<p>必要性：即有限集不与任何其真子集等势．冗长，证明略．</p></li>
<li><p>无限集并有限或可列集仍与原无限集等势．</p></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20N%5E2%20%5Capprox%20%5Cmathbb%20N%0A"></p>
<p>本质：可列个可列集的并还是可列集；可列集的有限次笛卡尔积仍是可列集．</p>
</section>
<section id="从可列到不可列" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="从可列到不可列"><span class="header-section-number">3.3</span> 从可列到不可列</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20R%20%5Cnot%20%5Capprox%20%5Cmathbb%20N%0A"></p>
<p>写成小数，对角线法．</p>
<p>规范小数（规定其均为无限小数），规范二进制小数．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A2%5E%7B%5Cmathbb%20N%7D%20%5Capprox%20%5Cmathbb%20R%0A"></p>
<p>核心在于不规范小数是可列集．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%7B%5Cmathbb%20R%7D%5E2%20%5Capprox%20%5Cmathbb%20R%0A"></p>
<p>小数穿插构造法．需要注意的是，构造的 <img src="https://latex.codecogs.com/png.latex?(0,1)%5E2%20%5Cto%20(0,1)"> 的单射不是满射 <img src="https://latex.codecogs.com/png.latex?%0Ac%20=%200.303030%5Cdots%20%5Cimplies%20a%20=%200.333%5Cdots,%20b=%200.000%5Cdots%0A"> 此外，它也不是连续映射 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Aa=0.3333%5Cdots,%20b=0.4999%5Cdots%20&amp;%5Cimplies%20c=0.343939%5Cdots%20%5C%5C%0Aa=0.3333%5Cdots,%20b=0.5000%5Cdots%20&amp;%5Cimplies%20c=0.353030%5Cdots%0A%5Cend%7Baligned%7D%0A"> 其对应的 <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D%20%5Cto%20%5B0,1%5D%5E2"> 的非单的满射（如构造出的小数不规范，则将其规范化）亦不连续． <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ac%20=%200.4999%5Cdots%20&amp;%5Cimplies%20a%20=%200.4999%5Cdots,%20b=0.9999%0A%5Cdots%20%5C%5C%0Ac%20=%200.5000%5Cdots%20&amp;%5Cimplies%20a%20=%200.5000%5Cdots,%20b=0.0000%5Cdots%0A%5Cend%7Baligned%7D%0A"></p>
<p>Fun fact: <img src="https://latex.codecogs.com/png.latex?%7B%5Cmathbb%20R%7D%5E2%20%5Capprox%20%5Cleft(2%5E%7B%5Cmathbb%20N%7D%5Cright)%5E%7B2%7D%20%5Capprox%202%5E%7B%5Cleft(%7B%5Cmathbb%20N%20%5Ctimes%202%7D%20%5Cright)%7D%20%5Capprox%202%5E%7B%5Cmathbb%20N%7D%20%5Capprox%20%5Cmathbb%20R">（基数理论）</p>
</section>
<section id="小结-1" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="小结-1"><span class="header-section-number">3.4</span> 小结</h3>
<ul>
<li>Hilbert 曲线：<img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R%20%5Cto%20%7B%5Cmathbb%20R%7D%5E2"> 的连续满射．</li>
<li>集合势理论：<img src="https://latex.codecogs.com/png.latex?%7B%5Cmathbb%20R%7D%5E2%20%5Cto%20%7B%5Cmathbb%20R%7D"> 的不连续单（双）射．</li>
</ul>
</section>
</section>



<div id="quarto-appendix" class="default"><section id="comments" class="level2 appendix unnumbered"><h2 class="anchored quarto-appendix-heading">Comments</h2><div class="quarto-appendix-contents">

<ul>
<li><p>希尔伯特曲线及性质的形式化理解 - zzdyyy<span class="citation" data-cites="zzdyyy">[2]</span></p>
<p>本文脉络的主要参考．</p></li>
<li><p>Why does the Hilbert curve fill the whole square? - Math StackExchange<span class="citation" data-cites="mathex_fill">[3]</span></p>
<p>提供了收敛性的较严谨证明．</p></li>
<li><p>希尔伯特曲线：无限数学怎样应用于有限世界 - 3Blue1Brown<span class="citation" data-cites="3b1b">[4]</span></p>
<p>优秀的可视化．</p></li>
<li><p>Space-filling curve - Wikipedia<span class="citation" data-cites="wikipedia_spacefilling">[5]</span></p></li>
<li><p>《集合论基础教程》张峰、陶然<span class="citation" data-cites="zhangfeng">[6]</span></p></li>
</ul>
<p>扩展阅读：</p>
<ul>
<li><p>《Space-filling curves》Hans Sagan<span class="citation" data-cites="sagan">[1]</span></p>
<p>回顾了空间填充曲线发展历史；用形式化的语言刻画了 Hilbert 曲线，见文内引用．</p></li>
</ul>
</div></section><section id="acknowledgements" class="level2 appendix unnumbered"><h2 class="anchored quarto-appendix-heading">Acknowledgements</h2><div class="quarto-appendix-contents">

<p>感谢吕老师组织研讨课．本次研讨课与宁同学一同准备并主要由后者主讲，在讨论和展示过程中收获颇丰．</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-sagan" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">H. Sagan, <em>Space-filling curves</em>. Springer Science &amp; Business Media, 1994.</div>
</div>
<div id="ref-zzdyyy" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">zzdyyy, <span>“希尔伯特曲线及性质的形式化理解.”</span> <a href="https://www.cnblogs.com/zzdyyy/p/7636474.html" class="uri">https://www.cnblogs.com/zzdyyy/p/7636474.html</a>, 2017.</div>
</div>
<div id="ref-mathex_fill" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline">M. A. (https://math.stackexchange.com/users/22857/martin-argerami), <span>“Why does the hilbert curve fill the whole square?”</span> Mathematics Stack Exchange. Available: <a href="https://math.stackexchange.com/q/142029">https://math.stackexchange.com/q/142029</a></div>
</div>
<div id="ref-3b1b" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline">3Blue1Brown, <span>“希尔伯特曲线：无限数学怎样应用于有限世界.”</span> <a href="https://www.bilibili.com/video/av4201747" class="uri">https://www.bilibili.com/video/av4201747</a>, 2016.</div>
</div>
<div id="ref-wikipedia_spacefilling" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">Wikipedia, <span>“Space-filling curve - wikipedia.”</span> <a href="https://en.wikipedia.org/wiki/Space-filling_curve" class="uri">https://en.wikipedia.org/wiki/Space-filling_curve</a>.</div>
</div>
<div id="ref-zhangfeng" class="csl-entry">
<div class="csl-left-margin">[6] </div><div class="csl-right-inline">张峰 and 陶然, <em>集合论基础教程</em>. 北京: 清华大学出版社, 2021.</div>
</div>
</div></section></div> ]]></description>
  <category>数学</category>
  <category>讲稿</category>
  <guid>https://blog.sun123zxy.top/posts/20230519-hilbert/</guid>
  <pubDate>Wed, 17 May 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Wallis 公式、Stirling 公式与正态分布</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230423-stirling/</link>
  <description><![CDATA[ 




<p>参考：</p>
<ul>
<li>张筑生《数学分析新讲》第二册<span class="citation" data-cites="analysis">[1]</span></li>
<li>张颢《概率论》<span class="citation" data-cites="prob">[2]</span></li>
<li>Wikipedia, Math StackExchange, etc.</li>
</ul>
<section id="warm-up" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="warm-up"><span class="header-section-number">1</span> Warm up</h2>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-double-factorial" class="theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> 求 <img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B(2n-1)!!%7D%7B(2n)!!%7D%20=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B1%20%5Ctimes%203%20%5Ctimes%205%20%5Ctimes%20%5Cdots%20%5Ctimes%20(2n-1)%7D%7B2%20%5Ctimes%204%20%5Ctimes%206%20%5Ctimes%20%5Cdots%20%5Ctimes%202n%7D%0A"></p>
</div>
</div>
</div>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>Solution</em>. </span>用放缩 <img src="https://latex.codecogs.com/png.latex?%0A2k%20%3E%20%5Csqrt%7B(2k-1)(2k+1)%7D%0A"> 拆分母即得 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B(2n-1)!!%7D%7B(2n)!!%7D%20%3C%20%5Cfrac%201%20%7B%5Csqrt%7B2n+1%7D%7D%20%5Csim%200%0A"></p>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-binomial" class="theorem example">
<p><span class="theorem-title"><strong>Example 2 (中心二项式系数)</strong></span> 求 <img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B%5Cbinom%7B2n%7D%7Bn%7D%7D%7B2%5E%7B2n%7D%7D%0A"></p>
</div>
</div>
</div>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>Solution</em>. </span><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cbinom%7B2n%7D%7Bn%7D%7D%7B2%5E%7B2n%7D%7D%20=%20%5Cfrac%7B(2n)!%7D%7B2%5E%7B2n%7D%20(n!)%5E2%7D%20=%20%5Cfrac%7B(2n)!%7D%7B(2%5En%20n!)%5E2%7D%20=%20%5Cfrac%7B(2n)!%7D%7B((2n)!!)%5E2%7D%20=%20%5Cfrac%7B(2n-1)!!%7D%7B(2n)!!%7D%20%3C%20%5Cfrac%201%20%7B%5Csqrt%7B2n+1%7D%7D%20%5Csim%200%0A"></p>
</div>
<p>上两例有没有更精确的渐进估计？这便是我们马上要研究的问题．</p>
</section>
<section id="wallis-公式" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="wallis-公式"><span class="header-section-number">2</span> Wallis 公式</h2>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="lem-wallis-integral" class="theorem lemma">
<p><span class="theorem-title"><strong>Lemma 1 (Wallis 积分公式)</strong></span> 定积分系列 <img src="https://latex.codecogs.com/png.latex?%0AJ_n%20=%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Csin%5En%20x%20%5Coperatorname%7Bd%7D%5C!x%0A"> 满足 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AJ_%7B2n%7D%20&amp;=%20%5Cfrac%7B(2n-1)!!%7D%7B(2n)!!%7D%20%5Ccdot%20%5Cfrac%20%5Cpi%202%20%5C%5C%0AJ_%7B2n+1%7D%20&amp;=%20%5Cfrac%7B(2n)!!%7D%7B(2n+1)!!%7D%20%5Ccdot%201%0A%5Cend%7Baligned%7D%0A"></p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>我们的思路是：先把一个 <img src="https://latex.codecogs.com/png.latex?%5Csin%20x"> 放进微分中，然后分部积分得到递推式．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AJ_n%20&amp;=%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Csin%5En%20x%20%5Coperatorname%7Bd%7D%5C!x%20%5C%5C%0A&amp;=%20-%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Csin%5E%7Bn-1%7D%20x%20%5Coperatorname%7Bd%7D%5C!%5Ccos%20x%20%5C%5C%0A&amp;=%20%5Cleft%5B%20-%20%5Csin%5E%7Bn-1%7D%20x%20%5Ccos%20x%20%5Cright%5D_%7B0%7D%5E%7B%5Cfrac%20%5Cpi%202%7D%20+%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Ccos%20x%20%5Coperatorname%7Bd%7D%5C!%5Csin%5E%7Bn-1%7D%20x%20%5C%5C%0A&amp;=%20(n-1)%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Ccos%5E2%20x%20%5Csin%5E%7Bn-2%7D%20x%20%5Coperatorname%7Bd%7D%5C!x%20%5C%5C%0A&amp;=%20(n-1)%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20(1%20-%20%5Csin%5E2%20x)%20%5Csin%5E%7Bn-2%7D%20x%20%5Coperatorname%7Bd%7D%5C!x%20%5C%5C%0A&amp;=%20(n-1)%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Csin%5E%7Bn-2%7D%20x%20%5Coperatorname%7Bd%7D%5C!x%20-%20(n-1)%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Csin%5En%20x%20%5Coperatorname%7Bd%7D%5C!x%20%5C%5C%0A&amp;=%20(n-1)%20J_%7Bn-2%7D%20-%20(n-1)%20J_n%0A%5Cend%7Baligned%7D%0A"></p>
<p>故 <img src="https://latex.codecogs.com/png.latex?%0AJ_n%20=%20%5Cfrac%7Bn-1%7D%7Bn%7D%20J_%7Bn-2%7D%0A"> 边界条件 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AJ_0%20&amp;=%20%5Cfrac%20%5Cpi%202%20%5C%5C%0AJ_1%20&amp;=%20%5Cint_0%5E%7B%5Cfrac%20%5Cpi%202%7D%20%5Csin%20x%20%5Coperatorname%7Bd%7D%5C!x%20=%201%0A%5Cend%7Baligned%7D%0A"> 代入递推式求解就得到了要证的结论．</p>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-wallis" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 (Wallis 公式)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%20%5Cpi%202%20=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%201%20%7B2n+1%7D%20%5Cleft(%20%5Cfrac%7B(2n)!!%7D%7B(2n-1)!!%7D%20%5Cright)%5E2%0A"></p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>注意到在积分区间上，<img src="https://latex.codecogs.com/png.latex?%5Csin%5En%20x%20%5Cgeq%20%5Csin%5E%7Bn+1%7D%20x">，由积分的单调性，<img src="https://latex.codecogs.com/png.latex?J_n"> 随 <img src="https://latex.codecogs.com/png.latex?n"> 单调递减，故 <img src="https://latex.codecogs.com/png.latex?J_%7B2n+1%7D%20%5Cleq%20J_%7B2n%7D%20%5Cleq%20J_%7B2n-1%7D"> 成立．代入 Lemma&nbsp;1 中得到的结果 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B(2n)!!%7D%7B(2n+1)!!%7D%20%5Cleq%20%5Cfrac%7B(2n-1)!!%7D%7B(2n)!!%7D%20%5Ccdot%20%5Cfrac%20%5Cpi%202%20%5Cleq%20%5Cfrac%7B(2n-2)!!%7D%7B(2n-1)!!%7D%0A"> 移项得 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft(%20%5Cfrac%7B(2n)!!%7D%7B(2n-1)!!%7D%20%5Cright)%5E2%20%5Cfrac%7B1%7D%7B2n+1%7D%20%5Cleq%20%5Cfrac%20%5Cpi%202%20%5Cleq%20%5Cleft(%20%5Cfrac%7B(2n)!!%7D%7B(2n-1)!!%7D%20%5Cright)%5E2%20%5Cfrac%201%20%7B2n%7D%0A"></p>
<p>现在只需说明 RHS 与 LHS 的差是一个无穷小． <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cleft(%20%5Cfrac%7B(2n)!!%7D%7B(2n-1)!!%7D%20%5Cright)%5E2%20%5Cleft(%20%5Cfrac%201%20%7B2n%7D%20-%20%5Cfrac%201%20%7B2n+1%7D%20%20%5Cright)%0A&amp;=%20%5Cleft(%20%5Cfrac%7B(2n)!!%7D%7B(2n-1)!!%7D%20%5Cright)%5E2%20%5Cleft(%20%5Cfrac%201%20%7B2n(2n+1)%7D%20%5Cright)%20%5C%5C%0A&amp;=%20%5Cleft(%20%5Cfrac%7B(2n-2)!!%7D%7B(2n-1)!!%7D%20%5Cright)%5E2%20%5Cfrac%20%7B2n%7D%7B(2n+1)%7D%0A%5Cend%7Baligned%7D%0A"> 由 Example&nbsp;1 ，<img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B(2n-2)!!%7D%7B(2n-1)!!%7D%20=%200">，故上式确为一个无穷小，定理得证．</p>
</div>
<p>Wallis 公式还有其它表现形式： <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B2%5E%7B2n%7D%7D%7B%5Cbinom%7B2n%7D%7Bn%7D%7D%20=%20%5Cfrac%7B(2n)!!%7D%7B(2n-1)!!%7D%20%5Csim%20%5Csqrt%7B%5Cpi%20n%7D%20%5Cpod%7Bn%20%5Cto%20%5Cinfty%7D%0A"> 这里 Wallis 公式反映为对 Example&nbsp;1 和 Example&nbsp;2 的渐进估计．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-catalan" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 1</strong></span> 对 Catalan 数 <img src="https://latex.codecogs.com/png.latex?%0AC_n%20=%20%5Cbinom%7B2n%7D%7Bn%7D%20-%20%5Cbinom%7B2n%7D%7Bn+1%7D%0A"> 做出渐进估计．</p>
</div>
</div>
</div>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>Solution</em>. </span>注意到 <img src="https://latex.codecogs.com/png.latex?%0AC_n%20=%20%5Cbinom%7B2n%7D%7Bn%7D%20-%20%5Cbinom%7B2n%7D%7Bn+1%7D%20=%20%5Cbinom%7B2n%7D%7Bn%7D%20-%20%5Cfrac%20n%20%7Bn+1%7D%20%5Cbinom%7B2n%7D%7Bn%7D%20=%20%5Cfrac%201%20%7Bn+1%7D%20%5Cbinom%7B2n%7D%7Bn%7D%0A"> 用 Wallis 公式计算即得 <img src="https://latex.codecogs.com/png.latex?%0AC_n%20%5Csim%20%5Cfrac%20%7B2%5E%7B2n%7D%7D%7B%5Csqrt%7B%5Cpi%7D%20n%5E%7B%5Cfrac%203%202%7D%7D%0A"></p>
</div>
<p>Wallis 公式的另一种表现形式是 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%20%5Cpi%202%20=%20%5Cprod_%7Bn=1%7D%5E%5Cinfty%20%5Cfrac%7B4%20n%5E2%7D%7B4%20n%5E2-1%7D%20=%20%5Cprod_%7Bn=1%7D%5E%5Cinfty%20%5Cleft(%20%5Cfrac%7B2n%7D%7B2n-1%7D%20%5Ccdot%20%5Cfrac%7B2n%7D%7B2n+1%7D%20%5Cright)%0A"> 这表达式也被称为 Wallis product，用于近似计算 <img src="https://latex.codecogs.com/png.latex?%5Cpi">．</p>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>这和我们在 Example&nbsp;1 中使用的放缩技巧……</p>
</div>
</section>
<section id="stirling-公式" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="stirling-公式"><span class="header-section-number">3</span> Stirling 公式</h2>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="lem-e" class="theorem lemma">
<p><span class="theorem-title"><strong>Lemma 2</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft(%201+%5Cfrac%201%20n%20%5Cright)%5En%20%3C%20e%20%3C%20%5Cleft(%201%20+%20%5Cfrac%201%20n%20%5Cright)%5E%7Bn+1%7D%0A"></p>
</div>
</div>
</div>
</div>
<p>这是《数学分析 I》中大家所熟知的．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-stirling-weak" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft(%5Cfrac%20n%20e%20%5Cright)%5En%20%3C%20%5Cfrac%20%7Bn!%7D%20e%0A%3C%20n%20%5Cleft(%20%5Cfrac%20n%20e%20%5Cright)%5En%0A"></p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>将 Lemma&nbsp;2 写成 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B(n+1)%5En%7D%7Bn%5En%7D%20%3C%20e%20%3C%20%5Cfrac%7B(n+1)%5E%7Bn+1%7D%7D%7Bn%5E%7Bn+1%7D%7D%0A"> 对 <img src="https://latex.codecogs.com/png.latex?k%20=%201,2,%20%5Cdots,%20n-1"> 做连乘 <img src="https://latex.codecogs.com/png.latex?%0A%5Cprod_%7Bk=1%7D%5E%7Bn-1%7D%20%5Cfrac%7B(k+1)%5Ek%7D%7Bk%5Ek%7D%20%3C%20e%5E%7Bn-1%7D%20%3C%20%5Cprod_%7Bk=1%7D%5E%7Bn-1%7D%20%5Cfrac%7B(k+1)%5E%7Bk+1%7D%7D%7Bk%5E%7Bk+1%7D%7D%0A"> 注意到乘积的相邻两项中，前一项的分子与后一项的分母可以约分，中间每项只余下 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%20k">，故上式可化为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bn%5E%7Bn-1%7D%7D%7B(n-1)!%7D%20%3C%20e%5E%7Bn-1%7D%20%3C%20%5Cfrac%7Bn%5En%7D%7B(n-1)!%7D%0A"> 两端再同乘 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bn!%7D%7Be%5E%7Bn%7D%7D"> 就得到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft(%5Cfrac%20n%20e%20%5Cright)%5En%20%3C%20%5Cfrac%20%7Bn!%7D%20e%0A%3C%20n%20%5Cleft(%20%5Cfrac%20n%20e%20%5Cright)%5En%0A"></p>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-stirling" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 (Stirling 公式)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0An!%20%5Csim%20%5Csqrt%7B2%20%5Cpi%20n%7D%20%5Cleft(%20%5Cfrac%20n%20e%20%5Cright)%5En%20%5Cpod%7Bn%20%5Cto%20%5Cinfty%7D%0A"></p>
</div>
</div>
</div>
</div>
<p>完整证明较复杂，这里介绍证明最后一步：已知 <img src="https://latex.codecogs.com/png.latex?n!%20%5Csim%20a%20%5Csqrt%20n%20%5Cleft(%20%5Cfrac%20n%20e%20%5Cright)%5En">，用 Wallis 公式对 <img src="https://latex.codecogs.com/png.latex?2%5E%7B2n%7D%20/%20%5Cbinom%7B2n%7D%7Bn%7D"> 的渐进估计确定系数 <img src="https://latex.codecogs.com/png.latex?a">．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csqrt%7B%5Cpi%20n%7D%20%5Csim%20%5Cfrac%20%7B2%5E%7B2n%7D%7D%7B%5Cbinom%7B2n%7D%7Bn%7D%7D%20=%20%5Cfrac%7B2%5E%7B2n%7D%20(n!)%5E2%7D%7B(2n)!%7D%20%5Csim%20%5Cfrac%7B2%5E%7B2n%7D%20(a%20%5Csqrt%20n%20n%5En%20e%5E%7B-n%7D)%5E2%7D%7Ba%20%5Csqrt%7B2n%7D%202%5E%7B2n%7D%20n%5E%7B2n%7D%20e%5E%7B-2n%7D%7D%20=%20%5Csqrt%7B%5Cfrac%20n%202%7D%20a%0A"></p>
<p>因此 <img src="https://latex.codecogs.com/png.latex?a=%5Csqrt%7B2%20%5Cpi%7D">．</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-stirling-binomial" class="theorem example">
<p><span class="theorem-title"><strong>Example 3</strong></span> 当 <img src="https://latex.codecogs.com/png.latex?n%20%5Cto%20%5Cinfty">，<img src="https://latex.codecogs.com/png.latex?k%20%5Cto%20%5Cinfty"> 时，用 Stirling 公式渐进估计 <img src="https://latex.codecogs.com/png.latex?%5Cbinom%20n%20k">．</p>
</div>
</div>
</div>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>Solution</em>. </span><img src="https://latex.codecogs.com/png.latex?%0A%5Cbinom%20n%20k%20%5Csim%20%5Csqrt%7B%5Cfrac%7Bn%7D%7B2%20%5Cpi%20k%20(n-k)%7D%7D%20%5Cfrac%7Bn%5En%7D%7Bk%5Ek%20(n-k)%5E%7Bn-k%7D%7D%0A"></p>
</div>
</section>
<section id="poisson-分布" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="poisson-分布"><span class="header-section-number">4</span> Poisson 分布</h2>
<p>描述单位时间平均发生次数恒定的随机事件的概率分布．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="def-poission" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 1 (Poisson 分布)</strong></span> 若离散随机变量 <img src="https://latex.codecogs.com/png.latex?X"> 满足 <img src="https://latex.codecogs.com/png.latex?%0AP(X%20=%20k)%20=%20%5Cfrac%7B%5Clambda%5Ek%7D%7Bk!%7De%5E%7B-%5Clambda%7D%0A"> 其中 <img src="https://latex.codecogs.com/png.latex?%5Clambda%20%3E%200"> 是确定的常数，则随机变量 <img src="https://latex.codecogs.com/png.latex?X"> 服从 Poisson 分布．</p>
</div>
</div>
</div>
</div>
<section id="从二项分布的推导" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="从二项分布的推导"><span class="header-section-number">4.1</span> 从二项分布的推导</h3>
<p>在 <img src="https://latex.codecogs.com/png.latex?np%20=%20%5Clambda"> 的条件下，取 <img src="https://latex.codecogs.com/png.latex?P(X_n%20=%20k)%20=%20%5Cbinom%20n%20k%20p%5Ek%20(1-p)%5E%7Bn-k%7D"> 在 <img src="https://latex.codecogs.com/png.latex?n%20%5Cto%20%5Cinfty"> 在 <img src="https://latex.codecogs.com/png.latex?n%20%5Cto%20%5Cinfty"> 上的逐点极限．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(X_n%20=%20k)%0A&amp;=%20%5Cbinom%7Bn%7D%7Bk%7D%20p%5Ek%20(1-p)%5E%7Bn-k%7D%20%5C%5C%0A&amp;=%20%5Cbinom%7Bn%7D%7Bk%7D%20%5Cfrac%7B%5Clambda%5Ek%7D%7Bn%5Ek%7D%20%5Cleft(%201-%5Cfrac%20%5Clambda%20n%20%5Cright)%5E%7Bn-k%7D%20%5C%5C%0A&amp;=%20%5Clambda%5Ek%20%5Cleft(%201-%5Cfrac%20%5Clambda%20n%20%5Cright)%5En%20%5Cleft(%201-%5Cfrac%20%5Clambda%20n%20%5Cright)%5E%7B-k%7D%20%5Cbinom%7Bn%7D%7Bk%7D%20%5Cfrac%7B1%7D%7Bn%5Ek%7D%20%5C%5C%0A&amp;%5Csim%20%5Clambda%5Ek%20e%5E%7B-%5Clambda%7D%5Cbinom%7Bn%7D%7Bk%7D%20%5Cfrac%201%20%7Bn%5Ek%7D%20%5C%5C%0A&amp;=%20%5Clambda%5Ek%20e%5E%7B-%5Clambda%7D%20%5Cfrac%20%7Bn%20(n-1)%20%5Cdots%20(n-k+1)%7D%7Bk!%20n%5Ek%7D%20%5C%5C%0A&amp;=%20%5Cfrac%7B%5Clambda%5Ek%7D%7Bk!%7D%20e%5E%7B-%5Clambda%7D%20%5Ccdot%201%20%5Ccdot%20(1-%5Cfrac%201%20n)%20%5Cdots%20(1%20-%20%5Cfrac%7Bk-1%7D%7Bn%7D)%20%5C%5C%0A&amp;%5Csim%20%5Cfrac%7B%5Clambda%5Ek%7D%7Bk!%7D%20e%5E%7B-%5Clambda%7D%0A%5Cend%7Baligned%7D%0A"></p>
</section>
<section id="归一性验证" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="归一性验证"><span class="header-section-number">4.2</span> 归一性验证</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20P(X%20=%20k)%20=%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20%5Cfrac%7B%5Clambda%5Ek%7D%7Bk!%7De%5E%7B-%5Clambda%7D%20=%20%20e%5E%7B-%5Clambda%7D%20%5Csum_%7Bk=0%7D%5E%7B+%5Cinfty%7D%20%5Cfrac%7B%5Clambda%5Ek%7D%7Bk!%7D%20=%20e%5E%7B-%5Clambda%7D%20e%5E%7B%5Clambda%7D%20=%201%0A"></p>
</section>
</section>
<section id="正态分布" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="正态分布"><span class="header-section-number">5</span> 正态分布</h2>
<p>与 Poisson 分布不同，（标准）正态分布是在 <img src="https://latex.codecogs.com/png.latex?n%20%5Cto%20%5Cinfty"> 的过程中假定 <img src="https://latex.codecogs.com/png.latex?p"> 不变的情况下，对归一化（即假定期望和方差不变）后的 <img src="https://latex.codecogs.com/png.latex?X_n"> 取逐点极限得到的．</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="def-poission" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 2 (正态分布)</strong></span> 若连续随机变量 <img src="https://latex.codecogs.com/png.latex?X"> 的期望 <img src="https://latex.codecogs.com/png.latex?E(X)%20=%20%5Cmu">，方差 <img src="https://latex.codecogs.com/png.latex?D(X)%20=%20%5Csigma">，且其概率分布函数为 <img src="https://latex.codecogs.com/png.latex?%0Af(x)%20=%20%5Cfrac%201%20%7B%5Csqrt%7B2%20%5Cpi%7D%20%5Csigma%7D%20%5Cexp%20%5Cleft(-%5Cfrac%7B(x-%5Cmu)%5E2%7D%7B2%20%5Csigma%5E2%7D%5Cright)%0A"> 则变量 <img src="https://latex.codecogs.com/png.latex?X"> 服从正态分布，记为 <img src="https://latex.codecogs.com/png.latex?X%20%5Csim%20N(%5Cmu,%20%5Csigma%5E2)">．</p>
<p>特别的，当 <img src="https://latex.codecogs.com/png.latex?%5Cmu%20=%200">，<img src="https://latex.codecogs.com/png.latex?%5Csigma%20=%201"> 时，变量 <img src="https://latex.codecogs.com/png.latex?X"> 服从标准正态分布 <img src="https://latex.codecogs.com/png.latex?%0Af(x)%20=%20%5Cfrac%201%20%7B%5Csqrt%7B2%20%5Cpi%7D%7D%20%5Cexp%20%5Cleft(-%5Cfrac%7B1%7D%7B2%7D%20x%5E2%5Cright)%0A"></p>
</div>
</div>
</div>
</div>
<section id="从二项分布的推导de-moivre-laplace-定理" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="从二项分布的推导de-moivre-laplace-定理"><span class="header-section-number">5.1</span> 从二项分布的推导（de Moivre-Laplace 定理）</h3>
<p>设随机变量 <img src="https://latex.codecogs.com/png.latex?X_n%20%5Csim%20B(n,p)">．方便起见，令 <img src="https://latex.codecogs.com/png.latex?q%20=%201-p">．众所周知，二项分布的期望与方差满足 <img src="https://latex.codecogs.com/png.latex?E(X_n)%20=%20np">，<img src="https://latex.codecogs.com/png.latex?D(X_n)%20=%20npq">．</p>
<p>对随机变量 <img src="https://latex.codecogs.com/png.latex?X_n"> 做归一化： <img src="https://latex.codecogs.com/png.latex?%0A%5Cbar%20X_n%20=%20%5Cfrac%7BX_n%20-%20E(X_n)%7D%7B%5Csqrt%7BD(X_n)%7D%7D%20=%20%5Cfrac%7BX_n%20-%20np%7D%7B%5Csqrt%7Bnpq%7D%7D%0A"> 考虑到 <img src="https://latex.codecogs.com/png.latex?%0AP(%5Cbar%20X_n%20=%20x)%20=%20P(X_n%20=%20np%20+%20x%20%5Csqrt%7Bnpq%7D)%0A"> 令 <img src="https://latex.codecogs.com/png.latex?k%20=%20np%20+%20x%20%5Csqrt%7Bnpq%7D">，则 <img src="https://latex.codecogs.com/png.latex?%0AP(%5Cbar%20X_n%20=%20x)%20=%20P(X_n%20=%20k)%20=%20%5Cbinom%7Bn%7D%7Bk%7D%20p%5Ek%20q%5E%7Bn-k%7D%0A"> 此时 <img src="https://latex.codecogs.com/png.latex?n,k"> 均趋于无穷大，故可应用 Example&nbsp;3 对二项式系数做出估计 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cbinom%7Bn%7D%7Bk%7D%20p%5Ek%20q%5E%7Bn-k%7D%0A&amp;%5Csim%20%5Csqrt%7B%5Cfrac%7Bn%7D%7B2%20%5Cpi%20k%20(n-k)%7D%7D%20%5Cfrac%7Bn%5En%7D%7Bk%5Ek%20(n-k)%5E%7Bn-k%7D%7D%20p%5Ek%20q%5E%7Bn-k%7D%20%5C%5C%0A&amp;=%20%5Csqrt%7B%5Cfrac%7Bn%7D%7B2%20%5Cpi%20k%20(n-k)%7D%7D%20%5Cleft(%20%5Cfrac%7Bnp%7D%7Bk%7D%20%5Cright)%5E%7Bk%7D%20%5Cleft(%20%5Cfrac%7Bnq%7D%7Bn-k%7D%20%5Cright)%5E%7Bn-k%7D%20%5C%5C%0A&amp;=%20%5Csqrt%7B%5Cfrac%7Bn%7D%7B2%20%5Cpi%20k%20(n-k)%7D%7D%20%5Cexp%7B%5Cleft(%20k%20%5Cln%7B%5Cfrac%7Bnp%7D%7Bk%7D%7D%20+%20(n-k)%20%5Cln%7B%5Cfrac%7Bnq%7D%7Bn-k%7D%7D%20%5Cright)%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>下面分别处理 <img src="https://latex.codecogs.com/png.latex?k%20%5Cln%7B%5Cfrac%7Bnp%7D%7Bk%7D%7D"> 和 <img src="https://latex.codecogs.com/png.latex?(n-k)%20%5Cln%7B%5Cfrac%7Bnq%7D%7Bn-k%7D%7D">．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ak%20%5Cln%7B%5Cfrac%7Bnp%7D%7Bk%7D%7D%0A&amp;=%20-(np%20+%20x%20%5Csqrt%7Bnpq%7D)%20%5Cln%7B%5Cfrac%7Bnp%20+%20x%20%5Csqrt%7Bnpq%7D%7D%7Bnp%7D%7D%20%5C%5C%0A&amp;=%20-(np%20+%20x%20%5Csqrt%7Bnpq%7D)%20%5Cln%7B%5Cleft(%201%20+%20x%20%5Csqrt%7B%5Cfrac%20q%20%7Bnp%7D%7D%20%5Cright)%7D%20%5C%5C%0A&amp;=%20-(np%20+%20x%20%5Csqrt%7Bnpq%7D)%20%5Cleft(%20x%20%5Csqrt%7B%5Cfrac%20q%20%7Bnp%7D%7D%20-%20%5Cfrac%7Bx%5E2%20q%7D%7B2np%7D%20+%20o%5Cleft(%20%5Cfrac%201%20n%20%5Cright)%20%5Cright)%20%5C%5C%0A&amp;=%20-x%20%5Csqrt%7Bnpq%7D%20+%20%5Cfrac%7B1%7D%7B2%7D%20x%5E2%20q%20-%20x%5E2%20q%20+%20o(1)%0A%5Cend%7Baligned%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A(n-k)%20%5Cln%7B%5Cfrac%7Bnq%7D%7Bn-k%7D%7D%0A&amp;=%20-(nq%20-%20x%20%5Csqrt%7Bnpq%7D)%20%5Cln%7B%5Cfrac%7Bnq%20-%20x%20%5Csqrt%7Bnpq%7D%7D%7Bnq%7D%7D%20%5C%5C%0A&amp;=%20-(nq%20-%20x%20%5Csqrt%7Bnpq%7D)%20%5Cln%7B%5Cleft(%201%20-%20x%20%5Csqrt%7B%5Cfrac%20p%20%7Bnq%7D%7D%20%5Cright)%7D%20%5C%5C%0A&amp;=%20(nq%20-%20x%20%5Csqrt%7Bnpq%7D)%20%5Cleft(%20x%20%5Csqrt%7B%5Cfrac%20p%20%7Bnq%7D%7D%20+%20%5Cfrac%7Bx%5E2%20p%7D%7B2nq%7D%20+%20o%5Cleft(%20%5Cfrac%201%20n%20%5Cright)%20%5Cright)%20%5C%5C%0A&amp;=%20x%20%5Csqrt%7Bnpq%7D%20+%20%5Cfrac%7B1%7D%7B2%7D%20x%5E2%20p%20-%20x%5E2%20p%20+%20o(1)%0A%5Cend%7Baligned%7D%0A"></p>
<p>因此 <img src="https://latex.codecogs.com/png.latex?%0Ak%20%5Cln%7B%5Cfrac%7Bnp%7D%7Bk%7D%7D%20+%20(n-k)%20%5Cln%7B%5Cfrac%7Bnq%7D%7Bn-k%7D%7D%20=%20-%20%5Cfrac%7B1%7D%7B2%7D%20x%5E2%20(p+q)%20+%20o(1)%20=%20-%20%5Cfrac%201%202%20x%5E2%20+%20o(1)%0A"></p>
<p>下面处理 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B%5Cfrac%7Bn%7D%7B2%20%5Cpi%20k%20(n-k)%7D%7D">．</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csqrt%7B%5Cfrac%7Bn%7D%7B2%20%5Cpi%20k%20(n-k)%7D%7D%0A&amp;=%20%5Csqrt%7B%5Cfrac%7Bn%7D%7B2%20%5Cpi%20(np%20+%20x%20%5Csqrt%7Bnpq%7D)%20(nq%20-%20x%20%5Csqrt%7Bnpq%7D)%7D%7D%20%5C%5C%0A&amp;=%20%5Csqrt%7B%5Cfrac%7B1%7D%7B2%20%5Cpi%20(p%20+%20x%20%5Csqrt%7B%5Cfrac%7Bpq%7D%7Bn%7D%7D)%20(q%20-%20x%20%5Csqrt%7B%5Cfrac%7Bpq%7D%7Bn%7D%7D)%7D%7D%20%5C%5C%0A&amp;=%20%5Csqrt%7B%5Cfrac%7B1%7D%7B2%20%5Cpi%20n%20p%20q%20+%20o(1)%7D%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>将上述结果代回，我们就得到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cbinom%7Bn%7D%7Bk%7D%20p%5Ek%20q%5E%7Bn-k%7D%0A&amp;%5Csim%20%5Csqrt%7B%5Cfrac%7B1%7D%7B2%20%5Cpi%20n%20p%20q%20+%20o(1)%7D%7D%20%5Cexp%7B%5Cleft(%20-%20%5Cfrac%201%202%20x%5E2%20+%20o(1)%20%5Cright)%7D%20%5C%5C%0A&amp;%5Csim%20%5Cfrac%7B1%7D%7B%5Csqrt%7B2%20%5Cpi%20n%20p%20q%7D%7D%20%5Cexp%7B%5Cleft(%20-%20%5Cfrac%201%202%20x%5E2%20%5Cright)%7D%0A%5Cend%7Baligned%7D%0A"> 即 <img src="https://latex.codecogs.com/png.latex?%0AP(%5Cbar%20X_n%20=%20x)%20=%20P(X_n%20=%20k)%20%5Csim%20%5Cfrac%201%20%7B%5Csqrt%7B2%20%5Cpi%20npq%7D%7D%20%5Cexp%20%5Cleft(%20-%7B%5Cfrac%201%202%20x%5E2%7D%20%5Cright)%20=%20%5Cfrac%201%20%7B%5Csqrt%7B2%20%5Cpi%20npq%7D%7D%20%5Cexp%20%5Cleft(%20-%5Cfrac%7B(k-np)%5E2%7D%7B2npq%7D%20%5Cright)%0A"> 这正是我们想要的．</p>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>细心的同学可能会对式子前边的系数仍是 <img src="https://latex.codecogs.com/png.latex?n%20%5Cto%20%5Cinfty"> 时的无穷小产生疑问．事实上，在将 <img src="https://latex.codecogs.com/png.latex?X_n"> 归一化为 <img src="https://latex.codecogs.com/png.latex?%5Cbar%20X_n"> 的过程中，我们将整个变量“压缩”至原来的 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B%5Csqrt%7Bnpq%7D%7D">，因此前面的系数可以理解为一种类似 <img src="https://latex.codecogs.com/png.latex?%5Coperatorname%7Bd%7D%5C!x"> 的存在．关于归一化的直观理解，3Blue1Brown 的中心极限定理视频<span class="citation" data-cites="3b1b-clt">[3]</span>提供了很好的讲解．</p>
<p>更形式化的，由于归一化得到的离散型随机变量 <img src="https://latex.codecogs.com/png.latex?%5Cbar%20X_n"> 在 <img src="https://latex.codecogs.com/png.latex?n%20%5Cto%20%5Cinfty"> 的过程中已经变成连续型随机变量 <img src="https://latex.codecogs.com/png.latex?X">，我们研究的对象也应从单点转向区间．因此，对 <img src="https://latex.codecogs.com/png.latex?X_n"> 与 <img src="https://latex.codecogs.com/png.latex?%5Cbar%20X_n"> 概率分布的叙述做一点变动 <img src="https://latex.codecogs.com/png.latex?%0AP%5Cleft(x%20%5Cleq%20%5Cbar%20X_n%20%3C%20x%20+%20%5Cfrac%201%20%7B%5Csqrt%7Bnpq%7D%7D%5Cright)%0A=%20P%5Cleft(k%20%5Cleq%20X_n%20%3C%20k%20+%201%20%5Cright)%0A=%20P(X_n=k)%20%5Csim%20%5Cfrac%201%20%7B%5Csqrt%7B2%20%5Cpi%20npq%7D%7D%20%5Cexp%20%5Cleft(%20-%7B%5Cfrac%201%202%20x%5E2%7D%20%5Cright)%0A"> 令区间大小趋于 <img src="https://latex.codecogs.com/png.latex?0"> 就得到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Af(x)%20&amp;=%20%5Clim_%7Bh%20%5Cto%200%7D%7B%5Cfrac%7BP(x%20%5Cleq%20X%20%3C%20x+h)%7D%7Bh%7D%7D%20%5C%5C%0A&amp;=%20%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Csqrt%7Bnpq%7D%20%5Ccdot%20P%5Cleft(x%20%5Cleq%20%5Cbar%20X_n%20%3C%20x%20+%20%5Cfrac%201%20%7B%5Csqrt%7Bnpq%7D%7D%5Cright)%20%5C%5C%0A&amp;=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Csqrt%7Bnpq%7D%20%5Ccdot%20%5Cfrac%201%20%7B%5Csqrt%7B2%20%5Cpi%20npq%7D%7D%20%5Cexp%20%5Cleft(%20-%7B%5Cfrac%201%202%20x%5E2%7D%20%5Cright)%20&amp;%20%5Cdots%20%5Ctext%7B%E8%BF%99%E9%87%8C%20$%5Csim$%20%E8%A1%A8%E7%8E%B0%E4%B8%BA%E7%AD%89%E4%BB%B7%E6%97%A0%E7%A9%B7%E5%B0%8F%E6%9B%BF%E6%8D%A2%7D%20%5C%5C%0A&amp;=%20%5Cfrac%201%20%7B%5Csqrt%7B2%20%5Cpi%7D%7D%20%5Cexp%20%5Cleft(%20-%7B%5Cfrac%201%202%20x%5E2%7D%20%5Cright)%0A%5Cend%7Baligned%7D%0A"> 这才是我们真正想要的，由二项分布归一化后取极限得到的，标准正态分布的概率密度函数．</p>
</div>
</section>
</section>
<section id="challenge" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="challenge"><span class="header-section-number">6</span> Challenge</h2>
<p>选讲或留作课后讨论．</p>
<section id="中心极限定理要求下正态分布的唯一性" class="level3" data-number="6.1">
<h3 data-number="6.1" class="anchored" data-anchor-id="中心极限定理要求下正态分布的唯一性"><span class="header-section-number">6.1</span> 中心极限定理要求下正态分布的唯一性</h3>
<p>正态分布概率密度函数 <img src="https://latex.codecogs.com/png.latex?e%5E%7B-x%5E2%7D"> 的形式是如何被确定的？怎么说明这形式是满足中心极限定理的独一无二的概率密度函数？</p>
<p>3Blue1Brown 关于正态分布的系列视频较完整的解答了上述疑问，下面是推导思路的提纲．</p>
<p>首先需要意识到，随机变量之和的概率分布即原变量概率密度函数的卷积．</p>
<p>形式化的唯一性证明一般分为两步：</p>
<ul>
<li>使用 moment generating function 的方法证明，任一分布的概率密度函数的各次卷积所构成的函数列一定收敛，且收敛至的函数与初始选取的分布无关．</li>
<li>验证正态分布概率密度函数的卷积仍有 <img src="https://latex.codecogs.com/png.latex?e%5E%7B-x%5E2%7D"> 的形式．</li>
</ul>
<p>这是严谨但并不令人满意的．我们需要更“几何”化的理解来理解 <img src="https://latex.codecogs.com/png.latex?e%5E%7B-x%5E2%7D"> 的这种唯一性，即为什么只有 <img src="https://latex.codecogs.com/png.latex?e%5E%7B-x%5E2%7D"> 在卷积下具有形式不变性．（需要指出的是，3Blue1Brown 的系列视频中，下面部分的严谨性不够充分，有待进一步研究）</p>
<p>Herschel-Maxwell derivation 指出，若二维概率分布满足以下两个条件：</p>
<ul>
<li>该分布具有各向同性，即该二维分布概率密度函数在某点处的取值只与该点离原点的距离有关</li>
<li>分布关于 <img src="https://latex.codecogs.com/png.latex?x,y"> 坐标轴独立，即该二维分布的概率密度函数可写为 <img src="https://latex.codecogs.com/png.latex?f(x)f(y)"> 的形式．</li>
</ul>
<p>则一维情形下此分布的概率密度函数被唯一地确定为具有 <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20e%5E%7Bc%20x%5E2%7D"> 的形式．当然需要假设 <img src="https://latex.codecogs.com/png.latex?f(x)"> 连续，并在最后做归一化处理．</p>
<p>两个随机变量 <img src="https://latex.codecogs.com/png.latex?X,Y"> 的和 <img src="https://latex.codecogs.com/png.latex?X+Y"> 的概率密度函数可被视为这两个随机变量的 Descartes 积 <img src="https://latex.codecogs.com/png.latex?(X,Y)"> 的二元概率密度函数“切片”并按面积（除掉 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%202"> 的常数因子后）“投影”至 <img src="https://latex.codecogs.com/png.latex?y=-x"> 上的结果．</p>
<p>考虑中心极限定理．两个独立同分布变量相加，这已经满足了二维分布独立性的要求．若考虑要求卷积后形式不变，也有必要要求二维分布的各项同性（这样一来，沿 <img src="https://latex.codecogs.com/png.latex?y=-x"> 方向的“切片”的形状与坐标轴向的“切片”只有一个常数因子 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%202"> 的差别）．因此，中心极限定理某种意义上正好对应了 Herschel-Maxwell derivation 的要求，从而唯一确定了正态分布概率密度函数 <img src="https://latex.codecogs.com/png.latex?e%5E%7B-x%5E2%7D"> 的形式．</p>
</section>
<section id="正态分布的归一性验证maxwell-速率分布与高维球体表面积" class="level3" data-number="6.2">
<h3 data-number="6.2" class="anchored" data-anchor-id="正态分布的归一性验证maxwell-速率分布与高维球体表面积"><span class="header-section-number">6.2</span> 正态分布的归一性验证、Maxwell 速率分布与高维球体表面积</h3>
<p>Guass 积分： <img src="https://latex.codecogs.com/png.latex?%0A%5Cint_%7B-%5Cinfty%7D%5E%7B+%5Cinfty%7D%20e%5E%7B-x%5E2%7D%20%5Coperatorname%7Bd%7D%5C!x%20=%20%5Csqrt%20%5Cpi%0A"></p>
<p>Maxwell 速率分布： <img src="https://latex.codecogs.com/png.latex?%0Af(v)%20=%204%20%5Cpi%20v%5E2%20%5Cleft(%20%5Cfrac%7Bm%7D%7B2%20%5Cpi%20kT%7D%20%5Cright)%5E%7B%5Cfrac%203%202%7D%20%5Cexp%20%5Cleft(%20-%20%5Cfrac%7Bm%7D%7B2kT%7Dv%5E2%20%5Cright)%0A"></p>
<p>以及它们与高维球体表面积的联系涉及多元积分学的内容．参见 3Blue1Brown 有关 <img src="https://latex.codecogs.com/png.latex?%5Cpi"> 与正态分布的视频<span class="citation" data-cites="3b1b-pi">[4]</span>．</p>
</section>
<section id="n-的其它估计" class="level3" data-number="6.3">
<h3 data-number="6.3" class="anchored" data-anchor-id="n-的其它估计"><span class="header-section-number">6.3</span> <img src="https://latex.codecogs.com/png.latex?n!"> 的其它估计</h3>
<p>一种更容易想到的做法是 <img src="https://latex.codecogs.com/png.latex?%0An%20%5Cln%20n%20-%20n%20-%201%20=%20%5Cint_1%5En%20%5Cln%20x%20%5Coperatorname%7Bd%7D%5C!x%20%5Cleq%0A%5Cln%20n!%20=%20%5Csum_%7Bk=1%7D%5En%20%5Cln%20k%0A%5Cleq%20%5Cint_1%5E%7Bn+1%7D%20%5Cln%20x%20%5Coperatorname%7Bd%7D%5C!x%20=%20(n+1)%20%5Cln%20(n+1)%20-%20n%20-%202%0A"> 从而 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft(%20%5Cfrac%20n%20e%20%5Cright)%5En%20%5Cleq%20e%20%5Ccdot%20n!%20%5Cleq%20%5Cleft(%5Cfrac%7Bn+1%7D%7Be%7D%5Cright)%5E%7Bn+1%7D%0A"> 当然这比 Theorem&nbsp;2 的估计稍差．</p>
<p>更多估计可参考这篇文章<span class="citation" data-cites="hijjjjq">[5]</span>．</p>
</section>
<section id="wallis-公式的其它证明" class="level3" data-number="6.4">
<h3 data-number="6.4" class="anchored" data-anchor-id="wallis-公式的其它证明"><span class="header-section-number">6.4</span> Wallis 公式的其它证明</h3>
<p>3Blue1Brown 频道提供了一个几何风格的证明<span class="citation" data-cites="3b1b-wallis">[6]</span>，其与 Bassel 问题的 Euler 解法有着神秘的联系．事实上，Euler 对 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Csin%20x%7D%7Bx%7D"> 的无穷乘积拆解也可用于证明 Wallis product，参见 Wikipedia<span class="citation" data-cites="wp-wallis">[7]</span>．</p>
</section>
<section id="wallis-公式视角下三阶乘与中心三项式系数的渐进估计" class="level3" data-number="6.5">
<h3 data-number="6.5" class="anchored" data-anchor-id="wallis-公式视角下三阶乘与中心三项式系数的渐进估计"><span class="header-section-number">6.5</span> Wallis 公式视角下三阶乘与中心三项式系数的渐进估计</h3>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-triple-factorial-1" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 2</strong></span> 求 <img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B(3n-2)!!!%7D%7B(3n)!!!%7D%20=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B1%20%5Ctimes%204%20%5Ctimes%207%20%5Ctimes%20%5Cdots%20%5Ctimes%20(3n-2)%7D%7B3%20%5Ctimes%206%20%5Ctimes%209%20%5Ctimes%20%5Cdots%20%5Ctimes%203n%7D%0A"> 并对其做出渐进估计．</p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-triple-factorial-2" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 3</strong></span> 求 <img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B(3n-1)!!!%7D%7B(3n)!!!%7D%20=%20%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B2%20%5Ctimes%205%20%5Ctimes%208%20%5Ctimes%20%5Cdots%20%5Ctimes%20(3n-1)%7D%7B3%20%5Ctimes%206%20%5Ctimes%209%20%5Ctimes%20%5Cdots%20%5Ctimes%203n%7D%0A"> 并对其做出渐进估计．</p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exr-trinomial" class="theorem exercise">
<p><span class="theorem-title"><strong>Exercise 4</strong></span> 求 <img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%5Cfrac%7B(3n)!%20/%20(n!)%5E3%7D%7B3%5E%7B3n%7D%7D%0A"> 并对其做出渐进估计．</p>
</div>
</div>
</div>
</div>
<p>用 Stirling 公式计算得到的结果是 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Csqrt%203%7D%7B2%20%5Cpi%20n%7D%0A"> 但在 Wallis 公式的视角下如何获得？</p>
</section>
</section>


<div id="quarto-appendix" class="default"><section id="acknowledgments" class="level2 appendix" data-number="7"><h2 class="anchored quarto-appendix-heading"><span class="header-section-number">7</span> Acknowledgments</h2><div class="quarto-appendix-contents">

<p>感谢吕老师组织<del>我最喜欢的</del>研讨课环节．此外，Example&nbsp;1 的放缩技巧由“吸取教训”同学提供，Poisson 分布的二项分布推导是与“抱头蹲防”同学讨论的结果，在此表示感谢．</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-analysis" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">张筑生, <em>数学分析新讲（重排本）（第二册）</em>, 2nd ed. 北京: 北京大学出版社, 2021.</div>
</div>
<div id="ref-prob" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">张颢, <em>概率论</em>. 北京: 高等教育出版社, 2018.</div>
</div>
<div id="ref-3b1b-clt" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline">3Blue1Brown, <span>“Why is the "central limit" a normal distribution?”</span> <a href="https://www.youtube.com/watch?v=d_qvLDhkg00" class="uri">https://www.youtube.com/watch?v=d_qvLDhkg00</a>, 2023.</div>
</div>
<div id="ref-3b1b-pi" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline">3Blue1Brown, <span>“Why π is in the normal distribution (beyond integral tricks).”</span> <a href="https://www.youtube.com/watch?v=cy8r7WSuT1I" class="uri">https://www.youtube.com/watch?v=cy8r7WSuT1I</a>, 2023.</div>
</div>
<div id="ref-hijjjjq" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">hijjjjq, <span>“对n的阶乘（n!）进行估计.”</span> <a href="https://zhuanlan.zhihu.com/p/552658420" class="uri">https://zhuanlan.zhihu.com/p/552658420</a>, 2022.</div>
</div>
<div id="ref-3b1b-wallis" class="csl-entry">
<div class="csl-left-margin">[6] </div><div class="csl-right-inline">3Blue1Brown, <span>“The wallis product for pi, proved geometrically.”</span> <a href="https://www.youtube.com/watch?v=8GPy_UMV-08" class="uri">https://www.youtube.com/watch?v=8GPy_UMV-08</a>, 2018.</div>
</div>
<div id="ref-wp-wallis" class="csl-entry">
<div class="csl-left-margin">[7] </div><div class="csl-right-inline">Wikipedia, <span>“Wallis product.”</span> <a href="https://en.wikipedia.org/wiki/Wallis_product#Proof_using_Euler's_infinite_product_for_the_sine_function" class="uri">https://en.wikipedia.org/wiki/Wallis_product#Proof_using_Euler's_infinite_product_for_the_sine_function</a>.</div>
</div>
</div></section></div> ]]></description>
  <category>数学</category>
  <category>讲稿</category>
  <guid>https://blog.sun123zxy.top/posts/20230423-stirling/</guid>
  <pubDate>Sat, 22 Apr 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>一些数论算法的时间复杂度分析</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230418-complexity/</link>
  <description><![CDATA[ 




<section id="预备" class="level2" data-number="">
<h2 data-number="" class="anchored" data-anchor-id="预备"><span class="header-section-number"></span> 预备</h2>
<section id="渐进符号" class="level3" data-number="0.1">
<h3 data-number="0.1" class="anchored" data-anchor-id="渐进符号"><span class="header-section-number">0.1</span> 渐进符号</h3>
<p>其实不少高等数学 / 数学分析教材在讲解无穷小的比较时已经相当严谨地介绍过大 O、小 O 记号，然而各种历史习惯记法的符号滥用（abuse of notation）<span class="citation" data-cites="wikipedia_abuse">[1]</span> 直到现在都让笔者头疼. These notations seem to be innocent, but can be catastrophic without careful manipulation. 例如</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-error-1" class="theorem example">
<p><span class="theorem-title"><strong>Example 1 (反例 1)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0An%20=%20O(n%5E2)%20%5Cland%20n%5E2%20=%20O(n%5E2)%20%5Cimplies%20n%20=%20n%5E2%0A"></p>
</div>
</div>
</div>
</div>
<p>Knuth 在《具体数学》里举出的例子 <span class="citation" data-cites="concretemath_onotation">[2]</span>. “<img src="https://latex.codecogs.com/png.latex?=">” 隐含的对称性使其在 <img src="https://latex.codecogs.com/png.latex?g(x)%20=%20O(f(x))"> 中格格不入. 事实上，将 <img src="https://latex.codecogs.com/png.latex?O(f(x))"> 看作“阶不高于 <img src="https://latex.codecogs.com/png.latex?f(x)"> 的所有函数的集合”是比“某个阶不高于 <img src="https://latex.codecogs.com/png.latex?f(x)"> 的函数”更严谨的理解. 因此，本文将使用 <img src="https://latex.codecogs.com/png.latex?f(x)%20%5Cin%20O(g(x))"> （有时也记为 <img src="https://latex.codecogs.com/png.latex?O(f(x))%20%5Csubset%20O(g(x))">）的集合论符号代替传统的 <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20O(g(x))"> 记法.</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-error-2" class="theorem example">
<p><span class="theorem-title"><strong>Example 2 (反例 2)</strong></span> <img src="https://latex.codecogs.com/png.latex?%0An%5E2%20%5Csin%20n%20%5Cin%20O(n%5E2)%20%5Cimplies%20%5Csum_%7Bi=1%7D%5En%20i%5E2%20%5Csin%20i%20%5Cin%20%5Csum_%7Bi=1%7D%5En%20O(i%5E2)%20%5Csubset%20O%5Cleft(%20%5Csum_%7Bi=1%7D%5En%20i%5E2%20%5Cright)%20%5Csubset%20O(n%5E3)%0A"> 或更一般的， <img src="https://latex.codecogs.com/png.latex?%0Ag(x)%20%5Cin%20O(f(x))%20%5Cimplies%20%5Csum_%7BP(n,i)%7D%20g(i)%20%5Cin%20%5Csum_%7BP(n,i)%7D%20O(f(i))%20%5Csubset%20O%20%5Cleft(%5Csum_%7BP(n,i)%7D%20f(i)%20%5Cright)%0A"></p>
</div>
</div>
</div>
</div>
<p>没看出有啥问题，对吧？笔者在写作此文时犯了同样的错误. 请注意，大 O 记号的作用对象是函数，<img src="https://latex.codecogs.com/png.latex?f(i)"> 是什么？它只是个函数值，是确定的数——这是因为 <img src="https://latex.codecogs.com/png.latex?i"> 也是求和枚举中确定的数，而不是 <img src="https://latex.codecogs.com/png.latex?n"> 这种真正代表变元的记号. 所以 <img src="https://latex.codecogs.com/png.latex?O(f(i))"> 是什么？它什么也不是.</p>
<p>这种错误的出现是在所难免的，我们太习惯用 <img src="https://latex.codecogs.com/png.latex?x">、<img src="https://latex.codecogs.com/png.latex?x%5E3%20+%205%20x%5E2%20+%20x"> 这种变元都不明确的记号来表示函数了<span class="citation" data-cites="wikipedia_abuse">[1]</span>. 写成 <img src="https://latex.codecogs.com/png.latex?f(x)"> 也不严谨，因为只有 <img src="https://latex.codecogs.com/png.latex?f"> 才应代表函数本身，<img src="https://latex.codecogs.com/png.latex?f(x)"> 只能是函数值. 这样我们就可以放心地写下 <img src="https://latex.codecogs.com/png.latex?O(f)">，不用担心把变元与确定值弄混了.</p>
<p>然而大家还是喜欢写 <img src="https://latex.codecogs.com/png.latex?O(n%5E2)"> 和 <img src="https://latex.codecogs.com/png.latex?O(e%5E%7Bn%5E2%7D)">，而不是奇怪的 <img src="https://latex.codecogs.com/png.latex?O(%5Cmathrm%7Bid%7D%5E2)"> 和 <img src="https://latex.codecogs.com/png.latex?O(%5Cmathrm%7Bexp%7D%20%5Ccirc%20%7B%5Cmathrm%7Bid%7D%5E2%7D)">. 所以，我们大概只能沿用这种不太严谨的记号，并时刻提醒自己加倍小心了. （形如 <img src="https://latex.codecogs.com/png.latex?x%20%5Cmapsto%20e%5E%7Bx%5E2%7D"> 的 <img src="https://latex.codecogs.com/png.latex?%5Clambda"> 风格“匿名函数”记号可能更好？）</p>
<p>但上述命题从结论上是正确的. 正确的推导过程应为 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7BP(n,i)%7D%20g(i)%20%5Cleq%20%5Csum_%7BP(n,i)%7D%20C%20f(i)%20%5Cleq%20C%20%5Csum_%7BP(n,i)%7D%20f(i)%20%5Cin%20O%20%5Cleft(%5Csum_%7BP(n,i)%7D%20f(i)%20%5Cright)%5C%0A"> 第一步是直接由大 O 记号的定义得到的结果.</p>
<p>Wikipedia <span class="citation" data-cites="asymptotic_wikipedia">[3]</span> 中有一张详尽的表格介绍了各种渐进符号的定义，OI Wiki <span class="citation" data-cites="asymptotic_oiwiki">[4]</span> 上也有极好的讲解，尚不熟练的读者可以参考. 有兴趣仔细研究的读者可以参考《具体数学》第九章 <span class="citation" data-cites="concretemath_onotation">[2]</span>、Wikipedia 及其 reference（个人推荐 Knuth 关于 <img src="https://latex.codecogs.com/png.latex?O">、<img src="https://latex.codecogs.com/png.latex?%5COmega">、<img src="https://latex.codecogs.com/png.latex?%5CTheta"> 的短文 <span class="citation" data-cites="knuth_omicron">[5]</span>）. 本文除用 “<img src="https://latex.codecogs.com/png.latex?%5Cin">” 和“<img src="https://latex.codecogs.com/png.latex?%5Csubset">”替代 “<img src="https://latex.codecogs.com/png.latex?=">” 外，完全使用 Knuth 提议的记号体系.</p>
</section>
<section id="调和数-hn-调和级数" class="level3" data-number="0.2">
<h3 data-number="0.2" class="anchored" data-anchor-id="调和数-hn-调和级数"><span class="header-section-number">0.2</span> 调和数 <img src="https://latex.codecogs.com/png.latex?H(n)"> / 调和级数</h3>
<p>调和级数的部分和 <img src="https://latex.codecogs.com/png.latex?H(n)"> 定义为 <img src="https://latex.codecogs.com/png.latex?%0AH(n)%20=%20%5Csum_%7Bi=1%7D%5En%20%5Cfrac%201%20i%0A"> 通过一些与 <img src="https://latex.codecogs.com/png.latex?e"> 有关的数列放缩可以证明 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20(%20H(n)%20-%20%5Clog%20n%20)%20=%20c">，其中 <img src="https://latex.codecogs.com/png.latex?c%20%5Capprox%200.577"> 是 Euler 常数. 因此 <img src="https://latex.codecogs.com/png.latex?H(n)%20%5Csim%20%5Clog%20n%20%5Cin%20%5CTheta(%5Clog%20n)">.</p>
</section>
<section id="自然数等幂和-p_pn-p---级数" class="level3" data-number="0.3">
<h3 data-number="0.3" class="anchored" data-anchor-id="自然数等幂和-p_pn-p---级数"><span class="header-section-number">0.3</span> 自然数等幂和 <img src="https://latex.codecogs.com/png.latex?P_p(n)"> / <img src="https://latex.codecogs.com/png.latex?p"> - 级数</h3>
<p><img src="https://latex.codecogs.com/png.latex?p"> - 级数可视为调和级数的推广. 其部分和定义为 <img src="https://latex.codecogs.com/png.latex?P_p(n)%20=%20%5Csum_%7Bi=1%7D%5En%20i%5E%7B-p%7D">．<img src="https://latex.codecogs.com/png.latex?p"> - 级数具有如下性质：</p>
<ul>
<li>当 <img src="https://latex.codecogs.com/png.latex?p%20%3E%201"> 时，<img src="https://latex.codecogs.com/png.latex?p"> - 级数收敛；</li>
<li>当 <img src="https://latex.codecogs.com/png.latex?p%20=%201"> 时，<img src="https://latex.codecogs.com/png.latex?p"> - 级数是调和级数；</li>
<li>当 <img src="https://latex.codecogs.com/png.latex?-%5Cinfty%20%3C%20p%20%3C%201"> 时，我们指出 <img src="https://latex.codecogs.com/png.latex?P_p(n)%20%5Csim%20%5Cfrac%7B1%7D%7B1-p%7D%20n%5E%7B1-p%7D%20%5Cin%20%5CTheta(n%5E%7B1-p%7D)"></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?-%5Cinfty%20%3C%20p%20%3C%201"> 时 <img src="https://latex.codecogs.com/png.latex?p"> - 级数的渐进估计可以从连续幂函数积分的角度理解. 证明这渐进性，离散情况下，可对 <img src="https://latex.codecogs.com/png.latex?n%5Ep"> 差分后前缀和 + 二项式定理得到高次项系数，或可用离散微积分理论得到精确表示（参见《具体数学》<span class="citation" data-cites="concretemath_calculus">[6]</span>）；连续情况下，Lagrange 中值定理应为较简单的估计方法. 这里从略. 总之，我们得到： <img src="https://latex.codecogs.com/png.latex?%0AP_p(n)%20%5Cin%20%5Cbegin%7Bcases%7D%0A%5CTheta(n%5E%7B1-p%7D)%20&amp;%20p%20%3C%201%20%5C%5C%0A%5CTheta(%5Clog%20n)%20&amp;%20p%20=%201%20%5C%5C%0A%5CTheta(1)%20&amp;%20p%20%3E%201%0A%5Cend%7Bcases%7D%0A"></p>
</section>
</section>
<section id="约数函数-sigma_zn" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="约数函数-sigma_zn"><span class="header-section-number">1</span> 约数函数 <img src="https://latex.codecogs.com/png.latex?%5Csigma_z(n)"></h2>
<p>约数函数（Divisor Function，也可称为除数函数、因数函数）是与 <img src="https://latex.codecogs.com/png.latex?n"> 的因子有关的一类函数，定义为 <img src="https://latex.codecogs.com/png.latex?%5Csigma_z(n)%20=%20%5Csum_%7Bd%20%5Cmid%20n%7D%20d%5Ez">．当 <img src="https://latex.codecogs.com/png.latex?z=0"> 时，<img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)"> 被称为约数个数函数（number-of-divisors function），常被记为 <img src="https://latex.codecogs.com/png.latex?d(n)"> 或 <img src="https://latex.codecogs.com/png.latex?%5Ctau(n)">. 当 <img src="https://latex.codecogs.com/png.latex?z=1"> 时，<img src="https://latex.codecogs.com/png.latex?%5Csigma_1(n)"> 被称为约数和函数（sum-of-divisors function），常直接记为 <img src="https://latex.codecogs.com/png.latex?%5Csigma(n)">.</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-sigma0ub" class="theorem example">
<p><span class="theorem-title"><strong>Example 3</strong></span> 估计 <img src="https://latex.codecogs.com/png.latex?%5Csigma_0%20(n)"> 的渐进上界.</p>
</div>
</div>
</div>
</div>
<p>也就是估计 <img src="https://latex.codecogs.com/png.latex?n"> 的因子的数量. 一个广为人知的上界是 <img src="https://latex.codecogs.com/png.latex?2%20%5Csqrt%20n">，因为 <img src="https://latex.codecogs.com/png.latex?n"> 的所有小于 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%20n"> 的因子 <img src="https://latex.codecogs.com/png.latex?d"> 均与另一因子 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%20n%20d"> 一一对应.</p>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>事实上进一步可以证明 <img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)%20%5Cin%20o(n%5E%5Cepsilon)%20%5Cquad%20%5Cforall%20%5Cepsilon%20%3E%200">，或更精确的，<img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)%20%5Cin%20O(n%5E%7B%5Clog%202%20/%20%5Clog%20%5Clog%20n%7D)"> <span class="citation" data-cites="wikipedia_divisor">[7]</span>．这一点说明，在实现与枚举因子有关的算法时，虽然仍会从 <img src="https://latex.codecogs.com/png.latex?1"> 枚举至 <img src="https://latex.codecogs.com/png.latex?%5Csqrt%20n"> 探测因子，但真正参与计算的因子其实相当少．因此，这些算法的实际表现往往极大程度地优于按 <img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)%20%5Cin%20O(%5Csqrt%20n)"> 估计的理论时间复杂度．</p>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-sumsigma0ub" class="theorem example">
<p><span class="theorem-title"><strong>Example 4</strong></span> 估计 <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Csigma_0%7D(n)%20=%20%5Csum_%7Bi=1%7D%5En%20%5Csigma_0%20(i)"> 的渐进上界.</p>
</div>
</div>
</div>
</div>
<p>即估计 <img src="https://latex.codecogs.com/png.latex?1"> 到 <img src="https://latex.codecogs.com/png.latex?n"> 中所有数因子个数的和. 这是一个形式上鲜为人知但其应用广为人知的例子. 变换求和顺序，容易得到 <img src="https://latex.codecogs.com/png.latex?%0A%5Chat%7B%5Csigma_0%7D(n)%20=%20%5Csum_%7Bi=1%7D%5En%20%5Csigma_0%20(i)%0A=%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bd%20%5Cmid%20i%7D%201%0A=%20%5Csum_%7Bd=1%7D%5En%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%0A%5Cleq%20%5Csum_%7Bd=1%7D%5En%20%5Cfrac%20n%20d%0A=%20n%20H(n)%20%5Cin%20O(n%20%5Clog%20n)%0A"></p>
<p>显然，这比 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Csqrt%20n)"> 的平凡估计好上不少. 本例的思路不仅是埃氏筛（Sieve of Eratosthenes）的理论基础，也在杜教筛、快速 Mobius 变换、<img src="https://latex.codecogs.com/png.latex?%5Cgcd"> 卷积 <span class="citation" data-cites="gcdconv">[8]</span> 等处出现.</p>
<p>进一步利用此技巧和 <img src="https://latex.codecogs.com/png.latex?p"> - 级数的估计，我们甚至能在仔细研究 <img src="https://latex.codecogs.com/png.latex?%5Csigma_z(n)"> 前就得到其前缀和的渐进估计：</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-sumsigmazub" class="theorem example">
<p><span class="theorem-title"><strong>Example 5</strong></span> 估计 <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Csigma_z%7D(n)%20=%20%5Csum_%7Bi=1%7D%5En%20%5Csigma_z%20(i)"> 的渐进上界.</p>
</div>
</div>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Chat%7B%5Csigma_z%7D(n)%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20%5Csigma_z%20(i)%0A=%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bd%20%5Cmid%20i%7D%20d%5Ez%0A=%20%5Csum_%7Bd=1%7D%5En%20d%5Ez%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%20%5C%5C%0A&amp;%5Cleq%20n%20%5Csum_%7Bd=1%7D%5En%20d%5E%7Bz-1%7D%0A=%20n%20P_%7B1-z%7D(n)%0A%5Cin%20%5Cbegin%7Bcases%7D%0AO(n%5E%7Bz+1%7D)%20&amp;%20z%20%3E%200%20%5C%5C%0AO(n%20%5Clog%20n)%20&amp;%20z%20=%200%20%5C%5C%0AO(n)%20&amp;%20z%20%3C%200%0A%5Cend%7Bcases%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>遗憾的是，对此前缀和做差分并不能得到 <img src="https://latex.codecogs.com/png.latex?%5Csigma_z(n)"> 的优秀估计.</p>
<p>现在引入一个重要放缩技巧，其在后续估计中屡试不爽.</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-trick1" class="theorem proposition">
<p><span class="theorem-title"><strong>Proposition 1</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bd%20%5Cmid%20n%7D%20f(d)%20%5Cleq%20%5Csum_%7Bi=1%7D%5En%20f%20(%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor)%0A"></p>
</div>
</div>
</div>
</div>
<p>右式比左式多算了 <img src="https://latex.codecogs.com/png.latex?i%20%5Cnmid%20n"> 的项，因此命题是正确的. 但我们还可以做得更好：</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-trick1ex" class="theorem proposition">
<p><span class="theorem-title"><strong>Proposition 2</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bd%20%5Cmid%20n%7D%20f(d)%20%5Cleq%20%5Csum_%7Bi=1%7D%5E%7B%5Csqrt%20n%7D%20f(i)%20+%20f(%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor)%0A"></p>
</div>
</div>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?%5Csqrt%20n"> 分治. 我们其实已经在 Example&nbsp;3 估计 <img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)"> 时用过此技巧了.</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-sigma1ub" class="theorem example">
<p><span class="theorem-title"><strong>Example 6</strong></span> 估计 <img src="https://latex.codecogs.com/png.latex?%5Csigma_1%20(n)"> 的渐进上界.</p>
</div>
</div>
</div>
</div>
<p>用 Proposition&nbsp;1： <img src="https://latex.codecogs.com/png.latex?%0A%5Csigma_1%20(n)%0A=%20%5Csum_%7Bd%20%5Cmid%20n%7D%20d%20%5Cleq%20%5Csum_%7Bi=1%7D%5En%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%20%5Cleq%20n%20H(n)%20%5Cin%20O(n%20%5Clog%20n)%0A"></p>
<p>可以证明用 Proposition&nbsp;2 不会得到更优的结果.</p>
<p>我们发现了一个有趣的事实：<img src="https://latex.codecogs.com/png.latex?%5Csigma_1%20(n)"> 和 <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Csigma_0%7D(n)"> 的渐进上界均为 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)">.</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-sigmazub" class="theorem example">
<p><span class="theorem-title"><strong>Example 7</strong></span> 估计 <img src="https://latex.codecogs.com/png.latex?%5Csigma_z%20(n)"> 的渐进上界.</p>
</div>
</div>
</div>
</div>
<p>用 Proposition&nbsp;2 和 <img src="https://latex.codecogs.com/png.latex?p"> - 级数的性质： <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csigma_z%20(n)%0A&amp;=%20%5Csum_%7Bd%20%5Cmid%20n%7D%20d%5Ez%0A%5Cleq%20%5Csum_%7Bi=1%7D%5E%7B%5Csqrt%20n%7D%20i%5Ez%20+%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%5Ez%20%5C%5C%0A&amp;%5Cleq%20%5Cbegin%7Bcases%7D%0A%5Cdisplaystyle%202%20%5Csum_%7Bi=1%7D%5E%7B%5Csqrt%20n%7D%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%5Ez%20%5Cleq%202%20n%5Ez%20%5Csum_%7Bi=1%7D%5E%7B%5Csqrt%20n%7D%20i%5E%7B-z%7D%20&amp;%20=%202%20n%5Ez%20P_z(%5Csqrt%20n)%20&amp;%20z%20%5Cgeq%200%5C%5C%0A%5Cdisplaystyle%202%20%5Csum_%7Bi=1%7D%5E%7B%5Csqrt%20n%7D%20i%5Ez%20&amp;%20=%202%20P_%7B-z%7D(%5Csqrt%20n)%20%20&amp;%20z%20%3C%200%0A%5Cend%7Bcases%7D%20%5C%5C%0A%5Cin%20&amp;%20%5Cbegin%7Bcases%7D%0A2%20n%5Ez%20O(1)%20&amp;%20z%20%3E%201%20%5C%5C%0A2%20n%20O(%5Clog%20%5Csqrt%20n)%20&amp;%20z%20=%201%20%5C%5C%0A2%20n%5Ez%20O(n%5E%7B%5Cfrac%20%7B1-z%7D%202%7D)%20&amp;%200%20%5Cleq%20z%20%3C%201%20%5C%5C%0A2%20O(n%5E%7B%5Cfrac%20%7B1+z%7D%202%7D)%20&amp;%20-1%20%3C%20z%20%3C%200%20%5C%5C%0A2%20O(%5Clog%20%5Csqrt%20n)%20&amp;%20z%20=%20-1%20%5C%5C%0A2%20O(1)%20&amp;%20z%20%3C%20-1%0A%5Cend%7Bcases%7D%0A=%20%5Cbegin%7Bcases%7D%0AO(n%5Ez)%20&amp;%20z%20%3E%201%20%5C%5C%0AO(n%20%5Clog%20n)%20&amp;%20z%20=%201%20%5C%5C%0AO(n%5E%7B%5Cfrac%20%7B1+z%7D%202%7D)%20&amp;%20-1%20%3C%20z%20%3C%201%20%5C%5C%0AO(%5Clog%20n)%20&amp;%20z%20=%20-1%20%5C%5C%0AO(1)%20&amp;%20z%20%3C%20-1%0A%5Cend%7Bcases%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>这是一个相当优秀的渐进上界. 值得关注的是：</p>
<ul>
<li>当 <img src="https://latex.codecogs.com/png.latex?z=0"> 时，<img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)%20%5Cin%20O(n%5E%7B%5Cfrac%201%202%7D)">. 这与 Example&nbsp;3 的结果一致.</li>
<li>当 <img src="https://latex.codecogs.com/png.latex?z=%5Cfrac%201%202"> 时，<img src="https://latex.codecogs.com/png.latex?%5Csigma_%7B%5Cfrac%201%202%7D(n)%20%5Cin%20O(n%5E%7B%5Cfrac%203%204%7D)">，即 <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bd%20%5Cmid%20n%7D%20%5Csqrt%20d%20%5Cin%20O(n%5E%7B%5Cfrac%203%204%7D)">. 洛谷 P4980 Polya 定理模板题 <span class="citation" data-cites="polya_luogu">[9]</span> 的一种比较 trivial 的解法 <span class="citation" data-cites="polya_my">[10]</span> 的时间复杂度证明就来源于此. 我们之后还会在整除分块与杜教筛中见到它.</li>
</ul>
<p>另外，如果只使用 Proposition&nbsp;1 ，<img src="https://latex.codecogs.com/png.latex?-1%3Cz%3C1"> 部分的渐进上界将只能估计至 <img src="https://latex.codecogs.com/png.latex?O(n)">. 因此 Proposition&nbsp;2 是更为优越的.</p>
<p>约数函数更复杂的上限与渐进估计可参考 Wikipedia <span class="citation" data-cites="wikipedia_divisor">[7]</span>.</p>
</section>
<section id="整除分块" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="整除分块"><span class="header-section-number">2</span> 整除分块</h2>
<p>也被称为数论分块. 求 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5En%20f(i)%20g(%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor)%0A"> 我们按 <img src="https://latex.codecogs.com/png.latex?d%20=%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor"> 分块求和： <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bd%7D%20g(d)%20%5Csum_%7B%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%20=%20d%7D%20f(i)%0A"> 可以证明，对一指定的 <img src="https://latex.codecogs.com/png.latex?d">，满足 <img src="https://latex.codecogs.com/png.latex?d%20=%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor"> 的 <img src="https://latex.codecogs.com/png.latex?i"> 取遍一连续区间，故若 <img src="https://latex.codecogs.com/png.latex?f"> 的前缀和能 <img src="https://latex.codecogs.com/png.latex?O(1)"> 求出，块数量 <img src="https://latex.codecogs.com/png.latex?%5C#%20%5Cleft%5C%7B%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%20%5Cright%5C%7D_%7Bi=1%7D%5En"> 即该算法的时间复杂度. 注意到当 <img src="https://latex.codecogs.com/png.latex?i%20%5Cleq%20%5Csqrt%20n"> 时，<img src="https://latex.codecogs.com/png.latex?%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor"> 最多只有 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5Clfloor%20%5Csqrt%20n%20%5Cright%5Crfloor"> 种取值，而 <img src="https://latex.codecogs.com/png.latex?i%20%5Cgeq%20%5Csqrt%20n"> 时，<img src="https://latex.codecogs.com/png.latex?1%20%5Cleq%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%20%5Cleq%20%5Csqrt%20n"> 表明其也最多只有 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5Clfloor%20%5Csqrt%20n%20%5Cright%5Crfloor"> 种取值. 因此整除分块的时间复杂度 <img src="https://latex.codecogs.com/png.latex?%0AT_1(n)%20=%20%5C#%20%5Cleft%5C%7B%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%20%5Cright%5C%7D_%7Bi=1%7D%5En%20%5Cleq%202%20%5Csqrt%20n%20%5Cin%20O(%5Csqrt%20n)%0A"></p>
<p>方便起见，后文记 <img src="https://latex.codecogs.com/png.latex?D(n)%20=%20%5Cleft%5C%7B%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%20%5Cright%5C%7D_%7Bi=1%7D%5En">.</p>
<section id="整除分块嵌套" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="整除分块嵌套"><span class="header-section-number">2.1</span> 整除分块嵌套</h3>
<p>将 Proposition&nbsp;2 加强，我们有如下通用放缩：</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-trick2ex" class="theorem proposition">
<p><span class="theorem-title"><strong>Proposition 3</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bd%20%5Cmid%20n%7D%20f(d)%20%5Cleq%20%5Csum_%7Bd%20%5Cin%20D(n)%7D%20f(d)%20%5Cleq%20%5Csum_%7Bi=1%7D%5E%7B%5Csqrt%20n%7D%20f(i)%20+%20f(%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor)%0A"></p>
</div>
</div>
</div>
</div>
<p>LHS 成立的关键在于 <img src="https://latex.codecogs.com/png.latex?%5C%7Bd:%20d%20%5Cmid%20n%5C%7D%20%5Csubset%20D(n)">；而 RHS 的本质就是上述对整除分块块数量上界的估计.</p>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>整除分块的 <img src="https://latex.codecogs.com/png.latex?O(%5Csqrt%20n)"> 相当满，而枚举因子的 <img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)%20%5Cin%20O(%5Csqrt%20n)"> 却相当不满．这一点在前面介绍 <img src="https://latex.codecogs.com/png.latex?%5Csigma_0(n)"> 时已经提到．</p>
</div>
<p>注意到 Proposition&nbsp;2 是 Example&nbsp;7 证明的核心，而 Proposition&nbsp;3 是 Proposition&nbsp;2 的加强版，故仿造 Example&nbsp;7 的证明，我们有</p>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-divissigma" class="theorem example">
<p><span class="theorem-title"><strong>Example 8</strong></span> 令 <img src="https://latex.codecogs.com/png.latex?%0AS_z(n)%20=%20%5Csum_%7Bd%20%5Cin%20D(n)%7D%20d%5Ez%0A"> 则前述 Example&nbsp;7 中 <img src="https://latex.codecogs.com/png.latex?%5Csigma_z(n)"> 的上界与渐进上界也同样适用于 <img src="https://latex.codecogs.com/png.latex?S_z(n)">.</p>
</div>
</div>
</div>
</div>
<p>现在可以对嵌套整除分块 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5En%20f(i)%20%5Csum_%7Bj=1%7D%5E%7B%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%7D%20g(j)%20h(%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bij%7D%20%5Cright%5Crfloor)%0A"> 的时间复杂度 <img src="https://latex.codecogs.com/png.latex?T_2"> 做出估计了. 对 Example&nbsp;8 取 <img src="https://latex.codecogs.com/png.latex?z=%5Cfrac%201%202">，立刻有 <img src="https://latex.codecogs.com/png.latex?%0AT_2(n)%20=%20%5Csum_%7Bd%20%5Cin%20D(n)%7D%20T_1(d)%20%5Cleq%202%20%5Csum_%7Bd%20%5Cin%20D(n)%7D%20%5Csqrt%20d%20=%202%20S_%7B%5Cfrac%201%202%7D(n)%20%5Cleq%204%20%5Csqrt%20n%20P_%7B%5Cfrac%201%202%7D(%5Csqrt%20n)%20%5Cin%20O(n%5E%7B%5Cfrac%203%204%7D)%0A"></p>
<p>我们还可以进一步归纳. 假定 <img src="https://latex.codecogs.com/png.latex?%5Cforall%20m%20%5Cgeq%200,%20%5Cquad%20%5Cexists%20z_m%20:%200%20%5Cleq%20z_m%20%3C%201,%20%5Cquad%20T_m(n)%20=%20O(n%5E%7Bz_m%7D)">，我们有 <img src="https://latex.codecogs.com/png.latex?%0AT_%7Bm+1%7D(n)%20=%20%5Csum_%7Bd%20%5Cin%20D(n)%7D%20T_m(d)%20%5Cleq%20C%20%5Csum_%7Bd%20%5Cin%20D(n)%7D%20n%5E%7Bz_m%7D%20=%20C%20S_%7Bz_m%7D(n)%20%5Cin%20O(n%5E%7B%5Cfrac%20%7B1+z_m%7D%202%7D)%0A"> 因此 <img src="https://latex.codecogs.com/png.latex?z_%7Bm+1%7D%20=%20%5Cfrac%20%7B1+z_m%7D%202">. 边界条件 <img src="https://latex.codecogs.com/png.latex?z_0%20=%200">，数列递推求得 <img src="https://latex.codecogs.com/png.latex?z_m%20=%201-2%5E%7B-m%7D">，检验满足条件. 因此 <img src="https://latex.codecogs.com/png.latex?m"> 重嵌套整除分块的时间复杂度 <img src="https://latex.codecogs.com/png.latex?%0AT_m(n)%20%5Cin%20O(n%5E%7B1-%202%5E%7B-m%7D%7D)%0A"></p>
</section>
</section>
<section id="杜教筛" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="杜教筛"><span class="header-section-number">3</span> 杜教筛</h2>
<p>杜教筛可以以低于线性的时间复杂度求解某些数论函数的前缀和. 其思路并不复杂. 设 <img src="https://latex.codecogs.com/png.latex?f"> 为一数论函数，我们希望快速求得其前缀和 <img src="https://latex.codecogs.com/png.latex?%5Chat%20f%20(n)%20=%20%5Csum_%7Bi=1%7D%5En%20f(i)">. 考虑数论函数 <img src="https://latex.codecogs.com/png.latex?g"> 和 <img src="https://latex.codecogs.com/png.latex?h%20=%20g%20*%20f">， <img src="https://latex.codecogs.com/png.latex?%0Ah(n)%20=%20%5Csum_%7Bd%20%5Cmid%20n%7D%20g(d)%20f(%5Cfrac%20n%20d)%0A"> 两端做前缀和得 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Chat%20h%20(n)%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20h(i)%20%5C%5C%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bd%20%5Cmid%20i%7D%20g(d)%20f(%5Cfrac%20i%20d)%20%5C%5C%0A&amp;=%20%5Csum_%7Bd=1%7D%5En%20g(d)%20%5Csum_%7Bi=1%7D%5E%7B%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%7D%20f(i)%20%5C%5C%0A&amp;=%20%5Csum_%7Bd=1%7D%5En%20g(d)%20%5Chat%20f%20(%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor)%20%5C%5C%0A&amp;=%20g(1)%20%5Chat%20f%20(n)%20+%20%5Csum_%7Bd=2%7D%5En%20g(d)%20%5Chat%20f%20(%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor)%0A%5Cend%7Baligned%7D%0A"> 因此 <img src="https://latex.codecogs.com/png.latex?%0A%5Chat%20f%20(n)%20=%20%5Cfrac%201%20%7Bg(1)%7D%20%5Cleft(%20%5Chat%20h%20(n)%20-%20%5Csum_%7Bd=2%7D%5En%20g(d)%20%5Chat%20f%20(%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor)%20%5Cright)%0A"> 故若 <img src="https://latex.codecogs.com/png.latex?g">、<img src="https://latex.codecogs.com/png.latex?h"> 的前缀和可 <img src="https://latex.codecogs.com/png.latex?O(1)"> 算得，根据上式整除分块即可递归地计算出 <img src="https://latex.codecogs.com/png.latex?f"> 的前缀和.</p>
<p>下面分析算法的复杂度. 注意到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5Clfloor%20%5Cfrac%7B%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%7D%7Bj%7D%20%5Cright%5Crfloor%20=%20%5Cleft%5Clfloor%20%5Cfrac%7Bn%7D%7Bij%7D%20%5Cright%5Crfloor%0A"> 故单轮递归涉及到的自变量均可表示为 <img src="https://latex.codecogs.com/png.latex?d%20=%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor"> 的形式. 一个 <img src="https://latex.codecogs.com/png.latex?%5Chat%20f%20(d)"> 做整除分块耗时 <img src="https://latex.codecogs.com/png.latex?T_1(d)">，若采用记忆化递归，由上节分析，算法总时间复杂度为 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bd%20%5Cin%20D(n)%7D%20T_1(d)%20=%20T_2(n)%20%5Cin%20O(n%5E%7B%5Cfrac%203%204%7D)%0A"></p>
<p>但我们还可以做得更好——考虑先用 <img src="https://latex.codecogs.com/png.latex?O(K)"> 的时间复杂度线性筛出前 <img src="https://latex.codecogs.com/png.latex?K"> 个 <img src="https://latex.codecogs.com/png.latex?f(n)"> 并求前缀和，则递归求解时，<img src="https://latex.codecogs.com/png.latex?d%20%5Cleq%20K"> 的 <img src="https://latex.codecogs.com/png.latex?%5Chat%20f(d)"> 就无需再向下递归了. 为分析此类时间复杂度，对 Proposition&nbsp;3 做最后一点扩展：</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-trick3ex" class="theorem proposition">
<p><span class="theorem-title"><strong>Proposition 4</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7B%5Cbegin%7Bgathered%7D%20d%20%5Cmid%20n%20%5C%5C%20d%20%3E%20K%20%5Cend%7Bgathered%7D%7D%20f(d)%20%5Cleq%20%5Csum_%7B%5Cbegin%7Bgathered%7D%20d%20%5Cin%20D(n)%20%5C%5C%20d%20%3E%20K%20%5Cend%7Bgathered%7D%7D%20f(d)%20%5Cleq%20%5Csum_%7BK%20%3C%20i%20%5Cleq%20%5Csqrt%20n%7D%20f(i)%20+%20%5Csum_%7B1%20%5Cleq%20i%20%5Cleq%20%5Cmin%7B%5C%7B%20%5Cleft%5Clfloor%20%5Cfrac%20n%20K%20%5Cright%5Crfloor,%5Csqrt%20n%20%5C%7D%20%7D%7D%20f(%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor)%0A"> 特别的，当 <img src="https://latex.codecogs.com/png.latex?K%20%3E%20%5Csqrt%20n"> 时，有 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7B%5Cbegin%7Bgathered%7D%20d%20%5Cmid%20n%20%5C%5C%20d%20%3E%20K%20%5Cend%7Bgathered%7D%7D%20f(d)%20%5Cleq%20%5Csum_%7B%5Cbegin%7Bgathered%7D%20d%20%5Cin%20D(n)%20%5C%5C%20d%20%3E%20K%20%5Cend%7Bgathered%7D%7D%20f(d)%20%5Cleq%20%5Csum_%7B1%20%5Cleq%20i%20%5Cleq%20%5Cleft%5Clfloor%20%5Cfrac%20n%20K%20%5Cright%5Crfloor%7D%20f(%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor)%0A"></p>
</div>
</div>
</div>
</div>
<p>利用此估计，当 <img src="https://latex.codecogs.com/png.latex?K%20%3E%20%5Csqrt%20n"> 时，算法在递归部分的时间复杂度估计降低为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cmathrm%7BDu%7D_K(n)%20&amp;=%0A%5Csum_%7B%5Cbegin%7Bgathered%7D%20d%20%5Cin%20D(n)%20%5C%5C%20d%20%3E%20K%20%5Cend%7Bgathered%7D%7D%20T_1(d)%20%5C%5C%0A&amp;=%20%5Csum_%7B1%20%5Cleq%20i%20%5Cleq%20%5Cleft%5Clfloor%20%5Cfrac%20n%20K%20%5Cright%5Crfloor%7D%20T_1(%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor)%20%5C%5C%0A&amp;%5Cleq%20%5Csum_%7B1%20%5Cleq%20i%20%5Cleq%20%5Cleft%5Clfloor%20%5Cfrac%20n%20K%20%5Cright%5Crfloor%7D%20C%20%5Csqrt%7B%5Cfrac%20n%20i%7D%20%5C%5C%0A&amp;=%20C%20%5Csqrt%20n%20%5Csum_%7B1%20%5Cleq%20i%20%5Cleq%20%5Cleft%5Clfloor%20%5Cfrac%20n%20K%20%5Cright%5Crfloor%7D%20i%5E%7B-%5Cfrac%201%202%7D%20%5C%5C%0A&amp;=%20%20C%20%5Csqrt%20n%20P_%7B%5Cfrac%201%202%7D%5Cleft(%5Cleft%5Clfloor%20%5Cfrac%20n%20K%20%5Cright%5Crfloor%5Cright)%20%5C%5C%0A&amp;%5Cin%20%5Csqrt%20n%20O%5Cleft(%20%5Cleft(%5Cfrac%20n%20K%5Cright)%5E%7B%5Cfrac%201%202%7D%20%5Cright)%20%5C%5C%0A&amp;%5Csubset%20O(n%20K%5E%7B-%5Cfrac%201%202%7D)%0A%5Cend%7Baligned%7D%0A"> 总时间复杂度 <img src="https://latex.codecogs.com/png.latex?%0AO(K)%20+%20O(n%20K%5E%7B-%5Cfrac%201%202%7D)%0A"> 为最小化时间复杂度，取 <img src="https://latex.codecogs.com/png.latex?K%20=%20n%5E%7B%5Cfrac%202%203%7D">，即得最优时间复杂度 <img src="https://latex.codecogs.com/png.latex?O(n%5E%7B%5Cfrac%202%203%7D)">.</p>
<p>这部分的时间复杂度证明主要参考了文章 <span class="citation" data-cites="zhihu_dusieve">[11]</span>.</p>
</section>
<section id="challenge" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="challenge"><span class="header-section-number">4</span> Challenge</h2>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-nonsquare" class="theorem example">
<p><span class="theorem-title"><strong>Example 9</strong></span> 对 <img src="https://latex.codecogs.com/png.latex?1"> 到 <img src="https://latex.codecogs.com/png.latex?n"> 间的无平方因子数计数. <img src="https://latex.codecogs.com/png.latex?n%20%5Cleq%2010%5E%7B18%7D">.</p>
<p>参见蓝桥杯 2023 省赛 A 组 J 题《翻转硬币》<span class="citation" data-cites="nonsquare1_luogu">[12]</span> 或《完全平方数》<span class="citation" data-cites="nonsquare2_luogu">[13]</span>.</p>
</div>
</div>
</div>
</div>
<p>我们指出，无平方因子数有如下计数公式 <img src="https://latex.codecogs.com/png.latex?%0Af(n)%20=%20%5Csum_%7Bi=1%7D%5En%20%5Cmu%5E2%20(i)%20=%20%5Csum_%7Bi=1%7D%5E%7B%5Cleft%5Clfloor%20%5Csqrt%20n%20%5Cright%5Crfloor%7D%20%5Cmu(i)%20%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bi%5E2%7D%20%5Cright%5Crfloor%0A"></p>
<p>朴素实现复杂度为 <img src="https://latex.codecogs.com/png.latex?O(%5Csqrt%20n)">，考虑对 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bi%5E2%7D%20%5Cright%5Crfloor"> 开发一种新的整除分块算法. 现在问题有三. 一是估计 <img src="https://latex.codecogs.com/png.latex?%0A%5C#%20D_2(n)%20=%20%5C#%20%5Cleft%5C%7B%20%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bi%5E2%7D%20%5Cright%5Crfloor%20%5Cright%5C%7D_%7Bi=1%7D%5E%7B%5Csqrt%20n%7D%0A"> 这并不困难，按 <img src="https://latex.codecogs.com/png.latex?i%20%5Cleq%20n%5E%7B%5Cfrac%201%203%7D"> 和 <img src="https://latex.codecogs.com/png.latex?i%20%5Cgeq%20n%5E%7B%5Cfrac%201%203%7D"> 讨论即知其上界为 <img src="https://latex.codecogs.com/png.latex?O(n%5E%7B%5Cfrac%201%203%7D)">.</p>
<p>二是实现方案. 这里也直接给出：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1">ll sqrtN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-2">ll ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span>sqrtN<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb1-4">    d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sqrt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-5">    ans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=(</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)-</span>S_mu<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))*</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>最后是算法时间复杂度分析. 普通的 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5Clfloor%20%20%5Cfrac%20n%20i%20%5Cright%5Crfloor"> 整除分块不会因杜教筛增加时间复杂度，但 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5Clfloor%20%20%5Cfrac%20n%20%7Bi%5E2%7D%20%5Cright%5Crfloor"> 则需要额外的讨论. 注意到该整除分块枚举中，需做杜教筛的数的集合为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%5C%7B%20%5Cleft%5Clfloor%20%20%5Cleft(%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%20%5Cright)%5E%7B%5Cfrac%201%202%7D%20%20%5Cright%5Crfloor%5Cright%5C%7D_%7Bd%20%5Cin%20D_2%20(n)%7D%0A"> 同样类似 Proposition&nbsp;3 ，我们有</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="prp-trick4ex" class="theorem proposition">
<p><span class="theorem-title"><strong>Proposition 5</strong></span> <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bd%5E2%20%5Cmid%20n%7D%20f(%5Cfrac%20n%20%7Bd%5E2%7D)%20%5Cleq%20%5Csum_%7Bd%20%5Cin%20D_2(n)%7D%20f(d)%20%5Cleq%20%5Csum_%7Bi=1%7D%5E%7Bn%5E%7B%5Cfrac%201%203%7D%7D%20f(i)%20+%20f(%5Cleft%5Clfloor%20%5Cfrac%20n%20%7Bi%5E2%7D%20%5Cright%5Crfloor)%0A"></p>
</div>
</div>
</div>
</div>
<p>因此算法递归部分时间复杂度可估计为 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum_%7Bd%20%5Cin%20D_2%20(n)%7D%20%5Cmathrm%7BDu%7D_K%20%5Cleft(%5Cleft%5Clfloor%20%5Cleft(%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%20%5Cright)%5E%7B%5Cfrac%201%202%7D%20%5Cright%5Crfloor%5Cright)%0A&amp;%5Cleq%20%5Csum_%7Bd%20%5Cin%20D_2%20(n)%7D%20C%20%5Cleft%5Clfloor%20%5Cleft(%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%20%5Cright)%5E%7B%5Cfrac%201%202%7D%20%5Cright%5Crfloor%20K%5E%7B-%5Cfrac%201%202%7D%20%5C%5C%0A&amp;%5Cleq%20C%20K%5E%7B-%5Cfrac%201%202%7D%20%5Cleft(%20%5Csum_%7Bi=1%7D%5E%7Bn%5E%7B%5Cfrac%201%203%7D%7D%20%5Cleft(%20%5Cfrac%20n%20%7B%5Cfrac%20n%20%7Bi%5E2%7D%7D%20%5Cright)%5E%7B%5Cfrac%201%202%7D%20+%20%5Csum_%7Bi=1%7D%5E%7Bn%5E%7B%5Cfrac%201%203%7D%7D%20%5Cleft(%20%5Cfrac%20n%20i%20%5Cright)%5E%7B%5Cfrac%201%202%7D%20%5Cright)%20%5C%5C%0A&amp;=%20C%20K%5E%7B-%5Cfrac%201%202%7D%20%5Cleft(%20%5Csum_%7Bi=1%7D%5E%7Bn%5E%7B%5Cfrac%201%203%7D%7D%20i%20+%20n%5E%7B%5Cfrac%201%202%7D%20%5Csum_%7Bi=1%7D%5E%7Bn%5E%7B%5Cfrac%201%203%7D%7D%20i%5E%7B-%5Cfrac%201%202%7D%20%5Cright)%20%5C%5C%0A&amp;%5Cin%20K%5E%7B-%5Cfrac%201%202%7D%20%5Cleft(%20O(n%5E%7B%5Cfrac%202%203%7D)%20+%20n%5E%7B%5Cfrac%201%202%7D%20O(n%5E%7B%5Cfrac%201%206%7D)%20%5Cright)%20%5C%5C%0A&amp;%5Csubset%20O(n%5E%7B%5Cfrac%202%203%7D%20K%5E%7B-%5Cfrac%201%202%7D)%0A%5Cend%7Baligned%7D%0A"> 总时间复杂度为 <img src="https://latex.codecogs.com/png.latex?%0AO(K)%20+%20O(n%5E%7B%5Cfrac%202%203%7D%20K%5E%7B-%5Cfrac%201%202%7D)%0A"> 取 <img src="https://latex.codecogs.com/png.latex?K=n%5E%7B%5Cfrac%204%209%7D">，得到最优时间复杂度 <img src="https://latex.codecogs.com/png.latex?O(n%5E%7B%5Cfrac%204%209%7D)">. 代入 <img src="https://latex.codecogs.com/png.latex?n%20=%2010%5E%7B18%7D">，量级约为 <img src="https://latex.codecogs.com/png.latex?10%5E8">.</p>
<p>这估计并不算优秀. 传言存在 <img src="https://latex.codecogs.com/png.latex?O(n%5E%7B%5Cfrac%202%205%7D)"> 的估计，猜测大概优化了 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5C%7B%20%5Cleft%5Clfloor%20%5Cfrac%20n%20i%20%5Cright%5Crfloor%20%5Cright%5C%7D_%7Bi=1%7D%5En"> 和 <img src="https://latex.codecogs.com/png.latex?%5Cleft%5C%7B%20%5Cleft%5Clfloor%20%20%5Cleft(%20%5Cleft%5Clfloor%20%5Cfrac%20n%20d%20%5Cright%5Crfloor%20%5Cright)%5E%7B%5Cfrac%201%202%7D%20%20%5Cright%5Crfloor%5Cright%5C%7D_%7Bd%20%5Cin%20D_2%20(n)%7D"> 的重叠部分．关于这一估计，我们找到两篇参考文献，请参阅博客 <span class="citation" data-cites="nonsquare_blog">[14]</span> 和论文 <span class="citation" data-cites="nonsquare_paper">[15]</span>．</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-wikipedia_abuse" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline"><span>“Abuse of notation - wikipedia.”</span> <a href="https://en.wikipedia.org/wiki/Abuse_of_notation#Function_notation" class="uri">https://en.wikipedia.org/wiki/Abuse_of_notation#Function_notation</a>.</div>
</div>
<div id="ref-concretemath_onotation" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">R. L. Graham, D. E. Knuth, and O. Patashnik, <span>“Concrete mathematics: A foundation for computer science,”</span> Second.in A @foundation for computer science. Addison-Wesley, 1994, pp. 443–449.</div>
</div>
<div id="ref-asymptotic_wikipedia" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline"><span>“Big o notation - wikipedia # family of bachmann–landau notations.”</span> <a href="https://en.wikipedia.org/wiki/Big_O_notation#Family_of_Bachmann%E2%80%93Landau_notations" class="uri">https://en.wikipedia.org/wiki/Big_O_notation#Family_of_Bachmann%E2%80%93Landau_notations</a>.</div>
</div>
<div id="ref-asymptotic_oiwiki" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline"><span>“复杂度 - OI wiki.”</span> <a href="https://oi-wiki.org/basic/complexity/#%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%AE%9A%E4%B9%89" class="uri">https://oi-wiki.org/basic/complexity/#%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%AE%9A%E4%B9%89</a>.</div>
</div>
<div id="ref-knuth_omicron" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">D. E. Knuth, <span>“Big omicron and big omega and big theta,”</span> <em>SIGACT News</em>, vol. 8, no. 2, pp. 18–24, Apr. 1976, doi: <a href="https://doi.org/10.1145/1008328.1008329">10.1145/1008328.1008329</a>.</div>
</div>
<div id="ref-concretemath_calculus" class="csl-entry">
<div class="csl-left-margin">[6] </div><div class="csl-right-inline">R. L. Graham, D. E. Knuth, and O. Patashnik, <span>“Concrete mathematics: A foundation for computer science,”</span> Second.in A @foundation for computer science. Addison-Wesley, 1994, pp. 47–56.</div>
</div>
<div id="ref-wikipedia_divisor" class="csl-entry">
<div class="csl-left-margin">[7] </div><div class="csl-right-inline"><span>“Divisor function - wikipedia # growth_rate.”</span> <a href="https://en.wikipedia.org/wiki/Divisor_function#Growth_rate" class="uri">https://en.wikipedia.org/wiki/Divisor_function#Growth_rate</a>.</div>
</div>
<div id="ref-gcdconv" class="csl-entry">
<div class="csl-left-margin">[8] </div><div class="csl-right-inline">sun123zxy, <span>“sun123zxy’s blog - 原创OI题目 GCD卷积 problem and solution.”</span> <a href="https://blog.sun123zxy.top/posts/20201206-gcdconv/" class="uri">https://blog.sun123zxy.top/posts/20201206-gcdconv/</a>, 2020.</div>
</div>
<div id="ref-polya_luogu" class="csl-entry">
<div class="csl-left-margin">[9] </div><div class="csl-right-inline"><span>“P4980 【模板】pólya 定理 - 洛谷 | 计算机科学教育新生态.”</span> <a href="https://www.luogu.com.cn/problem/P4980" class="uri">https://www.luogu.com.cn/problem/P4980</a>.</div>
</div>
<div id="ref-polya_my" class="csl-entry">
<div class="csl-left-margin">[10] </div><div class="csl-right-inline">sun123zxy, <span>“sun123zxy’s blog - 等价类计数：Burnside引理 &amp; Polya定理.”</span> <a href="http://blog.sun123zxy.top/posts/20200321-burnside/#s-4.3" class="uri">http://blog.sun123zxy.top/posts/20200321-burnside/#s-4.3</a>, 2020.</div>
</div>
<div id="ref-zhihu_dusieve" class="csl-entry">
<div class="csl-left-margin">[11] </div><div class="csl-right-inline">Ander, <span>“杜教筛.”</span> <a href="https://zhuanlan.zhihu.com/p/521699400" class="uri">https://zhuanlan.zhihu.com/p/521699400</a>, 2022.</div>
</div>
<div id="ref-nonsquare1_luogu" class="csl-entry">
<div class="csl-left-margin">[12] </div><div class="csl-right-inline"><span>“P9238 [蓝桥杯 2023 省 a] 翻转硬币 - 洛谷 | 计算机科学教育新生态.”</span> <a href="https://www.luogu.com.cn/problem/P9238" class="uri">https://www.luogu.com.cn/problem/P9238</a>.</div>
</div>
<div id="ref-nonsquare2_luogu" class="csl-entry">
<div class="csl-left-margin">[13] </div><div class="csl-right-inline"><span>“P4318 完全平方数 - 洛谷 | 计算机科学教育新生态.”</span> <a href="https://www.luogu.com.cn/problem/P4318" class="uri">https://www.luogu.com.cn/problem/P4318</a>.</div>
</div>
<div id="ref-nonsquare_blog" class="csl-entry">
<div class="csl-left-margin">[14] </div><div class="csl-right-inline">smsxgz, <span>“Counting square free numbers.”</span> <a href="https://smsxgz.github.io/post/pe/counting_square_free_numbers/" class="uri">https://smsxgz.github.io/post/pe/counting_square_free_numbers/</a>, 2019.</div>
</div>
<div id="ref-nonsquare_paper" class="csl-entry">
<div class="csl-left-margin">[15] </div><div class="csl-right-inline">J. Pawlewicz, <span>“Counting square-free numbers.”</span> 2011. Available: <a href="https://arxiv.org/abs/1107.4890">https://arxiv.org/abs/1107.4890</a></div>
</div>
</div></section></div> ]]></description>
  <category>OI</category>
  <category>数学</category>
  <guid>https://blog.sun123zxy.top/posts/20230418-complexity/</guid>
  <pubDate>Mon, 17 Apr 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>国家博物馆兼东单良乡骑行一日游</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230306-national-museum-tour/</link>
  <description><![CDATA[ 




<p>“来北京，当然要逛逛啊！”嘴上这么说，充实的学习生活却总能带来无数个宅在宿舍的理由。恰逢本学期思政课需亿点社会实践，国家博物馆乃官方推荐之所，而东可游长安街、王府井，南可观东交民巷，完成任务而了却游园之心，岂不美哉？虽开学未几，春景未至，然天气渐暖，今日不去，更待何时？不妨早做打算。遂与室友相约，周日出游。</p>
<p>乘地铁至天安门东，一路罚站。当然毕竟是淡季，车上并不拥挤。惊奇地发现一号线已非昔日模样：站台已加装护栏，而列车的内饰也早已翻新。</p>
<p>例行排队安检，上至天安门广场东侧。国家博物馆就在眼前，隔天安门广场与人民大会堂遥相呼应。馆子很大，上上下下一共六层，尚分南北两区，一整天或许也很难逛完，故我们只选取少量展馆参观。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230306-national-museum-tour/img/col-museum-outside.jpg" class="img-fluid figure-img"></p>
<figcaption>博物馆外侧</figcaption>
</figure>
</div>
<p>展览当然是相当不错的，但具体说来却没啥好写。博物馆这种地方，始终还是得自己去看。常设的《复兴之路》展区是标准的《中国近现代史纲要》，最近也新开了新时代展区，但我们去的时候……空无一人……（逃）</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230306-national-museum-tour/img/museum-exhibits.jpg" class="img-fluid figure-img"></p>
<figcaption>神州十三号返回舱（左）；复兴之路“新时代”展厅（右）</figcaption>
</figure>
</div>
<p>总之，逛逛逛拍拍拍，出来已经一点半了。讨论一下，准备往东单走找地儿吃饭。走在东长安街的人行道上，公安部、生态环境部、<del>长安俱乐部</del>滚滚而来，赫赫有名的北京饭店也映入眼帘。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230306-national-museum-tour/img/beijing-hotel.jpg" class="img-fluid figure-img"></p>
<figcaption>挺敦实一栋楼</figcaption>
</figure>
</div>
<p>王府井的人气似乎已经恢复了八成。我们并无兴致逛街，草草填饱肚子，往南向东交民巷前进。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230306-national-museum-tour/img/wangfujing.jpg" class="img-fluid figure-img"></p>
<figcaption>王府井步行街</figcaption>
</figure>
</div>
<p>比起嘈杂的天安门广场，东交民巷可谓意外的宁静。从东侧进入东交民巷，街上行人三三两两，似乎都是本地居民。往东前进，法国邮政局、西班牙领事馆等欧式建筑在街边排列，但均未开放游览，亦无游客驻足。灰黑色的砖瓦在紧闭的大门后默默不语，枯树残影的映衬下略显凄凉。教堂倒是小有人气，时有新人在此拍摄婚纱。行至天安门广场前最后一个路口，有警卫把守，似乎已不得入内。查看地图，前面已是公安局地界。也许得从天安门广场方向步行进入才可进一步游览吧。（事后调查，不少使馆的入口其实在前门大街一侧，许多建筑也已商业运行，除外观保持原样外，已无太多历史可寻。）</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230306-national-museum-tour/img/church.jpg" class="img-fluid figure-img"></p>
<figcaption>东交民巷的教堂</figcaption>
</figure>
</div>
<p>室友突然提议骑回良乡——英雄所见略同啊（笑）。从学校骑至主城一直是我的计划之一，现在离天黑尚有三四小时光景，晚 7:00 之前骑回学校并无不可。已有一室友因事先行离开，另一位室友苦于舟车劳顿，计划地铁回程。于是和提议的室友开启了近 40km 的骑行之旅。</p>
<p>已在东交民巷南边，我们没有选择卢沟桥路线，而是往京良路方向前进。二环可不小，出了前门公园，在狭窄的胡同间穿行，不一会就有点小累了。室友事后表示他没意识到 40km 的严重性（</p>
<p>渐行至三、四环外。偶然拐离干道，驶入普通道路。路上房屋低矮，矮墙垛垛，货车辆辆，尘土飞扬，加之今日有霾，揉眼一看，好似来到某西部偏远地区的乡间小路上。偌大的北京城也有如此“土里土气”的地方……之前在房山线上看到的壮美秋景，似乎也不在本次路线之上。况且春天尚未到来，即使经过也别无二致吧。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20230306-national-museum-tour/img/col-riding.jpg" class="img-fluid figure-img"></p>
<figcaption>胡同、“乡道”与分界处</figcaption>
</figure>
</div>
<p>至京良路。室友体力已下降不少，速度逐渐放缓。然而调高座椅、换用前脚掌蹬车的我似乎还能一战。<del>室友表示你个山区居民怎么这么能蹬，</del>虽然中途因未知原因迷路多绕出几公里的路程，最终还是在 7:00 之前赶回了学校。</p>
<p>买了面包和咖啡匆匆赶去参加组会，坐下的瞬间，突然感觉如断电般困倦……</p>



 ]]></description>
  <category>游记</category>
  <guid>https://blog.sun123zxy.top/posts/20230306-national-museum-tour/</guid>
  <pubDate>Sun, 05 Mar 2023 16:00:00 GMT</pubDate>
  <media:content url="https://blog.sun123zxy.top/posts/20230306-national-museum-tour/img/wangfujing.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>聊聊红石音乐</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230217-rmg/</link>
  <description><![CDATA[ 




<p>咕极必肝，肝极必咕。</p>
<p>本来是打算做完 Ancient Temple 和视频一起发出的，但现在看到这篇文章，说明下文随想里立下的 flag 已经被打脸了（</p>
<p>咕的原因，一方面是因为现实生活太过充实有趣，即使红乐般的激昂也有黯淡之时；但更重要的，还是对第二次迭代的表现效果不满意。模子是 Foxtail Grass Studio 的专辑封面和《妖妖剑戟梦想》的白玉楼阶梯，但始终没能做出想要的效果。更好的想法？暂时也没有。</p>
<p>半途而废很可惜，但糟蹋更可惜。或许暂时搁置、静待花开，会有更好的结果。</p>
<p>写下随想与技术细节，封存于冷清的博客，是纪念，还是重启的依托？</p>
<blockquote class="blockquote">
<p>东方的天空微微露出青白色的天光，幻想乡迎来了又一个清晨。</p>
<p>很快，太阳就会出现，将光芒洒满这片遗忘之地。</p>
<p>尽管，那片原野已然如幻梦般消失不见——</p>
<p>但，在看不见的隐秘角落，无数的原野正在悄然生长——</p>
<p>这里也是，那里也是</p>
<p>——如同小小的光芒。</p>
<p>——<a href="https://www.bilibili.com/read/cv11907285">东方莳梦原～Champaign of Unfinished Dreams</a> by 秋ノ宮飛鳥</p>
</blockquote>
<section id="一点随想" class="level2">
<h2 class="anchored" data-anchor-id="一点随想">一点随想</h2>
<p>2022 年 8 月 17 日夜，Ancient Temple 完成过半，月色入户，欣然开摆。</p>
<p>对，今天又是 8 月 17 日，是妖妖梦、风神录的发售日，<del>也是某个枪毙节</del>，还是某个新博客启用的周年纪念日——我又来写随想了。</p>
<p>18 年华灯宴 1U_s 大佬一曲<a href="https://b23.tv/FwrlLWL">十七岁</a>把我拉入红石音乐的大坑，到现在也有 4 年多了。随便聊聊感想，谈谈技术和非技术的各种话题。</p>
<p>我玩红乐，或许“科技靠考古的自闭造轮手”是个不错的形容。不加红石群、不更新版本，没人带没人陪，Google + Minecraft Wiki 在手，自己瞎倒腾，其他看造化。风格是 18 年的远古遗风——realpiano + 命令方块 + WorldEdit 的前进式、贪吃蛇式、下落式红石音乐大行其道的年头。到后来，特效红石音乐开始流行，但我心中的红乐早已定型。</p>
<p>我喜欢那个年代红石音乐特有的那种风格，那种朴素，但红石音乐完美融入场景的感觉。当年东方各作红石音乐全曲中就可见一斑——跟随红石信号一步步向前，如同听着 BGM 驾驶自机飞翔于道中，看版面缓缓向前伸展——STG 原作与 Minecraft 的奇妙融合让我着迷。我想做这样的红石音乐，我想做这样能化出心中幻想的红石音乐。</p>
<p>想做？音乐你懂吗？建筑你会吗？</p>
<p>不会，但可以学！</p>
<p>那你还会什么？</p>
<p>我是 OIer！我会编程！</p>
<p>这就是后来近三年红乐自动化尝试的开端。倒也开始稍微认真点的学习 MIDI、乐理以及其他各种各样的东西。</p>
<p>时间来到 20 年暑假。当时正好在玩 Python，偶然一搜，找到了 Raspberry Jam Mod 和 <a href="https://github.com/mido/mido">mido</a>——前者把 <a href="https://www.minecraft.net/en-us/edition/pi" class="uri">https://www.minecraft.net/en-us/edition/pi</a> 的 Python API 移植到 Java 版，后者提供在 Python 中处理 MIDI 文件的方法。</p>
<p>诶，这就不可以开工了吗！</p>
<p>肝能量发动，写了第一个能跑起来的脚本，随便丢了个正在做的第三版 Ancient Temple 进去听听——哎哟挺不错啊！</p>
<p>生产力工具上线，整活得以开始。要说最想做的，那一定是妖妖梦五面道中。对，就是 《东方妖妖梦 ~ Ancient Temple》。如 ZUN 所说，那是使古老寺院的空气突然升温的曲子。樱花上飘，楼观斩下……那是原作带来的难以忘怀的幻想。</p>
<p>但当时的我，没打算做，或者说有点不敢做。一方面，当然是 1U_s 大大的<a href="https://www.bilibili.com/video/BV1Gs411i7K9">妖妖梦红乐曲集</a>实在精彩，随手制作的五面道中已足以满足我自娱自乐的需求；二来也是对自己实力不太自信，怕做出自己也不太喜欢的作品。但 1U 的曲集毕竟是手工打造，两条音轨虽然意境极佳，但与原曲相比确也是捉襟见肘，而我手中的自动化可以极大程度地减轻工作量（虽然造轮子的过程没少花时间 (lll￢ω￢)）</p>
<p>所以到头来还是想做——或者下次一定？</p>
<p>那这次造啥呢？</p>
<p>余光瞄到刚退坑不久的 Dancing Line——说是舞线，其实脑子里全是 Through the Fog 的场景。回去重打 TTF 风暴的时候，听着 90% 后疯狂的雷声，突然想到 Minecraft 可以 <code>/weather rain</code> 可以 <code>/summon lightning_bolt</code>，加之场景想要偷懒的话搞个单层水世界就行，倒是试水的不错选择。</p>
<p>于是就开始试着扒谱。暑假结束，MIDI 是写好了，人却咕起来了。一咕就咕到了后一年的四月，忍不住了，爆肝三个周末整出来了。这个明显还是有很多问题的，首先曲子扒得就不太好，而且灯光一直到最后一小段才加上，另外前面下雨那段也太黑了。Sildur’s Vibrant Shader 的黑雷电问题也没解决，加上当时电脑太菜，Replaymod 录制还是挺难受的（不过预览模式倒是意外的贡献了个封面 XD），当然凑合能看。</p>
<p>后来就又到暑假了，打算一口气把 RMG 这个烂摊子写好，于是大刀阔斧的重构了，命名为 <a href="https://github.com/sun123zxy/redstone-music-generator">redstone-music-generator</a>，甚至还写了文档发了 Github，收获人生首 star &amp; issue（</p>
<p>或许是为了尝试 observer 的设计模式，亦或是太重视轮子的易用性，代码比较臃肿，过了几个月发现自己也很难看懂了。</p>
<p>其实写脚本主要还是给自己创作使用啊，没必要考虑太多“别人的需求”。</p>
<p>反思的结果就是新版的 redstone-music-generator 了，现暂存于原版本的 <code>develop</code> 分支下。这个版本再次重构，学习了某些命令行软件的做法，配置参数从之前在各个组件上的零散分布变为了单一配置文件的集中分布，显然提高了效率。</p>
<p>Ancient Temple 的 MIDI 也已经做到第五版了，这次以红乐的标准，大幅参考原曲 MIDI，期望能尽力还原出原作的表现。</p>
<p>鼓起勇气脱离咕海的动力来源，还是喜欢这曲子吧。说到底还是想把它做了再养老。</p>
<p>说起来，红石音乐到底应该怎样定义呢？之前 WorldEdit 的使用就已经引发过争议，那自动化搭建到底是红是黑？而在发声方面，是坚持音符盒的原教旨主义，还是命令方块的改良革新，甚至是更激进的 Midiout？</p>
<blockquote class="blockquote">
<p>up辛苦了，工作量能看出来。</p>
<p>但是原谅我还是很难接受这种从mc映射到外部midi播放器的格式。我觉得这并不能称作红石音乐，因为不是在mc内部完成播放的。</p>
<p>不过，用资源包和用接口，也不过只是内部调用和外部调用的区别罢了，也说不清…这是个哲学层次的问题。</p>
<p>红石音乐最后到底会变成什么样我也不知道，而且这种发展的方向和趋势我也没办法也没有理由去阻止。</p>
<p>我大概是，跟不上时代了吧…</p>
<p>——<a href="https://www.bilibili.com/video/BV1oW411a7eJ">【黑石音乐】aLIEz【接近完美的还原】_哔哩哔哩_bilibili</a> 下 <a href="https://space.bilibili.com/32262433">NJune六月</a> 的评论</p>
</blockquote>
<p>或许每个人心中的红乐标准都有所不同……或许我们只能求同存异，力求百花齐放，不要走火入魔。但最近粒子特效红石音乐的发展又让我感到困惑——一点红石、音符盒甚至命令方块都不出现，真的算红乐吗？那些炫酷的粒子特效，真的属于 Minecraft 吗？</p>
<p>只能交给时间回答了。我想，我能保证的，只是一颗全心投入、宁缺毋滥的创作心态；而我应该做的，是继续完成手头的作品。</p>
</section>
<section id="mc-指令相关" class="level2">
<h2 class="anchored" data-anchor-id="mc-指令相关">MC 指令相关</h2>
<section id="setblock-datavalue-block-state-and-data-tag-nbt" class="level3">
<h3 class="anchored" data-anchor-id="setblock-datavalue-block-state-and-data-tag-nbt">setblock, dataValue, block state and data tag (nbt)</h3>
<section id="扁平化前1.12-及以前" class="level4">
<h4 class="anchored" data-anchor-id="扁平化前1.12-及以前">扁平化前（1.12 及以前）</h4>
<p><code>setblock &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;block&gt; [dataValue|state] [oldBlockHandling] [dataTag]</code></p>
<p><code>dataValue</code> 和 <code>blockstate</code> 在扁平化之前是方块状态的两种不同描述方式，<code>dataValue</code> 是实际存储时使用的 4 bit 数据。通常，<code>blockstate</code> 或 <code>dataValue</code> 用来描述方块的一些基本性质，比如朝向 <code>facing</code>、羊毛的颜色 <code>color</code>、中继器的延迟刻数 <code>delay</code>。</p>
<p>具体写法例如：<code>/setblock ~ ~ ~1 minecraft:unpowered_repeater delay=4,facing=east</code> 设置一个延迟为 4 rt，面朝“东方”的红石中继器。（这里打上了引号，因为事实上<strong>红石中继器的 facing 代表的方向与信号传导的方向是相反的</strong>）</p>
<p>又，其效果等同于 <code>/setblock ~ ~ ~1 minecraft:unpowered_repeater 15</code>。（<code>dataValue = (delay - 1) * 4 + facing</code>，<code>facing=south|west|north|east</code> 分别对应 <code>0|1|2|3</code> 。默认值是 <code>north</code>）</p>
<p>再例如，<code>/setblock ~ ~ ~1 minecraft:command_block facing=down 0 {Command:"/time set 6000"}</code> 设置一个修改时间为正午的，面朝下方的命令方块。</p>
<p>中间的 <code>0</code> 是用来占位的。</p>
<p>查找某方块的 <code>dataValue</code> 和 <code>blockstate</code> 时可以翻阅 Minecraft Wiki 1.13 以前的历史版本（1.13 于 2018 年 6 月 18 日发布）</p>
</section>
<section id="扁平化后1.13-及以后" class="level4">
<h4 class="anchored" data-anchor-id="扁平化后1.13-及以后">扁平化后（1.13 及以后）</h4>
<p><code>setblock &lt;pos&gt; &lt;block&gt; [destroy|keep|replace]</code></p>
<p>其中 <code>&lt;block&gt;</code> 是 <code>block_state</code>， 具体的写法是 <code>namespaced_ID[block_states=value]{data_tags:value}</code></p>
<p>也就是说，原先的 <code>block</code>、<code>block_state</code> 和 <code>dataTag</code> 现在被统一整合入 <code>block_state</code> 里面，显然这更方便使用了。（然而作为考古学家，这好像也没法用上…）</p>
</section>
</section>
<section id="fallingsand-or-falling_block" class="level3">
<h3 class="anchored" data-anchor-id="fallingsand-or-falling_block">FallingSand or falling_block</h3>
<p>掉落方块实体。1.11 前它叫 <code>FallingSand</code>，1.11 及以后它叫 <code>falling_block</code>。</p>
<p>1.12 及以前可用 <code>/summon falling_block ~ ~ ~ {Block:minecraft:redstone_block,Time: 1}</code> 召唤掉落的红石块。Time 参数设置最长掉落时间，实际上会与 30 秒取最大值，但如果留空则会马上消失。</p>
<p>而 <code>/summon falling_block ~ ~ ~ {Block:"minecraft:wool", Data: 14, Time:1}</code> 可召唤掉落的红色羊毛。<code>Data</code> 标签自然与颜色对应了。</p>
<p>1.13 后由于扁平化更新了 <code>block_state</code> 的概念，指令格式变为 <code>/summon falling_block &lt;x&gt; &lt;y&gt; &lt;z&gt; {BlockState:{Name:&lt;Namespaced block ID&gt;,Properties:{&lt;blockstate_name&gt;:&lt;value&gt;}}}</code>。</p>
<p>参见：</p>
<ul>
<li><p><a href="https://minecraft.fandom.com/wiki/Falling_Block">Falling Block – Minecraft Wiki</a></p></li>
<li><p><a href="https://minecraft.fandom.com/wiki/Tutorials/Falling_blocks">Tutorials/Falling blocks – Minecraft Wiki</a></p></li>
<li><p><a href="https://minecraft.fandom.com/wiki/Tutorials/Command_NBT_tags#Entities">Tutorials/Command NBT tags – Minecraft Wiki</a></p></li>
</ul>
</section>
<section id="解决指令引号嵌套无法识别问题" class="level3">
<h3 class="anchored" data-anchor-id="解决指令引号嵌套无法识别问题">解决指令引号嵌套无法识别问题</h3>
<p>见 <a href="https://gaming.stackexchange.com/questions/246064/why-are-my-quotation-marks-causing-an-unexpected-token-error-with-this-command">minecraft java edition - Why are my quotation marks causing an “unexpected token” error with this command? - Arqade</a>，用 <code>\</code> 转义即可。</p>
</section>
</section>
<section id="mod资源包" class="level2">
<h2 class="anchored" data-anchor-id="mod资源包">mod、资源包</h2>
<p>注意此处提到的 mod 和资源包均只在其 1.12.2 对应版本下测试，不少功能在新版已经不需要 mod 了。</p>
<section id="worldedit" class="level3">
<h3 class="anchored" data-anchor-id="worldedit">WorldEdit</h3>
<p>建筑党老相识了，不细讲了，Google 一下你就知道。</p>
<ul>
<li><a href="https://worldedit.enginehub.org/en/latest/">WorldEdit Documentation</a></li>
</ul>
<p>用的多的命令 <code>copy</code>、<code>flip</code>、<code>rotate</code>、<code>paste</code>、<code>stack</code>、<code>set</code>、<code>replace</code>。当然还有最要命的 <code>undo</code> 啦（</p>
<p><code>schematic</code> 系列指令也很好用（用来偷建筑）（逃）</p>
</section>
<section id="voxelmap" class="level3">
<h3 class="anchored" data-anchor-id="voxelmap">VoxelMap</h3>
<p>常见的小地图，用来传送挺方便的。也不细讲了。</p>
</section>
<section id="tickratechanger" class="level3">
<h3 class="anchored" data-anchor-id="tickratechanger">TickrateChanger</h3>
<p><a href="https://www.curseforge.com/minecraft/mc-mods/tickratechanger">TickrateChanger - Mods - Minecraft - CurseForge</a></p>
<p>tickrate changer，就是字面意思嘛。改 tickrate 可以使游戏变快或变慢，从而实现精确调节 BPM。正常值 20。</p>
<p>但是有个挺烦的问题是调了过后声音的频率也随之改变了，这样音高就发生变化了…有大佬知道怎么办吗？</p>
</section>
<section id="colored-redstone" class="level3">
<h3 class="anchored" data-anchor-id="colored-redstone">Colored Redstone</h3>
<p><a href="https://www.curseforge.com/minecraft/mc-mods/colored-redstone">Colored Redstone - Mods - Minecraft - CurseForge</a></p>
<p>材质包编辑红石颜色失败后的替代品。具体细节有点忘了，只记得生成时 namespace 好像是 <code>coloredredstone:colored_redstone_block</code>，用 datavalue 来调颜色。（也忘了自己是怎么知道的了……好像是拆 jar 看的？）</p>
<p>顺序大概是这样：</p>
<p><img src="https://blog.sun123zxy.top/posts/20230217-rmg/colorful-redstone.jpg" class="img-fluid"></p>
</section>
<section id="invisiblights" class="level3">
<h3 class="anchored" data-anchor-id="invisiblights">InvisibLights</h3>
<p><a href="https://www.curseforge.com/minecraft/mc-mods/invisiblights">InvisibLights - Mods - Minecraft - CurseForge</a></p>
<p>材质包编辑发光材质失败后的替代品。字面义，作为隐形光源使用。</p>
</section>
<section id="realpiano-资源包" class="level3">
<h3 class="anchored" data-anchor-id="realpiano-资源包">realpiano 资源包</h3>
<p><a href="http://lkrb.net/blog/54.html">原出处</a>已挂，有个<a href="https://www.cr173.com/soft/277354.html">下载站</a>还有资源。</p>
<p>发声命令 <code>/execute @p ~ ~ ~ playsound lkrb.piano.p60fff voice @p ~ ~ ~"</code>，<code>C5 = 60</code>，音高 21 至 108，力度可选 <code>ppp,pp,p,mp,mf,f,ff,fff</code>。</p>
</section>
<section id="soma-资源包" class="level3">
<h3 class="anchored" data-anchor-id="soma-资源包">soma 资源包</h3>
<p>这个老强了，按 MIDI 音源标准制作的全套音色，长短音都有。</p>
<p>因为没怎么用就不细讲了。</p>
</section>
<section id="材质包编辑" class="level3">
<h3 class="anchored" data-anchor-id="材质包编辑">材质包编辑</h3>
<p>一开始是因为 SEUS v11.0 太黑看不清红石块，想找个方法让红石块自发光 。找了半天没找到的现成的，只好现学现做。</p>
<p>关于如何获取作为参考的 Default 材质包，参考 <a href="https://www.reddit.com/r/Minecraft/comments/47sycp/where_can_i_find_the_default_texture_pack_to_edit/">Where can I find the default texture pack to edit? : Minecraft</a>，直接把 <code>1.12.2.jar</code> 解压后里面的 <code>assets</code> 文件夹提到资源包里就可以用了，意外的方便啊（</p>
<p>（其实 mod 的 jar 里面也有这个文件夹！）</p>
<p>参考 <a href="https://optifine.readthedocs.io/emissive_textures.html">Emissive Textures - OptiFine documentation</a>，只需在材质包放置 <code>/assets/minecraft/optifine/emissive.properties</code> 和 <code>/assets/minecraft/textures/blocks/redstone_block_e.png</code>，<code>emissive.properties</code> 里写上 <code>suffix.emissive=_e</code> 就可以了。</p>
<p>1.12 差不多也算是古董版本了，参考网上教程时还需注意版本差异。</p>
<p>于是兴高采烈的准备用到掉落式红石钢琴上，发现——欸？光呢？？？</p>
<p>于是发现了 <a href="https://github.com/sp614x/optifine/issues/1342">Emissive textures not working for certain entities and items · Issue #1342 · sp614x/optifine · GitHub</a>——woc，这不是 xwj 大佬吗？？？</p>
<p>所以人家 18 年就把这些东西玩透了……<del>只有红石音乐作者才能发现的 bug</del></p>
<p>这个 Issue 至今 open，一下不知道怎么办了…只能暂时搁置。后来使用上文提到的 Colored Redstone 和 invisiblights 解决问题。</p>
<p>此外，发现同一地点方块贴图始终一致，这说明随机种子由位置决定。但作为 Falling_block 生成时，全都只会用第一个贴图。</p>
</section>
</section>
<section id="mcpi-和-raspberryjammod-相关" class="level2">
<h2 class="anchored" data-anchor-id="mcpi-和-raspberryjammod-相关">MCPI 和 RaspberryJamMod 相关</h2>
<p>RaspberryJamMod：把 <a href="https://www.minecraft.net/en-us/edition/pi">Minecraft: Pi Edition</a> 的 Python API 移植到 Java 版的一款 mod。</p>
<ul>
<li>Github 库：<a href="https://github.com/arpruss/raspberryjammod">GitHub - arpruss/raspberryjammod: Raspberry Jam Mod - a Mod Forge Minecraft mod implementing most of Raspberry Juice/Pi API</a></li>
<li>官方指南：<a href="https://www.instructables.com/Python-coding-for-Minecraft/">Python Coding for Minecraft : 18 Steps (with Pictures) - Instructables</a></li>
<li>Minecraft: Pi Edition 的 API：<a href="https://www.stuffaboutcode.com/p/minecraft-api-reference.html">Minecraft: Pi Edition API</a></li>
</ul>
<section id="mcpi-block-类在-setblock-setblockwithnbt-中的使用" class="level3">
<h3 class="anchored" data-anchor-id="mcpi-block-类在-setblock-setblockwithnbt-中的使用">MCPI Block 类在 setBlock &amp; setBlockWithNBT 中的使用</h3>
<p><code>Block</code> 类被封装成了包含三个元素 <code>id:int</code>, <code>data:int</code>, <code>nbt:str</code> 的“数组”，在 <code>setBlock</code> 和 <code>setBlockWithNBT</code> 中直接使用 <code>Block</code> 类会被 <code>flatten()</code> 或 <code>floorFlatten()</code> 函数“拍扁”成分散的参数。一个 <code>Block</code> 对象只可能被拍扁成 <code>data, id</code> 或 <code>id, data, nbt</code>，取决于该对象是否设置了 <code>nbt</code> （用 <code>None</code> 判断）。</p>
<p>因此，需要自定义 <code>data</code> 时，不能使用 <code>block</code> 模块的预设方块。</p>
<p><code>Vec3</code> 类也可被拍扁。</p>
<p>例如：</p>
<ul>
<li><code>setBlock(Vec3(0,0,0), 137, 2)</code> 等同于 <code>mc.setBlock(Vec3(0,0,0), Block(137, 2))</code></li>
<li><code>setBlockWithNBT(Vec3(0,0,0), 137, 2, '{Command:"your command"}')</code> 等同于 <code>setBlockWithNBT(Vec3(0,0,0), Block(137, 2), '{Command:"your command"}')</code> 等同于 <code>setBlockWithNBT(Vec3(0,0,0), Block(137, 2, '{Command:"your command"}'))</code></li>
</ul>
<p>需要注意的是， <code>setBlock()</code> 不能接受 <code>nbt</code> 参数或带 <code>nbt</code> 的 <code>Block</code> 对象，否则会报错。而 <code>setBlockWithNBT()</code> 则有无 <code>nbt</code> 皆可。</p>
</section>
<section id="关于-mcpi-与游戏内的坐标差" class="level3">
<h3 class="anchored" data-anchor-id="关于-mcpi-与游戏内的坐标差">关于 MCPI 与游戏内的坐标差</h3>
<p>见 <a href="https://stackoverflow.com/questions/70747581/python-minecraft-coordinates-trouble">Python + Minecraft Coordinates Trouble - Stack Overflow</a>：</p>
<blockquote class="blockquote">
<p>getPos, getTilePos, setPos and setTilePos all appear to be relative to the player’s spawn point at least in a single player world. I am going through trying to teleport my character but the coordinates I end up on are not the world’s coordinates but a coordinate relative to where my character would spawn.</p>
</blockquote>
<blockquote class="blockquote">
<p>So, either fix an offset of 66 blocks into the y-axis values, or manually set the world spawn to <code>(0, 0, 0)</code> with <code>/setworldspawn</code>.</p>
</blockquote>
</section>
</section>
<section id="自制轮子" class="level2">
<h2 class="anchored" data-anchor-id="自制轮子">自制轮子</h2>
<section id="redstone-music-generator旧版" class="level3">
<h3 class="anchored" data-anchor-id="redstone-music-generator旧版">redstone-music-generator（旧版）</h3>
<p>（这是重构旧版前再次阅读代码后的小报告）</p>
<p>大概使用了 observer 的设计模式，写了类似 C# 中的 Event，Delegate 暂时还没有封装，稍微有点混乱。</p>
<p>自己写了一些工具类，然后弄了个 <code>MIDIHandler</code> 预处理 MIDI 文件。</p>
<p>整个生成在最上层由 <code>RMG</code> 类管，<code>RMG</code> 读取 <code>MIDIHandler</code> 的信息然后触发绑定在 <code>RMG</code> 上的各种 <code>onNote()</code>、<code>onBeat()</code> 函数（触发过程由封装的 <code>Event</code> 类实现）。通过设置 <code>RMG</code> 的成员变量可以设置例如要生成的音轨、起始终止拍等参数。</p>
<p>然后各种插件都丢在了 <code>observer.py</code> 里。这些插件接受各种需要的信息（当前音符编号、音高等），一些是用于生成 <code>Vec3</code> 或 <code>Block</code> 的 <code>XXXPosGen</code> 和 <code>XXXBlockGen</code>（还没有给他们写基类，主要是现在还没封装 Delegate），另一些是包含 <code>onNote()</code>、<code>onBeat()</code>，用来绑在 <code>RMG</code> 上的插件。（注意绑在 <code>RMG</code> 上的是函数而不是插件本身！）每个插件都有自己的参数，插件之间也可以相互嵌套（例如 <code>GroundedAdvancing</code> 里面就套了个 <code>SingleBlock</code>）。插件存在的目的是为各个输出函数 <code>onNote()</code>、<code>onBeat()</code> 统一设置参数。（这里是否可以再改的函数式编程一点？）</p>
<p>现在有一个问题就是 PosGen 和 BlockGen 分开了，有 Issue 提到想要自定义每个 Note 下放的 partBlock，像这样搞就很麻烦。</p>
<p>应该有一个把 PosGen 和 BlockGen 合起来的方案，最好是能独立表示多个方块及其位置信息的一个整体。</p>
</section>
<section id="redstone-music-generator新版" class="level3">
<h3 class="anchored" data-anchor-id="redstone-music-generator新版">redstone-music-generator（新版）</h3>
<p>TODO（咕咕咕）</p>
<p>temp: <code>/execute @p ~ ~ ~ playsound block.note.guitar voice @p ~ ~ ~</code></p>


</section>
</section>

 ]]></description>
  <category>回忆</category>
  <category>Minecraft</category>
  <category>音乐</category>
  <category>Python</category>
  <guid>https://blog.sun123zxy.top/posts/20230217-rmg/</guid>
  <pubDate>Thu, 16 Feb 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>str 学数学 题解</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230213-strwithmath/</link>
  <description><![CDATA[ 




<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-problem" class="theorem example">
<p><span class="theorem-title"><strong>Example 1 (str 学数学)</strong></span> str 同学因为名字里含有一个 str，所以觉得字符串对于他来说太简单了，于是他开始了他的数学之旅。</p>
<p>在旅途中str遇到了刚抽到胡桃的 lyl，而 lyl 同学正沉浸在出货的喜悦之中，为了能收获双倍喜悦，他便询问 str，他选的区间内有多少个幸运数字，str觉得这个问题和字符串一样简单，于是把这个问题交给了你。</p>
<p>共有 <img src="https://latex.codecogs.com/png.latex?T"> 组询问，每次给出两个正整数 <img src="https://latex.codecogs.com/png.latex?L,R">，你需要判断有多少 <img src="https://latex.codecogs.com/png.latex?n">，<img src="https://latex.codecogs.com/png.latex?L%20%5Cleq%20n%20%5Cleq%20R"> 使得方程 <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5Cleft%20%5Clfloor%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20=%20%5Cfrac%20%7Bn%5E2%20(n-1)%7D%7B4%7D%0A"> 成立。</p>
<p>请输出你得到的答案。</p>
<p>数据范围：<img src="https://latex.codecogs.com/png.latex?1%20%5Cleq%20T%20%5Cleq%2010000">，<img src="https://latex.codecogs.com/png.latex?1%20%5Cleq%20L%20%5Cleq%20R%20%5Cleq%2010%5E7"></p>
<p>样例输入：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb1-1">4</span>
<span id="cb1-2">1 4</span>
<span id="cb1-3">2 8</span>
<span id="cb1-4">1 10</span>
<span id="cb1-5">1 100</span></code></pre></div>
<p>样例输出：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1">3</span>
<span id="cb2-2">3</span>
<span id="cb2-3">5</span>
<span id="cb2-4">26</span></code></pre></div>
<p>来源：2023 年寒假集训 B 组总结赛</p>
</div>
</div>
</div>
</div>
<p>考场上当然是打表找规律了，但非常愚钝地没看出来……</p>
<p>结论是，<img src="https://latex.codecogs.com/png.latex?n"> 是一个幸运数字，当且仅当 <img src="https://latex.codecogs.com/png.latex?n+1"> 是一个质数。下面提供两种证明方法。</p>
<section id="official-solution" class="level2">
<h2 class="anchored" data-anchor-id="official-solution">Official Solution</h2>
<p>出题人提供的非常有技巧性的解法。</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5Cleft%20%5Clfloor%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20=%20%5Cfrac%20%7Bn%5E2%20(n-1)%7D%7B4%7D%0A"></p>
<p>考虑为 <img src="https://latex.codecogs.com/png.latex?%5Clfloor%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Crfloor"> 配对，</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5Cleft%20%5Clfloor%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20+%20%5Cleft%20%5Clfloor%20%5Cfrac%20%7Bi(n-j+1)%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20&amp;=%20%5Cfrac%20%7Bn%5E2%20(n-1)%7D%7B2%7D%20%5C%5C%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5Cleft%20%5Clfloor%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20+%20%5Cleft%20%5Clfloor%20i%20-%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20&amp;=%20%5Cfrac%20%7Bn%5E2%20(n-1)%7D%7B2%7D%20%5C%5C%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20i%20-%20%5B%20n+1%20%5Cnmid%20ij%20%5D%20&amp;=%20%5Cfrac%20%7Bn%5E2%20(n-1)%7D%7B2%7D%20%5C%5C%0A%5Cfrac%7Bn%5E2%20(n+1)%7D%7B2%7D%20-%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5B%20n+1%20%5Cnmid%20ij%20%5D%20&amp;=%20%5Cfrac%20%7Bn%5E2%20(n-1)%7D%7B2%7D%20%5C%5C%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5B%20n+1%20%5Cnmid%20ij%20%5D%20&amp;=%20n%5E2%0A%5Cend%7Baligned%7D%0A"></p>
<p>即要求 <img src="https://latex.codecogs.com/png.latex?n+1%20%5Cnmid%20ij"> 对任意 <img src="https://latex.codecogs.com/png.latex?1%20%5Cleq%20i,j%20%5Cleq%20n"> 成立。因此根据质数定义，<img src="https://latex.codecogs.com/png.latex?n+1"> 就是且只能是质数了。</p>
</section>
<section id="alternative-solution" class="level2">
<h2 class="anchored" data-anchor-id="alternative-solution">Alternative Solution</h2>
<p>考场上推了一半的想法。</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20%5Cleft%20%5Clfloor%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20=%20%5Cfrac%20%7Bn%5E2%20(n-1)%7D%7B4%7D%0A"></p>
<p>注意到 <img src="https://latex.codecogs.com/png.latex?a%20%5Cbmod%20b%20=%20a%20-%20b%20%5Clfloor%20%5Cfrac%20a%20b%20%5Crfloor">，考虑构造取模</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20(n+1)%20%5Cleft%20%5Clfloor%20%5Cfrac%20%7Bij%7D%20%7Bn+1%7D%20%5Cright%20%5Crfloor%20=%20%5Cfrac%20%7Bn%5E2%20(n-1)(n+1)%7D%7B4%7D%20%5C%5C%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20ij%20-%20ij%20%5Cbmod%20(n+1)%20=%20%5Cfrac%20%7Bn%5E2%20(n-1)(n+1)%7D%7B4%7D%20%5C%5C%0A%5Cleft(%20%5Cfrac%20%7Bn(n+1)%7D%7B2%7D%20%5Cright)%5E2%20-%20%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20ij%20%5Cbmod%20(n+1)%20=%20%5Cfrac%20%7Bn%5E2%20(n-1)(n+1)%7D%7B4%7D%20%5C%5C%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20ij%20%5Cbmod%20(n+1)%20=%20%5Cfrac%20%7Bn%5E2%20(n+1)%7D%20%7B2%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>考虑固定 <img src="https://latex.codecogs.com/png.latex?i">，研究 <img src="https://latex.codecogs.com/png.latex?j"> 变化下左式的情况。方便起见，我们将上式左侧 <img src="https://latex.codecogs.com/png.latex?j"> 的取值范围扩展至 <img src="https://latex.codecogs.com/png.latex?0"> 到 <img src="https://latex.codecogs.com/png.latex?n">： <img src="https://latex.codecogs.com/png.latex?%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=0%7D%5En%20ij%20%5Cbmod%20(n+1)%20=%20%5Cfrac%20%7Bn%5E2%20(n+1)%7D%20%7B2%7D%0A"> 细心的读者或许已经发现，当 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(i,n+1)%20=%201"> 恒成立，即 <img src="https://latex.codecogs.com/png.latex?n+1"> 为质数时，<img src="https://latex.codecogs.com/png.latex?ij%20%5Cbmod%20(n+1)"> 将取遍 <img src="https://latex.codecogs.com/png.latex?0"> 到 <img src="https://latex.codecogs.com/png.latex?n">，此时左右两式相等。下面我们证明这是上式相等的充分必要条件。</p>
<p>仍从 <img src="https://latex.codecogs.com/png.latex?ij%20%5Cbmod%20(n+1)"> 的取值下手，我们研究如下以 <img src="https://latex.codecogs.com/png.latex?j"> 和 <img src="https://latex.codecogs.com/png.latex?t"> 为变量的不定方程的解 <img src="https://latex.codecogs.com/png.latex?%0Aij%20+%20(n+1)%20t%20=%20m%20%5Cpod%7B0%20%5Cleq%20m%20%3C%20n+1%7D%0A"> 由裴蜀定理（Bézout’s identity），方程有解的充分必要条件为 <img src="https://latex.codecogs.com/png.latex?%5Cgcd(i,n+1)%20%5Cmid%20m">。不妨记 <img src="https://latex.codecogs.com/png.latex?d%20=%20%5Cgcd(i,n+1)">，<img src="https://latex.codecogs.com/png.latex?m%20=%20k%20d">，方程变为 <img src="https://latex.codecogs.com/png.latex?%0Aij%20+%20(n+1)%20t%20=%20kd%20%5Cpod%7B0%20%5Cleq%20k%20%3C%20%5Cfrac%20%7Bn+1%7D%20d%7D%0A"> 写出该不定方程的通解 <img src="https://latex.codecogs.com/png.latex?%0A%5Cleft%20%5C%7B%0A%5Cbegin%7Baligned%7D%0Aj%20&amp;=%20j_0%20+%20s%20%5Ccdot%20%5Cfrac%7Bn+1%7D%7Bd%7D%5C%5C%0At%20&amp;=%20t_0%20-%20s%20%5Ccdot%20%5Cfrac%7Bi%7D%7Bd%7D%0A%5Cend%7Baligned%7D%0A%5Cright%20.%20%5Cpod%7Bs%20%5Cin%20%5Cmathbb%20Z%7D%0A"> 不难发现，对 <img src="https://latex.codecogs.com/png.latex?0%20%5Cle%20k%20%3C%20%5Cfrac%20n%20d">，上述不定方程在 <img src="https://latex.codecogs.com/png.latex?0%20%5Cleq%20j%20%5Cleq%20n"> 的范围内总有 <img src="https://latex.codecogs.com/png.latex?d"> 个解，这意味着 <img src="https://latex.codecogs.com/png.latex?ij%20%5Cbmod%20(n+1)"> 将有 <img src="https://latex.codecogs.com/png.latex?d"> 次取到 <img src="https://latex.codecogs.com/png.latex?kd">。故我们有 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum_%7Bi=1%7D%5En%20%5Csum_%7Bj=1%7D%5En%20ij%20%5Cbmod%20(n+1)%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20d%20%5Csum_%7Bk=0%7D%5E%7B%5Cfrac%20%7Bn+1%7D%7Bd%7D%20-1%7D%20kd%20%5C%5C%0A&amp;=%20%5Csum_%7Bi=1%7D%5En%20d%5E2%20%5Csum_%7Bk=0%7D%5E%7B%5Cfrac%20%7Bn+1%7D%7Bd%7D%20-1%7D%20k%20%5C%5C%0A&amp;=%20%5Cfrac%201%202%20%5Csum_%7Bi=1%7D%5En%20d%5E2%20%5Cleft(%20%5Cfrac%20%7Bn+1%7D%20d%20-%201%20%5Cright)%20%5Cfrac%20%7Bn+1%7D%20d%20%5C%5C%0A&amp;=%20%5Cfrac%20%7Bn+1%7D%202%20%5Csum_%7Bi=1%7D%5En%20(n+1-d)%20=%20%5Cfrac%7Bn%5E2%20(n+1)%7D%7B2%7D%0A%5Cend%7Baligned%7D%0A"> 化简即得 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Csum_%7Bi=1%7D%5En%20(n+1-d)%20&amp;=%20n%5E2%20%5C%5C%0A%5Csum_%7Bi=1%7D%5En%20d%20&amp;=%20n%20%5C%5C%0A%5Csum_%7Bi=1%7D%5En%20%5Cgcd(i,%20n+1)%20&amp;=%20n%0A%5Cend%7Baligned%7D%0A"> 显然上式等价于对任意 <img src="https://latex.codecogs.com/png.latex?1%20%5Cleq%20i%20%5Cleq%20n">，<img src="https://latex.codecogs.com/png.latex?%5Cgcd(i,%20n+1)%20=%201"> 恒成立。因此我们证明了 <img src="https://latex.codecogs.com/png.latex?n+1"> 是质数是原方程成立的充分必要条件。</p>


</section>

 ]]></description>
  <category>OI</category>
  <category>数学</category>
  <category>题解</category>
  <guid>https://blog.sun123zxy.top/posts/20230213-strwithmath/</guid>
  <pubDate>Sun, 12 Feb 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>算法竞赛向 C++ Standard Library 使用速查</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20230124-stl/</link>
  <description><![CDATA[ 




<p>本文旨在对算法竞赛所需 C++ Standard Library 做一个全面而相对严谨的总结。</p>
<p>全文主要参考以下文档：</p>
<ul>
<li><a href="https://en.cppreference.com/w/cpp/container">Containers library - cppreference.com</a></li>
<li><a href="https://oi-wiki.org/lang/csl/">C++ 标准库简介 - OI Wiki</a></li>
</ul>
<p>如有能力，阅读原文可获得更深入的了解。</p>
<section id="stl-算法" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="stl-算法"><span class="header-section-number">1</span> STL 算法</h2>
<p>均在 <code>#include&lt;algorithm&gt;</code> 定义。</p>
<ul>
<li><p><code>std::sort(first,last,cmp)</code></p>
<p>排序为不降序列。</p>
<p>接受随机访问迭代器。可自定义比较函数。</p>
<p>平均时间复杂度 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)">，C++11 后严格 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)">。</p></li>
<li><p><code>std::stable_sort(first,last,cmp)</code></p>
<p>排序为不降序列，且保持相等元素的顺序。</p></li>
<li><p><code>std::lower_bound(first,last,val,cmp)</code></p>
<p>返回指向首个不小于 <code>val</code> 的元素的迭代器，如无，返回 <code>last</code>。</p>
<p>要求小于 <code>val</code> 的值和大于等于 <code>val</code> 的值分居区间两侧。</p>
<p>可自定义比较函数。若迭代器支持随机访问，对数时间复杂度，否则为线性。</p></li>
<li><p><code>std::upper_bound(first,last,val,cmp)</code></p>
<p>返回指向首个大于 <code>val</code> 的元素的迭代器，如无，返回 <code>last</code>。</p></li>
<li><p><code>std::unique(first,last,cmp)</code></p>
<p>保留区间中所有连续等值区间的首个元素组成新序列，返回处理后序列的尾迭代器。</p>
<p>接受前向迭代器，可自定义判断相等的函数。</p>
<p>线性时间复杂度。</p></li>
</ul>
</section>
<section id="基本或特殊容器" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="基本或特殊容器"><span class="header-section-number">2</span> 基本或特殊容器</h2>
<p>注：C++11 新引入的容器，大部分头文件名与容器名一致。</p>
<ul>
<li><code>pair</code> <code>#include&lt;utility&gt;</code> ：元素对。</li>
<li><code>tuple</code> (C++11) ：元组。</li>
<li><code>bitset</code> <code>#include&lt;bitset&gt;</code> ：定长压缩 01 串，可在 <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%20N%20K)"> 的时空复杂度内完成常见运算，<img src="https://latex.codecogs.com/png.latex?K"> 对应操作系统位数。</li>
<li><code>string</code> <code>#include&lt;string&gt;</code> ：字符串。</li>
</ul>
<section id="pair" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="pair"><span class="header-section-number">2.1</span> pair</h3>
<ul>
<li><code>operator=</code> ：重载了赋值运算符用于拷贝。</li>
<li><code>first</code> / <code>second</code> ：访问第一项或第二项。</li>
<li><code>std::make_pair(a,b)</code> ：新建元素对，自动检测类型。</li>
<li><code>operator&lt;=&gt;</code> ：重载了各种比较运算符，按第一关键字、第二关键字顺序比较。</li>
</ul>
</section>
<section id="tuple" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="tuple"><span class="header-section-number">2.2</span> tuple</h3>
<ul>
<li><code>operator=</code> ：重载了赋值运算符用于拷贝。</li>
<li><code>std::get&lt;i&gt;(tp)</code> ：获取元组的第 i 项。</li>
<li><code>std::get&lt;T&gt;(tp)</code> ：获取元组中类型为 T 的项。</li>
<li><code>std::tie(a,b,...)</code> ：构造一个变量引用构成的元组．用于在赋值时将等号右侧的元组解包到左侧的 <code>a,b,...</code> 等变量中。</li>
<li><code>std::make_tuple(a,b,c,...)</code>：新建元组，自动检测类型。</li>
<li><code>operator&lt;=&gt;</code> ：重载比较运算符，同样是顺序关键字比较。</li>
</ul>
<div class="callout callout-style-simple callout-tip">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>下面是一个应用 C++11 新引入的元组和列表初始化的 ExGCD 实现。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> tuple<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Tuple<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2">Tuple exgcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb1-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb1-4">    ll x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tie<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)=</span>exgcd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)*</span>y1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="string" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="string"><span class="header-section-number">2.3</span> string</h3>
<p>与 <code>vector</code> 类似。其余重要特性如下：</p>
<ul>
<li><code>c_str()</code> ：生成一个 C 风格字符串（尾部置 0）并返回其头部指针。</li>
<li><code>length()</code> ：<code>size()</code> 的同义函数。</li>
<li><code>append(str)</code> ：后方追加字符串，返回 <code>*this</code>。</li>
<li><code>append(first, last)</code> ：区间插入版本。</li>
<li><code>operator+</code> ：连接两个字符串。</li>
<li><code>compare(str)</code> ：字典序比较。返回一个 <code>int</code>，用 <code>&lt;0</code> / <code>==0</code> / <code>&gt;0</code> 判断该字符串小于 / 等于 / 大于参数字符串。</li>
<li><code>operator&lt;=&gt;</code> ：字典序比较的运算符重载。</li>
<li><code>substr(pos=0, count)</code>：返回 <code>[pos, min(pos+count, size()))</code> 的子串。时间复杂度与 <code>count</code> 成线性。</li>
<li><code>pop_back()</code> (C++11)</li>
<li><code>find(str)</code> / <code>rfind(str)</code> / <code>find_first_of(c)</code> / <code>find_first_not_of(c)</code> / <code>find_last_of(c)</code> / <code>find_last_not_of(c)</code>：找字符串或字符，返回位置。若无，返回 <code>npos=-1</code>。<strong>无时间复杂度保证</strong>，不建议使用。</li>
</ul>
</section>
<section id="bitset" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="bitset"><span class="header-section-number">2.4</span> bitset</h3>
<p><code>bitset&lt;N&gt; bs(val / str)</code>：声明一个长度为 N 的 <code>bitset</code> 并设定初值。</p>
<ul>
<li><code>&amp; / ! / ^ / ~ / &gt;&gt; / &lt;&lt;</code> ：支持 AND / OR / XOR / NOT / 右移 / 左移等位运算系列。</li>
<li><code>operator==</code> ：判断两个 <code>bitset</code> 是否相同。</li>
<li><code>test(idx) / operator[idx]</code> ：前者会做越界检查，抛出异常。</li>
<li><code>size()</code></li>
<li><code>count()</code> ：返回 1 的个数。</li>
<li><code>all()</code> (C++11) ：检查是否全为 1。</li>
<li><code>any() / none()</code> ：检查是否存在 1 / 没有 1。</li>
<li><code>set() / reset()</code> ：所有位赋 1 / 0。</li>
<li><code>flip()</code> ：翻转 0 / 1。</li>
</ul>
</section>
</section>
<section id="stl-容器概览" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="stl-容器概览"><span class="header-section-number">3</span> STL 容器概览</h2>
<p>以下部分均为 STL 容器相关内容。</p>
<section id="迭代器" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="迭代器"><span class="header-section-number">3.1</span> 迭代器</h3>
<p>声明：形如 <code>vector&lt;int&gt;::iterator iter = xxx.begin()</code>。C++11 后可用 <code>auto</code> 代替类型声明。</p>
<p><code>*iter</code> 取值，<code>iter++</code> 后继。</p>
<p>双向迭代器可 <code>iter--</code>，随机访问迭代器支持加减、比较运算。</p>
<ul>
<li><code>begin()</code>, <code>end()</code> ：返回迭代器。<code>end()</code> 常作为 NULL 使用。</li>
<li><code>cbegin()</code>, <code>cend()</code> (C++11) ：部分容器支持，返回只读迭代器。</li>
<li><code>rbegin()</code>, <code>rend()</code> ：部分容器支持，返回反向迭代器。</li>
<li><code>crbegin()</code>, <code>crend()</code> ：部分容器支持，返回只读反向迭代器。</li>
</ul>
</section>
<section id="公共性质" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="公共性质"><span class="header-section-number">3.2</span> 公共性质</h3>
<ul>
<li><code>[first, last)</code> 式迭代器构造，拷贝构造等。</li>
<li><code>operator=</code> ：重载了赋值运算符用于拷贝。</li>
<li><code>empty()</code> ：返回容器是否为空，即 <code>v.begin() == v.end()</code>。</li>
<li><code>size()</code> ：返回容器内元素个数。</li>
<li><code>clear()</code> ：清空容器。</li>
</ul>
</section>
</section>
<section id="序列式容器或容器适配器" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="序列式容器或容器适配器"><span class="header-section-number">4</span> 序列式容器或容器适配器</h2>
<p>序列式容器：</p>
<ul>
<li><code>array</code> (C++11) ：定长顺序表，常数随机访问。</li>
<li><code>vector</code> <code>#include&lt;vector&gt;</code>：顺序表，常数后段插入，常数随机访问。</li>
<li><code>deque</code> <code>#include&lt;deque&gt;</code> ：顺序表，常数双端插入，<strong>常数随机访问</strong>。</li>
<li><code>list</code> <code>#include&lt;list&gt;</code> ：链表，常数插入删除，双向迭代器。
<ul>
<li><code>forward_list</code> (C++11) ：单向版本。</li>
</ul></li>
</ul>
<p>容器适配器（均不支持迭代器）：</p>
<ul>
<li><code>queue</code> <code>#include&lt;queue&gt;</code>：队列（FIFO）。适配双向变长序列式容器，即 <code>deque</code>（默认）或 <code>list</code>。</li>
<li><code>stack</code> <code>#include&lt;stack&gt;</code>：栈（LIFO）。适配变长序列式容器，即 <code>deque</code>（默认）、<code>vector</code>或 <code>list</code>。</li>
<li><code>priority_queue</code> <code>#include&lt;queue&gt;</code>：大根堆。适配随机访问变长序列式容器，即 <code>vector</code>（默认）或 <code>deque</code>。</li>
</ul>
<section id="vector" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="vector"><span class="header-section-number">4.1</span> vector</h3>
<p>Construct:</p>
<ul>
<li><code>vector&lt;T&gt;(count,value)</code> ：初始化时放 <code>count</code> 个 <code>value</code> 的拷贝在里面。</li>
</ul>
<p>Access:</p>
<ul>
<li><code>crbegin()</code></li>
<li><code>at(idx)</code> / <code>operator[idx]</code> ：前者会做越界检查，抛出异常。</li>
<li><code>front()</code>, <code>back()</code> ：返回首尾元素引用。</li>
</ul>
<p>Modify:</p>
<ul>
<li><code>push_back(x)</code> / <code>pop_back()</code> ：均摊常数复杂度。</li>
<li><code>insert(iter, val)</code> ：于迭代器 <code>iter</code> 前插入，返回指向被插入元素的迭代器。 <code>insert(iter, first, last)</code> ：左闭右开区间插入，返回指向首个被插入元素的迭代器。 注意，此操作<strong>非常数时间复杂度</strong>。</li>
<li><code>erase(iter)</code> ：于迭代器 <code>iter</code> 处删除，返回指向被删除元素的后一个元素的迭代器。 <code>erase(first, last)</code> ：左闭右开区间删除，返回指向被删除元素的后一个元素的迭代器。 注意，此操作<strong>非常数时间复杂度</strong>。</li>
</ul>
<p>Size:</p>
<ul>
<li><code>resize(n)</code> ：改变长度，可指定补充元素默认值。</li>
<li><code>shrink_to_fit()</code> ：调整为恰好长度。</li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p><code>vector&lt;bool&gt;</code> 被特殊定义，使用方式较为复杂，<strong>不建议使用</strong>。</p>
</div>
</div>
</div>
</section>
<section id="deque" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="deque"><span class="header-section-number">4.2</span> deque</h3>
<ul>
<li><code>push_front(x)</code>, <code>pop_front()</code></li>
</ul>
<p>其余与 <code>vector</code> 类似。</p>
<section id="stack" class="level4">
<h4 class="anchored" data-anchor-id="stack">stack</h4>
<ul>
<li><code>top()</code></li>
<li><code>push(x)</code></li>
<li><code>pop()</code></li>
</ul>
</section>
<section id="queue" class="level4">
<h4 class="anchored" data-anchor-id="queue">queue</h4>
<ul>
<li><code>front()</code></li>
<li><code>push(x)</code></li>
<li><code>pop()</code></li>
</ul>
</section>
<section id="priority_queue" class="level4">
<h4 class="anchored" data-anchor-id="priority_queue">priority_queue</h4>
<ul>
<li><code>std::priority_queue&lt;TypeName&gt;</code> ：<code>Compare</code> 默认使用 <code>std::less&lt;T&gt;</code>，即以 <code>operator &lt;</code> 作为大根堆的比较依据。</li>
<li><code>std::priority_queue&lt;TypeName, Container, Compare&gt;</code> ：亦可自行指定底层容器和比较函数对象。</li>
</ul>
<p>例如，传入 <code>std::greater&lt;T&gt;</code> 将使用 <code>&gt;</code> 作为比较符号，进而构造出小根堆。</p>
<div class="callout callout-style-simple callout-tip">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>自定义比较函数对象，可仿照以下代码：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;iostream&gt;</span></span>
<span id="cb2-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;queue&gt;</span></span>
<span id="cb2-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;vector&gt;</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-6">    ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">    Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){}</span></span>
<span id="cb2-8">    Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb2-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> vecCompare<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb2-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>priority_queue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> vecCompare <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-19">    H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb2-20">    H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb2-21">    Vec t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>H<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb2-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>
<p>用法基本同 <code>queue</code>，但 <code>push() / pop()</code> 为对数时间复杂度。</p>
</section>
</section>
<section id="list" class="level3" data-number="4.3">
<h3 data-number="4.3" class="anchored" data-anchor-id="list"><span class="header-section-number">4.3</span> list</h3>
<ul>
<li>无随机访问接口。</li>
<li><code>insert(iter, val)</code> / <code>erase(iter)</code> ：插入与删除变为常数时间复杂度，参见 <code>vector</code>。</li>
<li><code>sort(cmp)</code> ：为链表特殊设计的 <img src="https://latex.codecogs.com/png.latex?O(n%20%5Clog%20n)"> 稳定排序算法。</li>
</ul>
<p>其余与 <code>deque</code> 类似。</p>
</section>
</section>
<section id="关联式容器" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="关联式容器"><span class="header-section-number">5</span> 关联式容器</h2>
<p>不支持随机访问，双向迭代器，大部分操作为对数时间复杂度，红黑树实现。</p>
<ul>
<li><code>set</code> / <code>multiset</code> <code>#include&lt;set&gt;</code>：元素有序。后者支持同值多元素。</li>
<li><code>map</code> / <code>multimap</code> <code>#include&lt;map&gt;</code>：键有序。后者支持同键值多元素。</li>
</ul>
<section id="set-multiset" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="set-multiset"><span class="header-section-number">5.1</span> set / multiset</h3>
<ul>
<li><code>set&lt;Key&gt;</code>：默认使用 <code>operator &lt;</code> 比较（升序）。</li>
<li><code>set&lt;Key, Compare&gt;</code>：也可使用类似 <code>priority_queue</code> 的方法自定义比较函数对象 <code>Compare</code>。</li>
</ul>
<p>Access：</p>
<ul>
<li><code>crbegin()</code></li>
<li><code>count(x)</code> ：返回值为 <code>x</code> 的元素数量。</li>
<li><code>lower_bound(x)</code> / <code>upper_bound(x)</code> ：为 <code>set</code> 特殊定制的对数时间复杂度 <code>lower_bound</code> 和 <code>upper_bound</code>。</li>
</ul>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>没有 <code>nth_element()</code>，对数时间复杂度查询第 k 大需自行手写平衡树或使用 pbds 库。</p>
</div>
</div>
</div>
<p>Modify:</p>
<ul>
<li><code>insert(x)</code> ：插入元素 x。返回 <code>pair&lt;iterator, bool&gt;</code>，表示插入元素的迭代器与插入是否成功。 对于 <code>multiset</code>，由于插入不会失败，<code>insert</code> 只返回迭代器。</li>
<li><code>erase(x)</code> ：删除所有值为 x 的元素，返回删除元素的个数。 <code>erase(iter)</code> ：删除迭代器指向的元素，(C++11) 返回指向被删除元素的后一个元素的迭代器。 <code>erase(first, last)</code>：左闭右开区间删除，(C++11) 返回指向被删除元素的后一个元素的迭代器。</li>
</ul>
<div class="callout callout-style-simple callout-tip">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>删除单个值为 x 的元素，可按如下方法进行：</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span> it <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-2">s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>erase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>it<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="map-multimap" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="map-multimap"><span class="header-section-number">5.2</span> map / multimap</h3>
<p><code>map&lt;Key, T, Compare&gt;</code>：可自定义比较方式。</p>
<ul>
<li>对迭代器解引用得到 <code>pair&lt;Key, T&gt;</code>。</li>
<li><code>insert(pair&lt;Key, T&gt;)</code></li>
<li><code>at[key]</code> / <code>operator[key]</code>：前者会做越界检查，抛出异常。</li>
</ul>
<p>其余与 <code>set</code> 类似。</p>
</section>
</section>
<section id="无序关联式容器-c11" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="无序关联式容器-c11"><span class="header-section-number">6</span> 无序关联式容器 (C++11)</h2>
<p>单向迭代器，平均常数时间复杂度，Hash 实现。</p>
<p>若不支持 c++11，使用时需引入 TR1 扩展。例如，使用 <code>unordered_map</code> 需引入 <code>#include&lt;tr1/unordered_map&gt;</code> 头文件，使用时需写为 <code>std::tr1::unordered_map</code>。</p>
<ul>
<li><code>unordered_set</code> / <code>unordered_multiset</code> <code>#include&lt;unordered_set&gt;</code>：元素无序。</li>
<li><code>unorderep_map</code> / <code>unordered_multimap</code> <code>#include&lt;unordered_map&gt;</code>：键无序。</li>
</ul>
<p>只有单向迭代器，其余特性与有序版本类似。</p>
<p>此外，还可自行指定相等判定方式和 Hash 函数。</p>
<ul>
<li><code>unordered_set&lt;Key, Hash, KeyEqual&gt;</code></li>
<li><code>unordered_map&lt;Key, T, Hash, KeyEqual&gt;</code></li>
</ul>
<div class="callout callout-style-simple callout-tip">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>Hash 函数的自定义方法也与 <code>priority_queue</code> 中的方法类似：</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;iostream&gt;</span></span>
<span id="cb4-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include</span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;unordered_set&gt;</span></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typedef</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">long</span> ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-5">  ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6">    Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){}</span></span>
<span id="cb4-7">    Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ll x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>ll y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb4-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">){</span></span>
<span id="cb4-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> vecHash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size_t</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">operator</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1E9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)+</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107897</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-19"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(){</span></span>
<span id="cb4-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>unordered_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>vecHash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> S<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-21">    S<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb4-22">    S<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb4-23">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span>S<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb4-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>OI</category>
  <category>C++</category>
  <guid>https://blog.sun123zxy.top/posts/20230124-stl/</guid>
  <pubDate>Mon, 23 Jan 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Jekyll 2 Quarto: Academic Writing’s not All About PDF</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20221226-quarto-fantasia/</link>
  <description><![CDATA[ 




<section id="旅程继续" class="level2">
<h2 class="anchored" data-anchor-id="旅程继续">旅程继续</h2>
<p><a href="../..\posts/20210817-aboutblog">上回说到</a>，sun123zxy 同学完成了手撸 Jekyll 的伟大壮举，然后悠哉游哉地度过了他的高三生活。现在，静态博客的大厦已经基本落成，剩下的只是一些装修工作。然而，几朵不大不小的乌云却总让他感到不安。</p>
<p>sun123zxy 曾写过一篇相对严谨的学习笔记<a href="../..\posts/20200321-burnside">等价类计数：Burnside引理 &amp; Polya定理</a>，还有一篇关于行列式与生成树计数的笔记尚未发布。这些笔记里包含大量章节标号、定理与交叉引用。关于交叉引用，原生 Markdown 只支持在链接处以 section 的标题作为标签完成引用，显然对中文文档不大友好。不少人选择使用内嵌 HTML 解决问题，但死脑筋的 sun123zxy 认为这种方式背离了 Markdown 简化格式的初衷。后来他发现，<a href="https://michelf.ca/projects/php-markdown/extra/">PHP Markdown Extra</a> 格式的 Special Attributes 能解决部分交叉引用的问题，更惊喜的是 Pandoc 竟然兼容这种语法（当时 sun123zxy 对 Pandoc 还没有做深入了解，只局限于使用 jekyll-pandoc 渲染而已）。至于处理章节标号，只需对已经写好的目录系统脚本做一点改动即可，而且当时 sun123zxy 也并没有那么多篇严谨的学术向写作。总之，问题暂时得到解决。</p>
<p>另一朵乌云来自 LaTeX。众所周知，Markdown 的内嵌数学公式是 LaTeX Math Mode 的某个子集。sun123zxy 发现，自己在 LaTeX 上的不求甚解开始给他带来各种麻烦。比如，他无法解释为什么只有 <code>aligned</code> 环境能被正确渲染，而不少教程中提到的 <code>align*</code> 和支持标号的 <code>align</code> 却总是报错；再比如，由于使用了重视速度的 <a href="https://katex.org/">KaTeX</a> 而不是更加完备的 <a href="https://www.mathjax.org/">MathJax</a> 作为渲染引擎，他发现自己无法使用诸如 <code>\newcommand</code>、<code>\DeclareMathOperator</code> 的宏定义。而且，一些教程中提到的 <code>physics</code> 等需要自行导入的“宏包”也让他摸不着头脑。</p>
<p>最重要的是，sun123zxy 开启了他的大学生活，论文写作的需求使他产生了系统学习 LaTeX 的想法。他在网协大牛那里听说了 <a href="https://www.overleaf.com/">Overleaf</a>，并在间歇性热情驱使下疯狂啃食文档，最终写出了自己的文档类，覆盖常见中文社科、科技向论文写作需求。验之以文，效果拔群。学习过程中，sun123zxy 习得众多排版常识，掌握了各种 font family 的区别、衬线字体的使用情景、英文 dash 的分辨方式等技巧，姿势水平得到质的飞跃。</p>
<p>sun123zxy 发现自己有点沉迷 LaTeX 了。他在写集合论大作业时学习了 <code>amsthm</code> 宏包，现已完全抵挡不住“定理 2.3”、“推论 4.1.1”、“例题 3.2”、“图 3”、“表 1”自动标号和交叉引用的诱惑。曾经博客使用的加强版 Markdown 在完备的 LaTeX 面前不值一提。他突然感觉有点害怕，毕竟 PDF 格式的网络发布效果并不理想。他需要找到一种能兼取两种格式长处的解决方案，否则他的博客将成为历史的眼泪。</p>
<p>然而在这里他遇到了瓶颈。尽管已经有一系列形如 LaTeX2HTML 的项目存在，但因为 TeX/LaTeX 是为 PDF 等页面固定的展现方式而设计，在转换成尺寸动态变化的网页（HTML）时必然面临信息损失。<a href="https://yihui.org/en/2013/10/markdown-or-latex/">Markdown or LaTeX? - Yihui Xie | 谢益辉</a> 这篇文章详细的讨论了 Markdown 和 LaTeX 间不可调和的冲突。更好的思路是，利用轻巧且可读性优秀的 Markdown 作为写作语言直接输出 HTML，需要 PDF 时再使用其它程序处理得到 LaTeX 代码。<a href="https://ctan.org/pkg/markdown">markdown 宏包</a>就解决了这样的问题。</p>
<blockquote class="blockquote">
<p>「你喜爱的 Markdown 写作，现更以 LaTeX 呈现。」</p>
<p>——<a href="https://liam.page/2020/03/30/writing-manuscript-in-Markdown-and-typesetting-with-LaTeX/">以 Markdown 撰写文稿，以 LaTeX 排版 | 始终</a></p>
</blockquote>
<p>markdown 宏包提供的 hybrid 功能还提供了将 LaTeX 命令混入 Markdown 的功能，完美覆盖了上述使用情景。然而，Markdown 自身在学术写作方面的固有缺陷——难以交叉引用、无法自动编号、没有定理系统——仍然让 HTML 输出举步维艰。问题在这里似乎陷入了死结：既想要 Markdown 的可读性和 HTML 输出，又想要 LaTeX 的定理系统和 PDF 输出——这可能吗？</p>
<p>sun123zxy 询问了不少同时掌握 Markdown 和 LaTeX 的大佬，他们都没有研究过这样的问题。唯一的希望是：找到一种合适的方式扩展 Markdown 的语法。sun123zxy 想起了 <a href="https://pandoc.org/">Pandoc</a>——文档转换界的瑞士军刀。事实证明 Pandoc 确实对得起这个称呼。他离解决方案已经非常近了：<a href="https://pandoc.org/MANUAL.html#pandocs-markdown">Pandoc’s Markdown</a> 已经非常强大，强大到可以随意内嵌 LaTeX 代码（当然只对 LaTeX 输出有效），交叉引用几乎任何内容，甚至可以用 Markdown 风格的 fenced syntax 控制 HTML 中的 <code>div</code>、<code>span</code> 及其参数！再加上 <a href="https://github.com/tomduck/pandoc-xnos">pandoc-xnos</a> 插件提供的自动标号功能，问题几乎得到全部解决——而现在看来，定理系统也可以通过编写 Pandoc filter 实现。</p>
<p>当然，sun123zxy 是个懒人，在能搜到解决方案的情况下，他不会干重复造轮子的傻事。某日，sun123zxy 又开始他了的头脑风暴。通过 Google 新的关键字 <code>markdown</code>、<code>cross-reference</code>、<code>academic writing</code>，他发现了 <a href="https://rmarkdown.rstudio.com/">R Markdown</a>，进而发现了 <a href="https://quarto.org/">Quarto</a>。</p>
<blockquote class="blockquote">
<p>Quarto is an open-source scientific and technical publishing system built on Pandoc.</p>
<ul>
<li>Create dynamic content with Python, R, Julia, and Observable.</li>
<li>Author documents as plain text markdown or Jupyter notebooks.</li>
<li>Publish high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.</li>
<li>Author with scientific markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.</li>
</ul>
<p>——几乎让我一下子跳起来的 Overview</p>
</blockquote>
<p>Quarto 是构建在 Pandoc 上的文档发布系统，对 Pandoc’s Markdown 做了进一步扩展以适应学术写作，其中就包含了 pandoc-xnos 的语法和——用 Pandoc’s Markdown 的 fenced syntax 实现的定理系统！此外，Quarto 甚至还支持 Jupyter Notebook 的动态计算，附上 Matplotlib 代码就可动态生成统计图表——而且同样也可以被交叉引用！更让人欣喜的是，除了直接输出 HTML 和 PDF/LaTeX，Quarto 还提供了类似 Jekyll 的生成静态网站的功能！</p>
<p>于是，长达数月的探索终于落下帷幕，语法学习、环境配置与博客迁移被提上日程。又是近一个月的辛勤劳动，sun123zxy 终于完成了写作流程的构建和博客的搭建工作。盯着桌前已经冷透了的保温杯，他陷入了沉思……</p>
</section>
<section id="主要成果" class="level2">
<h2 class="anchored" data-anchor-id="主要成果">主要成果</h2>
<ul>
<li>基于 Quarto 的 <a href="https://github.com/sun123zxy/sunquartex">SunQuarTeX</a> 多格式中文学术写作出版流程，内含适用于常见中文论文写作的 LaTeX 文档类及其示例文档。</li>
<li>Quarto 驱动的适应学术写作要求的<a href="https://blog.sun123zxy.top">新版博客</a>（<a href="https://github.com/sun123zxy/blog-quarto-code">sun123zxy/blog-quarto-code</a>）。</li>
</ul>
<p>上一个 Jekyll 博客，一砖一瓦都是自己搭出来的，有感情了（笑）。所以也没下线，放在 <a href="https://blog-jekyll.sun123zxy.top">blog-jekyll.sun123zxy.top</a> 上了。如果你也和我一样怀旧，可以去看看~</p>
<p>那么，依照惯例，聊聊学习与折腾中的一点心得体会。</p>
</section>
<section id="关于-latex" class="level2">
<h2 class="anchored" data-anchor-id="关于-latex">关于 LaTeX</h2>
<p>很多人说 LaTeX 不好学——的确。即使是 OIer 群体，对 LaTeX 的认知也大多停留在数学公式水平。然而比起客观的困难，更应该问的问题是——Why LaTeX? 不同人的答案或许有所不同，但应有以下几点：</p>
<ul>
<li>有学术写作或打印文档的需求（否则可直接使用 Markdown/HTML）</li>
<li>认同内容与样式分离的设计思想，希望对文档排版有清晰的控制，而不是所见即所得的富文本格式导致的混乱。</li>
<li>希望用相对不易损坏且可读性较高的代码式文档替代 <code>.docx</code> 式的黑箱存储。</li>
<li>需要使用章节标号、定理系统等交叉引用功能。</li>
<li>想用简洁的代码生成严谨美观的数学公式。</li>
<li><del>就是感觉 LaTeX 排出来的东西很牛逼</del></li>
</ul>
<p>学习 LaTeX 需要了解它的历史，理解它的开发理念，理清 TeX/LaTeX 的历史进程，弄清 pdfLaTeX、XeLaTeX、LuaLaTeX 各自的特点，在 MikeTeX、TeXLive 两个发行版中做出选择，学习 BibTeX 引用管理格式，还有对排版知识的初步了解——知识体系可谓庞大。此外，不少 LaTeX 教学文档、各种宏包的手册本身就是由 LaTeX 生成的，这意味它们都是 PDF 格式，无法在互联网上得到很好的传播。但请不要忘记，它们是学习 LaTeX 的第一手资料。例如，<a href="https://www.ctan.org/">CTAN</a> 上的手册是学习各类宏包的第一途径，<a href="https://www.latex-project.org/help/documentation/">LaTeX 官网</a>也提供了不少相对系统的 PDF 教程。当然，近年来网页渲染工具 <a href="https://www.overleaf.com/">Overleaf</a> 的出现降低了环境配置的难度，<a href="https://www.overleaf.com/learn">Overleaf 的 LaTeX 教学文档</a>也非常优秀。我还强烈推荐 <a href="https://liam.page/2014/09/08/latex-introduction/">一份其实很短的 LaTeX 入门文档 | 始终</a> 这篇文章作为入门，作者是一位参与维护 CTeX 宏集的大佬，之前提到的 markdown 宏包他也写过一篇详细的介绍，详见上文引用中的链接。</p>
<p>在互联网上碎片化的学习 LaTeX，一定要经常问自己——这功能是哪个宏包定义的？例如，关于交叉引用，<code>\label</code>、<code>\ref</code>、<code>\pageref</code> 均为原生自带，<code>\eqref</code> 是 <code>amsmath</code> 宏包定义的，而 <code>\autoref</code> <code>\href</code> <code>\url</code> 均为 <code>hyperref</code> 宏包的命令，引入 <code>hyperref</code> 的目的主要是让文章里的交叉引用都变成 PDF 里可点击跳转的超链接；再例如，定理系统是 LaTeX 原生支持的，但 <code>amsthm</code> 提供了无标号版本的定理、设置 <code>\theoremstyle</code> 的方式和自动添加 QED symbol 的 <code>proof</code> 环境。再次强调，不要错过宏包的 PDF 手册！阅读手册是整合碎片知识、查漏补缺的最佳途径。</p>
</section>
<section id="关于-ctex" class="level2">
<h2 class="anchored" data-anchor-id="关于-ctex">关于 CTeX</h2>
<p>此外，有必要对中文排版基础宏包 <a href="https://ctan.org/pkg/ctex">CTeX</a> 做进一步说明。</p>
<blockquote class="blockquote">
<p>最初，Knuth 在设计开发 TeX 的时候没有考虑到多国文字支持，特别是对多字节的中日韩表意文字的支持。这使得 TeX 以至后来的 LaTeX 对中文的支持一直不是很好。即使在 CJK 宏包解决了中文字符处理的问题以后，中文用户使用 LaTeX 仍然要面对许多困难。这些困难里，以章节标题的中文化为最。由于中文和西文书写习惯的差异，用户很难使用标准文档类中的代码结构来表达中文标题。于是，用户不得不对标准文档类做较大的修改。除此之外，日期格式、首行缩进、中文字号和字距等细节问题，也需要精细的调校。我们设计 CTeX 宏集的目的之一就是解决这些 LaTeX 文档的汉化难题。</p>
<p>另一方面，随着 TeX 引擎和 LaTeX 宏包的不断发展，LaTeX 的中文支持方式从早期的专用系统（如 CCT）发展为适用于不同引擎的多种方式。这些方式的适用情况和使用方式有不少细节上的差异，同时操作系统的不同、语言环境的不同等客观情况又进一步带来了更多的细节差异。我们设计 CTeX 宏集的另一个主要目的就是尽可能消除这些差异带来的影响，使用户能够以一个统一的接口来使用不同的中文支持方式，使得同一份文档能够在不同环境下交换使用。</p>
<p>——CTeX 宏集手册 - 第 1 节：介绍</p>
</blockquote>
<p>CTeX 的基础使用，我仍然推荐上面始终的入门文档。<a href="https://zhuanlan.zhihu.com/p/538459335">LaTeX 中文字体配置基础指南 - 知乎</a>对我的帮助也很大。如果打算进一步自定义样式建立自己的文档类，还得沉下心来研读手册。</p>
</section>
<section id="关于-pandoc" class="level2">
<h2 class="anchored" data-anchor-id="关于-pandoc">关于 Pandoc</h2>
<p>Pandoc 其实一直致力于扩展 Markdown 的语法使其适合学术写作。<a href="https://www.youtube.com/watch?v=T9uZJFO54iM">TUG 2020 — John MacFarlane — Pandoc for TeXnicians</a> 的演讲几乎涵盖了所有值得关心的问题。</p>
<p>我认为 Pandoc 已有能力成为下一代学术写作的终极解决方案。语法上，Markdown 简洁易读，语法天然与格式解耦（反例是 LaTeX），而 Pandoc’s Markdown 是 Markdown 方言的集大成者，交叉引用、文献引用、图表等 Markdown 原生痛点都有很好的支持，fenced syntax 甚至可以视为 LaTeX environment 的平替；技术上，Pandoc 已经是非常成熟的格式转换工具，而 Pandoc filter 好比 LaTeX 中的 documentclass 和 style 文件，事实上实现了 Markdown 中的“宏定义”。如社区进一步发展，大部分常用 filter 能像在 LaTeX 中引用 documentclass 一样轻松获取，我们就能真正告别格式的困扰，拥抱 Pandoc’s Markdown 治下的多格式学术写作。</p>
<p>从这角度来看，Quarto 似乎更像是 Jupyter、Jekyll 和一堆 Pandoc filter 的混合物（笑）</p>
</section>
<section id="关于-quarto" class="level2">
<h2 class="anchored" data-anchor-id="关于-quarto">关于 Quarto</h2>
<p>Quarto 首个 Release 距今不到 2 年，是相当年轻的项目。开发 Quarto 的团队之前主要维护 R Markdown，Quarto 是他们跳出 R 语言生态圈，将成果扩展至更广阔生态圈（如 Python）的尝试，这也意味着项目尚存不尽人意之处。把它调理成满意的模样，还真得花不少功夫。<del>甚至让笔者开了人生首个正经 issue</del></p>
<section id="sunquartex" class="level3">
<h3 class="anchored" data-anchor-id="sunquartex">SunQuarTeX</h3>
<p>使用 Quarto，我主要有两大需求——论文多格式输出和静态博客生成。两个需求相对独立，因此有必要将离线论文输出的功能单独抽象出来。折腾的结果就是 <a href="https://github.com/sun123zxy/sunquartex">SunQuarTeX</a>。Quarto 原生的 HTML 输出还不错，自带目录高亮还有引用提示，稍微改改就能用了。关于自定义，Quarto 使用 SCSS 作为 CSS 生成器，意味着可以直接通过修改变量或 <code>@extend</code> 完成大部分工作。参考以下文档：</p>
<ul>
<li><a href="https://quarto.org/docs/output-formats/html-themes.html">Quarto - HTML Theming</a></li>
<li><a href="https://quarto.org/docs/output-formats/html-themes-more.html">Quarto - More About Quarto Themes</a></li>
<li><code>quarto-cli</code> 下的 <code>/src/resources/formats/html/bootstrap/</code>：内有 Quarto 的 SCSS 定义，目录下还有各种官方主题的 SCSS 文件，可作参照。Tip: 善用 Github 搜索功能！</li>
</ul>
<p>我这边的修改主要是把定理做成了 callout 的样式，另外给 proof 尾部加了 QED symbol。</p>
<p>难绷的是 PDF，直接生成效果可谓一言难尽……还好，与 Pandoc 相似，Quarto 提供了设置 <code>template</code> 的功能，可使用稍加改动的 LaTeX 文件作为生成模板，从而完全控制文章 LaTeX 的生成方式，进而控制 PDF 输出的样式。可参考以下文档食用：</p>
<ul>
<li><a href="https://github.com/quarto-dev/quarto-cli/discussions/2543">complex thesis with quarto · Discussion #2543 · quarto-dev/quarto-cli · GitHub</a></li>
<li><a href="https://quarto.org/docs/journals/templates.html#templates">Quarto - Article Templates</a></li>
</ul>
<p>当然，这得在已有成熟 LaTeX 模板的前提下才能进行，所以还是得会 LaTeX（笑）。使用过程中笔者也发现生成的 LaTeX 的某些细节不太合理（如 <a href="https://github.com/quarto-dev/quarto-cli/issues/3736">Issue #3736</a>，详见 SunQuarTeX 仓库 README），当然也无伤大雅，且等开发团队慢慢完善吧。</p>
</section>
<section id="blog" class="level3">
<h3 class="anchored" data-anchor-id="blog">Blog</h3>
<p>有了前面的基础，再搭博客也就容易了。以笔者一贯的风格，博客样式都是要操刀大改的（上一个甚至直接从零手撸了 XD），这次工作却意外的少。一方面考虑到毕竟不在 CS 专业，写那么多祖传代码之后维护也是麻烦事；另一方面嘛……</p>
<blockquote class="blockquote">
<p>这，谁写的这 <code>darkly</code> 这主题，绿不拉几的</p>
<p>看一眼</p>
<p><code>#00bc8c</code>，啊这样</p>
<p>草</p>
<p>这样啊这样</p>
<p>加个背景</p>
<p>……</p>
<p>？</p>
<p>？？？</p>
<p>好像还挺配的？</p>
<p>——来自考试周还在摸鱼的 sun123zxy 的惊叹</p>
</blockquote>
<p>light mode 的 <code>flatly</code> 也还不错，直接丢上去没改了。唯一的缺憾是 <a href="https://github.com/quarto-dev/quarto-cli/issues/3705">Issue #3705</a>，按开发组成员的回复来看，短期内 light mode 和 dark mode 的相互分离还不能实现。</p>
<p>此外，关于代码高亮的自定义方式，可参考以下要点：</p>
<ul>
<li><a href="https://quarto.org/docs/output-formats/html-code.html#highlighting">Quarto - HTML Code Blocks # Highlighting</a></li>
<li><code>quarto-cli</code> 下的 <code>/src/resources/pandoc/highlight-styles/</code>：内有官方样式文件，可作为模板。</li>
<li>行内高亮不能在 <code>.theme</code> 中更改，可通过覆盖 SCSS 的 <code>$code-color</code> 设置。</li>
</ul>
</section>
</section>
<section id="画廊" class="level2">
<h2 class="anchored" data-anchor-id="画廊">画廊</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://blog.sun123zxy.top/posts/20221226-quarto-fantasia/quarto-begin.jpg" class="img-fluid figure-img"></p>
<figcaption>2022/12/26 上线前夕</figcaption>
</figure>
</div>


</section>

 ]]></description>
  <category>站点相关</category>
  <category>web</category>
  <category>LaTeX</category>
  <category>回忆</category>
  <guid>https://blog.sun123zxy.top/posts/20221226-quarto-fantasia/</guid>
  <pubDate>Sun, 25 Dec 2022 16:00:00 GMT</pubDate>
</item>
<item>
  <title>有限覆盖定理与实数理论</title>
  <dc:creator>sun123zxy </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20221213-cover/</link>
  <description><![CDATA[ 




<section id="example-1" class="level2">
<h2 class="anchored" data-anchor-id="example-1">Example 1</h2>
<p>为更好的证明本题，先引入 Bolzano-Weierstrass 定理的一种等价表述.</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="def-accu" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 1 (数列聚点)</strong></span> 对任意实数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D">，若实数 <img src="https://latex.codecogs.com/png.latex?a"> 满足：对 <img src="https://latex.codecogs.com/png.latex?a"> 的任意小邻域 <img src="https://latex.codecogs.com/png.latex?U(a,%20%5Cvarepsilon)%20=%20(a%20-%20%5Cvarepsilon,%20a%20+%20%5Cvarepsilon)">，都有无穷个 <img src="https://latex.codecogs.com/png.latex?x_n"> 满足 <img src="https://latex.codecogs.com/png.latex?x_n%20%5Cin%20U(a,%20%5Cvarepsilon)">，则称 <img src="https://latex.codecogs.com/png.latex?a"> 是数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的一个聚点.</p>
</div>
</div>
</div>
</div>
<p>请注意，这里我们没有使用建立在集合之上的标准的聚点定义. 对数列单独定义聚点，是考虑到数列允许重复的元素出现，如此定义更容易展开后面的讨论.</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-accuequiv" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1</strong></span> 实数 <img src="https://latex.codecogs.com/png.latex?a"> 是数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D%20%5Csubset%20%5Cmathbb%20R"> 的聚点的充要条件是：存在 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的一个收敛子列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_%7Bn_k%7D%20%5C%7D">，其极限为 <img src="https://latex.codecogs.com/png.latex?a">.</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>先证充分性. 用定义写开 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bk%20%5Cto%20%5Cinfty%7D%20%5C%7B%20x_%7Bn_k%7D%20%5C%7D%20=%20a">，就有 <img src="https://latex.codecogs.com/png.latex?%0A(%5Cforall%20%5Cvarepsilon%20%3E%200)(%5Cexists%20K%20%5Cin%20%5Cmathbb%20N_+)(%5Cforall%20k%20%3E%20K)(%7Cx_%7Bn_k%7D%20-%20a%7C%20%3C%20%5Cvarepsilon)%0A"> 故确有无穷项 <img src="https://latex.codecogs.com/png.latex?x_n"> 落在任意小的 <img src="https://latex.codecogs.com/png.latex?U(a,%20%5Cvarepsilon)"> 中，即 <img src="https://latex.codecogs.com/png.latex?a"> 是 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的一个聚点，该方向得证.</p>
<p>下证必要性. 已知 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 有一聚点 <img src="https://latex.codecogs.com/png.latex?a">. 我们按如下方法构造子列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_%7Bn_k%7D%20%5C%7D">：</p>
<ol type="1">
<li>当 <img src="https://latex.codecogs.com/png.latex?k=1">，取 <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_1%20=%201">，因为 <img src="https://latex.codecogs.com/png.latex?a"> 是 <img src="https://latex.codecogs.com/png.latex?E"> 的一个聚点，<img src="https://latex.codecogs.com/png.latex?%5Cexists%20n_1%20%5Cin%20%5Cmathbb%20N_+">，<img src="https://latex.codecogs.com/png.latex?%7Cx_%7Bn_1%7D%20-%20a%7C%20%3C%20%5Cvarepsilon">.</li>
<li>当 <img src="https://latex.codecogs.com/png.latex?k%20%5Cgeqslant%202">，取 <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_k%20=%20%5Cfrac%201%20k">，因为 <img src="https://latex.codecogs.com/png.latex?a"> 是 <img src="https://latex.codecogs.com/png.latex?E"> 的一个聚点， <img src="https://latex.codecogs.com/png.latex?%5Cexists%20n_k%20%3E%20n_%7Bk-1%7D">，<img src="https://latex.codecogs.com/png.latex?%7Cx_%7Bn_k%7D%20-%20a%7C%20%3C%20%5Cvarepsilon">.</li>
</ol>
<p>这样，我们构造出 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的一个子列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_%7Bn_k%7D%20%5C%7D"> 满足 <img src="https://latex.codecogs.com/png.latex?%7Cx_%7Bn_k%7D%20-%20a%7C%20%3C%20%5Cvarepsilon_k%20=%20%5Cfrac%201%20k">. 因此其收敛于 <img src="https://latex.codecogs.com/png.latex?a">，该方向得证.</p>
</div>
<p>上述定理立刻证明了下定理与 Bolzano-Weierstrass 定理的等价性.</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-bwequiv" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2 (数列聚点定理)</strong></span> 任意有界实数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 至少有一个聚点.</p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-finite2bw" class="theorem example">
<p><span class="theorem-title"><strong>Example 1</strong></span> 利用有限覆盖定理证明 Bolzano-Weierstrass 定理.</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>命题等价于用有限覆盖定理证明数列聚点定理. 用反证法. 假设一有界实数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 不存在聚点，设其有上界 <img src="https://latex.codecogs.com/png.latex?L"> 和下界 <img src="https://latex.codecogs.com/png.latex?l">. 对任意 <img src="https://latex.codecogs.com/png.latex?a%20%5Cin%20%5Bl,L%5D">，它都不是 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的聚点，因此总存在一个 <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon(a)%20%3E%200">，使得只有有限个 <img src="https://latex.codecogs.com/png.latex?x_n"> 落入 <img src="https://latex.codecogs.com/png.latex?U(a,%20%5Cvarepsilon(x_0))">. 这样，构造开区间族 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathscr%7BF%7D%20=%20%5C%7B%20U(a,%20%5Cvarepsilon(a))%20%5Cmid%20a%20%5Cin%20%5Bl,L%5D%20%5C%7D%0A"> 它显然是闭区间 <img src="https://latex.codecogs.com/png.latex?%5Bl,L%5D"> 的一个开覆盖. 由有限覆盖定理，只需取其中有限个开区间就可以覆盖住 <img src="https://latex.codecogs.com/png.latex?%5Bl,L%5D">，因此覆盖 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 也只需要有限个开区间. 然而由前述构造，每一个开区间中也只包含有限个 <img src="https://latex.codecogs.com/png.latex?x_n">，因此数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 只有有限项——这显然是荒谬的. 故 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 必有聚点，原命题得证.</p>
</div>
</section>
<section id="example-2" class="level2">
<h2 class="anchored" data-anchor-id="example-2">Example 2</h2>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-lebesgue" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 (Lebesgue 覆盖定理)</strong></span> 设开区间族 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 是闭区间 <img src="https://latex.codecogs.com/png.latex?%5Ba,%20b%5D"> 的一个开覆盖，则必存在 <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%3E%200">，使得只要区间 <img src="https://latex.codecogs.com/png.latex?%5COmega%20%5Csubset%20%5Ba,%20b%5D"> 且 <img src="https://latex.codecogs.com/png.latex?%5COmega"> 的长度 <img src="https://latex.codecogs.com/png.latex?%7C%5COmega%7C%20%3C%20%5Csigma">，就必有 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 中的一个开区间包含 <img src="https://latex.codecogs.com/png.latex?%5COmega">. 其中 <img src="https://latex.codecogs.com/png.latex?%5Csigma"> 称为 Lebesgue 数.</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>不妨只证 <img src="https://latex.codecogs.com/png.latex?%5COmega"> 是闭区间这种最强的情况.</p>
<p>用反证法. 假设命题不成立，则对任意 <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%3E%200">，都存在一个长度小于 <img src="https://latex.codecogs.com/png.latex?%5Csigma"> 的闭区间 <img src="https://latex.codecogs.com/png.latex?%5COmega%20%5Csubset%20%5Ba,b%5D">，它不被任何 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 中的开区间包含. 因此，对所有自然数 <img src="https://latex.codecogs.com/png.latex?n">，可取 <img src="https://latex.codecogs.com/png.latex?%5Csigma_n%20=%20%5Cfrac%201%20n">，按上述方法就可构造出一列闭区间 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20%5COmega_n%20%5C%7D%20=%20%5C%7B%20%5Ba_n,%20b_n%5D%20%5C%7D%20%5Csubset%20%5Ba,b%5D"> 其中每一个闭区间都不被任何 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 中的开区间包含，且区间长度 <img src="https://latex.codecogs.com/png.latex?%7C%5COmega_n%7C%20%3C%20%5Csigma_n%20=%20%5Cfrac%201%20n">，即 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D%20%7C%5COmega_n%7C%20=%200">.</p>
<p>因为 <img src="https://latex.codecogs.com/png.latex?%5COmega_n%20%5Csubset%20%5Ba,b%5D">，<img src="https://latex.codecogs.com/png.latex?%5C%7B%20a_n%20%5C%7D"> 有界，由 Bolzano-Weierstrass 定理，其存在一收敛子列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20a_%7Bn_k%7D%20%5C%7D">，设其极限为 <img src="https://latex.codecogs.com/png.latex?x_0">，极限保序性表明 <img src="https://latex.codecogs.com/png.latex?x_0%20%5Cin%20%5Ba,b%5D">. 注意到 <img src="https://latex.codecogs.com/png.latex?b_%7Bn_k%7D%20=%20a_%7Bn_k%7D%20+%20%7C%5COmega_%7Bn_k%7D%7C">，两端取 <img src="https://latex.codecogs.com/png.latex?k%20%5Cto%20%5Cinfty"> 即得 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bk%20%5Cto%20%5Cinfty%7D%20b_%7Bn_k%7D%20=%20x_0">. 综上，我们说明了 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20%5COmega_%7Bn_k%7D%20%5C%7D"> 收缩于 <img src="https://latex.codecogs.com/png.latex?x_0">.</p>
<p>但，因为 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 是闭区间 <img src="https://latex.codecogs.com/png.latex?%5Ba,b%5D"> 的一个开覆盖，故总存在一个开区间 <img src="https://latex.codecogs.com/png.latex?I_%7Bx_0%7D%20=%20(a_0,%20b_0)%20%5Cin%20%5Cmathscr%20F"> 使得 <img src="https://latex.codecogs.com/png.latex?x_0%20%5Cin%20I_%7Bx_0%7D">，而 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20%5COmega_%7Bn_k%7D%20%5C%7D"> 又收缩于 <img src="https://latex.codecogs.com/png.latex?x_0">，故存在 <img src="https://latex.codecogs.com/png.latex?k%20%5Cin%20%5Cmathbb%20N">，<img src="https://latex.codecogs.com/png.latex?%5COmega_%7Bn_k%7D%20%5Csubset%20I_%7Bx_0%7D%20%5Cin%20%5Cmathscr%20F">，这与我们构造 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20%5COmega_%7Bn_k%7D%20%5C%7D"> 的方法矛盾. 故原命题成立.</p>
</div>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>证明过程与用 Bolzano-Weierstrass 定理证明闭区间一致连续性定理类似.</p>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-lebesgue2bw" class="theorem example">
<p><span class="theorem-title"><strong>Example 2</strong></span> 用 Lebesgue 覆盖定理证明有限覆盖定理.</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>若 <img src="https://latex.codecogs.com/png.latex?%5Csigma"> 是覆盖 <img src="https://latex.codecogs.com/png.latex?%5Ba,b%5D"> 的开覆盖 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 的勒贝格数，令 <img src="https://latex.codecogs.com/png.latex?N%20=%20%5Clceil%20%5Cfrac%7B2(b-a)%7D%7B%5Csigma%7D%20%5Crceil">，<img src="https://latex.codecogs.com/png.latex?L%20=%20%5Cfrac%20%7Bb-a%7D%7BN%7D%20%5Cleqslant%20%5Cfrac%20%5Csigma%202%20%3C%20%5Csigma">. 由 Lebesgue 覆盖定理，任意长度为 <img src="https://latex.codecogs.com/png.latex?L"> 的 <img src="https://latex.codecogs.com/png.latex?%5Ba,b%5D"> 内闭区间都包含于某个 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 中的开区间. 因此对 <img src="https://latex.codecogs.com/png.latex?n%20=%201,2,%5Cdots,N">，令 <img src="https://latex.codecogs.com/png.latex?%5COmega_n%20=%20%5Cleft%5B%20a%20+%20(n-1)L,%20a%20+%20nL%20%5Cright%5D">，总存在一个 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 中开区间 <img src="https://latex.codecogs.com/png.latex?I_n"> 满足 <img src="https://latex.codecogs.com/png.latex?%5COmega_n%20%5Csubset%20I_n">. 因为显然 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20%5COmega_n%20%5C%7D_%7Bn=1%7D%5EN"> 是 <img src="https://latex.codecogs.com/png.latex?%5Ba,b%5D"> 的一个覆盖，故 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20I_n%20%5C%7D_%7Bn=1%7D%5EN%20%5Csubset%20%5Cmathscr%20F"> 也是 <img src="https://latex.codecogs.com/png.latex?%5Ba,b%5D"> 的覆盖. 这样，我们就成功构造出了一个 <img src="https://latex.codecogs.com/png.latex?%5Cmathscr%20F"> 的有限子覆盖 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20I_n%20%5C%7D_%7Bn=1%7D%5EN">，命题得证.</p>
</div>
<div class="proof remark">
<p><span class="proof-title"><em>Remark</em>. </span>在处理区间问题时，Lebsegue 覆盖定理很多时候比有限覆盖定理更好用. 例如处理闭区间一致连续性定理时，“落入两个有交点的相邻的这样的区间”<span class="citation" data-cites="lizhong">[1]</span>这种神乎其技的操作就可以省去了. （这种操作的严格叙述是：把单点连续性要求的区间半径改成 <img src="https://latex.codecogs.com/png.latex?2%20%5Cdelta_x">，但构造开覆盖还是用半径为 <img src="https://latex.codecogs.com/png.latex?%5Cdelta_x"> 的区间，这样可以有 <img src="https://latex.codecogs.com/png.latex?%7Cx_2%20-%20x%7C%20%5Cleqslant%20%7Cx_2%20-%20x_1%7C%20+%20%7Cx_1%20-%20x%7C%20%5Cleqslant%20%5Cdelta_%7Bm%7D%20+%20%5Cdelta_%7Bx%7D%20%5Cleqslant%202%20%5Cdelta_%7Bx%7D">，能把两个点放在同一个区间内了. 详细可参考 <a href="https://www.zhihu.com/question/56393706/answer/298562084" class="uri">https://www.zhihu.com/question/56393706/answer/298562084</a>. 事实上，Lebesgue 覆盖定理也可以用类似的方法证明.）</p>
</div>
<p>作为小结，下图展现了刚刚介绍的几个定理在整个实数完备性等价定理体系中的地位.</p>
<div id="fig-real" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-real-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="736.6pt" height="126.904pt" viewbox="0 -87.52 508 87.52">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M76.898095 77.3763L76.957783 77.24662C77.166845 77.3563 77.425908 77.51568 77.73466 77.74474C78.04372 77.9738 78.33247 78.21287 78.61122 78.47193C78.90028 78.72099 79.26872 79.10943 79.72716 79.61755V75.812242L79.66716 74.56724C79.93622 74.65662 80.13528 74.7463 80.27497 74.85599L80.25497 75.493492L80.24497 77.017555H83.64185V75.533492C83.64185 75.423805 83.62185 75.344117 83.58216 75.304117C83.54216 75.24443 83.43247 75.23443 83.24341 75.25443C83.05403 75.27443 82.6756 75.324117 82.08778 75.403805L82.07778 75.23443C82.44653 75.164742 82.6856 75.09505 82.81497 75.02537C82.93466 74.95568 83.02403 74.87599 83.08403 74.7863C83.14372 74.70662 83.18341 74.64693 83.19341 74.59693C83.20341 74.54724 83.21341 74.47755 83.22341 74.37787C83.48247 74.44755 83.71153 74.52724 83.93059 74.62693C84.12997 74.7363 84.23935 74.89599 84.23935 75.11505L84.24935 79.9063L84.44872 80.07568C84.5481 80.14537 84.5981 80.19505 84.6081 80.20505C84.6081 80.21505 84.53841 80.27474 84.40872 80.36443L83.87091 80.74318L83.51216 80.29474H80.21497L80.78278 81.2013C80.83278 81.27099 80.97216 81.51005 81.20122 81.91849L86.03247 81.90849C86.07216 81.90849 86.10216 81.92849 86.12216 81.95849C86.14216 81.98818 86.06247 82.08787 85.88309 82.25724L85.29528 82.81506L84.78716 82.15755H81.29091L81.82872 83.11381L82.08778 83.24349C82.18747 83.28318 82.23716 83.31318 82.23716 83.33287C82.23716 83.35287 82.17747 83.39287 82.06778 83.45255L81.24122 83.87099L81.13153 83.41255C81.10153 83.30318 81.04185 83.13381 80.96216 82.92443C80.87247 82.71537 80.76309 82.4563 80.61341 82.15755H77.79466L76.918095 82.19755L77.296533 81.76912L77.535595 81.8588C77.615283 81.88849 77.83435 81.90849 78.1831 81.90849H80.49403C80.26497 81.42037 79.93622 80.84255 79.51778 80.16537C79.09935 79.50787 78.64122 78.94005 78.1531 78.49193C77.66497 78.03349 77.246533 77.66505 76.898095 77.3763ZM80.24497 77.24662V78.51162H83.64185V77.24662H80.24497ZM80.24497 78.75068V80.06568H83.64185V78.75068H80.24497ZM90.4366 82.58599L90.7257 82.66568C90.8054 82.68537 90.845 82.71537 90.845 82.75537C90.855 82.78505 90.825 82.83506 90.7654 82.88474L90.0979 83.40287L89.6697 82.99443H88.4047L87.6675 83.46255L87.7472 82.16756V75.89193L87.6775 74.49724C87.7669 74.52724 87.8766 74.57693 88.036 74.65662C88.1754 74.7363 88.265 74.7863 88.295 74.8063C88.315 74.8163 88.3547 74.85599 88.4144 74.91568L88.3347 76.350055L88.3547 82.77505L89.7294 82.76505C89.5104 82.14756 89.2016 81.36068 88.7932 80.39443C89.0719 80.08568 89.2713 79.85662 89.3907 79.69724C89.5204 79.53787 89.6297 79.32849 89.7294 79.07943S89.8788 78.6013 89.8888 78.39224C89.8888 78.22287 89.8491 78.04349 89.7694 77.85443C89.6897 77.65505 89.5204 77.55537 89.2513 77.56537C89.2213 77.56537 89.1219 77.57537 88.9425 77.60537C88.7632 77.63505 88.6038 77.66505 88.4644 77.70505L88.4244 77.58537C88.7035 77.49568 88.8829 77.39599 88.9722 77.27662C89.0619 77.15693 89.1119 77.057555 89.1316 76.977867C89.1616 76.88818 89.1816 76.808492 89.1916 76.738805C89.58 76.808492 89.8688 76.947867 90.0482 77.15693C90.2475 77.3563 90.3669 77.53568 90.4069 77.70505C90.4566 77.87412 90.4866 78.08349 90.4866 78.34255C90.4766 78.6013 90.4069 78.87037 90.2772 79.12943C90.1479 79.40818 90.0182 79.59755 89.8888 79.71693C89.7694 79.83662 89.5104 80.07568 89.1019 80.44412L89.341 80.91255C89.4307 81.08162 89.7991 81.63943 90.4366 82.58599ZM94.5407 83.45255L94.2619 82.99443H91.7016L90.9647 83.42255L91.0244 82.10787L91.0144 75.782242C91.0144 75.61318 90.9944 75.493492 90.9547 75.403805C90.9147 75.324117 90.835 75.22443 90.7057 75.10505L91.3032 74.49724L91.4429 74.68662C91.5722 74.85599 92.18 75.364117 93.2857 76.22068L93.186 76.350055L91.6122 75.453805V79.31849H92.3791L92.4788 78.82068C92.5285 78.55162 92.6282 78.17318 92.7975 77.67505C92.9669 77.16693 93.3054 76.659117 93.8135 76.150992C94.3216 75.642867 94.8197 75.23443 95.3079 74.94568L95.3972 75.09505C95.4272 75.144742 95.5069 75.204742 95.6266 75.28443C95.736 75.354117 95.975 75.393805 96.3238 75.423805V75.533492C95.9354 75.642867 95.5666 75.762555 95.2479 75.92193C94.9094 76.061305 94.6104 76.25068 94.3316 76.469742C94.0425 76.688805 93.8535 76.85818 93.7538 76.977867C93.6541 77.087242 93.5447 77.21693 93.425 77.3663L93.7838 77.55537L94.67 78.0238C94.8097 78.11318 95.0288 78.22287 95.3275 78.36224L95.6963 78.34255C95.766 78.33255 95.8057 78.34255 95.8257 78.37224C95.8457 78.40224 95.8357 78.43193 95.7957 78.47193L95.1582 79.14943C94.8794 78.82068 94.6304 78.56162 94.431 78.38224C94.2119 78.20287 93.8535 77.92412 93.3354 77.53568L93.176 77.78474C93.0863 77.91412 92.9966 78.10349 92.8972 78.37224C92.8075 78.6313 92.7079 78.95005 92.6082 79.31849H94.3416V78.97005C94.5607 79.03974 94.7 79.08943 94.7597 79.10943C94.8197 79.13943 94.8694 79.16912 94.9094 79.18912C94.9591 79.21912 94.9988 79.2588 95.0488 79.3088L94.9891 80.48412V82.64568L95.2082 82.80505C95.2779 82.85474 95.3079 82.89474 95.3079 82.93443C95.3079 82.97443 95.2779 83.01412 95.2082 83.06412L94.5407 83.45255ZM91.6122 79.55755V81.04193H94.3416V79.55755H91.6122ZM91.6122 81.27099V82.75537H94.3416V81.27099H91.6122ZM100.0008 79.11943L99.6523 79.35849C99.5226 79.14943 99.3933 78.95005 99.2439 78.76068C99.0942 78.57162 98.8551 78.33255 98.5167 78.04349C98.1879 77.75474 97.9189 77.54568 97.7295 77.40599L97.142 76.987555C97.112 76.967867 97.0623 76.937867 97.0026 76.88818L97.0723 76.788492L97.3811 76.917867C97.4108 76.927867 97.5901 77.017555 97.9189 77.19693C98.2376 77.3563 98.4767 77.49568 98.6361 77.59537V75.682867L98.5764 74.67662C98.8651 74.7563 99.0845 74.83599 99.2439 74.91568L99.1739 75.742555V77.9738C99.4829 78.23287 99.7717 78.48193 100.0604 78.73099L100.2698 78.76068C100.3395 78.77068 100.3695 78.78068 100.3792 78.81068C100.3892 78.84037 100.3595 78.87037 100.2898 78.92005L100.1304 79.01974C100.4989 79.2488 100.8973 79.55755 101.3454 79.9463H105.7386C105.7683 79.9463 105.7883 79.95599 105.7983 79.98599C105.8083 80.00599 105.7883 80.03568 105.7386 80.08568L105.1408 80.67349L104.6526 80.17537H101.5648L101.8039 80.42443L101.9733 80.44412C102.0626 80.45412 102.1026 80.46412 102.1126 80.49412C102.1226 80.5238 102.0726 80.5638 101.9733 80.62349L101.4751 80.91255H104.2642V80.59381C104.4933 80.67349 104.7026 80.75318 104.8817 80.84255L104.832 81.43037V81.97818L105.0511 82.13755C105.1011 82.16756 105.1208 82.19755 105.1208 82.21724C105.1208 82.22724 105.1011 82.25724 105.0511 82.28693L104.5033 82.66568L104.1945 82.30693H102.7801V83.04412H105.8779C105.9176 83.04412 105.9476 83.05412 105.9576 83.07412C105.9676 83.1038 105.9476 83.1438 105.8979 83.19349L105.2801 83.84099L104.7223 83.28318H98.1879L97.2514 83.31318L97.6998 82.87474C97.8989 82.96443 98.0783 83.01412 98.2276 83.03412C98.377 83.03412 98.5664 83.04412 98.7954 83.04412H100.1901V82.30693H98.8751L98.2276 82.58599L98.2676 81.99818V81.03193L98.2276 80.45412C98.5167 80.53381 98.6661 80.5838 98.6958 80.59381C98.7258 80.60349 98.7558 80.63349 98.7954 80.66349V80.91255H101.3854C101.2958 80.72318 101.1664 80.49412 100.977 80.22505C100.7876 79.95599 100.4689 79.58755 100.0008 79.11943ZM98.7954 81.15162V82.07787H100.1901V81.15162H98.7954ZM100.7279 81.15162V82.07787H102.232V81.15162H100.7279ZM100.7279 82.30693V83.04412H102.232V82.30693H100.7279ZM102.7801 82.07787H104.2642V81.15162H102.7801V82.07787ZM97.3511 78.76068L97.3911 78.67099C97.7795 78.81068 98.1183 78.96005 98.417 79.12943C98.7158 79.2988 99.1542 79.58755 99.7417 80.00599L99.9908 80.02599C100.0408 80.03568 100.0704 80.04568 100.0804 80.06568C100.0904 80.09568 100.0704 80.11537 100.0408 80.14537L99.4229 80.61349C99.3236 80.44412 99.1542 80.23505 98.9151 79.98599C98.6761 79.73693 98.437 79.51787 98.1879 79.32849C97.9389 79.13943 97.6598 78.95005 97.3511 78.76068ZM102.5311 75.782242C102.232 75.60318 101.8736 75.423805 101.4451 75.24443C101.017 75.07505 100.4292 74.88599 99.672 74.69662L99.682 74.56724C100.4492 74.70662 101.0467 74.83599 101.4651 74.96568C101.8936 75.08505 102.3914 75.26443 102.9592 75.513492C103.567 75.24443 104.3539 75.02537 105.3101 74.85599L105.3501 74.98537C105.3798 75.06505 105.4495 75.144742 105.5492 75.23443C105.6689 75.324117 105.8779 75.374117 106.2067 75.403805V75.54318C105.7386 75.523492 105.3798 75.513492 105.1508 75.523492C104.9217 75.533492 104.6326 75.56318 104.2742 75.60318C103.9354 75.662867 103.6567 75.722555 103.4673 75.802242C103.8161 76.051305 104.1945 76.360055 104.6229 76.748492L104.9217 76.808492C104.9914 76.818492 105.0214 76.83818 105.0314 76.86818C105.0314 76.89818 105.0014 76.927867 104.9517 76.967867L104.3339 77.43599L103.9754 77.127242H102.0429L102.1723 77.24662L102.302 77.27662C102.3717 77.29662 102.4014 77.3163 102.4114 77.3363C102.4214 77.3663 102.3717 77.39599 102.282 77.43599L101.7539 77.64505L101.6345 77.41599C101.5248 77.21693 101.2858 76.937867 100.9273 76.57943C100.5786 76.22068 100.2698 75.941617 100.0008 75.732555L100.0508 75.632867C100.5189 75.86193 101.0267 76.21068 101.5748 76.668805C101.8039 76.439742 102.1226 76.140992 102.5311 75.782242ZM101.7242 76.798492L101.7939 76.88818H103.9354L103.7064 76.649117C103.7064 76.639117 103.5967 76.54943 103.3876 76.380055C103.1786 76.20068 103.0192 76.071305 102.9095 76.001617C102.4214 76.270367 102.1226 76.439742 102.0229 76.52943C101.9133 76.619117 101.8139 76.708805 101.7242 76.798492ZM104.4236 79.77693L104.1645 79.44818H101.7142L101.0767 79.66724L101.1264 79.06974V78.11318L101.0767 77.3563C101.2958 77.40599 101.4851 77.47568 101.6345 77.54568V77.73474H104.2442V77.48568C104.4833 77.53568 104.6626 77.62537 104.792 77.73474L104.7523 78.28255V79.09943L104.9217 79.2488C104.9814 79.2988 105.0114 79.32849 105.0114 79.35849S104.9814 79.41818 104.9117 79.46818L104.4236 79.77693ZM101.6345 77.9738V78.46193H104.2442V77.9738H101.6345ZM104.2442 78.70099H101.6345V79.21912H104.2442V78.70099ZM106.7858 75.144742L107.1246 74.68662C107.513 74.8063 107.9511 74.86599 108.4393 74.86599H116.0396C116.0896 74.86599 116.1193 74.87599 116.1293 74.90568C116.1493 74.92568 116.1193 74.97568 116.0396 75.06505L115.4321 75.702555L114.924 75.12505H114.3761V77.62537L114.6849 77.83443C114.7349 77.86443 114.7646 77.89412 114.7746 77.91412C114.7746 77.93412 114.7249 77.9838 114.6352 78.05349L114.0474 78.53162L113.689 78.07349H109.3058L108.5986 78.42224L108.6783 77.22662V75.12505H107.6921L106.7858 75.144742ZM109.2361 75.12505V77.83443H110.3618V75.12505H109.2361ZM110.9096 75.12505V77.83443H112.1149V75.12505H110.9096ZM112.643 75.12505V77.83443H113.7886V75.12505H112.643ZM107.5427 78.93005L107.7818 79.00974C107.9115 79.05974 108.2999 79.07943 108.9474 79.07943H115.7408C115.7908 79.07943 115.8105 79.08943 115.8305 79.10943C115.8305 79.13943 115.8205 79.16912 115.7908 79.19912L115.0736 79.9063L114.5555 79.3088H111.8261V80.44412H115.0136C115.0336 80.44412 115.0536 80.45412 115.0536 80.46412C115.0736 80.48412 115.0536 80.51412 115.0136 80.5638L114.3761 81.22131L113.8683 80.67349H111.8261V81.8488H115.4818C115.5018 81.8488 115.5118 81.8588 115.5218 81.8788C115.5318 81.90849 115.5118 81.93849 115.4818 81.97818L114.8543 82.64568L114.3265 82.07787H112.374L113.4199 83.08412L113.699 83.1638C113.7786 83.19349 113.8183 83.21349 113.8183 83.23349C113.8183 83.26318 113.7886 83.29318 113.7286 83.33287L112.9618 83.86099C112.8621 83.55224 112.7624 83.28318 112.663 83.06412C112.5633 82.84474 112.374 82.5163 112.0852 82.07787H108.509L107.513 82.10787L107.8915 81.71943L108.1105 81.77912C108.2502 81.8288 108.6086 81.8488 109.1865 81.8488H111.2283V80.67349H108.8377L107.8915 80.69318L108.2699 80.28474L108.499 80.36443C108.6386 80.41443 108.9274 80.44412 109.3558 80.44412H111.2283V79.3088H108.0908L107.2043 79.33849L107.5427 78.93005ZM109.4255 83.56224C109.6946 83.33287 109.8836 83.13381 109.9833 82.98443C110.083 82.83506 110.1527 82.68537 110.1727 82.53599C110.2024 82.38662 110.2424 82.28693 110.2721 82.21724C110.3121 82.15755 110.3718 82.12756 110.4515 82.11787C110.5211 82.10787 110.5808 82.13755 110.6508 82.19755C110.7105 82.25724 110.7602 82.32693 110.8102 82.39662C110.8599 82.4763 110.8799 82.55599 110.8799 82.63568C110.8799 82.72537 110.8299 82.84474 110.7305 82.99443C110.6208 83.1438 110.4415 83.26318 110.1924 83.37287C109.9433 83.48255 109.7043 83.57193 109.4852 83.65162L109.4255 83.56224ZM118.9397 78.89037L118.8203 78.24287C118.8103 78.19287 118.7606 77.9938 118.6609 77.64505C118.5712 77.29662 118.4018 76.87818 118.1628 76.360055C117.9337 75.86193 117.7343 75.503492 117.585 75.314117C117.4256 75.12505 117.2065 74.86599 116.9278 74.54724L117.0172 74.44755C117.595 74.90568 118.0134 75.324117 118.2625 75.692867C118.5215 76.061305 118.7006 76.360055 118.8203 76.589117C118.92 76.818492 119.0493 77.077242 119.1787 77.3663C119.3681 76.87818 119.5275 76.499742 119.6572 76.25068C119.7865 76.001617 119.9759 75.772555 120.2547 75.58318C120.5137 75.383805 120.7728 75.24443 121.0118 75.164742C121.2509 75.07505 121.6493 75.01537 122.2072 74.96568C122.755 74.91568 123.6912 74.85599 125.0162 74.7863L125.1556 75.05537C125.1856 75.11505 125.2553 75.174742 125.345 75.24443C125.4347 75.314117 125.6537 75.403805 125.9925 75.513492V75.622867C125.4047 75.55318 124.9365 75.503492 124.5678 75.483492C124.1993 75.473492 123.7212 75.463492 123.1334 75.483492C122.5459 75.483492 122.0975 75.503492 121.8087 75.533492V77.63505H124.5678C124.6078 77.63505 124.6375 77.64505 124.6475 77.67505C124.6575 77.69505 124.6375 77.73474 124.5778 77.79443L123.8706 78.49193L123.3428 77.86443H121.8087V79.76693H125.1256C125.2053 79.76693 125.2553 79.78693 125.2753 79.81662C125.285 79.84662 125.2553 79.9063 125.1856 79.97599L124.4684 80.63349L123.9503 80.00599H118.4318L117.9437 80.02599L118.2425 79.60755L118.4318 79.67724C118.5612 79.73693 118.8103 79.76693 119.1887 79.76693H121.1909V75.622867C120.8025 75.722555 120.4937 75.86193 120.2847 76.041305C120.0753 76.23068 119.8862 76.439742 119.7168 76.698805C119.5575 76.937867 119.4081 77.24662 119.2784 77.61537L119.4778 78.15318L119.7368 78.31255C119.8165 78.36224 119.8562 78.38224 119.8562 78.39224C119.8462 78.40224 119.7965 78.43193 119.7068 78.48193L118.9397 78.89037ZM118.5712 82.17755L118.5412 82.44631C118.5315 82.4663 118.5315 82.54599 118.5215 82.68537H118.3622L118.3322 82.32693C118.3222 82.25724 118.2925 82.14756 118.2425 81.97818C118.1828 81.8188 118.1131 81.67943 118.0434 81.55974C117.9637 81.43037 117.7543 81.2313 117.4256 80.96224C117.3359 80.87255 117.2962 80.80287 117.3062 80.73318S117.3459 80.60349 117.4059 80.53381C117.4756 80.46412 117.575 80.43443 117.7047 80.43443C117.874 80.42443 118.0434 80.50412 118.2028 80.64349C118.3722 80.80287 118.4715 81.00193 118.5015 81.28099C118.5315 81.54006 118.5612 81.76912 118.5712 81.94849H124.4781C124.299 81.56974 124.0997 81.1613 123.8706 80.71318L124 80.66349L124.1397 80.82287L124.3787 81.12162C124.4684 81.22131 124.5778 81.32068 124.6975 81.42037C124.8368 81.53005 124.9565 81.59974 125.0559 81.64943C125.1756 81.69943 125.305 81.72912 125.4643 81.74912L125.6437 81.76912C125.6934 81.77912 125.7334 81.79912 125.7434 81.8288C125.7534 81.8588 125.7334 81.89849 125.6834 81.94849L124.8468 82.67568L124.4184 82.17755H121.6393C121.8087 82.33693 121.9081 82.4763 121.9281 82.59599C121.9581 82.70537 121.9481 82.81506 121.8884 82.92443C121.8484 83.03412 121.7687 83.13381 121.6493 83.23349C121.5497 83.33287 121.2309 83.51224 120.7128 83.78131L120.6231 83.69162L120.8425 83.42255C120.8922 83.37287 120.9518 83.25318 121.0315 83.08412C121.1212 82.91474 121.1712 82.74537 121.1909 82.58599C121.2209 82.42662 121.2309 82.32693 121.2509 82.29693C121.2509 82.26724 121.2806 82.22724 121.3306 82.17755H118.5712ZM126.661 76.22068L127.1491 75.453805C127.4382 75.682867 127.7569 75.92193 128.1254 76.160992C128.4941 76.410055 129.3307 76.917867 130.6557 77.69505L130.546 77.80443C129.9482 77.54568 129.4304 77.3163 129.0019 77.127242V79.44818H130.3369C130.3766 79.44818 130.4066 79.45818 130.4263 79.48787C130.4463 79.51787 130.4066 79.57755 130.3169 79.66724L129.7888 80.16537L129.3707 79.66724H129.0019V82.24724H130.4166C130.4663 82.24724 130.506 82.25724 130.516 82.28693C130.536 82.31693 130.516 82.35693 130.4563 82.41662L129.8488 83.02412L129.3707 82.4863H127.3385L126.7607 82.5063L127.0894 82.15755C127.1991 82.21724 127.3385 82.24724 127.4879 82.24724H128.4044V79.66724H127.4679L126.91 79.68724L127.2488 79.2988C127.4082 79.39818 127.6075 79.44818 127.8466 79.44818H128.4044V76.88818L127.7269 76.57943C127.5975 76.50943 127.2388 76.390055 126.661 76.22068ZM128.9919 75.24443L129.4504 74.83599L129.6197 74.94568C129.6294 74.95568 129.7091 74.96568 129.8388 74.97568C129.9782 74.98537 130.0579 74.99537 130.0679 74.99537H135.945C136.0147 74.99537 136.0644 75.00537 136.0744 75.02537S136.0544 75.10505 135.9647 75.194742L135.3175 75.89193L134.7497 75.22443H133.3054V76.947867H135.666C135.716 76.947867 135.7557 76.957867 135.7757 76.977867C135.7857 76.997555 135.7457 77.057555 135.656 77.16693L135.0385 77.79443L134.5107 77.17693H133.3054V78.84037H134.7297V78.26287C134.9988 78.31255 135.1979 78.41224 135.3372 78.55162L135.2975 79.66724V82.5163L135.5366 82.70537C135.5963 82.75537 135.6263 82.79505 135.6363 82.81506C135.6363 82.85474 135.5763 82.90474 135.4669 82.98443L134.9091 83.35287L134.61 82.89474H131.5022L130.795 83.34287L130.8447 82.04787V79.35849L130.795 78.14318C131.1038 78.24287 131.3032 78.33255 131.4125 78.42224V78.84037H132.7275V77.17693H131.1935L130.4663 77.19693L130.795 76.788492C131.0141 76.89818 131.2632 76.947867 131.5519 76.947867H132.7275V75.22443H129.8588L128.9919 75.24443ZM131.4125 79.06974V80.69318H132.7275V79.06974H131.4125ZM131.4125 80.93224V82.65568H132.7275V80.93224H131.4125ZM133.3054 79.06974V80.69318H134.7297V79.06974H133.3054ZM134.7297 80.93224H133.3054V82.65568H134.7297V80.93224Z"></path>
<path d="M282.7545 78.71099H282.50544C282.39575 77.69505 282.25638 76.449742 280.50325 76.449742H279.68638C279.21825 76.449742 279.19825 76.51943 279.19825 76.84818V82.15755C279.19825 82.4963 279.19825 82.63568 280.1445 82.63568H280.47325V82.94443C280.11481 82.91474 279.20825 82.91474 278.79981 82.91474C278.41138 82.91474 277.634501 82.91474 277.285751 82.94443V82.63568H277.524814C278.29169 82.63568 278.31169 82.52599 278.31169 82.16756V76.917867C278.31169 76.55943 278.29169 76.449742 277.524814 76.449742H277.285751V76.140992H282.47544L282.7545 78.71099ZM287.9948 77.027555V77.58537H287.7458V77.027555C287.7458 76.449742 287.4967 76.390055 287.3873 76.390055C287.0586 76.390055 287.0186 76.83818 287.0186 76.88818V78.88037C287.0186 79.2988 287.0186 79.68724 286.66013 80.05568C286.27169 80.44412 285.77356 80.60349 285.29544 80.60349C284.47856 80.60349 283.79106 80.13537 283.79106 79.47787C283.79106 79.17912 283.99044 79.00974 284.2495 79.00974C284.52825 79.00974 284.70763 79.20912 284.70763 79.46818C284.70763 79.58755 284.65794 79.9163 284.1995 79.9263C284.46856 80.27474 284.95669 80.38443 285.27544 80.38443C285.76356 80.38443 286.33138 79.99599 286.33138 79.10943V78.74099C285.82325 78.71099 285.12606 78.68099 284.49856 78.38224C283.75138 78.04349 283.50231 77.52568 283.50231 77.087242C283.50231 76.280367 284.46856 76.031305 285.09606 76.031305C285.75356 76.031305 286.21169 76.429742 286.40106 76.89818C286.44075 76.499742 286.70981 76.081305 287.1779 76.081305C287.3873 76.081305 287.9948 76.22068 287.9948 77.027555ZM286.33138 77.53568C286.33138 76.589117 285.61419 76.25068 285.16575 76.25068C284.67763 76.25068 284.26919 76.599117 284.26919 77.097242C284.26919 77.64505 284.68763 78.47193 286.33138 78.53162V77.53568ZM293.3545 78.29255C293.3545 79.55755 292.3786 80.5438 291.2429 80.5438C290.4658 80.5438 290.0376 80.07568 289.8783 79.8963V83.05412L288.4439 82.94443V82.63568C289.1411 82.63568 289.2208 82.56599 289.2208 82.07787V76.140992H289.4698L289.8283 76.758492C289.9776 76.52943 290.3961 76.031305 291.1333 76.031305C292.3186 76.031305 293.3545 77.007555 293.3545 78.29255ZM292.5279 78.30255C292.5279 77.93412 292.5079 77.3363 292.2189 76.88818C292.0098 76.57943 291.6314 76.25068 291.0936 76.25068C290.6451 76.25068 290.2867 76.489742 290.0476 76.85818C289.9079 77.067242 289.9079 77.097242 289.9079 77.27662V79.32849C289.9079 79.51787 289.9079 79.52787 290.0176 79.68724C290.4061 80.24505 290.9539 80.32474 291.1929 80.32474C291.6414 80.32474 291.9998 80.06568 292.2389 79.68724C292.4979 79.2788 292.5279 78.71099 292.5279 78.30255Z"></path>
<path d="M298.1058 77.3263C298.1058 77.42599 298.0261 77.44599 297.9765 77.44599C297.8868 77.44599 297.8668 77.38599 297.8471 77.3063C297.4983 76.280367 296.6018 76.280367 296.5021 76.280367C296.0043 76.280367 295.6058 76.57943 295.3768 76.947867C295.0777 77.42599 295.0777 78.08349 295.0777 78.44193H297.8571C298.0761 78.44193 298.1058 78.44193 298.1058 78.6513C298.1058 79.63724 297.568 80.60349 296.323 80.60349C295.1674 80.60349 294.2511 79.57755 294.2511 78.33255C294.2511 76.997555 295.2968 76.031305 296.4424 76.031305C297.6577 76.031305 298.1058 77.137242 298.1058 77.3263ZM297.4486 78.6513H295.0877C295.1474 80.13537 295.9843 80.38443 296.323 80.38443C297.349 80.38443 297.4486 79.03974 297.4486 78.6513ZM301.9814 77.41599C301.9814 77.94412 301.6826 78.24287 301.5633 78.36224C301.2345 78.68099 300.8458 78.76068 300.4276 78.84037C299.8698 78.95005 299.2023 79.07943 299.2023 79.65724C299.2023 80.00599 299.4614 80.41443 300.3179 80.41443C301.4136 80.41443 301.4636 79.51787 301.4836 79.20912C301.4933 79.11943 301.6029 79.11943 301.6029 79.11943C301.7323 79.11943 301.7323 79.16912 301.7323 79.35849V80.36443C301.7323 80.53381 301.7323 80.60349 301.6229 80.60349C301.5729 80.60349 301.5533 80.60349 301.4236 80.48412C301.3939 80.44412 301.2942 80.35474 301.2542 80.32474C300.8758 80.60349 300.4673 80.60349 300.3179 80.60349C299.1026 80.60349 298.7242 79.9363 298.7242 79.37849C298.7242 79.02974 298.8836 78.75068 299.1526 78.53162C299.4714 78.27255 299.7501 78.21287 300.4673 78.07349C300.6864 78.03349 301.5033 77.87412 301.5033 77.15693C301.5033 76.649117 301.1548 76.25068 300.3776 76.25068C299.5411 76.25068 299.1823 76.818492 298.9933 77.66505C298.9633 77.79443 298.9533 77.83443 298.8536 77.83443C298.7242 77.83443 298.7242 77.76474 298.7242 77.58537V76.270367C298.7242 76.100992 298.7242 76.031305 298.8339 76.031305C298.8836 76.031305 298.8936 76.041305 299.0826 76.23068C299.1026 76.25068 299.1026 76.270367 299.282 76.459742C299.7201 76.041305 300.1686 76.031305 300.3776 76.031305C301.5233 76.031305 301.9814 76.698805 301.9814 77.41599Z"></path>
<path d="M307.1571 80.16537C307.1571 80.33474 307.0374 80.65349 306.649 80.65349C306.4499 80.65349 306.0115 80.59381 305.593 80.18537C305.1749 80.51412 304.7565 80.5438 304.5371 80.5438C303.6108 80.5438 302.9236 79.85662 302.9236 79.08943C302.9236 78.6513 303.1427 78.27255 303.3918 78.06349C303.2621 77.91412 303.083 77.58537 303.083 77.23662C303.083 76.927867 303.2124 76.54943 303.5211 76.350055C302.9236 76.180992 302.6049 75.752555 302.6049 75.354117C302.6049 74.63693 303.5908 74.08912 304.8061 74.08912C305.9815 74.08912 307.0177 74.59693 307.0177 75.374117C307.0177 75.722555 306.878 76.23068 306.3702 76.50943C305.8421 76.788492 305.2643 76.788492 304.6568 76.788492C304.4077 76.788492 303.9793 76.788492 303.9096 76.798492C303.5908 76.83818 303.3818 77.14693 303.3818 77.46568C303.3818 77.50568 303.3818 77.73474 303.5511 77.93412C303.9396 77.65505 304.348 77.62537 304.5371 77.62537C305.4636 77.62537 306.1508 78.31255 306.1508 79.07943C306.1508 79.44818 305.9915 79.81662 305.7424 80.04568C306.1011 80.38443 306.4596 80.43443 306.639 80.43443C306.639 80.43443 306.7086 80.43443 306.7386 80.42443C306.629 80.38443 306.5793 80.27474 306.5793 80.15537C306.5793 79.98599 306.7086 79.86662 306.868 79.86662C306.9677 79.86662 307.1571 79.9363 307.1571 80.16537ZM305.404 79.08943C305.404 78.82068 305.394 78.50193 305.2446 78.25287C305.1649 78.13318 304.9355 77.85443 304.5371 77.85443C303.6705 77.85443 303.6705 78.85037 303.6705 79.07943C303.6705 79.34849 303.6805 79.66724 303.8299 79.9163C303.9096 80.03568 304.1386 80.31474 304.5371 80.31474C305.404 80.31474 305.404 79.31849 305.404 79.08943ZM306.4996 75.354117C306.4996 74.8163 305.7924 74.31818 304.8161 74.31818C303.8102 74.31818 303.1227 74.82599 303.1227 75.354117C303.1227 75.812242 303.5011 76.180992 303.9396 76.21068H304.5274C305.384 76.21068 306.4996 76.21068 306.4996 75.354117ZM312.6365 76.140992V76.449742C311.939 76.449742 311.8593 76.51943 311.8593 77.007555V80.5438L310.3952 80.43443V80.12537C311.0924 80.12537 311.1721 80.05568 311.1721 79.56755V77.79443C311.1721 76.927867 310.694 76.25068 309.9668 76.25068C309.1299 76.25068 309.0902 76.718805 309.0902 77.23662V80.5438L307.6258 80.43443V80.12537C308.4027 80.12537 308.4027 80.09568 308.4027 79.20912V77.71474C308.4027 76.937867 308.4027 76.031305 309.9168 76.031305C310.4749 76.031305 310.913 76.310367 311.2018 76.927867V76.031305L312.6365 76.140992ZM316.98 77.3263C316.98 77.42599 316.9003 77.44599 316.8506 77.44599C316.7609 77.44599 316.7409 77.38599 316.7212 77.3063C316.3725 76.280367 315.4759 76.280367 315.3762 76.280367C314.8784 76.280367 314.48 76.57943 314.2509 76.947867C313.9518 77.42599 313.9518 78.08349 313.9518 78.44193H316.7312C316.9503 78.44193 316.98 78.44193 316.98 78.6513C316.98 79.63724 316.4422 80.60349 315.1972 80.60349C314.0415 80.60349 313.1253 79.57755 313.1253 78.33255C313.1253 76.997555 314.1709 76.031305 315.3165 76.031305C316.5318 76.031305 316.98 77.137242 316.98 77.3263ZM316.3228 78.6513H313.9618C314.0215 80.13537 314.8584 80.38443 315.1972 80.38443C316.2231 80.38443 316.3228 79.03974 316.3228 78.6513Z"></path>
<path d="M324.02958 79.11943L323.68114 79.35849C323.55145 79.14943 323.42208 78.95005 323.2727 78.76068C323.12301 78.57162 322.88395 78.33255 322.54551 78.04349C322.21676 77.75474 321.9477 77.54568 321.75833 77.40599L321.170827 76.987555C321.140827 76.967867 321.09114 76.937867 321.031452 76.88818L321.10114 76.788492L321.40989 76.917867C321.439577 76.927867 321.61895 77.017555 321.9477 77.19693C322.26645 77.3563 322.50551 77.49568 322.66489 77.59537V75.682867L322.6052 74.67662C322.89395 74.7563 323.11333 74.83599 323.2727 74.91568L323.2027 75.742555V77.9738C323.51176 78.23287 323.80051 78.48193 324.08926 78.73099L324.29864 78.76068C324.36833 78.77068 324.39833 78.78068 324.40801 78.81068C324.41801 78.84037 324.38833 78.87037 324.31864 78.92005L324.15926 79.01974C324.5277 79.2488 324.92614 79.55755 325.37426 79.9463H329.76739C329.79708 79.9463 329.81708 79.95599 329.82708 79.98599C329.83708 80.00599 329.81708 80.03568 329.76739 80.08568L329.16958 80.67349L328.68145 80.17537H325.59364L325.8327 80.42443L326.00208 80.44412C326.09145 80.45412 326.13145 80.46412 326.14145 80.49412C326.15145 80.5238 326.10145 80.5638 326.00208 80.62349L325.50395 80.91255H328.29301V80.59381C328.52208 80.67349 328.73145 80.75318 328.91051 80.84255L328.86083 81.43037V81.97818L329.07989 82.13755C329.12989 82.16756 329.14958 82.19755 329.14958 82.21724C329.14958 82.22724 329.12989 82.25724 329.07989 82.28693L328.53208 82.66568L328.22333 82.30693H326.80895V83.04412H329.90676C329.94645 83.04412 329.97645 83.05412 329.98645 83.07412C329.99645 83.1038 329.97645 83.1438 329.92677 83.19349L329.30895 83.84099L328.75114 83.28318H322.21676L321.280202 83.31318L321.72864 82.87474C321.9277 82.96443 322.10708 83.01412 322.25645 83.03412C322.40583 83.03412 322.5952 83.04412 322.82426 83.04412H324.21895V82.30693H322.90395L322.25645 82.58599L322.29645 81.99818V81.03193L322.25645 80.45412C322.54551 80.53381 322.69489 80.5838 322.72458 80.59381C322.75458 80.60349 322.78458 80.63349 322.82426 80.66349V80.91255H325.41426C325.32458 80.72318 325.1952 80.49412 325.00583 80.22505C324.81645 79.95599 324.4977 79.58755 324.02958 79.11943ZM322.82426 81.15162V82.07787H324.21895V81.15162H322.82426ZM324.75676 81.15162V82.07787H326.26083V81.15162H324.75676ZM324.75676 82.30693V83.04412H326.26083V82.30693H324.75676ZM326.80895 82.07787H328.29301V81.15162H326.80895V82.07787ZM321.37989 78.76068L321.41989 78.67099C321.80833 78.81068 322.14708 78.96005 322.44583 79.12943C322.74458 79.2988 323.18301 79.58755 323.77051 80.00599L324.01958 80.02599C324.06958 80.03568 324.09926 80.04568 324.10926 80.06568C324.11926 80.09568 324.09926 80.11537 324.06958 80.14537L323.45176 80.61349C323.35239 80.44412 323.18301 80.23505 322.94395 79.98599S322.46583 79.51787 322.21676 79.32849C321.9677 79.13943 321.68864 78.95005 321.37989 78.76068ZM326.55989 75.782242C326.26083 75.60318 325.90239 75.423805 325.47395 75.24443C325.04583 75.07505 324.45801 74.88599 323.70083 74.69662L323.71083 74.56724C324.47801 74.70662 325.07551 74.83599 325.49395 74.96568C325.92239 75.08505 326.4202 75.26443 326.98801 75.513492C327.59583 75.24443 328.3827 75.02537 329.33895 74.85599L329.37895 74.98537C329.40864 75.06505 329.47833 75.144742 329.57801 75.23443C329.6977 75.324117 329.90676 75.374117 330.23551 75.403805V75.54318C329.76739 75.523492 329.40864 75.513492 329.17958 75.523492C328.95051 75.533492 328.66145 75.56318 328.30301 75.60318C327.96426 75.662867 327.68551 75.722555 327.49614 75.802242C327.84489 76.051305 328.22333 76.360055 328.65176 76.748492L328.95051 76.808492C329.0202 76.818492 329.0502 76.83818 329.0602 76.86818C329.0602 76.89818 329.0302 76.927867 328.98052 76.967867L328.3627 77.43599L328.00426 77.127242H326.07176L326.20114 77.24662L326.33083 77.27662C326.40051 77.29662 326.4302 77.3163 326.4402 77.3363C326.4502 77.3663 326.40051 77.39599 326.31083 77.43599L325.7827 77.64505L325.66333 77.41599C325.55364 77.21693 325.31458 76.937867 324.95614 76.57943C324.60739 76.22068 324.29864 75.941617 324.02958 75.732555L324.07958 75.632867C324.5477 75.86193 325.05551 76.21068 325.60364 76.668805C325.8327 76.439742 326.15145 76.140992 326.55989 75.782242ZM325.75301 76.798492L325.8227 76.88818H327.96426L327.7352 76.649117C327.7352 76.639117 327.62551 76.54943 327.41645 76.380055C327.20739 76.20068 327.04801 76.071305 326.93833 76.001617C326.4502 76.270367 326.15145 76.439742 326.05176 76.52943C325.94208 76.619117 325.8427 76.708805 325.75301 76.798492ZM328.45239 79.77693L328.19333 79.44818H325.74301L325.10551 79.66724L325.1552 79.06974V78.11318L325.10551 77.3563C325.32458 77.40599 325.51395 77.47568 325.66333 77.54568V77.73474H328.27301V77.48568C328.51208 77.53568 328.69145 77.62537 328.82083 77.73474L328.78114 78.28255V79.09943L328.95051 79.2488C329.0102 79.2988 329.0402 79.32849 329.0402 79.35849S329.0102 79.41818 328.94052 79.46818L328.45239 79.77693ZM325.66333 77.9738V78.46193H328.27301V77.9738H325.66333ZM328.27301 78.70099H325.66333V79.21912H328.27301V78.70099ZM330.8147 75.144742L331.1534 74.68662C331.5418 74.8063 331.98 74.86599 332.4681 74.86599H340.0684C340.1184 74.86599 340.1481 74.87599 340.1581 74.90568C340.1781 74.92568 340.1481 74.97568 340.0684 75.06505L339.4609 75.702555L338.9528 75.12505H338.405V77.62537L338.7137 77.83443C338.7637 77.86443 338.7934 77.89412 338.8034 77.91412C338.8034 77.93412 338.7537 77.9838 338.664 78.05349L338.0762 78.53162L337.7178 78.07349H333.3347L332.6275 78.42224L332.7072 77.22662V75.12505H331.7209L330.8147 75.144742ZM333.265 75.12505V77.83443H334.3906V75.12505H333.265ZM334.9384 75.12505V77.83443H336.1437V75.12505H334.9384ZM336.6718 75.12505V77.83443H337.8175V75.12505H336.6718ZM331.5715 78.93005L331.8106 79.00974C331.9403 79.05974 332.3287 79.07943 332.9762 79.07943H339.7697C339.8197 79.07943 339.8393 79.08943 339.8593 79.10943C339.8593 79.13943 339.8493 79.16912 339.8197 79.19912L339.1025 79.9063L338.5843 79.3088H335.855V80.44412H339.0425C339.0625 80.44412 339.0825 80.45412 339.0825 80.46412C339.1025 80.48412 339.0825 80.51412 339.0425 80.5638L338.405 81.22131L337.8972 80.67349H335.855V81.8488H339.5106C339.5306 81.8488 339.5406 81.8588 339.5506 81.8788C339.5606 81.90849 339.5406 81.93849 339.5106 81.97818L338.8831 82.64568L338.3553 82.07787H336.4028L337.4487 83.08412L337.7278 83.1638C337.8075 83.19349 337.8472 83.21349 337.8472 83.23349C337.8472 83.26318 337.8175 83.29318 337.7575 83.33287L336.9906 83.86099C336.8909 83.55224 336.7912 83.28318 336.6918 83.06412C336.5922 82.84474 336.4028 82.5163 336.114 82.07787H332.5378L331.5418 82.10787L331.9203 81.71943L332.1393 81.77912C332.279 81.8288 332.6375 81.8488 333.2153 81.8488H335.2572V80.67349H332.8665L331.9203 80.69318L332.2987 80.28474L332.5278 80.36443C332.6675 80.41443 332.9562 80.44412 333.3847 80.44412H335.2572V79.3088H332.1197L331.2331 79.33849L331.5715 78.93005ZM333.4543 83.56224C333.7234 83.33287 333.9125 83.13381 334.0122 82.98443C334.1118 82.83506 334.1815 82.68537 334.2015 82.53599C334.2312 82.38662 334.2712 82.28693 334.3009 82.21724C334.3409 82.15755 334.4006 82.12756 334.4803 82.11787C334.55 82.10787 334.6097 82.13755 334.6797 82.19755C334.7393 82.25724 334.789 82.32693 334.839 82.39662C334.8887 82.4763 334.9087 82.55599 334.9087 82.63568C334.9087 82.72537 334.8587 82.84474 334.7593 82.99443C334.6497 83.1438 334.4703 83.26318 334.2212 83.37287C333.9722 83.48255 333.7331 83.57193 333.514 83.65162L333.4543 83.56224ZM342.9685 78.89037L342.8491 78.24287C342.8391 78.19287 342.7894 77.9938 342.6897 77.64505C342.6 77.29662 342.4307 76.87818 342.1916 76.360055C341.9625 75.86193 341.7632 75.503492 341.6138 75.314117C341.4544 75.12505 341.2354 74.86599 340.9566 74.54724L341.046 74.44755C341.6238 74.90568 342.0422 75.324117 342.2913 75.692867C342.5504 76.061305 342.7294 76.360055 342.8491 76.589117C342.9488 76.818492 343.0782 77.077242 343.2075 77.3663C343.3969 76.87818 343.5563 76.499742 343.686 76.25068C343.8154 76.001617 344.0047 75.772555 344.2835 75.58318C344.5425 75.383805 344.8016 75.24443 345.0407 75.164742C345.2797 75.07505 345.6782 75.01537 346.236 74.96568C346.7838 74.91568 347.72 74.85599 349.045 74.7863L349.1844 75.05537C349.2144 75.11505 349.2841 75.174742 349.3738 75.24443C349.4635 75.314117 349.6825 75.403805 350.0213 75.513492V75.622867C349.4335 75.55318 348.9654 75.503492 348.5966 75.483492C348.2282 75.473492 347.75 75.463492 347.1622 75.483492C346.5747 75.483492 346.1263 75.503492 345.8375 75.533492V77.63505H348.5966C348.6366 77.63505 348.6663 77.64505 348.6763 77.67505C348.6863 77.69505 348.6663 77.73474 348.6066 77.79443L347.8994 78.49193L347.3716 77.86443H345.8375V79.76693H349.1544C349.2341 79.76693 349.2841 79.78693 349.3041 79.81662C349.3138 79.84662 349.2841 79.9063 349.2144 79.97599L348.4972 80.63349L347.9791 80.00599H342.4607L341.9725 80.02599L342.2713 79.60755L342.4607 79.67724C342.59 79.73693 342.8391 79.76693 343.2175 79.76693H345.2197V75.622867C344.8313 75.722555 344.5225 75.86193 344.3135 76.041305C344.1041 76.23068 343.915 76.439742 343.7457 76.698805C343.5863 76.937867 343.4369 77.24662 343.3072 77.61537L343.5066 78.15318L343.7657 78.31255C343.8454 78.36224 343.885 78.38224 343.885 78.39224C343.875 78.40224 343.8254 78.43193 343.7357 78.48193L342.9685 78.89037ZM342.6 82.17755L342.57 82.44631C342.5604 82.4663 342.5604 82.54599 342.5504 82.68537H342.391L342.361 82.32693C342.351 82.25724 342.3213 82.14756 342.2713 81.97818C342.2116 81.8188 342.1419 81.67943 342.0722 81.55974C341.9925 81.43037 341.7832 81.2313 341.4544 80.96224C341.3647 80.87255 341.325 80.80287 341.335 80.73318S341.3747 80.60349 341.4347 80.53381C341.5044 80.46412 341.6038 80.43443 341.7335 80.43443C341.9029 80.42443 342.0722 80.50412 342.2316 80.64349C342.401 80.80287 342.5004 81.00193 342.5304 81.28099C342.5604 81.54006 342.59 81.76912 342.6 81.94849H348.5069C348.3279 81.56974 348.1285 81.1613 347.8994 80.71318L348.0288 80.66349L348.1685 80.82287L348.4075 81.12162C348.4972 81.22131 348.6066 81.32068 348.7263 81.42037C348.8657 81.53005 348.9854 81.59974 349.0847 81.64943C349.2044 81.69943 349.3338 81.72912 349.4932 81.74912L349.6725 81.76912C349.7222 81.77912 349.7622 81.79912 349.7722 81.8288C349.7822 81.8588 349.7622 81.89849 349.7122 81.94849L348.8757 82.67568L348.4472 82.17755H345.6682C345.8375 82.33693 345.9369 82.4763 345.9569 82.59599C345.9869 82.70537 345.9769 82.81506 345.9172 82.92443C345.8772 83.03412 345.7975 83.13381 345.6782 83.23349C345.5785 83.33287 345.2597 83.51224 344.7416 83.78131L344.6519 83.69162L344.8713 83.42255C344.921 83.37287 344.9807 83.25318 345.0604 83.08412C345.15 82.91474 345.2 82.74537 345.2197 82.58599C345.2497 82.42662 345.2597 82.32693 345.2797 82.29693C345.2797 82.26724 345.3094 82.22724 345.3594 82.17755H342.6ZM350.6898 76.22068L351.1779 75.453805C351.467 75.682867 351.7857 75.92193 352.1542 76.160992C352.5229 76.410055 353.3595 76.917867 354.6845 77.69505L354.5748 77.80443C353.977 77.54568 353.4592 77.3163 353.0307 77.127242V79.44818H354.3658C354.4054 79.44818 354.4354 79.45818 354.4551 79.48787C354.4751 79.51787 354.4354 79.57755 354.3458 79.66724L353.8176 80.16537L353.3995 79.66724H353.0307V82.24724H354.4454C354.4951 82.24724 354.5348 82.25724 354.5448 82.28693C354.5648 82.31693 354.5448 82.35693 354.4851 82.41662L353.8776 83.02412L353.3995 82.4863H351.3673L350.7895 82.5063L351.1182 82.15755C351.2279 82.21724 351.3673 82.24724 351.5167 82.24724H352.4332V79.66724H351.4967L350.9389 79.68724L351.2776 79.2988C351.437 79.39818 351.6364 79.44818 351.8754 79.44818H352.4332V76.88818L351.7557 76.57943C351.6264 76.50943 351.2676 76.390055 350.6898 76.22068ZM353.0207 75.24443L353.4792 74.83599L353.6486 74.94568C353.6583 74.95568 353.7379 74.96568 353.8676 74.97568C354.007 74.98537 354.0867 74.99537 354.0967 74.99537H359.9739C360.0436 74.99537 360.0932 75.00537 360.1033 75.02537C360.1132 75.04537 360.0832 75.10505 359.9936 75.194742L359.3464 75.89193L358.7786 75.22443H357.3342V76.947867H359.6948C359.7448 76.947867 359.7845 76.957867 359.8045 76.977867C359.8145 76.997555 359.7745 77.057555 359.6848 77.16693L359.0673 77.79443L358.5395 77.17693H357.3342V78.84037H358.7586V78.26287C359.0276 78.31255 359.2267 78.41224 359.3661 78.55162L359.3264 79.66724V82.5163L359.5654 82.70537C359.6251 82.75537 359.6551 82.79505 359.6651 82.81506C359.6651 82.85474 359.6051 82.90474 359.4957 82.98443L358.9379 83.35287L358.6389 82.89474H355.5311L354.8239 83.34287L354.8736 82.04787V79.35849L354.8239 78.14318C355.1326 78.24287 355.332 78.33255 355.4414 78.42224V78.84037H356.7564V77.17693H355.2223L354.4951 77.19693L354.8239 76.788492C355.0429 76.89818 355.292 76.947867 355.5807 76.947867H356.7564V75.22443H353.8876L353.0207 75.24443ZM355.4414 79.06974V80.69318H356.7564V79.06974H355.4414ZM355.4414 80.93224V82.65568H356.7564V80.93224H355.4414ZM357.3342 79.06974V80.69318H358.7586V79.06974H357.3342ZM358.7586 80.93224H357.3342V82.65568H358.7586V80.93224Z"></path>
<path d="M4.628741 42.66971L4.748116 42.58003L5.136554 43.13784C5.236241 43.26753 5.43562 43.59628 5.72437 44.12409V41.693464L5.66468 40.378777C5.91374 40.468464 6.09312 40.548152 6.20249 40.637527V41.464402H7.34812V40.896589C7.55718 40.986277 7.75655 41.085964 7.94562 41.195652L7.89593 42.21159V44.60221L8.0753 44.75159C8.17499 44.84128 8.22468 44.89096 8.22468 44.90096S8.17499 44.94096 8.0753 45.01065L7.52749 45.3694L7.23843 44.95096H6.28218L6.1728 45.02065L6.42155 45.65815C6.51124 45.87721 6.66062 46.35534 6.87999 47.09253H8.44374C8.53343 47.09253 8.59312 47.10253 8.59312 47.12253C8.61312 47.14221 8.59312 47.18221 8.54343 47.2319L7.89593 47.8594L7.4478 47.31159H5.146554L4.648741 47.34159L5.017179 46.93315C5.236241 47.04284 5.53499 47.09253 5.92374 47.09253H6.19249C6.09312 46.55471 5.95343 45.9569 5.76437 45.2994C5.58499 44.64221 5.206554 43.76534 4.628741 42.66971ZM6.20249 41.693464V44.7119H7.34812V41.693464H6.20249ZM6.8103 39.40253L6.89968 39.27284C7.16874 39.41253 7.4378 39.5619 7.71655 39.72128C7.98562 39.88065 8.25468 40.089714 8.52343 40.358777C8.79249 40.617839 8.97187 40.886589 9.07124 41.155652C9.16093 41.424714 9.22093 41.653777 9.25062 41.833152L9.3103 42.40065H10.6153V41.325027L10.55562 39.88065L10.70499 39.94034L10.89437 40.03003C10.90437 40.03003 10.94405 40.05003 11.01374 40.079714C11.08343 40.109714 11.15312 40.149714 11.22312 40.179402L11.16312 41.245339V42.40065H12.5978V40.557839C12.5978 40.448464 12.5878 40.368777 12.5578 40.338777C12.5278 40.309089 12.45812 40.279089 12.34874 40.259089C12.23905 40.249089 11.9203 40.289089 11.41218 40.378777L11.36249 40.229402C11.75093 40.139714 11.98999 40.05003 12.07968 39.94034C12.16937 39.84065 12.22905 39.75128 12.25905 39.68128C12.27874 39.61159 12.29874 39.5219 12.30874 39.41253C12.5778 39.48221 12.79687 39.5619 12.95624 39.68128C13.10562 39.78096 13.1853 39.98034 13.1853 40.259089V45.44909L13.39468 45.60846C13.48405 45.66815 13.52405 45.70784 13.52405 45.71784C13.52405 45.73784 13.49405 45.77753 13.42437 45.82753L12.80687 46.23596L12.47812 45.78753H10.98405C11.41218 46.30565 11.71124 46.6344 11.8803 46.75378C12.04968 46.88346 12.19905 46.97315 12.32874 47.00284L12.5678 47.05284C12.65749 47.07253 12.69718 47.09253 12.70718 47.11253C12.71718 47.14221 12.68718 47.18221 12.62749 47.2319L11.9403 47.80971L11.52187 47.37159H9.9678L10.49593 48.12846L10.76468 48.25815C10.85437 48.30784 10.90437 48.33784 10.90437 48.34753C10.91405 48.35753 10.86437 48.38753 10.77468 48.43721L9.9878 48.82565L9.87812 48.42721C9.85843 48.36753 9.76874 48.17846 9.60937 47.8694C9.45999 47.55065 9.3103 47.2619 9.15093 46.99284C9.01155 46.73409 8.87218 46.51471 8.75249 46.35534C8.63312 46.17596 8.38405 45.84753 8.00562 45.3594L8.0953 45.24971C8.30437 45.45878 8.54343 45.68815 8.83218 45.9569L8.84218 45.55846V44.6519C8.83218 44.10409 8.82249 43.56628 8.81249 43.04815C8.80249 42.52034 8.76249 42.0919 8.7128 41.773152C8.66312 41.434714 8.53343 41.075964 8.33437 40.687527C8.13499 40.299089 7.62687 39.87065 6.8103 39.40253ZM8.97187 46.09628C9.26062 46.42503 9.53968 46.77378 9.80843 47.13253H11.50187L11.32249 46.80378L11.05374 46.26565L10.75468 45.78753H9.47968L8.97187 46.09628ZM9.3103 42.62003L9.3703 43.96471H10.6153V42.62003H9.3103ZM9.3703 44.19378L9.38999 44.90096C9.38999 44.97065 9.39999 45.19003 9.40999 45.55846H10.6153V44.19378H9.3703ZM11.16312 42.62003V43.96471H12.5978V42.62003H11.16312ZM11.16312 44.19378V45.55846H12.5978V44.19378H11.16312ZM14.49161 41.972527L14.53161 41.833152C15.41791 42.072214 16.05571 42.31128 16.46381 42.53034C16.87221 42.7694 17.22101 42.96846 17.51971 43.15784L17.54971 42.98846C17.55971 42.91878 17.55971 42.7694 17.55971 42.56034C17.53971 42.35096 17.51971 42.1119 17.50011 41.842839C17.46011 41.574089 17.37041 41.275339 17.20101 40.916589C17.03161 40.577839 16.73291 40.309089 16.30441 40.119714C15.87631 39.93034 15.41791 39.76096 14.94971 39.59159L14.97971 39.44221C15.37821 39.5319 15.77661 39.63159 16.18511 39.74128C16.59351 39.86065 16.92221 40.02003 17.20101 40.239089C17.46011 40.438464 17.65941 40.657527 17.77881 40.886589C17.90821 41.115964 17.99791 41.335027 18.03791 41.564089C18.09761 41.793152 18.12761 42.012214 18.14721 42.23159C18.16721 42.44065 18.18721 42.64971 18.21721 42.83909L18.41631 42.94878C18.49601 42.99846 18.53601 43.02846 18.53601 43.04815C18.52601 43.05815 18.48601 43.08815 18.41631 43.11815L17.80881 43.3769C18.27691 43.76534 18.57571 44.0344 18.71511 44.16409C18.84471 44.29346 19.03381 44.50253 19.28291 44.77159C19.53191 44.44284 19.81101 44.12409 20.12971 43.82534C20.44851 43.50659 20.88661 43.23753 21.43471 43.00846C21.98261 42.7794 22.51041 42.57003 23.01851 42.39096L23.12791 42.62003C23.15791 42.68971 23.21761 42.7494 23.31721 42.82909C23.41691 42.88878 23.63601 42.94878 23.97471 42.99846V43.11815C23.12791 43.21753 22.52041 43.30721 22.16161 43.4069C21.78321 43.48659 21.42471 43.61596 21.06601 43.77534C20.70761 43.93471 20.41851 44.09409 20.18941 44.24378C19.97041 44.39315 19.71131 44.62221 19.41261 44.91096L19.50221 45.06034H21.51441V44.49253C21.56411 44.50253 21.67381 44.54253 21.83321 44.60221C21.99261 44.6519 22.10191 44.7119 22.17161 44.77159L22.12191 45.55846V47.78971L22.44071 48.05878C22.50041 48.10846 22.53041 48.13846 22.54041 48.14846C22.54041 48.15846 22.49041 48.20815 22.38101 48.27784L21.73351 48.70628L21.37471 48.19815H16.81261L16.15511 48.59659L16.19511 47.55065V45.2994L16.15511 44.22378C16.40411 44.27346 16.62321 44.36315 16.79261 44.49253V45.06034H18.68541C18.36661 44.64221 17.97821 44.23378 17.51971 43.82534C17.07161 43.4169 16.56351 43.04815 15.98571 42.70971C15.42791 42.37096 14.92011 42.1219 14.49161 41.972527ZM16.79261 45.2994V46.5844H18.82471V45.2994H16.79261ZM16.79261 46.82346V47.94909H18.82471V46.82346H16.79261ZM19.41261 45.2994V46.5844H21.51441V45.2994H19.41261ZM19.41261 46.82346V47.94909H21.51441V46.82346H19.41261ZM20.21941 43.32721L20.25911 42.42065V40.259089L20.21941 39.30284C20.55791 39.41253 20.79691 39.5419 20.92661 39.67128L20.89661 40.388777V42.66971L21.10601 42.81909C21.19571 42.86909 21.23541 42.90878 21.22541 42.91878C21.22541 42.92878 21.17571 42.95878 21.08601 42.99846L20.21941 43.32721ZM25.78891 48.33784L25.86861 47.15221C25.87861 46.97315 25.88861 46.48503 25.87861 45.67815C25.86861 44.87128 25.85891 44.26346 25.83891 43.84534C25.81891 43.4169 25.76921 42.93878 25.68951 42.39096C25.60981 41.852839 25.48011 41.394714 25.31081 41.016277C25.14141 40.637527 24.92231 40.229402 24.65361 39.79096L24.72331 39.70128C25.24111 40.269089 25.62951 40.856902 25.88861 41.494402C26.14761 42.1119 26.30701 42.71971 26.36671 43.30721C26.43641 43.89503 26.46641 44.54253 26.46641 45.27971C26.47641 45.9969 26.48641 46.82346 26.49641 47.74003H29.64391L29.56421 47.2819C29.54451 47.14221 29.45481 46.80378 29.28541 46.25565H28.29921L27.69171 46.6244L27.73141 45.68815V44.00471L27.67171 42.80909L27.74141 42.83909L27.97051 42.92878C28.06011 42.95878 28.14981 43.00846 28.23951 43.07815L28.24951 43.31721H29.75361V40.846902C29.75361 40.737214 29.72361 40.657527 29.65391 40.607839C29.59421 40.557839 29.47451 40.528152 29.27551 40.528152C29.09611 40.528152 28.66801 40.557839 28.00041 40.627839L27.98051 40.478152C28.48861 40.378777 28.81731 40.289089 28.96671 40.199402C29.11611 40.119714 29.20581 40.02003 29.23541 39.88065C29.27551 39.76096 29.30541 39.65159 29.31511 39.5719C29.62421 39.68128 29.84331 39.79096 29.97261 39.88065C30.10231 39.97034 30.18201 40.07003 30.23171 40.159402C30.28141 40.259089 30.30141 40.378777 30.30141 40.518152V43.31721L31.78581 43.32721L31.79581 43.02846C32.02481 43.07815 32.22391 43.15784 32.40331 43.28721L32.35361 44.18378V45.86721L32.56261 46.02659C32.63231 46.07659 32.67231 46.11628 32.68231 46.13628C32.68231 46.14628 32.62231 46.20596 32.49291 46.30565L31.98481 46.69409L31.66611 46.25565H29.53451C29.72361 46.5744 29.94301 46.91315 30.17201 47.2619L30.35141 47.33159C30.44081 47.36159 30.49081 47.38128 30.50081 47.40128S30.45081 47.46096 30.33141 47.52096L29.90291 47.74003H33.53891C33.56861 47.74003 33.59861 47.75003 33.62861 47.77003C33.65831 47.79971 33.58861 47.8794 33.43921 48.02878L32.91141 48.5369L32.41331 47.96909H26.52611L25.78891 48.33784ZM28.23951 44.93096V46.01659H31.78581V44.93096H28.23951ZM28.23951 43.56628L28.24951 44.6919H31.78581V43.56628H28.23951ZM25.86861 40.159402L25.94831 40.06003C26.44641 40.328777 26.88481 40.607839 27.26331 40.906589C27.63171 41.205339 28.04011 41.564089 28.46861 41.972527L28.67761 42.022214C28.76731 42.052214 28.81731 42.072214 28.82731 42.0919C28.83701 42.1019 28.78731 42.1519 28.67761 42.22159L28.02041 42.61003L27.79111 42.21159C27.62201 41.902839 27.38291 41.574089 27.08391 41.255339C26.79511 40.916589 26.38671 40.557839 25.86861 40.159402ZM31.22801 42.34096L31.34731 42.25128L31.72581 41.982527C32.07451 41.723464 32.33361 41.494402 32.48291 41.295027C32.64231 41.095964 32.77171 40.916589 32.86141 40.737214C32.95111 40.577839 33.02081 40.458464 33.06081 40.408464C33.09041 40.358777 33.13051 40.328777 33.17011 40.328777C33.20011 40.318777 33.24981 40.338777 33.29981 40.398464C33.35951 40.438464 33.40921 40.508152 33.44921 40.587839C33.51891 40.717214 33.54891 40.826902 33.53891 40.926589C33.53891 41.026277 33.48891 41.155652 33.37951 41.315027C33.27981 41.464402 33.02081 41.643777 32.60261 41.852839C32.17421 42.062214 31.73581 42.26128 31.28761 42.46065L31.22801 42.34096ZM34.38681 41.155652L34.87491 40.388777C35.16401 40.617839 35.48271 40.856902 35.85121 41.095964C36.21991 41.345027 37.05651 41.852839 38.38151 42.63003L38.27181 42.7394C37.67401 42.48065 37.15621 42.25128 36.72771 42.062214V44.38315H38.06271C38.10241 44.38315 38.13241 44.39315 38.15211 44.42284C38.17211 44.45284 38.13241 44.51253 38.04271 44.60221L37.51461 45.10034L37.09651 44.60221H36.72771V47.18221H38.14241C38.19211 47.18221 38.23181 47.19221 38.24181 47.2219C38.26181 47.2519 38.24181 47.2919 38.18211 47.35159L37.57461 47.95909L37.09651 47.42128H35.06431L34.48651 47.44128L34.81521 47.09253C34.92491 47.15221 35.06431 47.18221 35.21371 47.18221H36.13021V44.60221H35.19371L34.63581 44.62221L34.97461 44.23378C35.13401 44.33315 35.33331 44.38315 35.57241 44.38315H36.13021V41.823152L35.45271 41.514402C35.32331 41.444402 34.96461 41.325027 34.38681 41.155652ZM36.71771 40.179402L37.17621 39.77096L37.34551 39.88065C37.35521 39.89065 37.43491 39.90065 37.56461 39.91065C37.70401 39.92034 37.78371 39.93034 37.79371 39.93034H43.67081C43.74051 39.93034 43.79021 39.94034 43.80021 39.96034S43.78021 40.04003 43.69051 40.129714L43.04331 40.826902L42.47551 40.159402H41.03121V41.882839H43.39181C43.44181 41.882839 43.48151 41.892839 43.50151 41.912839C43.51151 41.932527 43.47151 41.992527 43.38181 42.1019L42.76431 42.7294L42.23651 42.1119H41.03121V43.77534H42.45551V43.19784C42.72461 43.24753 42.92371 43.34721 43.06301 43.48659L43.02331 44.60221V47.45128L43.26241 47.64034C43.32211 47.69034 43.35211 47.73003 43.36211 47.75003C43.36211 47.78971 43.30211 47.83971 43.19271 47.9194L42.63491 48.28784L42.33581 47.82971H39.22801L38.52081 48.27784L38.57051 46.98284V44.29346L38.52081 43.07815C38.82961 43.17784 39.02901 43.26753 39.13831 43.35721V43.77534H40.45331V42.1119H38.91931L38.19211 42.1319L38.52081 41.723464C38.73991 41.833152 38.98901 41.882839 39.27771 41.882839H40.45331V40.159402H37.58461L36.71771 40.179402ZM39.13831 44.00471V45.62815H40.45331V44.00471H39.13831ZM39.13831 45.86721V47.59065H40.45331V45.86721H39.13831ZM41.03121 44.00471V45.62815H42.45551V44.00471H41.03121ZM42.45551 45.86721H41.03121V47.59065H42.45551V45.86721Z"></path>
<path d="M81.27091 42.002214H78.32247L77.196845 42.042214L77.625283 41.584089L77.85435 41.673777C77.91403 41.683464 78.05341 41.703464 78.27278 41.723464C78.49185 41.743464 78.65122 41.753464 78.76091 41.753464H81.27091V40.677527L81.21122 39.33284C81.51997 39.41253 81.73903 39.50221 81.87872 39.59159L81.81872 40.767214V41.753464H86.14216C86.23153 41.743464 86.28153 41.753464 86.29153 41.793152C86.30153 41.813152 86.28153 41.852839 86.25153 41.902839L85.56435 42.60003L85.06622 42.002214H81.81872V43.16784H84.30903V42.64971C84.49841 42.7294 84.61809 42.7894 84.68778 42.80909C84.74747 42.84909 84.82716 42.89878 84.93684 42.98846L84.86685 44.20378V46.29565L85.14591 46.52471C85.19559 46.5744 85.2256 46.6144 85.2256 46.6344C85.23559 46.6444 85.19559 46.68409 85.10622 46.75378L84.50841 47.18221L84.17966 46.69409H82.60591C82.79497 46.86346 83.03403 47.09253 83.34278 47.38128C83.65185 47.67034 83.86091 47.8694 83.99028 47.98909L84.28935 48.02878C84.35903 48.03878 84.39872 48.05878 84.40872 48.08878C84.41872 48.12846 84.38872 48.16846 84.31903 48.23815L83.65185 48.81596L83.47247 48.41753C83.42247 48.30784 83.30309 48.11846 83.12372 47.82971C82.94435 47.55065 82.79497 47.33159 82.6856 47.19221C82.57591 47.03284 82.44653 46.87346 82.29716 46.69409H79.07966L78.32247 47.2619L78.38216 46.10628V43.75565L78.35247 42.50034C78.58153 42.57003 78.72091 42.62003 78.7706 42.64971C78.8206 42.68971 78.87028 42.7294 78.92028 42.7794V43.16784H81.27091V42.002214ZM78.92028 45.02065V46.46503H81.27091V45.02065H78.92028ZM78.92028 43.4069V44.78159H81.27091V43.4069H78.92028ZM81.81872 43.4069V44.78159H84.30903V43.4069H81.81872ZM81.81872 45.02065V46.46503H84.30903V45.02065H81.81872ZM79.07966 48.58659C79.4381 48.20815 79.68716 47.93909 79.80685 47.77003C79.94622 47.60065 80.04591 47.44128 80.1256 47.2719C80.20528 47.09253 80.26497 46.98284 80.30466 46.93315C80.33466 46.88346 80.38435 46.85346 80.44435 46.85346C80.49403 46.84346 80.55372 46.88346 80.62341 46.95315S80.7331 47.13253 80.7331 47.2719C80.7331 47.40128 80.66341 47.56065 80.52403 47.73003C80.39435 47.9094 79.93622 48.22815 79.15935 48.67628L79.07966 48.58659ZM87.0497 45.02065L87.2191 45.08034C87.2888 45.11034 87.4682 45.13003 87.7769 45.13003H88.2454V42.032214C88.2454 41.823152 88.2254 41.673777 88.1854 41.584089C88.1457 41.494402 88.066 41.384714 87.9463 41.255339L88.5641 40.767214C88.8729 41.305027 89.0422 41.584089 89.0519 41.603777C89.0619 41.623777 89.1616 41.763152 89.351 42.032214C89.5304 42.29128 89.6697 42.49034 89.7594 42.63003L89.6697 42.7294C89.4307 42.50034 89.1416 42.19159 88.7932 41.823152V44.96096L89.0222 45.17003C89.1119 45.25971 89.1616 45.3094 89.1516 45.3294C89.1516 45.3494 89.1119 45.38909 89.0222 45.45878L88.4744 45.84753L88.1257 45.37909H87.2591L86.771 45.39909L87.0497 45.02065ZM87.7372 48.68628L87.6475 48.5669C87.7769 48.43721 87.9166 48.27784 88.0957 48.07878C88.255 47.8794 88.3747 47.71003 88.4244 47.55065C88.4744 47.41128 88.5141 47.2719 88.5341 47.15221C88.5641 47.04284 88.5938 46.96315 88.6238 46.92315C88.7135 46.80378 88.8129 46.79378 88.9125 46.90315C89.0022 47.01284 89.0719 47.11253 89.1119 47.21221C89.1616 47.30159 89.1816 47.38128 89.1916 47.44128C89.1916 47.55065 89.1516 47.67034 89.0519 47.78971C88.9722 47.9094 88.7732 48.06878 88.4744 48.24815C88.1754 48.44721 87.9263 48.58659 87.7372 48.68628ZM90.1079 48.45721L90.1279 48.03878L90.1579 47.32159C90.1679 46.94315 90.1775 46.38534 90.1875 45.65815C90.1875 44.86128 90.1875 44.26346 90.1679 43.86503C90.1679 43.47659 90.1479 43.10815 90.1279 42.7894C90.1079 42.45065 90.0682 42.17159 89.9985 41.922527C89.9288 41.673777 89.8491 41.444402 89.7394 41.215339C89.6297 40.996277 89.4904 40.757214 89.291 40.478152C89.1119 40.219402 88.8032 39.88065 88.3847 39.49221L88.4844 39.37253L88.9425 39.74128C89.1019 39.87065 89.301 40.07003 89.55 40.338777C89.7991 40.607839 89.9785 40.846902 90.1079 41.055964C90.2375 41.255339 90.3469 41.494402 90.4466 41.783152C90.5563 42.072214 90.626 42.44065 90.6657 42.90878C90.7057 43.3669 90.7257 43.89503 90.7354 44.49253V46.26565C90.7354 46.6144 90.7354 47.14221 90.7454 47.83971H95.1085V40.986277C95.1085 40.816902 95.0985 40.697527 95.0885 40.627839C95.0785 40.557839 95.0488 40.508152 95.0088 40.458464C94.9591 40.408464 94.8594 40.388777 94.7 40.378777C94.5507 40.368777 94.1622 40.418464 93.5347 40.528152L93.5147 40.368777C93.9829 40.249089 94.2916 40.139714 94.4213 40.03003C94.5507 39.92034 94.6404 39.83096 94.67 39.74128C94.71 39.66159 94.7497 39.5619 94.7797 39.44221C95.2379 39.61159 95.4969 39.76096 95.5666 39.90065C95.6266 40.05003 95.6563 40.239089 95.6563 40.468464V47.64034L95.965 47.9294C96.015 47.97909 96.0447 47.99909 96.0447 48.00909C96.0547 48.01909 96.015 48.04878 95.9354 48.10846L95.2879 48.59659L94.8994 48.07878H90.835L90.1079 48.45721ZM90.9844 44.92096L91.3132 44.52253L91.4625 44.59221C91.5325 44.62221 91.7616 44.63221 92.13 44.63221H94.5707C94.72 44.63221 94.7897 44.6519 94.7997 44.6819C94.8097 44.7219 94.7897 44.76159 94.74 44.81128L94.1422 45.39909L93.7538 44.89096H93.0366V46.23596H94.5307C94.5807 46.23596 94.6104 46.24596 94.6104 46.27565C94.6204 46.30565 94.6104 46.32565 94.6004 46.33534L93.9829 46.96315L93.5447 46.44503H93.0366V47.13253L93.2657 47.31159C93.3354 47.36159 93.3654 47.39128 93.3654 47.41128C93.3654 47.41128 93.3154 47.44128 93.2257 47.49096L92.4688 47.81971L92.5185 47.03284V46.44503H91.4925L91.0444 46.46503L91.3132 46.08659C91.4825 46.16628 91.6719 46.20596 91.881 46.20596H92.5185V44.89096H91.4625L90.9844 44.92096ZM93.6441 44.16409L93.3554 43.74565H92.14L91.4825 44.12409L91.5225 43.24753V41.902839L91.4625 40.936589C91.7416 40.986277 91.901 41.026277 91.9407 41.065964C91.9907 41.105964 92.0204 41.145652 92.0504 41.175652V41.783152H93.455V41.275339C93.6244 41.315027 93.7338 41.345027 93.7838 41.364714C93.8335 41.384714 93.9232 41.454402 94.0525 41.564089L94.0029 42.24128V43.35721L94.2519 43.56628C94.3016 43.61596 94.3216 43.64596 94.3316 43.64596C94.3316 43.65596 94.2716 43.70565 94.1622 43.79534L93.6441 44.16409ZM92.0504 42.032214V43.49659H93.455V42.032214H92.0504ZM96.8233 42.31128L96.8829 42.18159C97.092 42.29128 97.3511 42.45065 97.6598 42.67971C97.9689 42.90878 98.2576 43.14784 98.5364 43.4069C98.8254 43.65596 99.1939 44.0444 99.6523 44.55253V40.747214L99.5923 39.50221C99.8614 39.59159 100.0604 39.68128 100.2001 39.79096L100.1801 40.428464L100.1701 41.952527H103.567V40.468464C103.567 40.358777 103.547 40.279089 103.5073 40.239089C103.4673 40.179402 103.3576 40.169402 103.1686 40.189402C102.9792 40.209402 102.6008 40.259089 102.0129 40.338777L102.0029 40.169402C102.3717 40.099714 102.6108 40.03003 102.7401 39.96034C102.8598 39.89065 102.9492 39.81096 103.0092 39.72128C103.0689 39.64159 103.1086 39.5819 103.1186 39.5319C103.1286 39.48221 103.1386 39.41253 103.1486 39.31284C103.4076 39.38253 103.6367 39.46221 103.8558 39.5619C104.0551 39.67128 104.1645 39.83096 104.1645 40.05003L104.1745 44.84128L104.3739 45.01065C104.4733 45.08034 104.5233 45.13003 104.5333 45.14003C104.5333 45.15003 104.4636 45.20971 104.3339 45.2994L103.7961 45.67815L103.4373 45.22971H100.1401L100.7079 46.13628C100.7579 46.20596 100.8973 46.44503 101.1264 46.85346L105.9576 46.84346C105.9973 46.84346 106.0273 46.86346 106.0473 46.89346C106.0673 46.92315 105.9876 47.02284 105.8083 47.19221L105.2204 47.75003L104.7123 47.09253H101.2161L101.7539 48.04878L102.0129 48.17846C102.1126 48.21815 102.1623 48.24815 102.1623 48.26784C102.1623 48.28784 102.1026 48.32784 101.9929 48.38753L101.1664 48.80596L101.0567 48.34753C101.0267 48.23815 100.967 48.06878 100.8873 47.8594C100.7976 47.65034 100.6883 47.39128 100.5386 47.09253H97.7198L96.8433 47.13253L97.2217 46.70409L97.4608 46.79378C97.5404 46.82346 97.7595 46.84346 98.1083 46.84346H100.4192C100.1901 46.35534 99.8614 45.77753 99.4429 45.10034C99.0245 44.44284 98.5664 43.87503 98.0783 43.4269C97.5901 42.96846 97.1717 42.60003 96.8233 42.31128ZM100.1701 42.18159V43.44659H103.567V42.18159H100.1701ZM100.1701 43.68565V45.00065H103.567V43.68565H100.1701ZM106.7658 41.972527L106.8058 41.833152C107.6921 42.072214 108.3299 42.31128 108.738 42.53034C109.1465 42.7694 109.4952 42.96846 109.794 43.15784L109.824 42.98846C109.834 42.91878 109.834 42.7694 109.834 42.56034C109.814 42.35096 109.794 42.1119 109.7743 41.842839C109.7343 41.574089 109.6446 41.275339 109.4752 40.916589C109.3058 40.577839 109.0071 40.309089 108.5786 40.119714C108.1505 39.93034 107.6921 39.76096 107.224 39.59159L107.254 39.44221C107.6524 39.5319 108.0508 39.63159 108.4593 39.74128C108.8677 39.86065 109.1965 40.02003 109.4752 40.239089C109.7343 40.438464 109.9336 40.657527 110.053 40.886589C110.1824 41.115964 110.2721 41.335027 110.3121 41.564089C110.3718 41.793152 110.4018 42.012214 110.4215 42.23159C110.4415 42.44065 110.4615 42.64971 110.4915 42.83909L110.6905 42.94878C110.7702 42.99846 110.8102 43.02846 110.8102 43.04815C110.8002 43.05815 110.7602 43.08815 110.6905 43.11815L110.083 43.3769C110.5511 43.76534 110.8499 44.0344 110.9893 44.16409C111.119 44.29346 111.308 44.50253 111.5571 44.77159C111.8061 44.44284 112.0852 44.12409 112.404 43.82534C112.7227 43.50659 113.1608 43.23753 113.709 43.00846C114.2568 42.7794 114.7846 42.57003 115.2927 42.39096L115.4021 42.62003C115.4321 42.68971 115.4918 42.7494 115.5915 42.82909C115.6911 42.88878 115.9102 42.94878 116.249 42.99846V43.11815C115.4021 43.21753 114.7946 43.30721 114.4358 43.4069C114.0574 43.48659 113.699 43.61596 113.3402 43.77534C112.9818 43.93471 112.6927 44.09409 112.4636 44.24378C112.2446 44.39315 111.9855 44.62221 111.6868 44.91096L111.7765 45.06034H113.7886V44.49253C113.8383 44.50253 113.948 44.54253 114.1074 44.60221C114.2668 44.6519 114.3761 44.7119 114.4458 44.77159L114.3961 45.55846V47.78971L114.7149 48.05878C114.7746 48.10846 114.8046 48.13846 114.8146 48.14846C114.8146 48.15846 114.7646 48.20815 114.6552 48.27784L114.0077 48.70628L113.649 48.19815H109.0868L108.4293 48.59659L108.4693 47.55065V45.2994L108.4293 44.22378C108.6783 44.27346 108.8974 44.36315 109.0668 44.49253V45.06034H110.9596C110.6408 44.64221 110.2524 44.23378 109.794 43.82534C109.3458 43.4169 108.8377 43.04815 108.2599 42.70971C107.7021 42.37096 107.1943 42.1219 106.7658 41.972527ZM109.0668 45.2994V46.5844H111.099V45.2994H109.0668ZM109.0668 46.82346V47.94909H111.099V46.82346H109.0668ZM111.6868 45.2994V46.5844H113.7886V45.2994H111.6868ZM111.6868 46.82346V47.94909H113.7886V46.82346H111.6868ZM112.4936 43.32721L112.5333 42.42065V40.259089L112.4936 39.30284C112.8321 39.41253 113.0711 39.5419 113.2008 39.67128L113.1708 40.388777V42.66971L113.3802 42.81909C113.4699 42.86909 113.5096 42.90878 113.4996 42.91878C113.4996 42.92878 113.4499 42.95878 113.3602 42.99846L112.4936 43.32721ZM118.9397 43.82534L118.8203 43.17784C118.8103 43.12784 118.7606 42.92878 118.6609 42.58003C118.5712 42.23159 118.4018 41.813152 118.1628 41.295027C117.9337 40.796902 117.7343 40.438464 117.585 40.249089C117.4256 40.06003 117.2065 39.80096 116.9278 39.48221L117.0172 39.38253C117.595 39.84065 118.0134 40.259089 118.2625 40.627839C118.5215 40.996277 118.7006 41.295027 118.8203 41.524089C118.92 41.753464 119.0493 42.012214 119.1787 42.30128C119.3681 41.813152 119.5275 41.434714 119.6572 41.185652C119.7865 40.936589 119.9759 40.707527 120.2547 40.518152C120.5137 40.318777 120.7728 40.179402 121.0118 40.099714C121.2509 40.01003 121.6493 39.95034 122.2072 39.90065C122.755 39.85065 123.6912 39.79096 125.0162 39.72128L125.1556 39.99034C125.1856 40.05003 125.2553 40.109714 125.345 40.179402C125.4347 40.249089 125.6537 40.338777 125.9925 40.448464V40.557839C125.4047 40.488152 124.9365 40.438464 124.5678 40.418464C124.1993 40.408464 123.7212 40.398464 123.1334 40.418464C122.5459 40.418464 122.0975 40.438464 121.8087 40.468464V42.57003H124.5678C124.6078 42.57003 124.6375 42.58003 124.6475 42.61003C124.6575 42.63003 124.6375 42.66971 124.5778 42.7294L123.8706 43.4269L123.3428 42.7994H121.8087V44.7019H125.1256C125.2053 44.7019 125.2553 44.7219 125.2753 44.75159C125.285 44.78159 125.2553 44.84128 125.1856 44.91096L124.4684 45.56846L123.9503 44.94096H118.4318L117.9437 44.96096L118.2425 44.54253L118.4318 44.61221C118.5612 44.6719 118.8103 44.7019 119.1887 44.7019H121.1909V40.557839C120.8025 40.657527 120.4937 40.796902 120.2847 40.976277C120.0753 41.165652 119.8862 41.374714 119.7168 41.633777C119.5575 41.872839 119.4081 42.18159 119.2784 42.55034L119.4778 43.08815L119.7368 43.24753C119.8165 43.29721 119.8562 43.31721 119.8562 43.32721C119.8462 43.33721 119.7965 43.3669 119.7068 43.4169L118.9397 43.82534ZM118.5712 47.11253L118.5412 47.38128C118.5315 47.40128 118.5315 47.48096 118.5215 47.62034H118.3622L118.3322 47.2619C118.3222 47.19221 118.2925 47.08253 118.2425 46.91315C118.1828 46.75378 118.1131 46.6144 118.0434 46.49471C117.9637 46.36534 117.7543 46.16628 117.4256 45.89721C117.3359 45.80753 117.2962 45.73784 117.3062 45.66815S117.3459 45.53846 117.4059 45.46878C117.4756 45.39909 117.575 45.3694 117.7047 45.3694C117.874 45.3594 118.0434 45.43909 118.2028 45.57846C118.3722 45.73784 118.4715 45.9369 118.5015 46.21596C118.5315 46.47503 118.5612 46.70409 118.5712 46.88346H124.4781C124.299 46.50471 124.0997 46.09628 123.8706 45.64815L124 45.59846L124.1397 45.75784L124.3787 46.05659C124.4684 46.15628 124.5778 46.25565 124.6975 46.35534C124.8368 46.46503 124.9565 46.53471 125.0559 46.5844C125.1756 46.6344 125.305 46.66409 125.4643 46.68409L125.6437 46.70409C125.6934 46.71409 125.7334 46.73409 125.7434 46.76378C125.7534 46.79378 125.7334 46.83346 125.6834 46.88346L124.8468 47.61065L124.4184 47.11253H121.6393C121.8087 47.2719 121.9081 47.41128 121.9281 47.53096C121.9581 47.64034 121.9481 47.75003 121.8884 47.8594C121.8484 47.96909 121.7687 48.06878 121.6493 48.16846C121.5497 48.26784 121.2309 48.44721 120.7128 48.71628L120.6231 48.62659L120.8425 48.35753C120.8922 48.30784 120.9518 48.18815 121.0315 48.01909C121.1212 47.84971 121.1712 47.68034 121.1909 47.52096C121.2209 47.36159 121.2309 47.2619 121.2509 47.2319C121.2509 47.20221 121.2806 47.16221 121.3306 47.11253H118.5712ZM126.661 41.155652L127.1491 40.388777C127.4382 40.617839 127.7569 40.856902 128.1254 41.095964C128.4941 41.345027 129.3307 41.852839 130.6557 42.63003L130.546 42.7394C129.9482 42.48065 129.4304 42.25128 129.0019 42.062214V44.38315H130.3369C130.3766 44.38315 130.4066 44.39315 130.4263 44.42284C130.4463 44.45284 130.4066 44.51253 130.3169 44.60221L129.7888 45.10034L129.3707 44.60221H129.0019V47.18221H130.4166C130.4663 47.18221 130.506 47.19221 130.516 47.2219C130.536 47.2519 130.516 47.2919 130.4563 47.35159L129.8488 47.95909L129.3707 47.42128H127.3385L126.7607 47.44128L127.0894 47.09253C127.1991 47.15221 127.3385 47.18221 127.4879 47.18221H128.4044V44.60221H127.4679L126.91 44.62221L127.2488 44.23378C127.4082 44.33315 127.6075 44.38315 127.8466 44.38315H128.4044V41.823152L127.7269 41.514402C127.5975 41.444402 127.2388 41.325027 126.661 41.155652ZM128.9919 40.179402L129.4504 39.77096L129.6197 39.88065C129.6294 39.89065 129.7091 39.90065 129.8388 39.91065C129.9782 39.92034 130.0579 39.93034 130.0679 39.93034H135.945C136.0147 39.93034 136.0644 39.94034 136.0744 39.96034S136.0544 40.04003 135.9647 40.129714L135.3175 40.826902L134.7497 40.159402H133.3054V41.882839H135.666C135.716 41.882839 135.7557 41.892839 135.7757 41.912839C135.7857 41.932527 135.7457 41.992527 135.656 42.1019L135.0385 42.7294L134.5107 42.1119H133.3054V43.77534H134.7297V43.19784C134.9988 43.24753 135.1979 43.34721 135.3372 43.48659L135.2975 44.60221V47.45128L135.5366 47.64034C135.5963 47.69034 135.6263 47.73003 135.6363 47.75003C135.6363 47.78971 135.5763 47.83971 135.4669 47.9194L134.9091 48.28784L134.61 47.82971H131.5022L130.795 48.27784L130.8447 46.98284V44.29346L130.795 43.07815C131.1038 43.17784 131.3032 43.26753 131.4125 43.35721V43.77534H132.7275V42.1119H131.1935L130.4663 42.1319L130.795 41.723464C131.0141 41.833152 131.2632 41.882839 131.5519 41.882839H132.7275V40.159402H129.8588L128.9919 40.179402ZM131.4125 44.00471V45.62815H132.7275V44.00471H131.4125ZM131.4125 45.86721V47.59065H132.7275V45.86721H131.4125ZM133.3054 44.00471V45.62815H134.7297V44.00471H133.3054ZM134.7297 45.86721H133.3054V47.59065H134.7297V45.86721Z"></path>
<path d="M177.87392 39.73128C177.98329 39.76096 178.10298 39.80096 178.25235 39.85065C178.39173 39.90065 178.50142 39.97034 178.5911 40.04003L178.5511 41.145652V47.09253L178.84017 47.2319C178.91985 47.2719 178.95954 47.30159 178.96954 47.31159S178.91985 47.36159 178.81017 47.42128L177.87392 47.8694L177.9436 46.67409V41.065964L177.87392 39.73128ZM178.72048 48.60659C179.10892 48.37753 179.38798 48.03878 179.57704 47.61065L179.73642 47.20221C179.76642 47.13253 179.78642 47.08253 179.8161 47.07253C179.8461 47.05284 179.8761 47.04284 179.91579 47.04284C179.98548 47.03284 180.05517 47.06253 180.14485 47.13253C180.22454 47.20221 180.28454 47.2919 180.31423 47.38128C180.32423 47.45128 180.33423 47.52096 180.32423 47.59065C180.32423 47.67034 180.28454 47.77971 180.20485 47.9294C180.12517 48.07878 179.8561 48.25815 179.38798 48.46721L178.90985 48.67628C178.87985 48.68628 178.83017 48.71628 178.76048 48.74596L178.72048 48.60659ZM181.69892 45.22971C181.50954 44.80159 181.23079 44.33315 180.87204 43.82534C180.5136 43.30721 180.16485 42.88878 179.8261 42.57003C179.47767 42.26128 179.15892 41.992527 178.85985 41.763152L178.92954 41.623777C179.8461 42.17159 180.5136 42.66971 180.94173 43.14784C181.37017 43.60596 181.7886 44.17378 182.21673 44.82128V41.683464C182.21673 41.594089 182.19704 41.534089 182.15704 41.494402C182.11735 41.454402 182.03767 41.434714 181.92798 41.454402C181.81829 41.454402 181.61923 41.484402 181.36017 41.534089C181.08142 41.574089 180.88204 41.603777 180.74267 41.623777L180.72267 41.474402C181.1711 41.345027 181.44985 41.235339 181.55954 41.145652C181.66892 41.055964 181.71892 40.956277 181.7386 40.866902C181.7386 40.777214 181.7386 40.677527 181.71892 40.567839C182.27673 40.697527 182.59548 40.856902 182.67517 41.045964C182.75485 41.235339 182.79454 41.424714 182.79454 41.623777V45.22971H184.53798C184.63735 45.22971 184.68735 45.23971 184.68735 45.24971C184.69735 45.25971 184.67735 45.28971 184.63735 45.3394L184.05985 45.9769L183.52173 45.45878H182.79454V46.6544L183.0436 46.75378C183.12329 46.78378 183.16329 46.81378 183.17329 46.83346C183.18298 46.86346 183.12329 46.90315 183.00392 46.96315L182.15704 47.34159L182.20704 46.22596L182.21673 45.45878H179.79642L179.05923 45.48878L179.42767 45.07034C179.55735 45.12034 179.70673 45.16003 179.8861 45.19003C180.06517 45.21971 180.19485 45.22971 180.27454 45.22971H181.69892ZM180.95173 47.9294L181.33048 47.48096C181.57923 47.59065 181.90798 47.65034 182.29641 47.65034H184.9961V40.647527C184.9961 40.478152 184.92642 40.388777 184.77704 40.378777C184.62735 40.358777 184.13954 40.418464 183.31267 40.557839L183.30267 40.388777C183.7411 40.299089 184.02985 40.189402 184.17923 40.06003C184.3286 39.92034 184.40829 39.80096 184.40829 39.70128C184.42829 39.61159 184.41829 39.5119 184.40829 39.41253C184.9761 39.5519 185.32485 39.71128 185.43423 39.90065C185.54392 40.089714 185.6036 40.259089 185.6036 40.408464V47.48096L185.87267 47.68034C185.93235 47.73003 185.96235 47.77003 185.96235 47.78971C185.97235 47.80971 185.92235 47.84971 185.82298 47.9194L185.17548 48.35753L184.84673 47.8994H181.7786L180.95173 47.9294ZM187.9859 48.32784L188.0756 47.04284V40.846902L187.7268 40.468464L188.424 39.92034L188.7627 40.468464H196.0046C196.0543 40.468464 196.0843 40.478152 196.1043 40.508152C196.124 40.538152 196.0743 40.607839 195.9646 40.737214L195.3671 41.355027L194.7296 40.707527H188.6334V47.55065L195.7756 47.56065C195.9049 47.56065 195.9746 47.57065 195.9846 47.59065C195.9946 47.62034 195.9546 47.67034 195.8849 47.74003L195.2674 48.39753L194.7296 47.79971H188.7231L187.9859 48.32784ZM188.7427 41.603777L188.8624 41.504402C189.2509 41.733464 189.7887 42.1119 190.4662 42.66971C191.1337 43.20753 191.6915 43.72565 192.1396 44.20378L192.3987 43.98471C192.5281 43.87503 192.7971 43.58628 193.1956 43.12784C193.584 42.65971 193.8531 42.33096 193.9924 42.1419L194.1915 41.842839C194.2712 41.733464 194.3412 41.673777 194.4109 41.653777C194.4806 41.653777 194.5502 41.693464 194.6099 41.773152C194.6896 41.872839 194.7196 42.002214 194.7096 42.17159C194.7096 42.35096 194.6996 42.47065 194.6896 42.55034C194.6696 42.61003 194.6299 42.68971 194.5502 42.7894C194.4906 42.86909 194.1418 43.17784 193.5343 43.68565L192.7971 44.27346C192.7274 44.33315 192.6277 44.42284 192.4884 44.55253C192.7971 44.92096 193.0362 45.21971 193.2156 45.44909C193.3946 45.67815 193.6537 46.02659 193.9924 46.48503L194.3809 46.56471C194.4606 46.5744 194.5006 46.5944 194.5102 46.6144C194.5202 46.6344 194.4706 46.68409 194.3609 46.77378L193.544 47.43128C193.4246 47.10253 193.3149 46.85346 193.2156 46.66409C193.1159 46.47503 192.9565 46.21596 192.7374 45.87721C192.5281 45.54846 192.299 45.21971 192.0599 44.89096L191.8009 45.07034L191.1434 45.53846L190.5359 45.9769C190.3068 46.12628 189.9381 46.36534 189.4402 46.67409L189.3606 46.5744L189.8584 46.16628L190.6652 45.50878L191.5021 44.79159C191.5518 44.74159 191.6415 44.6719 191.7612 44.57221C191.3527 44.0544 190.994 43.64596 190.6752 43.34721C190.3565 43.03846 190.0081 42.70971 189.6096 42.37096C189.2309 42.012214 188.9321 41.763152 188.7427 41.603777ZM197.7791 41.504402L197.7094 39.38253C197.9781 39.43221 198.2075 39.5219 198.3966 39.64159L198.3569 41.265339V46.6444L198.6656 46.86346C198.7153 46.89346 198.7453 46.93315 198.7553 46.96315C198.7553 46.99284 198.7253 47.02284 198.6756 47.04284L197.7094 47.45128L197.7791 45.62815V41.504402ZM198.6656 48.49721C198.9344 48.14846 199.0938 47.9194 199.1338 47.82971C199.1934 47.74003 199.2434 47.61065 199.3131 47.45128C199.3728 47.2919 199.4125 47.15221 199.4125 47.04284C199.4325 46.93315 199.4525 46.85346 199.4825 46.80378C199.5122 46.75378 199.5722 46.73409 199.6519 46.72409S199.8113 46.75378 199.8909 46.83346C199.9706 46.90315 200.0303 46.99284 200.07 47.08253C200.12 47.21221 200.13 47.34159 200.09 47.47096C200.06 47.59065 199.9106 47.76003 199.6319 47.96909C199.3728 48.17846 199.0641 48.38753 198.7353 48.59659L198.6656 48.49721ZM199.8509 41.185652C200.1 41.275339 200.3191 41.355027 200.4884 41.424714V41.833152H202.64V41.295027C202.9788 41.404714 203.1978 41.504402 203.2975 41.603777L203.2278 42.53034V45.3494L203.4569 45.54846C203.5266 45.60846 203.5566 45.65815 203.5566 45.68815C203.5466 45.71784 203.5166 45.75784 203.4669 45.78753L202.7994 46.19596L202.5206 45.74784L200.5581 45.75784L199.8709 46.16628L199.9206 44.90096V42.64971L199.8509 41.185652ZM200.4884 42.072214V43.74565H202.64V42.072214H200.4884ZM200.4884 43.97471V45.51878H202.64V43.98471L200.4884 43.97471ZM201.6638 47.68034L200.4784 47.70003L200.9369 47.2819L201.1659 47.34159C201.2953 47.37159 201.6738 47.41128 202.3016 47.45128H204.8416V40.687527C204.8416 40.528152 204.8116 40.408464 204.7519 40.338777C204.6922 40.269089 204.5725 40.239089 204.4031 40.259089L203.2178 40.378777V40.209402L203.6859 40.089714C203.8953 40.04003 204.0447 39.97034 204.1444 39.88065C204.2438 39.80096 204.3134 39.71128 204.3334 39.62159C204.3734 39.5219 204.3834 39.42253 204.3931 39.31284C204.7419 39.45221 204.9909 39.5819 205.1403 39.69128C205.2897 39.80096 205.3694 39.91065 205.4094 40.00003C205.4294 40.089714 205.4491 40.249089 205.4491 40.458464V47.2519L205.7381 47.51096C205.7878 47.55065 205.8178 47.58065 205.8278 47.60065C205.8278 47.62034 205.7878 47.66034 205.7081 47.71003L205.0309 48.18815L204.6522 47.68034H201.6638ZM207.0245 43.75565L207.0942 43.65596C207.4029 43.79534 207.682 43.93471 207.9607 44.0844C208.2198 44.23378 208.5085 44.42284 208.7976 44.6619C209.0863 44.89096 209.3951 45.15003 209.7138 45.43909V42.042214H207.8413L207.1638 42.062214L207.5723 41.653777C207.7117 41.693464 207.881 41.733464 208.0904 41.753464C208.2995 41.793152 208.4488 41.803152 208.5585 41.803152H210.6901C210.5207 41.544089 210.3316 41.295027 210.1123 41.035964C209.8932 40.796902 209.7038 40.617839 209.5445 40.528152C209.3851 40.438464 209.166 40.378777 208.8873 40.348777L209.1263 39.63159L209.7935 39.78096C209.9232 39.81096 210.431 39.87065 211.3076 39.97034C212.1645 40.07003 213.011 40.159402 213.8279 40.229402C213.9973 39.98034 214.1267 39.80096 214.1963 39.68128C214.2663 39.5619 214.336 39.46221 214.4157 39.38253C214.4754 39.29284 214.5651 39.30284 214.6745 39.40253C214.7742 39.50221 214.8142 39.64159 214.7942 39.84065C214.7841 40.02003 214.7445 40.159402 214.6945 40.259089C214.6448 40.338777 214.4554 40.508152 214.1166 40.757214C213.7979 40.996277 213.1904 41.265339 212.3238 41.574089L212.2838 41.464402L212.4532 41.345027L212.8316 41.115964C213.0907 40.956277 213.3698 40.737214 213.6685 40.448464C212.2242 40.388777 210.9491 40.348777 209.8235 40.338777L210.5107 40.866902C210.6601 40.996277 211.0288 41.305027 211.5966 41.803152H215.9895C216.0195 41.803152 216.0391 41.813152 216.0491 41.833152C216.0592 41.852839 216.0391 41.892839 215.9895 41.942527L215.342 42.56034L214.9038 42.042214H210.2716V42.93878H213.9376C213.9573 42.93878 213.9773 42.94878 213.9773 42.96846C213.9973 42.97846 213.9673 43.01846 213.9176 43.06815L213.3298 43.59628L212.9613 43.17784H210.2716V44.0844H213.7482C213.8079 44.0844 213.8379 44.09409 213.8379 44.10409C213.8479 44.12409 213.8279 44.15409 213.7882 44.19378L213.1904 44.74159L212.822 44.31346H210.2716V45.19003H213.3798C213.4195 45.19003 213.4395 45.20003 213.4395 45.21971C213.4495 45.24971 213.4395 45.26971 213.4095 45.2994L212.772 45.86721L212.4035 45.42909H210.2916L209.9032 45.66815L210.5207 46.39534C210.5804 46.46503 210.7498 46.69409 211.0288 47.09253H212.4632C212.5729 46.84346 212.752 46.51471 213.001 46.11628C213.2601 45.70784 213.6585 45.3394 214.2363 45.00065C214.7942 44.6619 215.1726 44.46284 215.342 44.39315C215.4516 44.59221 215.5513 44.7219 215.6507 44.80159C215.7604 44.86128 215.9398 44.92096 216.2085 44.95096V45.09034C215.8798 45.12034 215.601 45.17003 215.372 45.23971C215.1429 45.3094 214.8538 45.41909 214.5151 45.58846C214.1767 45.75784 213.8776 45.9369 213.6288 46.14628C213.3798 46.35534 213.2004 46.51471 213.1007 46.6344C212.991 46.76378 212.8717 46.91315 212.7423 47.09253H215.9498C215.9795 47.09253 215.9995 47.10253 216.0095 47.11253C216.0195 47.13253 215.9995 47.16221 215.9498 47.21221L215.2523 47.9094L214.7942 47.32159H211.1882C211.3776 47.59065 211.5466 47.8594 211.716 48.14846L211.9851 48.24815C212.0648 48.27784 212.1045 48.29784 212.0948 48.32784C212.0848 48.34753 212.0648 48.36753 212.0151 48.39753L211.1582 48.85565C211.0488 48.46721 210.9491 48.18815 210.8695 48.00909C210.7998 47.83971 210.6801 47.61065 210.5107 47.32159H208.0604L207.4029 47.35159L207.8213 46.93315C208.1301 47.04284 208.4588 47.09253 208.8273 47.09253H210.3613C210.192 46.80378 209.9429 46.44503 209.6342 46.0069C209.3154 45.56846 208.907 45.16003 208.3992 44.76159C207.891 44.38315 207.4329 44.0444 207.0245 43.75565ZM219.0986 43.82534L218.9792 43.17784C218.9692 43.12784 218.9195 42.92878 218.8199 42.58003C218.7302 42.23159 218.5608 41.813152 218.3217 41.295027C218.0927 40.796902 217.8933 40.438464 217.7439 40.249089C217.5845 40.06003 217.3655 39.80096 217.0867 39.48221L217.1761 39.38253C217.7539 39.84065 218.1724 40.259089 218.4214 40.627839C218.6805 40.996277 218.8595 41.295027 218.9792 41.524089C219.0789 41.753464 219.2083 42.012214 219.3377 42.30128C219.527 41.813152 219.6864 41.434714 219.8161 41.185652C219.9455 40.936589 220.1349 40.707527 220.4136 40.518152C220.6727 40.318777 220.9317 40.179402 221.1708 40.099714C221.4099 40.01003 221.8083 39.95034 222.3661 39.90065C222.9139 39.85065 223.8502 39.79096 225.1752 39.72128L225.3145 39.99034C225.3445 40.05003 225.4142 40.109714 225.5039 40.179402C225.5936 40.249089 225.8127 40.338777 226.1514 40.448464V40.557839C225.5636 40.488152 225.0955 40.438464 224.7267 40.418464C224.3583 40.408464 223.8802 40.398464 223.2924 40.418464C222.7049 40.418464 222.2564 40.438464 221.9677 40.468464V42.57003H224.7267C224.7667 42.57003 224.7964 42.58003 224.8064 42.61003C224.8164 42.63003 224.7964 42.66971 224.7367 42.7294L224.0295 43.4269L223.5017 42.7994H221.9677V44.7019H225.2845C225.3642 44.7019 225.4142 44.7219 225.4342 44.75159C225.4439 44.78159 225.4142 44.84128 225.3445 44.91096L224.6274 45.56846L224.1092 44.94096H218.5908L218.1027 44.96096L218.4014 44.54253L218.5908 44.61221C218.7202 44.6719 218.9692 44.7019 219.3477 44.7019H221.3499V40.557839C220.9614 40.657527 220.6527 40.796902 220.4436 40.976277C220.2342 41.165652 220.0452 41.374714 219.8758 41.633777C219.7164 41.872839 219.567 42.18159 219.4374 42.55034L219.6367 43.08815L219.8958 43.24753C219.9755 43.29721 220.0152 43.31721 220.0152 43.32721C220.0052 43.33721 219.9555 43.3669 219.8658 43.4169L219.0986 43.82534ZM218.7302 47.11253L218.7002 47.38128C218.6905 47.40128 218.6905 47.48096 218.6805 47.62034H218.5211L218.4911 47.2619C218.4811 47.19221 218.4514 47.08253 218.4014 46.91315C218.3417 46.75378 218.272 46.6144 218.2024 46.49471C218.1227 46.36534 217.9133 46.16628 217.5845 45.89721C217.4949 45.80753 217.4552 45.73784 217.4652 45.66815S217.5049 45.53846 217.5649 45.46878C217.6345 45.39909 217.7339 45.3694 217.8636 45.3694C218.033 45.3594 218.2024 45.43909 218.3617 45.57846C218.5311 45.73784 218.6305 45.9369 218.6605 46.21596C218.6905 46.47503 218.7202 46.70409 218.7302 46.88346H224.637C224.458 46.50471 224.2586 46.09628 224.0295 45.64815L224.1589 45.59846L224.2986 45.75784L224.5377 46.05659C224.6274 46.15628 224.7367 46.25565 224.8564 46.35534C224.9958 46.46503 225.1155 46.53471 225.2149 46.5844C225.3345 46.6344 225.4639 46.66409 225.6233 46.68409L225.8027 46.70409C225.8524 46.71409 225.8924 46.73409 225.9024 46.76378C225.9124 46.79378 225.8924 46.83346 225.8424 46.88346L225.0058 47.61065L224.5774 47.11253H221.7983C221.9677 47.2719 222.067 47.41128 222.087 47.53096C222.117 47.64034 222.107 47.75003 222.0474 47.8594C222.0074 47.96909 221.9277 48.06878 221.8083 48.16846C221.7086 48.26784 221.3899 48.44721 220.8717 48.71628L220.782 48.62659L221.0014 48.35753C221.0511 48.30784 221.1108 48.18815 221.1905 48.01909C221.2802 47.84971 221.3302 47.68034 221.3499 47.52096C221.3799 47.36159 221.3899 47.2619 221.4099 47.2319C221.4099 47.20221 221.4395 47.16221 221.4895 47.11253H218.7302ZM226.8199 41.155652L227.3081 40.388777C227.5971 40.617839 227.9159 40.856902 228.2843 41.095964C228.6531 41.345027 229.4896 41.852839 230.8146 42.63003L230.7049 42.7394C230.1071 42.48065 229.5893 42.25128 229.1609 42.062214V44.38315H230.4959C230.5356 44.38315 230.5656 44.39315 230.5852 44.42284C230.6052 44.45284 230.5656 44.51253 230.4759 44.60221L229.9477 45.10034L229.5296 44.60221H229.1609V47.18221H230.5756C230.6252 47.18221 230.6649 47.19221 230.6749 47.2219C230.6949 47.2519 230.6749 47.2919 230.6152 47.35159L230.0077 47.95909L229.5296 47.42128H227.4974L226.9196 47.44128L227.2484 47.09253C227.3581 47.15221 227.4974 47.18221 227.6468 47.18221H228.5634V44.60221H227.6268L227.069 44.62221L227.4077 44.23378C227.5671 44.33315 227.7665 44.38315 228.0056 44.38315H228.5634V41.823152L227.8859 41.514402C227.7565 41.444402 227.3977 41.325027 226.8199 41.155652ZM229.1509 40.179402L229.6093 39.77096L229.7787 39.88065C229.7884 39.89065 229.8681 39.90065 229.9977 39.91065C230.1371 39.92034 230.2168 39.93034 230.2268 39.93034H236.104C236.1737 39.93034 236.2234 39.94034 236.2334 39.96034S236.2134 40.04003 236.1237 40.129714L235.4765 40.826902L234.9087 40.159402H233.4643V41.882839H235.8249C235.8749 41.882839 235.9146 41.892839 235.9346 41.912839C235.9446 41.932527 235.9046 41.992527 235.8149 42.1019L235.1974 42.7294L234.6696 42.1119H233.4643V43.77534H234.8887V43.19784C235.1577 43.24753 235.3568 43.34721 235.4962 43.48659L235.4565 44.60221V47.45128L235.6956 47.64034C235.7552 47.69034 235.7852 47.73003 235.7952 47.75003C235.7952 47.78971 235.7352 47.83971 235.6259 47.9194L235.0681 48.28784L234.769 47.82971H231.6612L230.954 48.27784L231.0037 46.98284V44.29346L230.954 43.07815C231.2627 43.17784 231.4621 43.26753 231.5715 43.35721V43.77534H232.8865V42.1119H231.3524L230.6252 42.1319L230.954 41.723464C231.1731 41.833152 231.4221 41.882839 231.7109 41.882839H232.8865V40.159402H230.0177L229.1509 40.179402ZM231.5715 44.00471V45.62815H232.8865V44.00471H231.5715ZM231.5715 45.86721V47.59065H232.8865V45.86721H231.5715ZM233.4643 44.00471V45.62815H234.8887V44.00471H233.4643ZM234.8887 45.86721H233.4643V47.59065H234.8887V45.86721Z"></path>
<path d="M286.57517 38.68534C286.57517 38.71503 286.57517 38.73503 286.4058 38.9044C285.1608 40.159402 284.84205 42.042214 284.84205 43.56628C284.84205 45.2994 285.22049 47.03284 286.4458 48.27784C286.57517 48.39753 286.57517 48.41753 286.57517 48.44721C286.57517 48.5169 286.53517 48.5469 286.47549 48.5469C286.3758 48.5469 285.47955 47.8694 284.89174 46.6044C284.38361 45.50878 284.264237 44.40315 284.264237 43.56628C284.264237 42.7894 284.37361 41.584089 284.92174 40.458464C285.51924 39.23315 286.3758 38.58565 286.47549 38.58565C286.53517 38.58565 286.57517 38.61565 286.57517 38.68534Z"></path>
<path d="M287.40205 39.42253L287.461737 39.28284C288.129237 39.49221 288.64705 39.68128 289.0258 39.84065C289.38424 40.02003 289.68299 40.199402 289.91236 40.388777C290.14142 40.577839 290.34049 40.767214 290.51986 40.936589L291.00799 40.508152C291.06767 40.448464 291.17736 40.318777 291.34674 40.129714C291.45611 40.01003 291.52611 39.95034 291.5758 39.96034C291.61549 39.97034 291.66549 40.03003 291.71517 40.139714C291.77486 40.249089 291.80486 40.358777 291.81486 40.458464C291.81486 40.577839 291.78486 40.687527 291.72517 40.777214C291.66549 40.886589 291.5458 40.976277 291.37642 41.055964C291.20705 41.145652 291.02799 41.235339 290.83861 41.345027L291.10767 41.753464C291.21705 41.902839 291.39642 42.23159 291.66549 42.7594L291.92455 42.89878C292.02392 42.93878 292.07392 42.96846 292.07392 43.00846C292.08392 43.02846 292.03392 43.09815 291.92455 43.18784L291.33674 43.67596L291.00799 43.22753L289.97205 43.19784L290.17111 43.53628L290.34049 43.62596C290.38049 43.64596 290.40049 43.66596 290.41017 43.68565C290.42017 43.70565 290.41017 43.72565 290.40049 43.73565L289.6533 44.0844L289.49392 43.57628C289.48392 43.52628 289.43424 43.3969 289.34455 43.16784L287.601112 43.14784L287.929862 42.7494L288.06955 42.83909C288.139237 42.88878 288.29861 42.91878 288.55767 42.92878L289.23486 42.94878L288.9758 42.44065C288.92611 42.37096 288.81642 42.18159 288.62736 41.872839C289.25486 41.623777 289.6133 41.474402 289.72299 41.404714C289.83267 41.335027 289.93205 41.265339 290.04174 41.195652L289.69299 40.806902C289.55361 40.647527 289.32455 40.458464 288.9958 40.249089C288.66705 40.04003 288.40799 39.88065 288.20892 39.78096C288.01955 39.68128 287.7508 39.5619 287.40205 39.42253ZM289.25486 41.952527L289.84236 42.97846L291.08767 43.00846C290.8983 42.54034 290.74892 42.23159 290.65924 42.072214C290.56955 41.902839 290.46017 41.733464 290.35049 41.564089L289.25486 41.952527ZM287.441737 43.73565L287.551425 43.60596L288.17892 44.10409C288.30861 44.20378 288.54767 44.42284 288.88611 44.76159C289.21486 45.10034 289.55361 45.48878 289.90236 45.91721V44.82128L289.85236 44.0444C290.14142 44.12409 290.35049 44.21378 290.48986 44.31346L290.45017 44.86128V45.53846L290.97799 45.19003C291.10767 45.10034 291.24705 44.96096 291.37642 44.75159C291.51611 44.54253 291.61549 44.41284 291.67549 44.36315C291.74517 44.31346 291.82486 44.33315 291.91455 44.43284C292.01392 44.53253 292.05392 44.6519 292.02392 44.78159C291.99424 44.91096 291.93424 45.03065 291.82486 45.14003C291.71517 45.24971 291.5758 45.3394 291.37642 45.41909C291.19736 45.50878 291.02799 45.56846 290.8883 45.61815C290.74892 45.66815 290.59955 45.71784 290.45017 45.76784V46.14628H292.50205C292.59174 46.14628 292.64174 46.15628 292.65142 46.17596C292.67142 46.20596 292.64174 46.24596 292.58174 46.31565L292.06392 46.87346L291.64549 46.37534H290.45017V48.19815L290.69924 48.30784C290.84861 48.36753 290.84861 48.43721 290.68924 48.5069L289.85236 48.84565L289.90236 47.8594V46.37534H288.30861L287.611112 46.39534L287.969862 46.02659C288.17892 46.10628 288.3483 46.14628 288.48767 46.14628H289.39424C289.14517 45.72784 288.95611 45.41909 288.80642 45.21971C288.65705 45.03065 288.47767 44.80159 288.26861 44.55253C288.04955 44.30346 287.890175 44.12409 287.790487 44.0444C287.7008 43.95471 287.581425 43.84534 287.441737 43.73565ZM288.079237 48.08878L288.42799 47.69034C288.51767 47.58065 288.58736 47.45128 288.63736 47.30159L288.77674 46.78378C288.82642 46.69409 288.88611 46.6544 288.94611 46.6444C288.9958 46.6344 289.07549 46.68409 289.18517 46.79378C289.28455 46.89346 289.31455 47.02284 289.27486 47.19221C289.23486 47.37159 289.15517 47.51096 289.0258 47.63034C288.89611 47.74003 288.59736 47.9294 288.119237 48.17846L288.079237 48.08878ZM291.72517 48.45721L291.69517 48.42721C291.68549 48.41753 291.67549 48.38753 291.66549 48.32784C291.65549 48.27784 291.6058 48.15846 291.52611 47.97909C291.44642 47.79971 291.38642 47.67034 291.33674 47.58065L290.79892 46.67409C290.76892 46.6444 290.75892 46.6344 290.76892 46.6344L290.78892 46.6044C290.80861 46.5844 290.82861 46.5744 290.84861 46.5744S290.9583 46.6544 291.10767 46.81378L291.92455 47.65034C291.99424 47.74003 292.05392 47.77971 292.10361 47.78971L292.35267 47.79971C292.38267 47.80971 292.39267 47.81971 292.40267 47.82971C292.41236 47.84971 292.38267 47.8794 292.31299 47.93909L291.72517 48.45721ZM290.81861 39.41253L290.85861 39.27284C291.5958 39.5219 292.14361 39.73128 292.50205 39.92034C292.8608 40.109714 293.17955 40.328777 293.4583 40.577839C293.73736 40.836902 293.99642 41.115964 294.24549 41.424714C294.51424 41.055964 294.7633 40.737214 295.02236 40.458464C295.26143 40.169402 295.4408 39.98034 295.54049 39.90065C295.62986 39.80096 295.73955 39.71128 295.85924 39.62159L296.0383 39.87065C296.0583 39.92034 296.14799 39.97034 296.29736 40.02003C296.45674 40.06003 296.65611 40.07003 296.88517 40.04003L296.90517 40.129714C296.47674 40.328777 296.17799 40.488152 295.99861 40.597839C295.81924 40.717214 295.62986 40.856902 295.4408 41.016277C295.25142 41.165652 295.09205 41.305027 294.98236 41.434714C294.87299 41.564089 294.7433 41.733464 294.59392 41.962527L294.87299 42.57003C294.93267 42.68971 295.01236 42.91878 295.11205 43.26753C295.21174 43.61596 295.30111 43.96471 295.36111 44.30346C295.4408 44.6619 295.54049 45.27971 295.67986 46.16628H296.85518C296.88517 46.16628 296.91486 46.17596 296.93486 46.19596C296.94486 46.20596 296.92486 46.24596 296.86517 46.30565L296.19767 46.99284L295.67986 46.39534H293.4583C293.69736 47.04284 293.90674 47.60065 294.09611 48.04878L294.36486 48.16846C294.42455 48.19815 294.45455 48.22815 294.46455 48.24815C294.46455 48.27784 294.43455 48.30784 294.36486 48.34753L293.5083 48.81596L293.33892 47.8594C293.28924 47.58065 293.21924 47.2919 293.14955 47.01284C293.07986 46.71409 292.97049 46.37534 292.8408 45.9569C292.71142 45.55846 292.58174 45.20003 292.47236 44.90096C292.35267 44.60221 292.16361 44.20378 291.90455 43.69565L292.03392 43.61596C292.40267 44.17378 292.65142 44.57221 292.77111 44.82128C292.8908 45.06034 293.02017 45.3394 293.15955 45.65815L293.26924 44.79159C293.29892 44.50253 293.35892 44.17378 293.42861 43.78534C293.5083 43.3969 293.58799 43.07815 293.66767 42.81909C293.74736 42.56034 293.85674 42.25128 293.98642 41.902839C293.73736 41.554089 293.4583 41.215339 293.15955 40.876589C292.8608 40.538152 292.49205 40.249089 292.05392 40.01003C291.6058 39.77096 291.19736 39.5719 290.81861 39.41253ZM295.04236 46.16628L294.92267 44.96096C294.89299 44.7119 294.84299 44.38315 294.7633 43.98471C294.67361 43.58628 294.60392 43.29721 294.54424 43.12784C294.49455 42.95878 294.39486 42.7294 294.26517 42.44065L294.03611 43.03846C293.96642 43.22753 293.87674 43.54628 293.75736 43.99471C293.63767 44.44284 293.54799 44.84128 293.5083 45.17003C293.44861 45.49878 293.40861 45.83753 293.37861 46.16628H295.04236ZM297.3246 39.85065L297.3646 39.74128C298.0918 40.04003 298.779 40.448464 299.4365 40.956277C300.094 41.464402 300.5821 42.002214 300.9209 42.55034C301.2396 43.09815 301.4787 43.58628 301.6181 44.00471C301.7574 44.42284 301.9068 44.90096 302.0562 45.43909L302.3053 45.61815C302.3653 45.66815 302.3949 45.70784 302.3949 45.71784S302.3653 45.76784 302.3053 45.81753L301.6381 46.27565L301.2593 45.78753H299.8349C300.2037 46.6444 300.3928 47.10253 300.4228 47.17221C300.4428 47.2319 300.4824 47.34159 300.5321 47.49096H302.9231C302.9628 47.49096 302.9928 47.50096 303.0128 47.51096C303.0224 47.52096 302.9828 47.58065 302.8831 47.69034L302.3053 48.28784L301.7774 47.72003H298.2312L297.6237 47.74003L298.0021 47.37159C298.1315 47.43128 298.2212 47.47096 298.2512 47.47096C298.2909 47.49096 298.3509 47.49096 298.4403 47.49096H299.8749C299.7753 47.10253 299.6556 46.72409 299.5262 46.35534C299.3968 45.9869 299.2571 45.65815 299.1078 45.3494C298.9684 45.04065 298.789 44.7119 298.5599 44.35315C298.3309 43.99471 298.1515 43.72565 298.0121 43.54628C297.8628 43.35721 297.6834 43.13784 297.4743 42.88878L297.5637 42.81909C297.8628 43.06815 298.1118 43.30721 298.3309 43.52628C298.5299 43.75565 298.789 44.0544 299.0878 44.44284C299.2174 44.25346 299.3268 44.0644 299.4265 43.86503C299.5162 43.65596 299.5959 43.3969 299.6456 43.07815L299.6756 42.85909C299.6856 42.7494 299.7156 42.68971 299.7453 42.66971C299.7953 42.64003 299.8649 42.64971 299.9646 42.70971C300.054 42.7694 300.1337 42.86909 300.1837 43.00846C300.2234 43.13784 300.2334 43.27753 300.2234 43.4069C300.2134 43.53628 300.124 43.69565 299.9646 43.88503C299.7953 44.0744 299.5362 44.31346 299.1874 44.60221C299.3768 44.89096 299.5562 45.20003 299.7353 45.54846H301.4187L301.359 45.17003C301.3293 44.96096 301.1996 44.50253 300.9806 43.78534C300.7415 43.07815 300.3728 42.45065 299.8449 41.892839C299.3268 41.355027 298.8487 40.916589 298.4106 40.587839C297.9621 40.259089 297.6037 40.02003 297.3246 39.85065ZM303.939 42.16159L303.8893 43.14784V46.55471L304.1084 46.68409C304.1781 46.73409 304.2181 46.77378 304.2278 46.79378C304.2278 46.83346 304.1781 46.86346 304.0684 46.91315L303.2318 47.30159L303.3015 45.84753V43.14784L303.2318 41.922527C303.5206 41.982527 303.7496 42.062214 303.939 42.16159ZM303.3315 40.518152L303.8096 40.378777C304.1481 40.269089 304.3674 40.159402 304.4668 40.04003C304.5765 39.94034 304.6362 39.84065 304.6462 39.76096C304.6562 39.68128 304.6662 39.59159 304.6662 39.49221C305.0446 39.5819 305.3137 39.68128 305.4631 39.81096C305.6124 39.94034 305.7221 40.07003 305.7818 40.199402C305.8515 40.338777 305.8815 40.498152 305.8815 40.687527V47.93909L306.0706 48.08878C306.1703 48.15846 306.2203 48.20815 306.2003 48.23815C306.2003 48.26784 306.1406 48.29784 306.0509 48.33784L305.194 48.69628L305.234 47.49096V41.016277C305.234 40.787214 305.204 40.627839 305.1343 40.538152C305.0646 40.448464 304.8156 40.448464 304.3674 40.518152L303.5706 40.647527C303.5206 40.657527 303.4509 40.667527 303.3612 40.687527L303.3315 40.518152Z"></path>
<path d="M309.95773 43.56628C309.95773 44.34315 309.84836 45.54846 309.30023 46.67409C308.70273 47.8994 307.845858 48.5469 307.746483 48.5469C307.686483 48.5469 307.646795 48.5069 307.646795 48.44721C307.646795 48.41753 307.646795 48.39753 307.83617 48.21815C308.81211 47.2319 309.37992 45.64815 309.37992 43.56628C309.37992 41.862839 309.01148 40.109714 307.77617 38.85471C307.646795 38.73503 307.646795 38.71503 307.646795 38.68534C307.646795 38.62565 307.686483 38.58565 307.746483 38.58565C307.845858 38.58565 308.74242 39.26315 309.33023 40.528152C309.83836 41.623777 309.95773 42.7294 309.95773 43.56628Z"></path>
<path d="M314.919529 41.384714L314.979217 41.275339C315.56703 41.484402 316.04515 41.683464 316.40359 41.872839C316.75234 42.062214 317.18078 42.29128 317.6789 42.58003L317.93765 42.64971C317.99765 42.65971 318.02734 42.67971 318.03734 42.69971C318.03734 42.71971 318.02734 42.7394 317.99765 42.7494L317.29015 43.17784L317.13078 42.94878C317.0414 42.81909 316.78234 42.59003 316.3439 42.27128C315.91578 41.972527 315.43734 41.673777 314.919529 41.384714ZM316.28422 44.73159C315.79609 44.6519 315.34797 44.60221 314.939529 44.57221L315.36765 43.94471C315.7164 44.10409 316.06515 44.22378 316.43359 44.30346C316.80203 44.37315 317.55922 44.52253 318.70484 44.73159V44.35315L318.66484 43.76534C318.71484 43.77534 318.81422 43.80534 318.9639 43.86503C319.11328 43.92503 319.22265 43.97471 319.29234 44.00471L319.26265 44.38315V44.84128C319.62109 44.93096 319.93984 45.00065 320.2089 45.05034L320.1889 45.20971C319.90015 45.17003 319.5914 45.13003 319.26265 45.09034V47.94909H320.48797C320.51765 47.94909 320.53765 47.95909 320.54765 47.97909C320.56765 47.99909 320.53765 48.03878 320.48797 48.08878L319.83047 48.67628L319.40203 48.18815H316.10484L314.879529 48.21815L315.268279 47.82971C315.44734 47.9094 315.65672 47.94909 315.90578 47.94909H316.28422V44.73159ZM316.83203 44.79159V45.67815H318.70484V45.02065L316.83203 44.79159ZM316.83203 45.91721V46.80378H318.70484V45.91721H316.83203ZM316.83203 47.04284V47.94909H318.70484V47.04284H316.83203ZM314.989217 39.87065L315.088904 39.73128C315.6864 39.99034 316.08484 40.169402 316.26422 40.259089C316.46359 40.348777 316.68265 40.478152 316.94172 40.627839C317.20078 40.777214 317.6789 41.085964 318.36609 41.534089L318.64515 41.603777C318.70484 41.613777 318.73453 41.633777 318.74453 41.653777C318.75453 41.683464 318.71484 41.723464 318.62515 41.783152L318.00734 42.18159L317.84797 41.942527C317.77828 41.833152 317.55922 41.613777 317.19078 41.305027C316.82203 40.996277 316.46359 40.727214 316.11484 40.518152C315.76609 40.299089 315.39765 40.079714 314.989217 39.87065ZM315.82609 43.4069L315.83609 43.23753C316.06515 43.20753 317.12109 43.25753 319.01359 43.3669V40.866902L318.9339 39.42253C319.27265 39.5519 319.51172 39.65159 319.65109 39.73128L319.5714 40.787214V43.4269H319.79047C319.91015 42.93878 320.05953 42.49034 320.2289 42.072214C320.40828 41.643777 320.72703 41.275339 321.18515 40.966277C321.63328 40.657527 322.23109 40.348777 322.96828 40.05003L323.11765 40.299089C323.13765 40.338777 323.21734 40.388777 323.34672 40.448464C323.47609 40.508152 323.68547 40.567839 323.96422 40.617839V40.747214C322.67922 40.836902 321.87234 41.006277 321.54359 41.275339C321.21515 41.534089 320.99578 41.713464 320.8864 41.823152C321.45422 42.1119 321.98203 42.38096 322.49015 42.63003L322.8089 42.65971C322.87859 42.66971 322.91828 42.67971 322.92828 42.70971C322.93828 42.7394 322.89859 42.7794 322.8089 42.84909L322.19109 43.28721L321.98203 43.02846C321.92234 42.95878 321.5039 42.61003 320.72703 41.982527C320.44797 42.35096 320.26859 42.64971 320.16922 42.86909C320.08953 43.09815 320.00984 43.27753 319.95984 43.4269C320.50765 43.49659 321.10547 43.56628 321.75297 43.64596H322.08172C322.1714 43.64596 322.21109 43.65596 322.22109 43.67596C322.23109 43.69565 322.19109 43.73565 322.1114 43.80534L321.5039 44.32346L321.28484 44.18378C321.08547 44.0344 320.52765 43.90503 319.61109 43.78534C318.69484 43.64596 318.05734 43.57628 317.70859 43.54628L316.56297 43.45659C316.22453 43.4169 315.97547 43.3969 315.82609 43.4069ZM319.52172 44.34315L319.5914 44.21378C320.01953 44.42284 320.36828 44.60221 320.64734 44.75159C320.91609 44.90096 321.30453 45.17003 321.79265 45.53846C322.1214 45.26971 322.35047 45.07034 322.48015 44.94096C322.60953 44.81128 322.72922 44.6719 322.83859 44.53253L322.97828 44.34315C323.04797 44.24378 323.11765 44.19378 323.16734 44.19378C323.21734 44.19378 323.26703 44.22378 323.31672 44.28346C323.37672 44.35315 323.4064 44.42284 323.4264 44.49253C323.4364 44.56253 323.4464 44.64221 323.4364 44.7219C323.4364 44.80159 323.3964 44.90096 323.33672 45.04065C323.25703 45.16003 322.85859 45.44909 322.1314 45.88721C322.38047 46.19596 322.70922 46.6444 323.11765 47.2219L323.3864 47.35159C323.49609 47.40128 323.55578 47.43128 323.55578 47.45128C323.55578 47.47096 323.52609 47.51096 323.46609 47.56065L322.87859 48.04878L322.48015 47.60065H320.66703L319.66109 47.64034L320.01953 47.2219C320.28859 47.32159 320.55765 47.37159 320.8264 47.37159H322.51984L322.32078 47.00284C322.19109 46.76378 321.98203 46.46503 321.71297 46.09628C321.08547 46.36534 320.45797 46.6244 319.82047 46.86346L319.75078 46.73409C320.1989 46.52471 320.77672 46.20596 321.4639 45.77753C321.10547 45.43909 320.78672 45.18003 320.51765 44.98065C320.2489 44.80159 319.91015 44.58221 319.52172 44.34315ZM325.948 41.683464L325.888 41.444402L325.8284 41.215339C325.7887 41.055964 325.709 40.876589 325.5993 40.677527C325.4896 40.488152 325.3302 40.318777 325.1412 40.169402C324.9518 40.02003 324.8324 39.93034 324.8024 39.89065C324.7427 39.82096 324.7127 39.75128 324.7127 39.70128C324.7227 39.64159 324.7527 39.5819 324.7924 39.5219C324.8521 39.46221 324.9518 39.43221 325.1212 39.44221C325.2905 39.45221 325.4499 39.5119 325.5893 39.64159C325.7487 39.76096 325.8484 39.93034 325.908 40.139714C325.958 40.348777 325.9977 40.557839 326.0277 40.757214C326.0474 40.966277 326.0674 41.265339 326.0974 41.653777L325.948 41.683464ZM326.4162 45.59846L326.4759 44.49253V43.06815L326.4062 41.902839C326.4759 41.892839 326.5755 41.912839 326.6949 41.952527C326.8146 41.992527 326.924 42.052214 327.0137 42.1319V42.61003H331.3271V42.1119C331.4365 42.1319 331.5462 42.17159 331.6459 42.22159C331.7452 42.27128 331.8152 42.31128 331.8449 42.35096C331.8749 42.37096 331.9146 42.42065 331.9646 42.49034L331.9146 43.3769V44.82128L332.1437 45.02065C332.2334 45.09034 332.2734 45.12034 332.2634 45.13003C332.2634 45.14003 332.2234 45.17003 332.1437 45.21971L331.5262 45.60846L331.2174 45.16003H329.1952V46.82346H332.9605C333.0302 46.82346 333.0602 46.84346 333.0702 46.87346C333.0802 46.91315 333.0502 46.96315 332.9905 47.02284L332.2934 47.67034L331.7752 47.06253H329.1952V48.07878L329.494 48.30784C329.554 48.33784 329.5837 48.36753 329.5937 48.39753C329.5937 48.42721 329.554 48.45721 329.4643 48.49721L328.5477 48.85565L328.6077 47.54065V45.16003H327.2627L326.4162 45.59846ZM331.3271 42.84909H327.0137V44.93096H331.3271V42.84909ZM328.219 41.026277C327.9799 41.315027 327.8105 41.494402 327.7212 41.584089C327.6315 41.673777 327.5318 41.753464 327.4221 41.842839L327.3227 41.753464L327.6015 41.245339C327.6512 41.155652 327.6812 41.045964 327.7212 40.916589C327.7409 40.796902 327.7709 40.647527 327.8009 40.478152C327.8205 40.309089 327.8305 40.149714 327.8405 40.00003C327.8405 39.85065 327.8605 39.76096 327.9002 39.74128C327.9302 39.70128 327.9699 39.69128 328.0199 39.68128C328.1196 39.67128 328.209 39.70128 328.2987 39.79096C328.3884 39.88065 328.4484 39.97034 328.478 40.07003C328.498 40.139714 328.508 40.239089 328.508 40.348777C328.508 40.458464 328.478 40.567839 328.4184 40.677527C328.3684 40.787214 328.2987 40.896589 328.219 41.026277ZM329.3546 41.753464C329.5837 41.404714 329.7134 41.185652 329.773 41.095964C329.813 41.006277 329.8627 40.886589 329.9124 40.727214C329.9624 40.567839 329.9921 40.398464 330.0321 40.219402C330.0521 40.03003 330.0818 39.90065 330.1018 39.83096C330.1218 39.76096 330.1815 39.72128 330.2712 39.71128C330.3409 39.70128 330.4405 39.75128 330.5499 39.86065C330.6596 39.98034 330.7193 40.109714 330.7093 40.259089C330.7093 40.408464 330.6696 40.557839 330.5899 40.727214S330.3609 41.065964 330.1515 41.255339C329.9324 41.454402 329.6934 41.653777 329.4443 41.862839L329.3546 41.753464ZM332.6518 40.139714C332.7018 39.99034 332.7415 39.86065 332.7715 39.74128C332.8012 39.61159 332.8312 39.5319 332.8809 39.50221C332.9309 39.46221 332.9805 39.44221 333.0302 39.44221C333.1099 39.43221 333.1896 39.48221 333.2793 39.5819C333.359 39.67128 333.419 39.77096 333.4487 39.86065C333.4987 40.02003 333.5084 40.159402 333.4587 40.279089C333.409 40.388777 333.3193 40.528152 333.1699 40.677527C333.0205 40.836902 332.8612 40.986277 332.6718 41.115964C332.4824 41.255339 332.134 41.514402 331.6159 41.882839L331.5162 41.753464C331.7852 41.484402 331.9746 41.275339 332.104 41.115964C332.2334 40.946589 332.333 40.796902 332.4027 40.657527C332.4724 40.508152 332.5621 40.338777 332.6518 40.139714ZM336.6475 43.82534L336.5281 43.17784C336.5181 43.12784 336.4684 42.92878 336.3687 42.58003C336.2791 42.23159 336.1097 41.813152 335.8706 41.295027C335.6416 40.796902 335.4422 40.438464 335.2928 40.249089C335.1334 40.06003 334.9144 39.80096 334.6356 39.48221L334.725 39.38253C335.3028 39.84065 335.7212 40.259089 335.9703 40.627839C336.2294 40.996277 336.4084 41.295027 336.5281 41.524089C336.6278 41.753464 336.7572 42.012214 336.8866 42.30128C337.0759 41.813152 337.2353 41.434714 337.365 41.185652C337.4944 40.936589 337.6837 40.707527 337.9625 40.518152C338.2216 40.318777 338.4806 40.179402 338.7197 40.099714C338.9587 40.01003 339.3572 39.95034 339.915 39.90065C340.4628 39.85065 341.3991 39.79096 342.7241 39.72128L342.8634 39.99034C342.8934 40.05003 342.9631 40.109714 343.0528 40.179402C343.1425 40.249089 343.3616 40.338777 343.7003 40.448464V40.557839C343.1125 40.488152 342.6444 40.438464 342.2756 40.418464C341.9072 40.408464 341.4291 40.398464 340.8412 40.418464C340.2537 40.418464 339.8053 40.438464 339.5166 40.468464V42.57003H342.2756C342.3156 42.57003 342.3453 42.58003 342.3553 42.61003C342.3653 42.63003 342.3453 42.66971 342.2856 42.7294L341.5784 43.4269L341.0506 42.7994H339.5166V44.7019H342.8334C342.9131 44.7019 342.9631 44.7219 342.9831 44.75159C342.9928 44.78159 342.9631 44.84128 342.8934 44.91096L342.1762 45.56846L341.6581 44.94096H336.1397L335.6516 44.96096L335.9503 44.54253L336.1397 44.61221C336.2691 44.6719 336.5181 44.7019 336.8966 44.7019H338.8987V40.557839C338.5103 40.657527 338.2016 40.796902 337.9925 40.976277C337.7831 41.165652 337.5941 41.374714 337.4247 41.633777C337.2653 41.872839 337.1159 42.18159 336.9862 42.55034L337.1856 43.08815L337.4447 43.24753C337.5244 43.29721 337.5641 43.31721 337.5641 43.32721C337.5541 43.33721 337.5044 43.3669 337.4147 43.4169L336.6475 43.82534ZM336.2791 47.11253L336.2491 47.38128C336.2394 47.40128 336.2394 47.48096 336.2294 47.62034H336.07L336.04 47.2619C336.03 47.19221 336.0003 47.08253 335.9503 46.91315C335.8906 46.75378 335.8209 46.6144 335.7512 46.49471C335.6716 46.36534 335.4622 46.16628 335.1334 45.89721C335.0437 45.80753 335.0041 45.73784 335.0141 45.66815S335.0537 45.53846 335.1137 45.46878C335.1834 45.39909 335.2828 45.3694 335.4125 45.3694C335.5819 45.3594 335.7512 45.43909 335.9106 45.57846C336.08 45.73784 336.1794 45.9369 336.2094 46.21596C336.2394 46.47503 336.2691 46.70409 336.2791 46.88346H342.1859C342.0069 46.50471 341.8075 46.09628 341.5784 45.64815L341.7078 45.59846L341.8475 45.75784L342.0866 46.05659C342.1762 46.15628 342.2856 46.25565 342.4053 46.35534C342.5447 46.46503 342.6644 46.53471 342.7637 46.5844C342.8834 46.6344 343.0128 46.66409 343.1722 46.68409L343.3516 46.70409C343.4012 46.71409 343.4412 46.73409 343.4512 46.76378C343.4612 46.79378 343.4412 46.83346 343.3912 46.88346L342.5547 47.61065L342.1262 47.11253H339.3472C339.5166 47.2719 339.6159 47.41128 339.6359 47.53096C339.6659 47.64034 339.6559 47.75003 339.5962 47.8594C339.5562 47.96909 339.4766 48.06878 339.3572 48.16846C339.2575 48.26784 338.9387 48.44721 338.4206 48.71628L338.3309 48.62659L338.5503 48.35753C338.6 48.30784 338.6597 48.18815 338.7394 48.01909C338.8291 47.84971 338.8791 47.68034 338.8987 47.52096C338.9287 47.36159 338.9387 47.2619 338.9587 47.2319C338.9587 47.20221 338.9884 47.16221 339.0384 47.11253H336.2791ZM344.3688 41.155652L344.857 40.388777C345.146 40.617839 345.4648 40.856902 345.8332 41.095964C346.202 41.345027 347.0385 41.852839 348.3635 42.63003L348.2538 42.7394C347.656 42.48065 347.1382 42.25128 346.7098 42.062214V44.38315H348.0448C348.0845 44.38315 348.1145 44.39315 348.1341 44.42284C348.1541 44.45284 348.1145 44.51253 348.0248 44.60221L347.4966 45.10034L347.0785 44.60221H346.7098V47.18221H348.1245C348.1741 47.18221 348.2138 47.19221 348.2238 47.2219C348.2438 47.2519 348.2238 47.2919 348.1641 47.35159L347.5566 47.95909L347.0785 47.42128H345.0463L344.4685 47.44128L344.7973 47.09253C344.907 47.15221 345.0463 47.18221 345.1957 47.18221H346.1123V44.60221H345.1757L344.6179 44.62221L344.9566 44.23378C345.116 44.33315 345.3154 44.38315 345.5545 44.38315H346.1123V41.823152L345.4348 41.514402C345.3054 41.444402 344.9466 41.325027 344.3688 41.155652ZM346.6998 40.179402L347.1582 39.77096L347.3276 39.88065C347.3373 39.89065 347.417 39.90065 347.5466 39.91065C347.686 39.92034 347.7657 39.93034 347.7757 39.93034H353.6529C353.7226 39.93034 353.7723 39.94034 353.7823 39.96034S353.7623 40.04003 353.6726 40.129714L353.0254 40.826902L352.4576 40.159402H351.0132V41.882839H353.3738C353.4238 41.882839 353.4635 41.892839 353.4835 41.912839C353.4935 41.932527 353.4535 41.992527 353.3638 42.1019L352.7463 42.7294L352.2185 42.1119H351.0132V43.77534H352.4376V43.19784C352.7066 43.24753 352.9057 43.34721 353.0451 43.48659L353.0054 44.60221V47.45128L353.2445 47.64034C353.3041 47.69034 353.3341 47.73003 353.3441 47.75003C353.3441 47.78971 353.2841 47.83971 353.1748 47.9194L352.617 48.28784L352.3179 47.82971H349.2101L348.5029 48.27784L348.5526 46.98284V44.29346L348.5029 43.07815C348.8116 43.17784 349.011 43.26753 349.1204 43.35721V43.77534H350.4354V42.1119H348.9013L348.1741 42.1319L348.5029 41.723464C348.722 41.833152 348.971 41.882839 349.2598 41.882839H350.4354V40.159402H347.5666L346.6998 40.179402ZM349.1204 44.00471V45.62815H350.4354V44.00471H349.1204ZM349.1204 45.86721V47.59065H350.4354V45.86721H349.1204ZM351.0132 44.00471V45.62815H352.4376V44.00471H351.0132ZM352.4376 45.86721H351.0132V47.59065H352.4376V45.86721Z"></path>
<path d="M399.42668 42.89878C399.42668 43.76534 398.6098 44.51253 397.50418 44.63221C398.47043 44.82128 399.15793 45.45878 399.15793 46.19596C399.15793 47.06253 398.24136 47.8794 396.94636 47.8794H393.300738V47.57065H393.5398C394.30668 47.57065 394.32668 47.46096 394.32668 47.10253V41.852839C394.32668 41.494402 394.30668 41.384714 393.5398 41.384714H393.300738V41.075964H397.20543C398.53011 41.075964 399.42668 41.962527 399.42668 42.89878ZM398.19168 46.19596C398.19168 45.55846 397.70355 44.7219 396.59761 44.7219H395.15324V47.17221C395.15324 47.50096 395.17324 47.57065 395.64136 47.57065H396.87668C397.84293 47.57065 398.19168 46.72409 398.19168 46.19596ZM398.43074 42.90878C398.43074 42.20159 397.91261 41.384714 396.88668 41.384714H395.64136C395.17324 41.384714 395.15324 41.454402 395.15324 41.783152V44.50253H397.02605C398.0123 44.50253 398.43074 43.57628 398.43074 42.90878ZM404.6874 43.20753C404.6874 44.48284 403.6911 45.53846 402.48582 45.53846C401.2405 45.53846 400.27457 44.45284 400.27457 43.20753C400.27457 41.922527 401.3105 40.966277 402.47582 40.966277C403.6811 40.966277 404.6874 41.942527 404.6874 43.20753ZM403.8605 43.28721C403.8605 42.92878 403.8605 42.39096 403.6414 41.952527C403.4221 41.504402 402.9839 41.215339 402.48582 41.215339C402.05738 41.215339 401.61925 41.424714 401.35019 41.882839C401.10113 42.32096 401.10113 42.92878 401.10113 43.28721C401.10113 43.67596 401.10113 44.21378 401.34019 44.6519C401.60925 45.11034 402.07738 45.3194 402.47582 45.3194C402.91425 45.3194 403.3424 45.10034 403.6014 44.6719C403.8605 44.24378 403.8605 43.66596 403.8605 43.28721ZM407.5168 41.075964V41.384714C406.8496 41.384714 406.7399 41.384714 406.7399 41.833152V47.98909L405.3055 47.8794V47.57065C406.0027 47.57065 406.0824 47.50096 406.0824 47.01284V41.833152C406.0824 41.384714 405.973 41.384714 405.3055 41.384714V41.075964L406.4111 41.105964L407.5168 41.075964ZM411.7407 42.93878H411.4916C411.4019 41.763152 411.1928 41.325027 410.0372 41.325027H408.8619L411.6313 45.07034C411.7207 45.18003 411.7207 45.20003 411.7207 45.23971C411.7207 45.3694 411.641 45.3694 411.4619 45.3694H408.2741L408.1647 43.76534H408.4138C408.4735 44.78159 408.6628 45.15003 409.7585 45.15003H410.8941L408.1147 41.394714C408.0253 41.285027 408.0253 41.265339 408.0253 41.215339C408.0253 41.075964 408.095 41.075964 408.2841 41.075964H411.5713L411.7407 42.93878ZM416.9809 41.962527V42.52034H416.7318V41.962527C416.7318 41.384714 416.4828 41.325027 416.3734 41.325027C416.0446 41.325027 416.0046 41.773152 416.0046 41.823152V43.81534C416.0046 44.23378 416.0046 44.62221 415.6462 44.99065C415.2578 45.37909 414.7596 45.53846 414.2815 45.53846C413.4646 45.53846 412.7771 45.07034 412.7771 44.41284C412.7771 44.11409 412.9765 43.94471 413.2356 43.94471C413.5143 43.94471 413.6937 44.14409 413.6937 44.40315C413.6937 44.52253 413.644 44.85128 413.1856 44.86128C413.4546 45.20971 413.9428 45.3194 414.2615 45.3194C414.7496 45.3194 415.3175 44.93096 415.3175 44.0444V43.67596C414.8093 43.64596 414.1121 43.61596 413.4846 43.31721C412.7375 42.97846 412.4884 42.46065 412.4884 42.022214C412.4884 41.215339 413.4546 40.966277 414.0821 40.966277C414.7396 40.966277 415.1978 41.364714 415.3871 41.833152C415.4268 41.434714 415.6959 41.016277 416.164 41.016277C416.3734 41.016277 416.9809 41.155652 416.9809 41.962527ZM415.3175 42.47065C415.3175 41.524089 414.6003 41.185652 414.1518 41.185652C413.6637 41.185652 413.2553 41.534089 413.2553 42.032214C413.2553 42.58003 413.6737 43.4069 415.3175 43.46659V42.47065ZM422.4803 41.075964V41.384714C421.9621 41.384714 421.7131 41.384714 421.7031 41.683464V43.58628C421.7031 44.44284 421.7031 44.75159 421.3943 45.11034C421.255 45.27971 420.9262 45.47878 420.3484 45.47878C419.6212 45.47878 419.1531 45.05034 418.8743 44.43284V45.47878L417.4696 45.3694V45.06034C418.1668 45.06034 418.2465 44.99065 418.2465 44.50253V41.833152C418.2465 41.384714 418.1371 41.384714 417.4696 41.384714V41.075964L418.5953 41.105964L419.7109 41.075964V41.384714C419.0434 41.384714 418.934 41.384714 418.934 41.833152V43.66596C418.934 44.7019 419.6412 45.25971 420.2787 45.25971C420.9062 45.25971 421.0159 44.7219 421.0159 44.15409V41.833152C421.0159 41.384714 420.9062 41.384714 420.239 41.384714V41.075964L421.3646 41.105964L422.4803 41.075964ZM427.3819 43.20753C427.3819 44.48284 426.3857 45.53846 425.1803 45.53846C423.935 45.53846 422.9691 44.45284 422.9691 43.20753C422.9691 41.922527 424.005 40.966277 425.1703 40.966277C426.3757 40.966277 427.3819 41.942527 427.3819 43.20753ZM426.555 43.28721C426.555 42.92878 426.555 42.39096 426.336 41.952527C426.1166 41.504402 425.6785 41.215339 425.1803 41.215339C424.7519 41.215339 424.3138 41.424714 424.0447 41.882839C423.7957 42.32096 423.7957 42.92878 423.7957 43.28721C423.7957 43.67596 423.7957 44.21378 424.0347 44.6519C424.3038 45.11034 424.7719 45.3194 425.1703 45.3194C425.6088 45.3194 426.0369 45.10034 426.296 44.6719C426.555 44.24378 426.555 43.66596 426.555 43.28721ZM430.4207 42.93878V43.51659H427.781V42.93878H430.4207ZM441.0397 47.57065V47.8794C440.741 47.8594 440.4319 47.84971 440.1332 47.84971L438.9478 47.8794V47.57065C439.6153 47.56065 439.8144 47.2319 439.8144 47.04284C439.8144 46.98284 439.7844 46.90315 439.7647 46.84346L438.2703 42.24128L436.6766 47.12253C436.6666 47.16221 436.6469 47.2219 436.6469 47.2719C436.6469 47.57065 437.2244 47.57065 437.4835 47.57065V47.8794C437.125 47.84971 436.4475 47.84971 436.0691 47.84971L434.8538 47.8794V47.57065C435.4216 47.57065 435.6307 47.57065 435.7503 47.21221L435.9694 46.51471L434.5847 42.24128L432.981 47.14221C432.971 47.17221 432.961 47.2419 432.961 47.2719C432.961 47.57065 433.5388 47.57065 433.7978 47.57065V47.8794C433.4391 47.84971 432.7619 47.84971 432.3835 47.84971L431.1682 47.8794V47.57065C431.915 47.57065 431.955 47.52096 432.0744 47.15221L434.0669 41.045964C434.0966 40.956277 434.1266 40.856902 434.256 40.856902C434.3957 40.856902 434.4153 40.926589 434.4553 41.055964L436.0988 46.11628L437.7525 41.045964C437.7822 40.956277 437.8122 40.856902 437.9416 40.856902C438.0813 40.856902 438.101 40.926589 438.141 41.055964L440.0435 46.90315C440.2228 47.47096 440.6513 47.57065 441.0397 47.57065Z"></path>
<path d="M444.5262 42.26128C444.5262 42.36096 444.4465 42.38096 444.3968 42.38096C444.3071 42.38096 444.2871 42.32096 444.2675 42.24128C443.9187 41.215339 443.0221 41.215339 442.9225 41.215339C442.4246 41.215339 442.0262 41.514402 441.7971 41.882839C441.4981 42.36096 441.4981 43.01846 441.4981 43.3769H444.2775C444.4965 43.3769 444.5262 43.3769 444.5262 43.58628C444.5262 44.57221 443.9884 45.53846 442.7434 45.53846C441.5878 45.53846 440.6715 44.51253 440.6715 43.26753C440.6715 41.932527 441.7171 40.966277 442.8628 40.966277C444.0781 40.966277 444.5262 42.072214 444.5262 42.26128ZM443.869 43.58628H441.5081C441.5678 45.07034 442.4046 45.3194 442.7434 45.3194C443.7693 45.3194 443.869 43.97471 443.869 43.58628ZM447.2761 41.075964V41.384714C446.6189 41.384714 446.5789 41.434714 446.5789 41.823152V45.47878L445.1843 45.3694V45.06034C445.8318 45.06034 445.9214 45.00065 445.9214 44.51253V41.833152C445.9214 41.384714 445.8121 41.384714 445.1446 41.384714V41.075964L446.2402 41.105964C446.5889 41.105964 446.9377 41.085964 447.2761 41.075964ZM446.7283 47.09253C446.7283 47.36159 446.4993 47.62034 446.2005 47.62034C445.8618 47.62034 445.6624 47.34159 445.6624 47.09253C445.6624 46.82346 445.8918 46.56471 446.1905 46.56471C446.5293 46.56471 446.7283 46.84346 446.7283 47.09253ZM451.7191 42.26128C451.7191 42.36096 451.6394 42.38096 451.5897 42.38096C451.5 42.38096 451.48 42.32096 451.4603 42.24128C451.1116 41.215339 450.215 41.215339 450.1153 41.215339C449.6175 41.215339 449.2191 41.514402 448.99 41.882839C448.691 42.36096 448.691 43.01846 448.691 43.3769H451.4703C451.6894 43.3769 451.7191 43.3769 451.7191 43.58628C451.7191 44.57221 451.1813 45.53846 449.9363 45.53846C448.7807 45.53846 447.8644 44.51253 447.8644 43.26753C447.8644 41.932527 448.91 40.966277 450.0557 40.966277C451.271 40.966277 451.7191 42.072214 451.7191 42.26128ZM451.0619 43.58628H448.701C448.7607 45.07034 449.5975 45.3194 449.9363 45.3194C450.9622 45.3194 451.0619 43.97471 451.0619 43.58628ZM455.6346 44.87128C455.6346 45.19003 455.3259 45.47878 454.8975 45.47878C454.1703 45.47878 453.8118 44.81128 453.6721 44.38315V45.47878L452.2878 45.3694V45.06034C452.985 45.06034 453.0646 44.99065 453.0646 44.50253V41.833152C453.0646 41.384714 452.955 41.384714 452.2878 41.384714V41.075964L453.4231 41.105964C453.8215 41.105964 454.29 41.105964 454.6884 41.075964V41.384714H454.479C453.7418 41.384714 453.7221 41.494402 453.7221 41.852839V43.3869C453.7221 44.37315 454.1403 45.25971 454.8975 45.25971C454.9671 45.25971 454.9871 45.25971 455.0071 45.24971C454.9771 45.23971 454.7781 45.12034 454.7781 44.86128C454.7781 44.58221 454.9871 44.43284 455.2062 44.43284C455.3856 44.43284 455.6346 44.55253 455.6346 44.87128ZM459.5 42.35096C459.5 42.87909 459.2012 43.17784 459.0818 43.29721C458.7531 43.61596 458.3643 43.69565 457.9462 43.77534C457.3884 43.88503 456.7209 44.0144 456.7209 44.59221C456.7209 44.94096 456.98 45.3494 457.8365 45.3494C458.9321 45.3494 458.9821 44.45284 459.0021 44.14409C459.0118 44.0544 459.1215 44.0544 459.1215 44.0544C459.2509 44.0544 459.2509 44.10409 459.2509 44.29346V45.2994C459.2509 45.46878 459.2509 45.53846 459.1415 45.53846C459.0915 45.53846 459.0718 45.53846 458.9421 45.41909C458.9125 45.37909 458.8128 45.28971 458.7728 45.25971C458.3943 45.53846 457.9859 45.53846 457.8365 45.53846C456.6212 45.53846 456.2428 44.87128 456.2428 44.31346C456.2428 43.96471 456.4021 43.68565 456.6712 43.46659C456.99 43.20753 457.2687 43.14784 457.9859 43.00846C458.205 42.96846 459.0218 42.80909 459.0218 42.0919C459.0218 41.584089 458.6734 41.185652 457.8962 41.185652C457.0596 41.185652 456.7009 41.753464 456.5118 42.60003C456.4818 42.7294 456.4718 42.7694 456.3721 42.7694C456.2428 42.7694 456.2428 42.69971 456.2428 42.52034V41.205339C456.2428 41.035964 456.2428 40.966277 456.3525 40.966277C456.4021 40.966277 456.4121 40.976277 456.6012 41.165652C456.6212 41.185652 456.6212 41.205339 456.8006 41.394714C457.2387 40.976277 457.6871 40.966277 457.8962 40.966277C459.0418 40.966277 459.5 41.633777 459.5 42.35096ZM463.1464 42.31128V42.87909H462.8974V42.33096C462.8974 41.594089 462.5986 41.215339 462.2299 41.215339C461.5627 41.215339 461.5627 42.1219 461.5627 42.29128V45.06034H462.9871V45.3694H461.5627V47.20221H461.3136C461.3036 46.38534 461.0046 45.3194 460.0286 45.27971V45.06034H460.8752V42.31128C460.8752 41.085964 461.8018 40.966277 462.1602 40.966277C462.8674 40.966277 463.1464 41.673777 463.1464 42.31128ZM467.3406 44.87128C467.3406 45.19003 467.0318 45.47878 466.6034 45.47878C465.8762 45.47878 465.5178 44.81128 465.3781 44.38315V45.47878L463.9937 45.3694V45.06034C464.6909 45.06034 464.7706 44.99065 464.7706 44.50253V41.833152C464.7706 41.384714 464.6609 41.384714 463.9937 41.384714V41.075964L465.129 41.105964C465.5275 41.105964 465.9959 41.105964 466.3943 41.075964V41.384714H466.185C465.4478 41.384714 465.4281 41.494402 465.4281 41.852839V43.3869C465.4281 44.37315 465.8462 45.25971 466.6034 45.25971C466.6731 45.25971 466.6931 45.25971 466.7131 45.24971C466.6831 45.23971 466.484 45.12034 466.484 44.86128C466.484 44.58221 466.6931 44.43284 466.9121 44.43284C467.0915 44.43284 467.3406 44.55253 467.3406 44.87128ZM472.4312 41.962527V42.52034H472.1821V41.962527C472.1821 41.384714 471.9331 41.325027 471.8237 41.325027C471.495 41.325027 471.455 41.773152 471.455 41.823152V43.81534C471.455 44.23378 471.455 44.62221 471.0965 44.99065C470.7081 45.37909 470.21 45.53846 469.7318 45.53846C468.915 45.53846 468.2275 45.07034 468.2275 44.41284C468.2275 44.11409 468.4268 43.94471 468.6859 43.94471C468.9646 43.94471 469.144 44.14409 469.144 44.40315C469.144 44.52253 469.0943 44.85128 468.6359 44.86128C468.905 45.20971 469.3931 45.3194 469.7118 45.3194C470.2 45.3194 470.7678 44.93096 470.7678 44.0444V43.67596C470.2596 43.64596 469.5625 43.61596 468.935 43.31721C468.1878 42.97846 467.9387 42.46065 467.9387 42.022214C467.9387 41.215339 468.905 40.966277 469.5325 40.966277C470.19 40.966277 470.6481 41.364714 470.8375 41.833152C470.8771 41.434714 471.1462 41.016277 471.6143 41.016277C471.8237 41.016277 472.4312 41.155652 472.4312 41.962527ZM470.7678 42.47065C470.7678 41.524089 470.0506 41.185652 469.6021 41.185652C469.114 41.185652 468.7056 41.534089 468.7056 42.032214C468.7056 42.58003 469.124 43.4069 470.7678 43.46659V42.47065ZM476.1871 42.35096C476.1871 42.87909 475.8884 43.17784 475.769 43.29721C475.4403 43.61596 475.0515 43.69565 474.6334 43.77534C474.0756 43.88503 473.4081 44.0144 473.4081 44.59221C473.4081 44.94096 473.6671 45.3494 474.5237 45.3494C475.6193 45.3494 475.6693 44.45284 475.6893 44.14409C475.699 44.0544 475.8087 44.0544 475.8087 44.0544C475.9381 44.0544 475.9381 44.10409 475.9381 44.29346V45.2994C475.9381 45.46878 475.9381 45.53846 475.8287 45.53846C475.7787 45.53846 475.759 45.53846 475.6293 45.41909C475.5996 45.37909 475.5 45.28971 475.46 45.25971C475.0815 45.53846 474.6731 45.53846 474.5237 45.53846C473.3084 45.53846 472.93 44.87128 472.93 44.31346C472.93 43.96471 473.0893 43.68565 473.3584 43.46659C473.6771 43.20753 473.9559 43.14784 474.6731 43.00846C474.8921 42.96846 475.709 42.80909 475.709 42.0919C475.709 41.584089 475.3606 41.185652 474.5834 41.185652C473.7468 41.185652 473.3881 41.753464 473.199 42.60003C473.169 42.7294 473.159 42.7694 473.0593 42.7694C472.93 42.7694 472.93 42.69971 472.93 42.52034V41.205339C472.93 41.035964 472.93 40.966277 473.0396 40.966277C473.0893 40.966277 473.0993 40.976277 473.2884 41.165652C473.3084 41.185652 473.3084 41.205339 473.4878 41.394714C473.9259 40.976277 474.3743 40.966277 474.5834 40.966277C475.729 40.966277 476.1871 41.633777 476.1871 42.35096ZM480.1124 42.35096C480.1124 42.87909 479.8136 43.17784 479.6943 43.29721C479.3655 43.61596 478.9768 43.69565 478.5586 43.77534C478.0008 43.88503 477.3333 44.0144 477.3333 44.59221C477.3333 44.94096 477.5924 45.3494 478.4489 45.3494C479.5446 45.3494 479.5946 44.45284 479.6146 44.14409C479.6243 44.0544 479.7339 44.0544 479.7339 44.0544C479.8633 44.0544 479.8633 44.10409 479.8633 44.29346V45.2994C479.8633 45.46878 479.8633 45.53846 479.7539 45.53846C479.7039 45.53846 479.6843 45.53846 479.5546 45.41909C479.5249 45.37909 479.4252 45.28971 479.3852 45.25971C479.0068 45.53846 478.5983 45.53846 478.4489 45.53846C477.2336 45.53846 476.8552 44.87128 476.8552 44.31346C476.8552 43.96471 477.0146 43.68565 477.2836 43.46659C477.6024 43.20753 477.8811 43.14784 478.5983 43.00846C478.8174 42.96846 479.6343 42.80909 479.6343 42.0919C479.6343 41.584089 479.2858 41.185652 478.5086 41.185652C477.6721 41.185652 477.3133 41.753464 477.1243 42.60003C477.0943 42.7294 477.0843 42.7694 476.9846 42.7694C476.8552 42.7694 476.8552 42.69971 476.8552 42.52034V41.205339C476.8552 41.035964 476.8552 40.966277 476.9649 40.966277C477.0146 40.966277 477.0246 40.976277 477.2136 41.165652C477.2336 41.185652 477.2336 41.205339 477.413 41.394714C477.8511 40.976277 478.2996 40.966277 478.5086 40.966277C479.6542 40.966277 480.1124 41.633777 480.1124 42.35096Z"></path>
<path d="M486.23132 43.82534L486.11194 43.17784C486.10194 43.12784 486.05225 42.92878 485.95257 42.58003C485.86288 42.23159 485.6935 41.813152 485.45444 41.295027C485.22538 40.796902 485.026 40.438464 484.87663 40.249089C484.717255 40.06003 484.498192 39.80096 484.219442 39.48221L484.308817 39.38253C484.88663 39.84065 485.30507 40.259089 485.55413 40.627839C485.81319 40.996277 485.99225 41.295027 486.11194 41.524089C486.21163 41.753464 486.341 42.012214 486.47038 42.30128C486.65975 41.813152 486.81913 41.434714 486.94882 41.185652C487.07819 40.936589 487.26757 40.707527 487.54632 40.518152C487.80538 40.318777 488.06444 40.179402 488.3035 40.099714C488.54257 40.01003 488.94101 39.95034 489.49882 39.90065C490.04663 39.85065 490.98288 39.79096 492.30788 39.72128L492.44725 39.99034C492.47725 40.05003 492.54694 40.109714 492.63663 40.179402C492.72632 40.249089 492.94538 40.338777 493.28413 40.448464V40.557839C492.69632 40.488152 492.22819 40.438464 491.85944 40.418464C491.491 40.408464 491.01288 40.398464 490.42507 40.418464C489.83757 40.418464 489.38913 40.438464 489.10038 40.468464V42.57003H491.85944C491.89944 42.57003 491.92913 42.58003 491.93913 42.61003C491.94913 42.63003 491.92913 42.66971 491.86944 42.7294L491.16225 43.4269L490.63444 42.7994H489.10038V44.7019H492.41726C492.49694 44.7019 492.54694 44.7219 492.56694 44.75159C492.57663 44.78159 492.54694 44.84128 492.47725 44.91096L491.76007 45.56846L491.24194 44.94096H485.7235L485.23538 44.96096L485.53413 44.54253L485.7235 44.61221C485.85288 44.6719 486.10194 44.7019 486.48038 44.7019H488.48257V40.557839C488.09413 40.657527 487.78538 40.796902 487.57632 40.976277C487.36694 41.165652 487.17788 41.374714 487.0085 41.633777C486.84913 41.872839 486.69975 42.18159 486.57007 42.55034L486.76944 43.08815L487.0285 43.24753C487.10819 43.29721 487.14788 43.31721 487.14788 43.32721C487.13788 43.33721 487.08819 43.3669 486.9985 43.4169L486.23132 43.82534ZM485.86288 47.11253L485.83288 47.38128C485.82319 47.40128 485.82319 47.48096 485.81319 47.62034H485.65382L485.62382 47.2619C485.61382 47.19221 485.58413 47.08253 485.53413 46.91315C485.47444 46.75378 485.40475 46.6144 485.33507 46.49471C485.25538 46.36534 485.046 46.16628 484.717255 45.89721C484.627567 45.80753 484.58788 45.73784 484.59788 45.66815S484.637567 45.53846 484.697567 45.46878C484.767255 45.39909 484.86663 45.3694 484.99632 45.3694C485.16569 45.3594 485.33507 45.43909 485.49444 45.57846C485.66382 45.73784 485.76319 45.9369 485.79319 46.21596C485.82319 46.47503 485.85288 46.70409 485.86288 46.88346H491.76975C491.59069 46.50471 491.39132 46.09628 491.16225 45.64815L491.29163 45.59846L491.43132 45.75784L491.67038 46.05659C491.76007 46.15628 491.86944 46.25565 491.98913 46.35534C492.1285 46.46503 492.24819 46.53471 492.34757 46.5844C492.46725 46.6344 492.59663 46.66409 492.75601 46.68409L492.93538 46.70409C492.98507 46.71409 493.02507 46.73409 493.03507 46.76378C493.04507 46.79378 493.02507 46.83346 492.97507 46.88346L492.1385 47.61065L491.71007 47.11253H488.931C489.10038 47.2719 489.19976 47.41128 489.21976 47.53096C489.24975 47.64034 489.23976 47.75003 489.18007 47.8594C489.14007 47.96909 489.06038 48.06878 488.94101 48.16846C488.84132 48.26784 488.52257 48.44721 488.00444 48.71628L487.91475 48.62659L488.13413 48.35753C488.18382 48.30784 488.2435 48.18815 488.32319 48.01909C488.41288 47.84971 488.46288 47.68034 488.48257 47.52096C488.51257 47.36159 488.52257 47.2619 488.54257 47.2319C488.54257 47.20221 488.57225 47.16221 488.62225 47.11253H485.86288ZM493.9526 41.155652L494.4408 40.388777C494.7298 40.617839 495.0486 40.856902 495.417 41.095964C495.7858 41.345027 496.6223 41.852839 497.9473 42.63003L497.8376 42.7394C497.2398 42.48065 496.722 42.25128 496.2936 42.062214V44.38315H497.6286C497.6683 44.38315 497.6983 44.39315 497.718 44.42284C497.738 44.45284 497.6983 44.51253 497.6086 44.60221L497.0805 45.10034L496.6623 44.60221H496.2936V47.18221H497.7083C497.758 47.18221 497.7976 47.19221 497.8076 47.2219C497.8276 47.2519 497.8076 47.2919 497.748 47.35159L497.1405 47.95909L496.6623 47.42128H494.6301L494.0523 47.44128L494.3811 47.09253C494.4908 47.15221 494.6301 47.18221 494.7795 47.18221H495.6961V44.60221H494.7595L494.2017 44.62221L494.5405 44.23378C494.6998 44.33315 494.8992 44.38315 495.1383 44.38315H495.6961V41.823152L495.0186 41.514402C494.8892 41.444402 494.5305 41.325027 493.9526 41.155652ZM496.2836 40.179402L496.742 39.77096L496.9114 39.88065C496.9211 39.89065 497.0008 39.90065 497.1305 39.91065C497.2698 39.92034 497.3495 39.93034 497.3595 39.93034H503.2367C503.3064 39.93034 503.3561 39.94034 503.3661 39.96034S503.3461 40.04003 503.2564 40.129714L502.6092 40.826902L502.0414 40.159402H500.597V41.882839H502.9576C503.0076 41.882839 503.0473 41.892839 503.0673 41.912839C503.0773 41.932527 503.0373 41.992527 502.9476 42.1019L502.3301 42.7294L501.8023 42.1119H500.597V43.77534H502.0214V43.19784C502.2905 43.24753 502.4895 43.34721 502.6289 43.48659L502.5892 44.60221V47.45128L502.8283 47.64034C502.888 47.69034 502.918 47.73003 502.928 47.75003C502.928 47.78971 502.868 47.83971 502.7586 47.9194L502.2008 48.28784L501.9017 47.82971H498.7939L498.0867 48.27784L498.1364 46.98284V44.29346L498.0867 43.07815C498.3955 43.17784 498.5948 43.26753 498.7042 43.35721V43.77534H500.0192V42.1119H498.4851L497.758 42.1319L498.0867 41.723464C498.3058 41.833152 498.5548 41.882839 498.8436 41.882839H500.0192V40.159402H497.1505L496.2836 40.179402ZM498.7042 44.00471V45.62815H500.0192V44.00471H498.7042ZM498.7042 45.86721V47.59065H500.0192V45.86721H498.7042ZM500.597 44.00471V45.62815H502.0214V44.00471H500.597ZM502.0214 45.86721H500.597V47.59065H502.0214V45.86721Z"></path>
<path d="M175.53603 8.01293C175.53603 8.11261 175.53603 8.1823 175.40665 8.1823C175.29696 8.1823 175.29696 8.12261 175.28728 8.02293C175.20759 6.598551 174.14165 5.781676 173.05571 5.781676C172.44821 5.781676 170.49571 6.120426 170.49571 9.08886C170.49571 12.0673 172.43821 12.40574 173.04571 12.40574C174.13165 12.40574 175.01821 11.49949 175.21728 10.04511C175.23728 9.90574 175.23728 9.87574 175.37665 9.87574C175.53603 9.87574 175.53603 9.90574 175.53603 10.1148V12.47543C175.53603 12.6448 175.53603 12.7148 175.42665 12.7148C175.38665 12.7148 175.34696 12.7148 175.26728 12.59511L174.76915 11.85793C174.40071 12.21668 173.89259 12.7148 172.93634 12.7148C171.07353 12.7148 169.469776 11.13074 169.469776 9.09886C169.469776 7.03668 171.08353 5.472926 172.93634 5.472926C174.56009 5.472926 175.53603 6.8573 175.53603 8.01293ZM180.9162 6.578551V7.13636H180.6671V6.578551C180.6671 6.000738 180.4181 5.941051 180.3087 5.941051C179.9799 5.941051 179.9399 6.389176 179.9399 6.439176V8.43136C179.9399 8.8498 179.9399 9.23824 179.5815 9.60668C179.1931 9.99511 178.69493 10.15449 178.21681 10.15449C177.39993 10.15449 176.71243 9.68636 176.71243 9.02886C176.71243 8.73011 176.91181 8.56074 177.17087 8.56074C177.44962 8.56074 177.62899 8.76011 177.62899 9.01918C177.62899 9.13855 177.57931 9.4673 177.12087 9.4773C177.38993 9.82574 177.87806 9.93543 178.19681 9.93543C178.68493 9.93543 179.2527 9.54699 179.2527 8.66043V8.29199C178.74462 8.26199 178.04743 8.23199 177.41993 7.93324C176.67274 7.59449 176.42368 7.07668 176.42368 6.638238C176.42368 5.831363 177.38993 5.582301 178.01743 5.582301C178.67493 5.582301 179.1331 5.980738 179.3224 6.449176C179.3621 6.050738 179.6312 5.632301 180.0993 5.632301C180.3087 5.632301 180.9162 5.771676 180.9162 6.578551ZM179.2527 7.08668C179.2527 6.140113 178.53556 5.801676 178.08712 5.801676C177.59899 5.801676 177.19056 6.150113 177.19056 6.648238C177.19056 7.19605 177.60899 8.02293 179.2527 8.08261V7.08668ZM186.4156 5.691988V6.000738C185.7181 6.000738 185.6384 6.070426 185.6384 6.558551V10.0948L184.1743 9.98543V9.67636C184.8715 9.67636 184.9512 9.60668 184.9512 9.11855V7.34543C184.9512 6.478863 184.4731 5.801676 183.7459 5.801676C182.909 5.801676 182.8693 6.269801 182.8693 6.78761V10.0948L181.4049 9.98543V9.67636C182.1818 9.67636 182.1818 9.64668 182.1818 8.76011V7.26574C182.1818 6.488863 182.1818 5.582301 183.6959 5.582301C184.254 5.582301 184.6921 5.861363 184.9809 6.478863V5.582301L186.4156 5.691988ZM190.7591 6.8773C190.7591 6.97699 190.6597 6.97699 190.6297 6.97699C190.54 6.97699 190.52 6.93699 190.5003 6.8773C190.2113 5.951051 189.5638 5.831363 189.1953 5.831363C188.6675 5.831363 187.7906 6.259801 187.7906 7.86355C187.7906 9.4873 188.6075 9.90574 189.1356 9.90574C189.2253 9.90574 189.8528 9.89574 190.2013 9.53699C189.7931 9.50699 189.7331 9.20824 189.7331 9.07886C189.7331 8.8198 189.9125 8.62074 190.1916 8.62074C190.4503 8.62074 190.6497 8.7898 190.6497 9.08886C190.6497 9.76605 189.8925 10.15449 189.1256 10.15449C187.8803 10.15449 186.9641 9.07886 186.9641 7.84355C186.9641 6.568551 187.95 5.582301 189.1056 5.582301C190.4403 5.582301 190.7591 6.77761 190.7591 6.8773Z"></path>
<path d="M196.1052 5.691988V6.000738C195.587 6.000738 195.338 6.000738 195.328 6.299488V8.2023C195.328 9.05886 195.328 9.36761 195.0192 9.72636C194.8799 9.89574 194.5511 10.0948 193.9733 10.0948C193.1367 10.0948 192.6983 9.4973 192.5389 9.13855H192.5289V12.60511L191.0945 12.49543V12.18668C191.7917 12.18668 191.8714 12.11699 191.8714 11.62886V6.449176C191.8714 6.000738 191.762 6.000738 191.0945 6.000738V5.691988L192.2202 5.721988L193.3358 5.691988V6.000738C192.6683 6.000738 192.5589 6.000738 192.5589 6.449176V8.28199C192.5589 9.31793 193.2661 9.87574 193.9036 9.87574C194.5311 9.87574 194.6408 9.33793 194.6408 8.77011V6.449176C194.6408 6.000738 194.5311 6.000738 193.8639 6.000738V5.691988L194.9895 5.721988L196.1052 5.691988Z"></path>
<path d="M201.0963 9.67636V9.98543C200.8672 9.96543 200.5781 9.95543 200.3491 9.95543L199.4825 9.98543V9.67636C199.7913 9.66636 199.9506 9.4973 199.9506 9.24824C199.9506 9.14855 199.9406 9.12855 199.8909 9.00918L198.885 6.558551L197.7791 9.23824C197.7394 9.33793 197.7194 9.37761 197.7194 9.41761C197.7194 9.67636 198.0878 9.67636 198.2772 9.67636V9.98543L197.1916 9.95543C196.9225 9.95543 196.5241 9.96543 196.2253 9.98543V9.67636C196.7034 9.67636 196.8925 9.67636 197.0322 9.32793L198.5263 5.691988L198.2772 5.104176C198.0581 4.55636 197.7791 3.86918 197.1416 3.86918C197.0919 3.86918 196.8628 3.86918 196.6734 4.04824C196.9822 4.08824 197.0619 4.3073 197.0619 4.46668C197.0619 4.725738 196.8728 4.885113 196.6434 4.885113C196.4444 4.885113 196.2253 4.755738 196.2253 4.45668C196.2253 4.00855 196.6434 3.6498 197.1416 3.6498C197.7691 3.6498 198.1775 4.21761 198.4166 4.785426L200.1697 9.03886C200.4288 9.66636 200.9369 9.67636 201.0963 9.67636Z"></path>
<path d="M205.534277 11.64886L205.574277 10.35386L205.564277 7.45511C205.564277 7.25605 205.52459 7.11636 205.45459 7.04668C205.384902 6.97699 205.275527 6.9073 205.13584 6.83761L205.61396 6.200113C205.77334 6.379176 205.94272 6.538551 206.12209 6.668238C206.31146 6.79761 206.73959 7.06668 207.40709 7.47511L207.41709 5.014488L207.3774 4.08824C207.67615 4.15793 207.89521 4.25761 208.03459 4.3673L208.0049 5.054488L208.0149 12.54543L208.28365 12.73449C208.31365 12.75449 208.33365 12.78449 208.33365 12.81418C208.33365 12.84418 208.28365 12.88386 208.19396 12.92386L207.38709 13.26261L207.41709 12.11699V7.71418L206.10209 7.18605V10.90168L206.34115 11.07105C206.41115 11.12074 206.44084 11.16074 206.44084 11.19043C206.44084 11.22043 206.40115 11.26043 206.32146 11.29011L205.534277 11.64886ZM210.80396 6.498863L210.61459 6.229801C210.50521 6.080426 210.32584 5.871363 210.06678 5.632301C209.80772 5.373238 209.57865 5.173863 209.38928 5.014488C209.19021 4.855113 208.75178 4.58636 208.06459 4.19793L208.10428 4.07824C208.6324 4.26761 209.08053 4.48668 209.44928 4.715738C209.82772 4.944801 210.13646 5.173863 210.36553 5.373238C210.60459 5.592301 210.84365 5.831363 211.09271 6.100426C211.46147 5.701988 211.78021 5.393238 212.03896 5.173863C212.29803 4.954801 212.69646 4.66605 213.22459 4.3073C213.38396 4.49668 213.51334 4.61605 213.61303 4.65605C213.7224 4.705738 213.92178 4.725738 214.21053 4.725738L214.23053 4.825426C213.68271 5.014488 213.26428 5.193863 212.99553 5.343238C212.72647 5.492613 212.4774 5.651988 212.25834 5.821363C212.03896 5.990738 211.77021 6.239801 211.46147 6.578551C211.68053 6.95699 211.8599 7.31574 211.99928 7.65449C212.14865 7.99293 212.26834 8.44136 212.37771 8.98918C212.4874 9.53699 212.58709 10.1348 212.68646 10.7723H213.86209C213.95178 10.7723 214.01147 10.7823 214.02146 10.80199C214.03146 10.82199 214.01147 10.87168 213.95178 10.94168L213.35397 11.58918L212.83584 10.99136H209.98709C210.15646 11.4198 210.35553 11.94761 210.60459 12.58511L210.87365 12.7048C210.96334 12.73449 211.00303 12.76449 211.00303 12.80418C211.00303 12.82418 210.95334 12.87418 210.84365 12.92386L210.03678 13.3123C209.95709 12.85418 209.8874 12.46574 209.80772 12.13699C209.74803 11.80824 209.66834 11.49949 209.56865 11.19043C209.48896 10.87168 209.36959 10.53324 209.22022 10.1448C209.07053 9.75605 208.95115 9.4573 208.85146 9.25824C208.76178 9.03886 208.6324 8.7898 208.47303 8.49105L208.57272 8.41136C208.78178 8.67043 208.97115 8.94918 209.15021 9.25824C209.31959 9.56699 209.44928 9.79605 209.52897 9.96543C209.59865 10.1348 209.67834 10.31386 209.76803 10.52324L209.82772 9.88574C209.84772 9.69636 209.9074 9.36761 209.98709 8.89949C210.07678 8.44136 210.19615 8.03293 210.32584 7.66418C210.45522 7.30574 210.61459 6.9173 210.80396 6.498863ZM212.02928 10.7723L211.92959 9.77605C211.89959 9.52699 211.8499 9.19824 211.76022 8.7998C211.67053 8.38136 211.59084 8.07261 211.50115 7.84355C211.41146 7.62449 211.29209 7.34543 211.13271 6.99699L210.77397 7.63449C210.69428 7.77386 210.5849 8.03293 210.44521 8.41136C210.30584 8.7898 210.19615 9.15855 210.12647 9.53699C210.05678 9.89574 209.97709 10.28418 209.9074 10.69261L209.9374 10.7723H212.02928ZM218.2562 12.60511L218.4853 12.6448C218.5353 12.6548 218.565 12.6748 218.575 12.7048C218.585 12.73449 218.555 12.77449 218.4753 12.84418L217.7481 13.3523L217.6387 12.98355C217.569 12.78449 217.4294 12.48543 217.2003 12.09699S216.6825 11.25043 216.3437 10.7323C215.985 10.21449 215.5169 9.63668 214.9294 9.00918L215.009 8.88949C215.6862 9.4573 216.224 9.99511 216.6425 10.48324C217.0409 10.97136 217.4594 11.50949 217.8678 12.09699C218.2462 11.88793 218.5253 11.70855 218.7044 11.53918C218.8837 11.3698 219.0531 11.20043 219.2125 11.02136C219.3619 10.84199 219.4715 10.69261 219.5512 10.59293C219.6109 10.47324 219.6706 10.42355 219.7106 10.41355C219.7503 10.40355 219.8003 10.42355 219.86 10.46355C219.9197 10.50324 219.9697 10.62293 220.0194 10.81199C220.069 11.01136 219.9894 11.19043 219.7903 11.34011C219.5909 11.48949 219.3719 11.62886 219.1428 11.73855C218.9137 11.84793 218.7244 11.93761 218.575 12.0073S218.2362 12.15668 217.9972 12.25636L218.0969 12.41574C218.1069 12.43574 218.1565 12.49543 218.2562 12.60511ZM218.6647 5.951051L218.6947 6.040738L219.4515 7.5448C219.4715 7.5748 219.5812 7.77386 219.7903 8.1423L220.0294 8.24199C220.079 8.26199 220.109 8.28199 220.119 8.30168C220.129 8.32168 220.089 8.35168 220.0194 8.39136L219.2822 8.8198L219.2425 8.52105C219.2325 8.45136 219.2025 8.33168 219.1528 8.1423C219.0931 7.95324 219.0431 7.76386 218.9834 7.5748C218.9237 7.38543 218.7344 6.82761 218.4056 5.901051L217.2103 5.671988C216.7022 5.562613 216.035 5.472926 215.2081 5.403238L215.6065 4.65605C215.8156 4.785426 215.995 4.885113 216.1444 4.934801C216.294 4.984801 216.7122 5.104176 217.3797 5.293551L218.7644 5.691988C219.1228 5.801676 219.6609 5.951051 220.3881 6.140113L220.3681 6.289801L218.6647 5.951051ZM216.025 8.51105L216.1047 8.30168C216.1147 8.25199 216.1444 8.1423 216.1844 7.96324C216.234 7.78386 216.264 7.63449 216.284 7.5248C216.3037 7.41543 216.3237 7.27574 216.3337 7.11636C216.3437 6.9173 216.3437 6.74793 216.3237 6.608551L216.284 6.419176C216.254 6.269801 216.284 6.180113 216.3834 6.150113C216.4631 6.120426 216.5828 6.190113 216.7422 6.369488C216.8815 6.538551 216.9612 6.71793 216.9612 6.8873C216.9512 7.06668 216.8615 7.31574 216.6925 7.62449C216.5231 7.94324 216.3934 8.1623 216.3037 8.28199C216.224 8.40136 216.1644 8.50105 216.1147 8.57074L216.025 8.51105ZM216.3137 9.77605L216.6325 9.36761C216.7819 9.4473 216.9015 9.4973 217.0012 9.50699C217.1006 9.51699 217.2303 9.52699 217.3997 9.52699H219.5712C219.6609 9.52699 219.7106 9.53699 219.7206 9.55699S219.7006 9.63668 219.6109 9.72636L218.9834 10.33386L218.545 9.74605L216.8915 9.75605L216.3137 9.77605ZM217.4294 9.00918L217.32 8.94918C217.4394 8.66043 217.519 8.44136 217.559 8.29199C217.6087 8.1423 217.6387 7.98293 217.6587 7.80386C217.6684 7.63449 217.6784 7.45511 217.6784 7.27574V6.8573C217.6684 6.75793 217.6784 6.69793 217.6884 6.668238C217.6984 6.638238 217.7384 6.618238 217.7981 6.608551C217.8478 6.598551 217.9275 6.648238 218.0372 6.75793C218.1565 6.8673 218.2262 7.00699 218.2562 7.16636C218.2862 7.33574 218.2562 7.5648 218.1665 7.83355C218.0769 8.10261 217.8278 8.50105 217.4294 9.00918ZM217.6784 4.10824L217.6884 3.95886C218.605 4.16793 219.3222 4.40699 219.83 4.68605C220.3481 4.964801 220.7265 5.223863 220.9856 5.452926C221.2247 5.691988 221.4437 5.901051 221.6131 6.080426C221.7625 5.841363 221.9519 5.582301 222.1909 5.303551C222.43 5.024488 222.7487 4.695738 223.1372 4.3073L223.4062 4.52668C223.5456 4.65605 223.8247 4.68605 224.2428 4.61605L224.2528 4.735738L223.7847 4.954801C223.3862 5.124176 223.0378 5.353238 222.7387 5.661988C222.43 5.971051 222.2506 6.160113 222.2009 6.229801C222.1412 6.309488 222.0615 6.419176 221.9719 6.568551L222.1512 6.9173C222.2606 7.14636 222.4 7.5048 222.5594 8.02293C222.7187 8.52105 222.8384 9.01918 222.9181 9.4973C222.9978 9.98543 223.0675 10.40355 223.1175 10.7723H223.8944C223.994 10.7723 224.0537 10.7823 224.0637 10.80199C224.0737 10.82199 224.0337 10.88168 223.944 10.99136L223.3265 11.65886L222.8584 10.99136L221.0056 11.00136L221.6331 12.6548L221.8622 12.78449C221.9319 12.82418 221.9619 12.85418 221.9619 12.87418C221.9719 12.89386 221.9419 12.91386 221.8822 12.94386L221.0453 13.3523L220.9956 12.84418C220.9656 12.58511 220.8759 12.20668 220.7265 11.69855C220.5872 11.19043 220.4678 10.7823 220.3481 10.46355C220.2484 10.1448 220.0294 9.63668 219.7006 8.94918L219.8203 8.87949L220.2884 9.61668C220.3281 9.66636 220.4478 9.87574 220.6469 10.24418L220.6969 9.36761C220.7069 9.25824 220.7465 8.92949 220.8462 8.38136C220.9259 7.82355 221.0156 7.42511 221.1053 7.18605C221.185 6.93699 221.2647 6.72793 221.3344 6.548551L221.0056 6.130426C220.8362 5.921051 220.5672 5.671988 220.1887 5.383238C219.8103 5.094176 219.4315 4.865113 219.0531 4.67605C218.6847 4.48668 218.2262 4.2973 217.6784 4.10824ZM220.9259 10.7723H222.4797L222.46 10.44355C222.45 10.30418 222.41 10.01511 222.3403 9.57699C222.2706 9.14855 222.1909 8.77011 222.1212 8.45136C222.0415 8.13261 221.9719 7.87355 221.9022 7.67418C221.8325 7.47511 221.7625 7.26574 221.6731 7.05668L221.4737 7.5048C221.4337 7.59449 221.364 7.80386 221.2744 8.1423C221.185 8.49105 221.125 8.73011 221.0853 8.86949C221.0653 9.00918 221.0156 9.23824 220.9656 9.56699C220.9159 9.89574 220.8859 10.1048 220.8662 10.21449C220.8662 10.31386 220.8562 10.44355 220.8462 10.61293L220.9259 10.7723ZM226.1069 12.95386L226.1866 11.76824C226.1966 11.58918 226.2066 11.10105 226.1966 10.29418C226.1866 9.4873 226.1769 8.87949 226.1569 8.46136C226.1369 8.03293 226.0872 7.5548 226.0076 7.00699C225.9279 6.468863 225.7982 6.010738 225.6288 5.632301C225.4594 5.253551 225.2404 4.845426 224.9716 4.40699L225.0413 4.3173C225.5591 4.885113 225.9476 5.472926 226.2066 6.110426C226.4657 6.72793 226.6251 7.33574 226.6847 7.92324C226.7544 8.51105 226.7844 9.15855 226.7844 9.89574C226.7944 10.61293 226.8044 11.43949 226.8144 12.35605H229.9619L229.8822 11.89793C229.8626 11.75824 229.7729 11.4198 229.6035 10.87168H228.6172L228.0097 11.24043L228.0494 10.30418V8.62074L227.9897 7.42511L228.0594 7.45511L228.2885 7.5448C228.3782 7.5748 228.4679 7.62449 228.5576 7.69418L228.5676 7.93324H230.0716V5.462926C230.0716 5.353238 230.0416 5.273551 229.9719 5.223863C229.9122 5.173863 229.7926 5.144176 229.5935 5.144176C229.4141 5.144176 228.986 5.173863 228.3185 5.243863L228.2985 5.094176C228.8066 4.994801 229.1354 4.905113 229.2847 4.815426C229.4341 4.735738 229.5238 4.63605 229.5535 4.49668C229.5935 4.37699 229.6235 4.26761 229.6332 4.18793C229.9422 4.2973 230.1613 4.40699 230.2907 4.49668C230.4204 4.58636 230.5001 4.68605 230.5497 4.775426C230.5994 4.875113 230.6194 4.994801 230.6194 5.134176V7.93324L232.1038 7.94324L232.1138 7.64449C232.3429 7.69418 232.5419 7.77386 232.7213 7.90324L232.6716 8.7998V10.48324L232.8807 10.64261C232.9504 10.69261 232.9904 10.7323 233.0004 10.7523C233.0004 10.7623 232.9404 10.82199 232.811 10.92168L232.3029 11.31011L231.9841 10.87168H229.8526C230.0416 11.19043 230.261 11.52918 230.4901 11.87793L230.6694 11.94761C230.7588 11.97761 230.8088 11.9973 230.8188 12.0173S230.7688 12.07699 230.6494 12.13699L230.221 12.35605H233.8569C233.8866 12.35605 233.9166 12.36605 233.9466 12.38605C233.9763 12.41574 233.9066 12.49543 233.7572 12.6448L233.2294 13.15293L232.7313 12.58511H226.8441L226.1069 12.95386ZM228.5576 9.54699V10.63261H232.1038V9.54699H228.5576ZM228.5576 8.1823L228.5676 9.30793H232.1038V8.1823H228.5576ZM226.1866 4.775426L226.2663 4.67605C226.7644 4.944801 227.2029 5.223863 227.5813 5.522613C227.9497 5.821363 228.3582 6.180113 228.7866 6.588551L228.9957 6.638238C229.0854 6.668238 229.1354 6.688238 229.1454 6.70793C229.1551 6.71793 229.1054 6.76793 228.9957 6.83761L228.3385 7.22605L228.1091 6.82761C227.9401 6.518863 227.701 6.190113 227.4019 5.871363C227.1132 5.532613 226.7047 5.173863 226.1866 4.775426ZM231.546 6.95699L231.6654 6.8673L232.0438 6.598551C232.3926 6.339488 232.6516 6.110426 232.801 5.911051C232.9604 5.711988 233.0897 5.532613 233.1794 5.353238C233.2691 5.193863 233.3388 5.074488 233.3788 5.024488C233.4085 4.974801 233.4485 4.944801 233.4882 4.944801C233.5182 4.934801 233.5679 4.954801 233.6179 5.014488C233.6776 5.054488 233.7272 5.124176 233.7672 5.203863C233.8369 5.333238 233.8669 5.442926 233.8569 5.542613C233.8569 5.642301 233.8069 5.771676 233.6976 5.931051C233.5979 6.080426 233.3388 6.259801 232.9207 6.468863C232.4922 6.678238 232.0538 6.8773 231.6057 7.07668L231.546 6.95699ZM234.7048 5.771676L235.1929 5.004801C235.482 5.233863 235.8008 5.472926 236.1692 5.711988C236.5379 5.961051 237.3745 6.468863 238.6995 7.24605L238.5898 7.35543C237.992 7.09668 237.4742 6.8673 237.0458 6.678238V8.99918H238.3808C238.4205 8.99918 238.4504 9.00918 238.4701 9.03886C238.4901 9.06886 238.4504 9.12855 238.3608 9.21824L237.8326 9.71636L237.4145 9.21824H237.0458V11.79824H238.4604C238.5101 11.79824 238.5498 11.80824 238.5598 11.83793C238.5798 11.86793 238.5598 11.90793 238.5001 11.96761L237.8926 12.57511L237.4145 12.0373H235.3823L234.8045 12.0573L235.1333 11.70855C235.2429 11.76824 235.3823 11.79824 235.5317 11.79824H236.4483V9.21824H235.5117L234.9539 9.23824L235.2926 8.8498C235.452 8.94918 235.6514 8.99918 235.8904 8.99918H236.4483V6.439176L235.7708 6.130426C235.6414 6.060426 235.2826 5.941051 234.7048 5.771676ZM237.0358 4.795426L237.4942 4.38699L237.6636 4.49668C237.6733 4.50668 237.753 4.51668 237.8826 4.52668C238.022 4.53636 238.1017 4.54636 238.1117 4.54636H243.9889C244.0586 4.54636 244.1083 4.55636 244.1183 4.57636S244.0983 4.65605 244.0086 4.745738L243.3614 5.442926L242.7936 4.775426H241.3492V6.498863H243.7098C243.7598 6.498863 243.7995 6.508863 243.8195 6.528863C243.8295 6.548551 243.7895 6.608551 243.6998 6.71793L243.0823 7.34543L242.5545 6.72793H241.3492V8.39136H242.7736V7.81386C243.0426 7.86355 243.2417 7.96324 243.3811 8.10261L243.3414 9.21824V12.0673L243.5805 12.25636C243.6401 12.30636 243.6701 12.34605 243.6801 12.36605C243.6801 12.40574 243.6201 12.45574 243.5108 12.53543L242.9529 12.90386L242.6539 12.44574H239.5461L238.8389 12.89386L238.8886 11.59886V8.90949L238.8389 7.69418C239.1476 7.79386 239.347 7.88355 239.4564 7.97324V8.39136H240.7714V6.72793H239.2373L238.5101 6.74793L238.8389 6.339488C239.058 6.449176 239.307 6.498863 239.5958 6.498863H240.7714V4.775426H237.9026L237.0358 4.795426ZM239.4564 8.62074V10.24418H240.7714V8.62074H239.4564ZM239.4564 10.48324V12.20668H240.7714V10.48324H239.4564ZM241.3492 8.62074V10.24418H242.7736V8.62074H241.3492ZM242.7736 10.48324H241.3492V12.20668H242.7736V10.48324Z"></path>
<path d="M87.508 70.5312L45.953 52.83203" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M48.613245 51.367226C47.703083 52.539104 46.664023 52.832071 45.769491 52.753946C46.445271 53.34379 46.953087 54.296918 46.742147 55.765662" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M57.426 56.2539H75.668V66.957H57.426Z" fill="#fff"></path>
<path d="M60.87052 64.33487L60.89115 63.93019C60.89834 63.8605 60.89834 63.71394 60.91209 63.49769C60.91209 63.28175 60.91927 62.95362 60.91927 62.51425C60.91927 62.08175 60.91209 61.76112 60.89834 61.55175C60.89115 61.34269 60.8774 61.14737 60.85646 60.973C60.82865 60.79862 60.80771 60.63112 60.78677 60.491749C60.75865 60.337999 60.71677 60.191749 60.66802 60.031124C60.61927 59.870812 60.549587 59.696437 60.465837 59.501124C60.375212 59.298937 60.165837 59.005812 59.838024 58.615187L59.900837 58.545499C60.103024 58.727062 60.270524 58.908312 60.423962 59.082687C60.563337 59.257062 60.68896 59.431437 60.78677 59.584874C60.88427 59.752374 60.9749 59.968624 61.05177 60.240499C61.12834 60.519562 61.18427 60.76362 61.21209 60.96581C61.2399 61.17519 61.26084 61.39144 61.2749 61.60769C61.29584 61.83081 61.31677 62.13081 61.34459 62.51425H62.23052C62.30021 62.19362 62.36302 61.94237 62.41896 61.76112C62.48146 61.57269 62.55834 61.37737 62.64896 61.16112C62.73959 60.95206 62.82334 60.78456 62.88615 60.65894C62.94896 60.533312 63.07459 60.337999 63.25584 60.066124L63.1374 59.926749C63.1024 59.891749 62.98365 59.794249 62.78146 59.640499C62.57927 59.480187 62.4049 59.361749 62.26552 59.277999C62.12584 59.194249 61.95146 59.096749 61.73521 58.992062C61.51896 58.887374 61.35177 58.803624 61.23302 58.754874C61.11459 58.706124 60.87052 58.622374 60.514587 58.51081L60.570524 58.39925C61.51209 58.671124 62.17459 58.908312 62.54427 59.124562C62.91396 59.333624 63.24896 59.557062 63.5349 59.787062C63.82084 59.598937 64.00209 59.473312 64.08584 59.417374C64.16959 59.368624 64.35802 59.263937 64.65084 59.117374C64.93677 58.971124 65.27865 58.824562 65.66209 58.677999L65.78084 58.859562C65.80177 58.908312 65.86459 58.957062 65.96209 59.005812C66.06677 59.054874 66.20615 59.089562 66.38771 59.103624V59.201124C65.97615 59.242999 65.69709 59.277999 65.54365 59.319874C65.39021 59.347687 65.20896 59.403624 64.99271 59.480187C64.77646 59.557062 64.58802 59.626749 64.42052 59.710499C64.25334 59.780187 64.04396 59.912687 63.79302 60.087062C63.99521 60.352062 64.13459 60.55425 64.22521 60.68675C64.31615 60.81956 64.40677 60.98675 64.51146 61.18925C64.60896 61.38425 64.69271 61.55862 64.7624 61.71237C64.82521 61.86581 64.90896 62.07487 65.01365 62.33987L65.24365 62.45862C65.2924 62.47956 65.31334 62.5005 65.32052 62.51425C65.3274 62.53519 65.29959 62.57019 65.23677 62.61894L64.75552 62.98862L64.50427 62.67487H61.35177L61.37271 63.2955C61.37271 63.35831 61.37959 63.53956 61.38646 63.85362C62.48146 63.92331 63.36052 63.993 64.02302 64.06269L64.7274 64.14644C64.7274 64.14644 65.18802 64.18831 65.18802 64.18831S65.50177 64.14644 65.50177 64.14644C65.5924 64.13269 65.60646 64.16737 65.53677 64.25112L65.13209 64.76019C64.81834 64.63487 64.53927 64.53706 64.28802 64.48144C64.03709 64.41144 63.66052 64.34175 63.16521 64.258S62.33521 64.11862 62.16084 64.09081C61.98646 64.06987 61.77021 64.04175 61.50521 64.02081L60.87052 64.33487ZM62.37709 62.51425L64.55302 62.52144L64.49052 62.28425C64.44865 62.13769 64.38584 61.94925 64.28802 61.733C64.20427 61.51706 64.10677 61.31456 64.01615 61.13331C63.92552 60.94487 63.84177 60.79862 63.77209 60.68675C63.69521 60.58237 63.61146 60.456749 63.51396 60.324249C63.35334 60.512374 63.2349 60.65206 63.17209 60.74269C63.1024 60.8405 63.02552 60.96581 62.9349 61.11925C62.85115 61.26581 62.78146 61.40519 62.71865 61.53081C62.65584 61.65644 62.60021 61.78894 62.55834 61.94237C62.5024 62.08175 62.44677 62.27706 62.37709 62.51425ZM66.70021 62.42362L66.95834 62.1655C67.04896 62.22144 67.11865 62.25612 67.1674 62.26331C67.21646 62.27706 67.28615 62.29112 67.38365 62.298L67.78146 62.33987V59.773312C67.78146 59.536124 67.76052 59.382687 67.71865 59.305812C67.6699 59.236124 67.61396 59.166437 67.53709 59.096749L68.00459 58.677999L68.15115 58.998937C68.22084 59.145499 68.53459 59.661437 69.09271 60.540499L69.02302 60.58925C68.73677 60.261437 68.45084 59.940499 68.1649 59.640499V62.22144L68.30459 62.33987C68.40209 62.4305 68.45084 62.47237 68.45084 62.47237C68.45084 62.47956 68.39521 62.52144 68.29052 62.61206L67.96271 62.87706L67.73959 62.50737L67.11865 62.45144L66.70021 62.42362ZM67.32115 64.73925L67.27927 64.67675L67.43271 64.53706C67.5024 64.47425 67.59302 64.34862 67.71146 64.1605C67.83021 63.97206 67.90677 63.81175 67.95584 63.67925C67.99771 63.54675 68.0324 63.463 68.05334 63.43519C68.08115 63.40706 68.10209 63.38612 68.12302 63.37925C68.15802 63.36519 68.21365 63.38612 68.28365 63.44206C68.35334 63.49769 68.39521 63.57456 68.41615 63.67206C68.4299 63.763 68.4299 63.84644 68.41615 63.90925C68.40896 63.97206 68.37427 64.04175 68.30459 64.11862C68.24865 64.19519 68.12302 64.293 67.94177 64.41144C67.75334 64.53019 67.55115 64.64175 67.32115 64.73925ZM68.74396 58.775812L68.95302 58.852374C69.0299 58.887374 69.20427 58.908312 69.46927 58.908312H73.2986C73.3333 58.908312 73.3615 58.915187 73.3683 58.929249C73.3824 58.950187 73.3474 59.005812 73.2568 59.103624L72.8452 59.542999L72.4755 59.082687H71.2618V61.71237L72.908 61.71925C72.9427 61.71925 72.9708 61.72612 72.9777 61.74019C72.9846 61.75394 72.9427 61.80987 72.8521 61.9005L72.4127 62.31206L72.0918 61.87956H71.269L71.2618 64.21612L73.1521 64.20925C73.173 64.20925 73.194 64.22331 73.2008 64.24425C73.2149 64.27206 73.173 64.328 73.0824 64.41862L72.6777 64.80925L72.329 64.37675H69.23927L68.81365 64.3905L69.05084 64.11862L69.22521 64.17425C69.28802 64.19519 69.46927 64.20925 69.7761 64.20925H70.8224L70.8086 59.082687H69.839V62.29112L69.9715 62.40269C70.0274 62.45144 70.0552 62.47956 70.0483 62.48644C70.0483 62.5005 70.0065 62.52831 69.9296 62.56331L69.37865 62.79331L69.41365 62.02612V59.082687H69.00896L68.49271 59.103624L68.74396 58.775812Z"></path>
<path d="M106.527 70.5312V53.06641" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M108.91776 54.93752C107.484161 54.55861 106.80838 53.714862 106.52713 52.867206C106.249786 53.714862 105.570099 54.55861 104.13651 54.93752" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M97.406 56.2461H115.648V66.9492H97.406Z" fill="#fff"></path>
<path d="M100.85151 64.3299L100.87214 63.92521C100.87933 63.85552 100.87933 63.70896 100.89308 63.49271C100.89308 63.27677 100.90026 62.94865 100.90026 62.50927C100.90026 62.07677 100.89308 61.75615 100.87933 61.54677C100.87214 61.33771 100.85839 61.1424 100.83745 60.96802C100.80964 60.79365 100.7887 60.62615 100.76776 60.486771C100.73964 60.333021 100.69776 60.186771 100.64901 60.026146C100.60026 59.865834 100.530576 59.691459 100.446826 59.496146C100.356201 59.293959 100.146826 59.000834 99.819014 58.610209L99.881826 58.540521C100.084014 58.722084 100.251514 58.903334 100.404951 59.077709C100.544326 59.252084 100.66995 59.426459 100.76776 59.579896C100.86526 59.747396 100.95589 59.963646 101.03276 60.235521C101.10933 60.514584 101.16526 60.75865 101.19308 60.96083C101.22089 61.17021 101.24183 61.38646 101.25589 61.60271C101.27683 61.82583 101.29776 62.12583 101.32558 62.50927H102.21151C102.2812 62.18865 102.34401 61.9374 102.39995 61.75615C102.46245 61.56771 102.53933 61.3724 102.62995 61.15615C102.72058 60.94708 102.80433 60.77958 102.86714 60.65396C102.92995 60.528334 103.05558 60.333021 103.23683 60.061146L103.11839 59.921771C103.08339 59.886771 102.96464 59.789271 102.76245 59.635521C102.56026 59.475209 102.38589 59.356771 102.24651 59.273021C102.10683 59.189271 101.93245 59.091771 101.7162 58.987084C101.49995 58.882396 101.33276 58.798646 101.21401 58.749896C101.09558 58.701146 100.85151 58.617396 100.495576 58.50583L100.551514 58.39427C101.49308 58.666146 102.15558 58.903334 102.52526 59.119584C102.89495 59.328646 103.22995 59.552084 103.51589 59.782084C103.80183 59.593959 103.98308 59.468334 104.06683 59.412396C104.15058 59.363646 104.33901 59.258959 104.63183 59.112396C104.91776 58.966146 105.25964 58.819584 105.64308 58.673021L105.76183 58.854584C105.78276 58.903334 105.84558 58.952084 105.94308 59.000834C106.04776 59.049896 106.18714 59.084584 106.3687 59.098646V59.196146C105.95714 59.238021 105.67808 59.273021 105.52464 59.314896C105.3712 59.342709 105.18995 59.398646 104.9737 59.475209C104.75745 59.552084 104.56901 59.621771 104.40151 59.705521C104.23433 59.775209 104.02495 59.907709 103.77401 60.082084C103.9762 60.347084 104.11558 60.54927 104.2062 60.68177C104.29714 60.81458 104.38776 60.98177 104.49245 61.18427C104.58995 61.37927 104.6737 61.55365 104.74339 61.7074C104.8062 61.86083 104.88995 62.0699 104.99464 62.3349L105.22464 62.45365C105.27339 62.47458 105.29433 62.49552 105.30151 62.50927C105.30839 62.53021 105.28058 62.56521 105.21776 62.61396L104.73651 62.98365L104.48526 62.6699H101.33276L101.3537 63.29052C101.3537 63.35333 101.36058 63.53458 101.36745 63.84865C102.46245 63.91833 103.34151 63.98802 104.00401 64.05771L104.70839 64.14146C104.70839 64.14146 105.16901 64.18333 105.16901 64.18333S105.48276 64.14146 105.48276 64.14146C105.57339 64.12771 105.58745 64.1624 105.51776 64.24615L105.11308 64.75521C104.79933 64.6299 104.52026 64.53208 104.26901 64.47646C104.01808 64.40646 103.64151 64.33677 103.1462 64.25302S102.3162 64.11365 102.14183 64.08583C101.96745 64.0649 101.7512 64.03677 101.4862 64.01583L100.85151 64.3299ZM102.35808 62.50927L104.53401 62.51646L104.47151 62.27927C104.42964 62.13271 104.36683 61.94427 104.26901 61.72802C104.18526 61.51208 104.08776 61.30958 103.99714 61.12833C103.90651 60.9399 103.82276 60.79365 103.75308 60.68177C103.6762 60.5774 103.59245 60.451771 103.49495 60.319271C103.33433 60.507396 103.21589 60.64708 103.15308 60.73771C103.08339 60.83552 103.00651 60.96083 102.91589 61.11427C102.83214 61.26083 102.76245 61.40021 102.69964 61.52583C102.63683 61.65146 102.5812 61.78396 102.53933 61.9374C102.48339 62.07677 102.42776 62.27208 102.35808 62.50927ZM106.6812 62.41865L106.93933 62.16052C107.02995 62.21646 107.09964 62.25115 107.14839 62.25833C107.19745 62.27208 107.26714 62.28615 107.36464 62.29302L107.76245 62.3349V59.768334C107.76245 59.531146 107.74151 59.377709 107.69964 59.300834C107.65089 59.231146 107.59495 59.161459 107.51808 59.091771L107.98558 58.673021L108.13214 58.993959C108.20183 59.140521 108.51558 59.656459 109.0737 60.535521L109.00401 60.58427C108.71776 60.256459 108.43183 59.935521 108.14589 59.635521V62.21646L108.28558 62.3349C108.38308 62.42552 108.43183 62.4674 108.43183 62.4674C108.43183 62.47458 108.3762 62.51646 108.27151 62.60708L107.9437 62.87208L107.72058 62.5024L107.09964 62.44646L106.6812 62.41865ZM107.30214 64.73427L107.26026 64.67177L107.4137 64.53208C107.48339 64.46927 107.57401 64.34365 107.69245 64.15552C107.8112 63.96708 107.88776 63.80677 107.93683 63.67427C107.9787 63.54177 108.01339 63.45802 108.03433 63.43021C108.06214 63.40208 108.08308 63.38115 108.10401 63.37427C108.13901 63.36021 108.19464 63.38115 108.26464 63.43708C108.33433 63.49271 108.3762 63.56958 108.39714 63.66708C108.41089 63.75802 108.41089 63.84146 108.39714 63.90427C108.38995 63.96708 108.35526 64.03677 108.28558 64.11365C108.22964 64.19021 108.10401 64.28802 107.92276 64.40646C107.73433 64.52521 107.53214 64.63677 107.30214 64.73427ZM108.72495 58.770834L108.93401 58.847396C109.01089 58.882396 109.18526 58.903334 109.45026 58.903334H113.2796C113.3143 58.903334 113.3425 58.910209 113.3493 58.924271C113.3634 58.945209 113.3284 59.000834 113.2378 59.098646L112.8262 59.538021L112.4565 59.077709H111.2428V61.7074L112.889 61.71427C112.9237 61.71427 112.9518 61.72115 112.9587 61.73521C112.9656 61.74896 112.9237 61.8049 112.8331 61.89552L112.3937 62.30708L112.0728 61.87458H111.25L111.2428 64.21115L113.1331 64.20427C113.154 64.20427 113.175 64.21833 113.1818 64.23927C113.1959 64.26708 113.154 64.32302 113.0634 64.41365L112.6587 64.80427L112.31 64.37177H109.22026L108.79464 64.38552L109.03183 64.11365L109.2062 64.16927C109.26901 64.19021 109.45026 64.20427 109.7571 64.20427H110.8034L110.7896 59.077709H109.82V62.28615L109.9525 62.39771C110.0084 62.44646 110.0362 62.47458 110.0293 62.48146C110.0293 62.49552 109.9875 62.52333 109.9106 62.55833L109.35964 62.78833L109.39464 62.02115V59.077709H108.98995L108.4737 59.098646L108.72495 58.770834Z"></path>
<path d="M129.676 70.5312L180.2227 52.83984" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M179.241821 55.714834C179.12462 54.23437 179.698841 53.316399 180.40978 52.773431C179.515245 52.789055 178.495717 52.429681 177.663679 51.199209" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M146.016 56.2656H164.2578V66.9687H146.016Z" fill="#fff"></path>
<path d="M149.45946 64.34989L149.48009 63.9452C149.48728 63.87551 149.48728 63.72895 149.50103 63.5127C149.50103 63.29676 149.50821 62.96864 149.50821 62.52926C149.50821 62.09676 149.50103 61.77614 149.48728 61.56676C149.48009 61.3577 149.46634 61.16239 149.4454 60.98801C149.41759 60.81364 149.39665 60.64614 149.37571 60.506762C149.34759 60.353012 149.30571 60.206762 149.25696 60.046137C149.20821 59.885824 149.138526 59.711449 149.054776 59.516137C148.964151 59.313949 148.754776 59.020824 148.426963 58.630199L148.489776 58.560512C148.691963 58.742074 148.859463 58.923324 149.012901 59.097699C149.152276 59.272074 149.2779 59.446449 149.37571 59.599887C149.47321 59.767387 149.56384 59.983637 149.64071 60.255512C149.71728 60.534574 149.77321 60.77864 149.80103 60.98082C149.82884 61.1902 149.84978 61.40645 149.86384 61.6227C149.88478 61.84582 149.90571 62.14582 149.93353 62.52926H150.81946C150.88915 62.20864 150.95196 61.95739 151.0079 61.77614C151.0704 61.5877 151.14728 61.39239 151.2379 61.17614C151.32853 60.96707 151.41228 60.79957 151.47509 60.67395C151.5379 60.548324 151.66353 60.353012 151.84478 60.081137L151.72634 59.941762C151.69134 59.906762 151.57259 59.809262 151.3704 59.655512C151.16821 59.495199 150.99384 59.376762 150.85446 59.293012C150.71478 59.209262 150.5404 59.111762 150.32415 59.007074C150.1079 58.902387 149.94071 58.818637 149.82196 58.769887C149.70353 58.721137 149.45946 58.637387 149.103526 58.52582L149.159463 58.41426C150.10103 58.686137 150.76353 58.923324 151.13321 59.139574C151.5029 59.348637 151.8379 59.572074 152.12384 59.802074C152.40978 59.613949 152.59103 59.488324 152.67478 59.432387C152.75853 59.383637 152.94696 59.278949 153.23978 59.132387C153.52571 58.986137 153.86759 58.839574 154.25103 58.693012L154.36978 58.874574C154.39071 58.923324 154.45353 58.972074 154.55103 59.020824C154.65571 59.069887 154.79509 59.104574 154.97665 59.118637V59.216137C154.56509 59.258012 154.28603 59.293012 154.13259 59.334887C153.97915 59.362699 153.7979 59.418637 153.58165 59.495199C153.3654 59.572074 153.17696 59.641762 153.00946 59.725512C152.84228 59.795199 152.6329 59.927699 152.38196 60.102074C152.58415 60.367074 152.72353 60.56926 152.81415 60.70176C152.90509 60.83457 152.99571 61.00176 153.1004 61.20426C153.1979 61.39926 153.28165 61.57364 153.35134 61.72739C153.41415 61.88082 153.4979 62.08989 153.60259 62.35489L153.83259 62.47364C153.88134 62.49457 153.90228 62.51551 153.90946 62.52926C153.91634 62.5502 153.88853 62.5852 153.82571 62.63395L153.34446 63.00364L153.09321 62.68989H149.94071L149.96165 63.31051C149.96165 63.37332 149.96853 63.55457 149.9754 63.86864C151.0704 63.93832 151.94946 64.00801 152.61196 64.0777L153.31634 64.16145C153.31634 64.16145 153.77696 64.20332 153.77696 64.20332S154.09071 64.16145 154.09071 64.16145C154.18134 64.1477 154.1954 64.18239 154.12571 64.26614L153.72103 64.7752C153.40728 64.64989 153.12821 64.55207 152.87696 64.49645C152.62603 64.42645 152.24946 64.35676 151.75415 64.27301S150.92415 64.13364 150.74978 64.10582C150.5754 64.08489 150.35915 64.05676 150.09415 64.03582L149.45946 64.34989ZM150.96603 62.52926L153.14196 62.53645L153.07946 62.29926C153.03759 62.1527 152.97478 61.96426 152.87696 61.74801C152.79321 61.53207 152.69571 61.32957 152.60509 61.14832C152.51446 60.95989 152.43071 60.81364 152.36103 60.70176C152.28415 60.59739 152.2004 60.471762 152.1029 60.339262C151.94228 60.527387 151.82384 60.66707 151.76103 60.7577C151.69134 60.85551 151.61446 60.98082 151.52384 61.13426C151.44009 61.28082 151.3704 61.4202 151.30759 61.54582C151.24478 61.67145 151.18915 61.80395 151.14728 61.95739C151.09134 62.09676 151.03571 62.29207 150.96603 62.52926ZM155.28915 62.43864L155.54728 62.18051C155.6379 62.23645 155.70759 62.27114 155.75634 62.27832C155.8054 62.29207 155.87509 62.30614 155.97259 62.31301L156.3704 62.35489V59.788324C156.3704 59.551137 156.34946 59.397699 156.30759 59.320824C156.25884 59.251137 156.2029 59.181449 156.12603 59.111762L156.59353 58.693012L156.74009 59.013949C156.80978 59.160512 157.12353 59.676449 157.68165 60.555512L157.61196 60.60426C157.32571 60.276449 157.03978 59.955512 156.75384 59.655512V62.23645L156.89353 62.35489C156.99103 62.44551 157.03978 62.48739 157.03978 62.48739C157.03978 62.49457 156.98415 62.53645 156.87946 62.62707L156.55165 62.89207L156.32853 62.52239L155.70759 62.46645L155.28915 62.43864ZM155.91009 64.75426L155.86821 64.69176L156.02165 64.55207C156.09134 64.48926 156.18196 64.36364 156.3004 64.17551C156.41915 63.98707 156.49571 63.82676 156.54478 63.69426C156.58665 63.56176 156.62134 63.47801 156.64228 63.4502C156.67009 63.42207 156.69103 63.40114 156.71196 63.39426C156.74696 63.3802 156.80259 63.40114 156.87259 63.45707C156.94228 63.5127 156.98415 63.58957 157.00509 63.68707C157.01884 63.77801 157.01884 63.86145 157.00509 63.92426C156.9979 63.98707 156.96321 64.05676 156.89353 64.13364C156.83759 64.2102 156.71196 64.30801 156.53071 64.42645C156.34228 64.5452 156.14009 64.65676 155.91009 64.75426ZM157.3329 58.790824L157.54196 58.867387C157.61884 58.902387 157.79321 58.923324 158.05821 58.923324H161.8876C161.9223 58.923324 161.9504 58.930199 161.9573 58.944262C161.9713 58.965199 161.9363 59.020824 161.8457 59.118637L161.4342 59.558012L161.0645 59.097699H159.8507V61.72739L161.497 61.73426C161.5317 61.73426 161.5598 61.74114 161.5667 61.7552C161.5735 61.76895 161.5317 61.82489 161.441 61.91551L161.0017 62.32707L160.6807 61.89457H159.8579L159.8507 64.23114L161.741 64.22426C161.762 64.22426 161.7829 64.23832 161.7898 64.25926C161.8038 64.28707 161.762 64.34301 161.6713 64.43364L161.2667 64.82426L160.9179 64.39176H157.82821L157.40259 64.40551L157.63978 64.13364L157.81415 64.18926C157.87696 64.2102 158.05821 64.22426 158.3651 64.22426H159.4113L159.3976 59.097699H158.4279V62.30614L158.5604 62.4177C158.6163 62.46645 158.6442 62.49457 158.6373 62.50145C158.6373 62.51551 158.5954 62.54332 158.5185 62.57832L157.96759 62.80832L158.00259 62.04114V59.097699H157.5979L157.08165 59.118637L157.3329 58.790824Z"></path>
<path d="M140.91 72.9492L278.3945 50.21484" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M276.937763 52.878911C277.078402 51.402346 277.801062 50.593755 278.594027 50.179693C277.707311 50.042972 276.76591 49.515627 276.160413 48.160159" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M200.7305 56.1992H218.9688V66.8984H200.7305Z" fill="#fff"></path>
<path d="M204.17348 64.27988L204.1941 63.87519C204.20129 63.80551 204.20129 63.65894 204.21504 63.44269C204.21504 63.22676 204.22223 62.89863 204.22223 62.45926C204.22223 62.02676 204.21504 61.70613 204.20129 61.49676C204.1941 61.28769 204.18035 61.09238 204.15942 60.91801C204.1316 60.74363 204.11067 60.57613 204.08973 60.436756C204.0616 60.283006 204.01973 60.136756 203.97098 59.976131C203.92223 59.815818 203.852542 59.641443 203.768792 59.446131C203.678167 59.243943 203.468792 58.950818 203.14098 58.560193L203.203792 58.490506C203.40598 58.672068 203.57348 58.853318 203.726917 59.027693C203.866292 59.202068 203.99192 59.376443 204.08973 59.529881C204.18723 59.697381 204.27785 59.913631 204.35473 60.185506C204.43129 60.464568 204.48723 60.70863 204.51504 60.91082C204.54285 61.12019 204.56379 61.33644 204.57785 61.55269C204.59879 61.77582 204.61973 62.07582 204.64754 62.45926H205.53348C205.60317 62.13863 205.66598 61.88738 205.72192 61.70613C205.78442 61.51769 205.86129 61.32238 205.95192 61.10613C206.04254 60.89707 206.12629 60.72957 206.1891 60.60394C206.25192 60.478318 206.37754 60.283006 206.55879 60.011131L206.44035 59.871756C206.40535 59.836756 206.2866 59.739256 206.08442 59.585506C205.88223 59.425193 205.70785 59.306756 205.56848 59.223006C205.42879 59.139256 205.25442 59.041756 205.03817 58.937068C204.82192 58.832381 204.65473 58.748631 204.53598 58.699881C204.41754 58.651131 204.17348 58.567381 203.817542 58.45582L203.87348 58.34426C204.81504 58.616131 205.47754 58.853318 205.84723 59.069568C206.21692 59.278631 206.55192 59.502068 206.83785 59.732068C207.12379 59.543943 207.30504 59.418318 207.38879 59.362381C207.47254 59.313631 207.66098 59.208943 207.95379 59.062381C208.23973 58.916131 208.58161 58.769568 208.96504 58.623006L209.08379 58.804568C209.10473 58.853318 209.16754 58.902068 209.26504 58.950818C209.36973 58.999881 209.5091 59.034568 209.69067 59.048631V59.146131C209.2791 59.188006 209.00004 59.223006 208.8466 59.264881C208.69317 59.292693 208.51192 59.348631 208.29567 59.425193C208.07942 59.502068 207.89098 59.571756 207.72348 59.655506C207.55629 59.725193 207.34692 59.857693 207.09598 60.032068C207.29817 60.297068 207.43754 60.49926 207.52817 60.63176C207.6191 60.76457 207.70973 60.93176 207.81442 61.13426C207.91192 61.32926 207.99567 61.50363 208.06535 61.65738C208.12817 61.81082 208.21192 62.01988 208.3166 62.28488L208.5466 62.40363C208.59535 62.42457 208.61629 62.44551 208.62348 62.45926C208.63035 62.48019 208.60254 62.51519 208.53973 62.56394L208.05848 62.93363L207.80723 62.61988H204.65473L204.67567 63.24051C204.67567 63.30332 204.68254 63.48457 204.68942 63.79863C205.78442 63.86832 206.66348 63.93801 207.32598 64.00769L208.03036 64.09144C208.03036 64.09144 208.49098 64.13332 208.49098 64.13332S208.80473 64.09144 208.80473 64.09144C208.89535 64.07769 208.90942 64.11238 208.83973 64.19613L208.43504 64.70519C208.12129 64.57988 207.84223 64.48207 207.59098 64.42644C207.34004 64.35644 206.96348 64.28676 206.46817 64.20301C205.97285 64.11926 205.63817 64.06363 205.46379 64.03582C205.28942 64.01488 205.07317 63.98676 204.80817 63.96582L204.17348 64.27988ZM205.68004 62.45926L207.85598 62.46644L207.79348 62.22926C207.7516 62.08269 207.68879 61.89426 207.59098 61.67801C207.50723 61.46207 207.40973 61.25957 207.3191 61.07832C207.22848 60.88988 207.14473 60.74363 207.07504 60.63176C206.99817 60.52738 206.91442 60.401756 206.81692 60.269256C206.65629 60.457381 206.53785 60.59707 206.47504 60.68769C206.40535 60.78551 206.32848 60.91082 206.23785 61.06426C206.1541 61.21082 206.08442 61.35019 206.0216 61.47582C205.95879 61.60144 205.90317 61.73394 205.86129 61.88738C205.80535 62.02676 205.74973 62.22207 205.68004 62.45926ZM210.00317 62.36863L210.26129 62.11051C210.35192 62.16644 210.4216 62.20113 210.47035 62.20832C210.51942 62.22207 210.5891 62.23613 210.68661 62.24301L211.08442 62.28488V59.718318C211.08442 59.481131 211.06348 59.327693 211.02161 59.250818C210.97286 59.181131 210.91692 59.111443 210.84004 59.041756L211.30754 58.623006L211.4541 58.943943C211.52379 59.090506 211.83754 59.606443 212.39567 60.485506L212.32598 60.53426C212.03973 60.206443 211.75379 59.885506 211.46786 59.585506V62.16644L211.60754 62.28488C211.70504 62.37551 211.75379 62.41738 211.75379 62.41738C211.75379 62.42457 211.69817 62.46644 211.59348 62.55707L211.26567 62.82207L211.04254 62.45238L210.4216 62.39644L210.00317 62.36863ZM210.62411 64.68426L210.58223 64.62176L210.73567 64.48207C210.80535 64.41926 210.89598 64.29363 211.01442 64.10551C211.13317 63.91707 211.20973 63.75676 211.25879 63.62426C211.30067 63.49176 211.33535 63.40801 211.35629 63.38019C211.38411 63.35207 211.40504 63.33113 211.42598 63.32426C211.46098 63.31019 211.5166 63.33113 211.5866 63.38707C211.65629 63.44269 211.69817 63.51957 211.71911 63.61707C211.73285 63.70801 211.73285 63.79144 211.71911 63.85426C211.71192 63.91707 211.67723 63.98676 211.60754 64.06363C211.5516 64.14019 211.42598 64.23801 211.24473 64.35644C211.05629 64.47519 210.85411 64.58676 210.62411 64.68426ZM212.04692 58.720818L212.25598 58.797381C212.33285 58.832381 212.50723 58.853318 212.77223 58.853318H216.6016C216.6363 58.853318 216.6644 58.860193 216.6713 58.874256C216.6854 58.895193 216.6504 58.950818 216.5597 59.048631L216.1482 59.488006L215.7785 59.027693H214.5647V61.65738L216.211 61.66426C216.2457 61.66426 216.2738 61.67113 216.2807 61.68519C216.2875 61.69894 216.2457 61.75488 216.155 61.84551L215.7157 62.25707L215.3947 61.82457H214.5719L214.5647 64.16113L216.455 64.15426C216.476 64.15426 216.4969 64.16832 216.5038 64.18926C216.5179 64.21707 216.476 64.27301 216.3854 64.36363L215.9807 64.75426L215.6319 64.32176H212.54223L212.1166 64.33551L212.35379 64.06363L212.52817 64.11926C212.59098 64.14019 212.77223 64.15426 213.0791 64.15426H214.1254L214.1116 59.027693H213.1419V62.23613L213.2744 62.34769C213.3304 62.39644 213.3582 62.42457 213.3513 62.43144C213.3513 62.44551 213.3094 62.47332 213.2325 62.50832L212.6816 62.73832L212.7166 61.97113V59.027693H212.31192L211.79567 59.048631L212.04692 58.720818Z"></path>
<path d="M272.4688 78.6328H141.309" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M143.17974 76.24219C142.80083 77.675784 141.957083 78.355471 141.109427 78.632815C141.957083 78.914065 142.80083 79.589846 143.17974 81.02344" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M197.5664 73.2109H215.8086V84.0547H197.5664Z" fill="#fff"></path>
<path d="M201.11 80.046L201.04718 79.73912C200.9775 79.39037 200.85187 78.99975 200.677497 78.56756C200.496247 78.12787 200.294059 77.69569 200.063747 77.270061L200.147497 77.214436C200.328747 77.458499 200.489372 77.68162 200.621872 77.89787C200.75437 78.11412 200.87281 78.31631 200.95656 78.51162C201.05406 78.70006 201.13093 78.87444 201.2075 79.03475V76.523811L201.16593 75.35881C201.33312 75.42162 201.49375 75.505374 201.64 75.603186L201.61218 76.454124V79.05569L201.83531 78.83256C201.85625 78.81162 201.89125 78.76287 201.94687 78.67912C202.00968 78.60225 202.06562 78.49756 202.12843 78.35819C202.18406 78.23256 202.22593 78.156 202.24687 78.14881C202.26781 78.13506 202.28875 78.12787 202.30968 78.12787C202.35843 78.121 202.4075 78.14881 202.45625 78.21881C202.505 78.27444 202.53281 78.35819 202.53281 78.44194C202.54 78.53944 202.51906 78.62319 202.46312 78.70694C202.42125 78.78381 202.31656 78.86037 202.15625 78.93006C202.00281 78.99975 201.82156 79.07662 201.61218 79.16725V80.046H202.74218C202.77 80.046 202.79093 80.05319 202.79781 80.07412C202.81187 80.08787 202.79093 80.12287 202.72812 80.18569L202.30281 80.63194L201.98187 80.19975H201.61218V81.39225L201.81437 81.53881C201.8425 81.55975 201.85625 81.57381 201.84937 81.58756C201.84937 81.60162 201.82843 81.61537 201.78656 81.63631L201.16593 81.9085L201.2075 81.14131V80.19975H200.559059L200.063747 80.22037L200.314997 79.96256C200.468434 80.01819 200.628747 80.046 200.80312 80.046H201.11ZM203.59312 81.85975L203.54437 81.56662C203.49531 81.27381 203.40468 80.91787 203.25843 80.49944C203.105 80.081 203.00718 79.80194 202.9375 79.66944C202.88156 79.53694 202.74218 79.27194 202.53281 78.88131L202.6025 78.83944C202.78406 79.05569 202.9375 79.27194 203.07687 79.47412C203.2025 79.6835 203.35593 79.95537 203.51625 80.29725H205.56L205.54625 78.42787C205.54625 78.36506 205.53218 78.14881 205.51812 77.7585C205.49031 77.381624 205.4625 77.032874 205.43437 76.732874C205.3925 76.433186 205.33687 76.251624 205.25312 76.189124C205.16937 76.126311 205.07187 76.098186 204.96718 76.098186C204.80687 76.098186 204.43 76.160999 203.83718 76.293499L203.81625 76.223811L204.01843 76.133186L204.34625 76.007561C204.44406 75.965686 204.52781 75.916936 204.5975 75.860999C204.67437 75.805374 204.72312 75.749436 204.75093 75.679749C204.77187 75.624124 204.79281 75.540374 204.81375 75.44256L205.20437 75.568186C205.33687 75.603186 205.45531 75.686624 205.56 75.819436C205.65781 75.958811 205.72062 76.098186 205.75531 76.244749C205.79031 76.391311 205.825 76.579436 205.84593 76.823811C205.86687 77.067874 205.88781 77.284124 205.89468 77.47944C205.90875 77.67475 205.92281 78.00944 205.93656 78.48381C205.94375 78.951 205.96468 79.50225 205.9925 80.12287L206.21562 80.31819C206.25062 80.36006 206.27156 80.381 206.27156 80.381C206.27843 80.38787 206.2575 80.40194 206.20875 80.43662L205.69968 80.78537L205.49031 80.45756H203.59312C203.73968 80.80631 203.87218 81.12037 203.99062 81.39225L204.165 81.49694C204.20687 81.52475 204.22781 81.54569 204.22781 81.55975S204.19281 81.59475 204.13031 81.62256L203.59312 81.85975ZM202.64437 77.458499L202.95125 76.990999L203.105 77.102561C203.18156 77.158499 203.32812 77.221311 203.55812 77.290999C203.78843 77.360686 204.12312 77.444436 204.5625 77.54225L204.58343 77.402561L204.61843 77.067874C204.62531 76.990999 204.66031 76.949124 204.71593 76.942249C204.765 76.935374 204.81375 76.956311 204.8625 77.005061C204.91125 77.060999 204.96031 77.116624 204.995 77.172561C205.03 77.221311 205.05093 77.297874 205.05781 77.388811C205.06468 77.52819 204.97406 77.71662 204.78593 77.96756C204.5975 78.20475 204.38125 78.456 204.15125 78.71381L204.08125 78.65819L204.15812 78.54662C204.26281 78.40006 204.38125 78.121 204.52781 77.69569L203.13968 77.51412C203.39093 77.97444 203.68375 78.53944 204.01843 79.20225L204.23468 79.31381C204.26968 79.33475 204.28375 79.3485 204.29062 79.36256C204.2975 79.3835 204.27656 79.40444 204.23468 79.42537L203.69062 79.69725L203.64187 79.41131C203.62093 79.27881 203.59312 79.14631 203.55125 79.01381C203.5025 78.88131 203.42562 78.651 203.3 78.33037C203.18843 78.00944 203.09093 77.80006 203.02125 77.6885C202.95843 77.591 202.89562 77.52131 202.83968 77.50725C202.78406 77.47944 202.72125 77.46537 202.64437 77.458499ZM208.17437 79.1185L207.93031 78.79756H207.35843L206.93281 78.81162L207.15593 78.5185L207.31656 78.5885C207.37937 78.62319 207.49781 78.63725 207.66531 78.63725H208.04875V76.467874C207.69312 76.321624 207.3375 76.140061 206.98875 75.910061L207.37937 75.44256L207.66531 75.895999C207.74187 76.014749 207.84656 76.126311 207.97906 76.223811C208.06968 76.286624 208.14656 76.321624 208.20937 76.321624C208.27906 76.314436 208.34187 76.293499 208.39062 76.265686C208.44656 76.223811 208.55093 76.140061 208.70437 76.000686C208.85812 75.860999 209.02531 75.749436 209.21375 75.679749C209.40187 75.595999 209.66 75.554124 209.9878 75.533186C210.3156 75.512249 210.6506 75.505374 210.9853 75.498499C211.3131 75.491624 211.6341 75.491624 211.9341 75.491624C212.0037 75.484436 212.1431 75.484436 212.3456 75.484436C212.5478 75.491624 212.7222 75.491624 212.8616 75.491624L212.9522 75.714749C212.9872 75.798499 213.1684 75.895999 213.5034 76.007561L213.4894 76.084436C212.4012 75.951936 211.4737 75.881936 210.7062 75.889124C209.9459 75.889124 209.45093 75.916936 209.23468 75.986624C209.01843 76.042561 208.76031 76.195999 208.4675 76.425999V78.49069L208.66281 78.63725C208.70437 78.66506 208.72531 78.686 208.72531 78.70006C208.72531 78.70694 208.68375 78.74194 208.60687 78.80475L208.17437 79.1185ZM207.47687 81.33662L207.44218 81.25975C207.62343 81.09225 207.74906 80.946 207.82562 80.82037C207.9025 80.70194 207.96531 80.56912 208.02781 80.42975L208.14656 80.13694C208.17437 80.06694 208.20218 80.02537 208.22312 80.00444C208.25125 79.9835 208.27906 79.97631 208.30687 79.9835C208.34187 79.9835 208.38375 80.00444 208.4325 80.046C208.48125 80.081 208.51625 80.12975 208.54406 80.17881C208.58593 80.25537 208.60687 80.33912 208.6 80.42287C208.6 80.49944 208.565 80.59725 208.48843 80.70194C208.41843 80.8135 208.3 80.91787 208.12562 81.00881C207.95812 81.09944 207.74187 81.211 207.47687 81.33662ZM208.49531 79.251L208.80906 78.94412C208.95562 78.99975 209.095 79.03475 209.24156 79.04881C209.38125 79.06256 209.49968 79.06975 209.59718 79.06975H213.2941C213.3291 79.06975 213.35 79.07662 213.3569 79.09756C213.3709 79.1185 213.3291 79.16725 213.2381 79.251L212.7987 79.6485L212.45 79.23006L211.1528 79.23694V80.36694H212.715C212.7431 80.36694 212.7641 80.381 212.7709 80.40194C212.785 80.42287 212.7431 80.4785 212.6453 80.56912L212.2547 80.93194L211.9131 80.52756H211.1456L211.1528 81.38537L211.2994 81.476C211.3759 81.51787 211.4109 81.54569 211.4037 81.56662C211.4037 81.58069 211.3619 81.60162 211.2784 81.63631L210.6994 81.86662L210.7272 81.25975V80.52756H209.70187L209.9181 80.96694L210.0716 81.02256C210.1203 81.0435 210.1484 81.06444 210.1484 81.0785C210.1553 81.09225 210.1134 81.12037 210.0297 81.16912L209.54156 81.43412L209.49281 81.18319C209.46468 80.98069 209.40187 80.72287 209.2975 80.40881C209.19968 80.08787 209.08125 79.77412 208.94875 79.47412L209.02531 79.43225L209.15781 79.59975C209.17875 79.63475 209.24156 79.75319 209.36031 79.94162C209.47875 80.12975 209.5625 80.27631 209.61812 80.36694H210.7344V79.23694L209.17875 79.23006L208.49531 79.251ZM210.0228 78.39319L209.51375 78.64412L209.53468 78.01631V76.921311L209.50656 76.223811C209.7228 76.300686 209.8416 76.342561 209.8625 76.363499C209.8834 76.377249 209.9112 76.398186 209.9391 76.419124V76.781936H211.9059V76.398186C212.1222 76.475061 212.2828 76.551624 212.3872 76.635374L212.3525 77.228186V78.10006L212.4991 78.22569C212.5616 78.28162 212.5966 78.31631 212.5966 78.31631C212.5966 78.32319 212.5406 78.36506 212.4362 78.44194L212.0316 78.721L211.8016 78.39319H210.0228ZM209.9391 76.942249V78.22569H211.9059L211.8991 76.942249H209.9391Z"></path>
<path d="M48.633 43.566405H71.75" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M69.87504 45.95699C70.25394 44.523396 71.097692 43.847615 71.949255 43.566365C71.097692 43.289021 70.25394 42.61324 69.87504 41.17574" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M140.91 43.566405H171.9102" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M170.03508 45.95699C170.41398 44.523396 171.257734 43.847615 172.109297 43.566365C171.257734 43.289021 170.41398 42.61324 170.03508 41.17574" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M241.0703 43.566405H278.3906" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M276.51947 45.95699C276.89838 44.523396 277.738224 43.847615 278.589786 43.566365C277.738224 43.289021 276.89838 42.61324 276.51947 41.17574" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M250.80859 38.14844H269.0508V48.98828H250.80859Z" fill="#fff"></path>
<path d="M254.35102 44.97999L254.28821 44.67312C254.21852 44.32437 254.0929 43.93374 253.918521 43.50155C253.737271 43.06187 253.535083 42.62968 253.304771 42.204053L253.388521 42.148428C253.569771 42.392491 253.730396 42.61562 253.862896 42.83187C253.9954 43.04812 254.11383 43.2503 254.19758 43.44562C254.29508 43.63405 254.37196 43.80843 254.44852 43.96874V41.457803L254.40696 40.2928C254.57415 40.35562 254.73477 40.439366 254.88102 40.537178L254.85321 41.388116V43.98968L255.07633 43.76655C255.09727 43.74562 255.13227 43.69687 255.1879 43.61312C255.25071 43.53624 255.30665 43.43155 255.36946 43.29218C255.42508 43.16655 255.46696 43.08999 255.4879 43.0828C255.50883 43.06905 255.52977 43.06187 255.55071 43.06187C255.59946 43.05499 255.64852 43.0828 255.69727 43.1528C255.74602 43.20843 255.77383 43.29218 255.77383 43.37593C255.78102 43.47343 255.76008 43.55718 255.70415 43.64093C255.66227 43.7178 255.55758 43.79437 255.39727 43.86405C255.24383 43.93374 255.06258 44.01062 254.85321 44.10124V44.97999H255.98321C256.01102 44.97999 256.03196 44.98718 256.03883 45.00812C256.0529 45.02187 256.03196 45.05687 255.96915 45.11968L255.54383 45.56593L255.2229 45.13374H254.85321V46.32624L255.0554 46.4728C255.08352 46.49374 255.09727 46.5078 255.0904 46.52155C255.0904 46.53562 255.06946 46.54937 255.02758 46.5703L254.40696 46.84249L254.44852 46.0753V45.13374H253.800083L253.304771 45.15437L253.556021 44.89655C253.709458 44.95218 253.869771 44.97999 254.04415 44.97999H254.35102ZM256.83415 46.79374L256.7854 46.50062C256.73633 46.2078 256.64571 45.85187 256.49946 45.43343C256.34602 45.01499 256.24821 44.73593 256.17852 44.60343C256.12258 44.47093 255.98321 44.20593 255.77383 43.8153L255.84352 43.77343C256.02508 43.98968 256.17852 44.20593 256.3179 44.40812C256.44352 44.61749 256.59696 44.88937 256.75727 45.23124H258.80102L258.78727 43.36187C258.78727 43.29905 258.77321 43.0828 258.75915 42.69249C258.73133 42.315616 258.70352 41.966866 258.6754 41.666866C258.63352 41.367178 258.5779 41.185616 258.49415 41.123116C258.4104 41.060303 258.3129 41.032178 258.20821 41.032178C258.0479 41.032178 257.67102 41.094991 257.07821 41.227491L257.05727 41.157803L257.25946 41.067178L257.58727 40.941553C257.68508 40.899678 257.76883 40.850928 257.83852 40.794991C257.9154 40.739366 257.96415 40.683428 257.99196 40.613741C258.0129 40.558116 258.03383 40.474366 258.05477 40.37655L258.4454 40.502178C258.5779 40.537178 258.69633 40.620616 258.80102 40.753428C258.89883 40.892803 258.96165 41.032178 258.99633 41.178741C259.03133 41.325303 259.06602 41.513428 259.08696 41.757803C259.1079 42.001866 259.12883 42.218116 259.13571 42.41343C259.14977 42.60874 259.16383 42.94343 259.17758 43.4178C259.18477 43.88499 259.20571 44.43624 259.23352 45.05687L259.45665 45.25218C259.49165 45.29405 259.51258 45.31499 259.51258 45.31499C259.51946 45.32187 259.49852 45.33593 259.44977 45.37062L258.94071 45.71937L258.73133 45.39155H256.83415C256.98071 45.7403 257.11321 46.05437 257.23165 46.32624L257.40602 46.43093C257.4479 46.45874 257.46883 46.47968 257.46883 46.49374S257.43383 46.52874 257.37133 46.55655L256.83415 46.79374ZM255.8854 42.392491L256.19227 41.924991L256.34602 42.036553C256.42258 42.092491 256.56915 42.155303 256.79915 42.224991C257.02946 42.294678 257.36415 42.378428 257.80352 42.47624L257.82446 42.336553L257.85946 42.001866C257.86633 41.924991 257.90133 41.883116 257.95696 41.876241C258.00602 41.869366 258.05477 41.890303 258.10352 41.939053C258.15227 41.994991 258.20133 42.050616 258.23602 42.106553C258.27102 42.155303 258.29196 42.231866 258.29883 42.322803C258.30571 42.46218 258.21508 42.65062 258.02696 42.90155C257.83852 43.13874 257.62227 43.38999 257.39227 43.6478L257.32227 43.59218L257.39915 43.48062C257.50383 43.33405 257.62227 43.05499 257.76883 42.62968L256.38071 42.44812C256.63196 42.90843 256.92477 43.47343 257.25946 44.13624L257.47571 44.2478C257.51071 44.26874 257.52477 44.28249 257.53165 44.29655C257.53852 44.31749 257.51758 44.33843 257.47571 44.35937L256.93165 44.63124L256.8829 44.3453C256.86196 44.2128 256.83415 44.0803 256.79227 43.9478C256.74352 43.8153 256.66665 43.58499 256.54102 43.26437C256.42946 42.94343 256.33196 42.73405 256.26227 42.62249C256.19946 42.52499 256.13665 42.4553 256.08071 42.44124C256.02508 42.41343 255.96227 42.39937 255.8854 42.392491ZM261.4154 44.05249L261.17133 43.73155H260.59946L260.17383 43.74562L260.39696 43.45249L260.55758 43.52249C260.6204 43.55718 260.73883 43.57124 260.90633 43.57124H261.28977V41.401866C260.93415 41.255616 260.57852 41.074053 260.22977 40.844053L260.6204 40.37655L260.90633 40.829991C260.9829 40.948741 261.08758 41.060303 261.22008 41.157803C261.31071 41.220616 261.38758 41.255616 261.4504 41.255616C261.52008 41.248428 261.5829 41.227491 261.63165 41.199678C261.68758 41.157803 261.79196 41.074053 261.9454 40.934678C262.09915 40.794991 262.26633 40.683428 262.45477 40.613741C262.6429 40.529991 262.90102 40.488116 263.2288 40.467178C263.5566 40.446241 263.8916 40.439366 264.2263 40.432491C264.5541 40.425616 264.8751 40.425616 265.1751 40.425616C265.2448 40.418428 265.3841 40.418428 265.5866 40.418428C265.7888 40.425616 265.9632 40.425616 266.1026 40.425616L266.1932 40.648741C266.2282 40.732491 266.4095 40.829991 266.7445 40.941553L266.7304 41.018428C265.6423 40.885928 264.7148 40.815928 263.9473 40.823116C263.187 40.823116 262.69196 40.850928 262.47571 40.920616C262.25946 40.976553 262.00133 41.129991 261.70852 41.359991V43.42468L261.90383 43.57124C261.9454 43.59905 261.96633 43.61999 261.96633 43.63405C261.96633 43.64093 261.92477 43.67593 261.8479 43.73874L261.4154 44.05249ZM260.7179 46.27062L260.68321 46.19374C260.86446 46.02624 260.99008 45.87999 261.06665 45.75437C261.14352 45.63593 261.20633 45.50312 261.26883 45.36374L261.38758 45.07093C261.4154 45.00093 261.44321 44.95937 261.46415 44.93843C261.49227 44.91749 261.52008 44.9103 261.5479 44.91749C261.5829 44.91749 261.62477 44.93843 261.67352 44.97999C261.72227 45.01499 261.75727 45.06374 261.78508 45.1128C261.82696 45.18937 261.8479 45.27312 261.84102 45.35687C261.84102 45.43343 261.80602 45.53124 261.72946 45.63593C261.65946 45.74749 261.54102 45.85187 261.36665 45.9428C261.19915 46.03343 260.9829 46.14499 260.7179 46.27062ZM261.73633 44.18499L262.05008 43.87812C262.19665 43.93374 262.33602 43.96874 262.48258 43.9828C262.62227 43.99655 262.74071 44.00374 262.83821 44.00374H266.5351C266.5701 44.00374 266.591 44.01062 266.5979 44.03155C266.612 44.05249 266.5701 44.10124 266.4791 44.18499L266.0398 44.58249L265.691 44.16405L264.3938 44.17093V45.30093H265.956C265.9841 45.30093 266.0051 45.31499 266.012 45.33593C266.026 45.35687 265.9841 45.41249 265.8863 45.50312L265.4957 45.86593L265.1541 45.46155H264.3866L264.3938 46.31937L264.5404 46.40999C264.617 46.45187 264.652 46.47968 264.6448 46.50062C264.6448 46.51468 264.6029 46.53562 264.5195 46.5703L263.9404 46.80062L263.9682 46.19374V45.46155H262.9429L263.1591 45.90093L263.3126 45.95655C263.3613 45.97749 263.3895 45.99843 263.3895 46.01249C263.3963 46.02624 263.3545 46.05437 263.2707 46.10312L262.78258 46.36812L262.73383 46.11718C262.70571 45.91468 262.6429 45.65687 262.53852 45.3428C262.44071 45.02187 262.32227 44.70812 262.18977 44.40812L262.26633 44.36624L262.39883 44.53374C262.41977 44.56874 262.48258 44.68718 262.60133 44.87562C262.71977 45.06374 262.80352 45.2103 262.85915 45.30093H263.9754V44.17093L262.41977 44.16405L261.73633 44.18499ZM263.2638 43.32718L262.75477 43.57812L262.77571 42.9503V41.855303L262.74758 41.157803C262.9638 41.234678 263.0826 41.276553 263.1035 41.297491C263.1245 41.311241 263.1523 41.332178 263.1801 41.353116V41.715928H265.147V41.332178C265.3632 41.409053 265.5238 41.485616 265.6282 41.569366L265.5935 42.162178V43.03405L265.7401 43.15968C265.8026 43.21562 265.8376 43.2503 265.8376 43.2503C265.8376 43.25718 265.7816 43.29905 265.6773 43.37593L265.2726 43.65499L265.0426 43.32718H263.2638ZM263.1801 41.876241V43.15968H265.147L265.1401 41.876241H263.1801Z"></path>
<path d="M192.6328 35.44531C140.516 5.3477 90.43 5.3398 38.652 35.22656" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M39.078144 32.218749C39.46877 33.648437 39.07814 34.660159 38.480484 35.32422C39.355482 35.140627 40.425798 35.308595 41.468767 36.359371" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M106.352 7.4453H124.594V18.2891H106.352Z" fill="#fff"></path>
<path d="M109.89296 14.27903L109.83015 13.97215C109.76046 13.6234 109.63484 13.23278 109.460462 12.80059C109.279212 12.3609 109.077024 11.92871 108.846712 11.503089L108.930462 11.447464C109.111712 11.691526 109.272337 11.91465 109.404837 12.1309C109.53734 12.34715 109.65577 12.54934 109.73952 12.74465C109.83702 12.93309 109.9139 13.10746 109.99046 13.26778V10.756839L109.9489 9.59184C110.11609 9.65465 110.27671 9.738401 110.42296 9.836214L110.39515 10.687151V13.28871L110.61827 13.06559C110.63921 13.04465 110.67421 12.9959 110.72984 12.91215C110.79265 12.83528 110.84859 12.73059 110.9114 12.59121C110.96702 12.46559 111.0089 12.38903 111.02984 12.38184C111.05077 12.36809 111.07171 12.3609 111.09265 12.3609C111.1414 12.35403 111.19046 12.38184 111.23921 12.45184C111.28796 12.50746 111.31577 12.59121 111.31577 12.67496C111.32296 12.77246 111.30202 12.85621 111.24609 12.93996C111.20421 13.01684 111.09952 13.0934 110.93921 13.16309C110.78577 13.23278 110.60452 13.30965 110.39515 13.40028V14.27903H111.52515C111.55296 14.27903 111.5739 14.28621 111.58077 14.30715C111.59484 14.3209 111.5739 14.3559 111.51109 14.41871L111.08577 14.86496L110.76484 14.43278H110.39515V15.62528L110.59734 15.77184C110.62546 15.79278 110.63921 15.80684 110.63234 15.82059C110.63234 15.83465 110.6114 15.8484 110.56952 15.86934L109.9489 16.14153L109.99046 15.37434V14.43278H109.342024L108.846712 14.4534L109.097962 14.19559C109.251399 14.25121 109.411712 14.27903 109.58609 14.27903H109.89296ZM112.37609 16.09278L112.32734 15.79965C112.27827 15.50684 112.18765 15.1509 112.0414 14.73246C111.88796 14.31403 111.79015 14.03496 111.72046 13.90246C111.66452 13.76996 111.52515 13.50496 111.31577 13.11434L111.38546 13.07246C111.56702 13.28871 111.72046 13.50496 111.85984 13.70715C111.98546 13.91653 112.1389 14.1884 112.29921 14.53028H114.34296L114.32921 12.6609C114.32921 12.59809 114.31515 12.38184 114.30109 11.99153C114.27327 11.614651 114.24546 11.265901 114.21734 10.965901C114.17546 10.666214 114.11984 10.484651 114.03609 10.422151C113.95234 10.359339 113.85484 10.331214 113.75015 10.331214C113.58984 10.331214 113.21296 10.394026 112.62015 10.526526L112.59921 10.456839L112.8014 10.366214L113.12921 10.240589C113.22702 10.198714 113.31077 10.149964 113.38046 10.094026C113.45734 10.038401 113.50609 9.982464 113.5339 9.912776C113.55484 9.857151 113.57577 9.773401 113.59671 9.67559L113.98734 9.801214C114.11984 9.836214 114.23827 9.919651 114.34296 10.052464C114.44077 10.191839 114.50359 10.331214 114.53827 10.477776C114.57327 10.624339 114.60796 10.812464 114.6289 11.056839C114.64984 11.300901 114.67077 11.517151 114.67765 11.71246C114.69171 11.90778 114.70577 12.24246 114.71952 12.71684C114.72671 13.18403 114.74765 13.73528 114.77546 14.3559L114.99859 14.55121C115.03359 14.59309 115.05452 14.61403 115.05452 14.61403C115.0614 14.6209 115.04046 14.63496 114.99171 14.66965L114.48265 15.0184L114.27327 14.69059H112.37609C112.52265 15.03934 112.65515 15.3534 112.77359 15.62528L112.94796 15.72996C112.98984 15.75778 113.01077 15.77871 113.01077 15.79278C113.01077 15.80684 112.97577 15.82778 112.91327 15.85559L112.37609 16.09278ZM111.42734 11.691526L111.73421 11.224026L111.88796 11.335589C111.96452 11.391526 112.11109 11.454339 112.34109 11.524026C112.5714 11.593714 112.90609 11.677464 113.34546 11.77528L113.3664 11.635589L113.4014 11.300901C113.40827 11.224026 113.44327 11.182151 113.4989 11.175276C113.54796 11.168401 113.59671 11.189339 113.64546 11.238089C113.69421 11.294026 113.74327 11.349651 113.77796 11.405589C113.81296 11.454339 113.8339 11.530901 113.84077 11.621839C113.84765 11.76121 113.75702 11.94965 113.5689 12.20059C113.38046 12.43778 113.16421 12.68903 112.93421 12.94684L112.86421 12.89121L112.94109 12.77965C113.04577 12.63309 113.16421 12.35403 113.31077 11.92871L111.92265 11.74715C112.1739 12.20746 112.46671 12.77246 112.8014 13.43528L113.01765 13.54684C113.05265 13.56778 113.06671 13.58153 113.07359 13.59559C113.08046 13.61653 113.05952 13.63746 113.01765 13.6584L112.47359 13.93028L112.42484 13.64434C112.4039 13.51184 112.37609 13.37934 112.33421 13.24684C112.28546 13.11434 112.20859 12.88403 112.08296 12.5634C111.9714 12.24246 111.8739 12.03309 111.80421 11.92153C111.7414 11.82403 111.67859 11.75434 111.62265 11.74028C111.56702 11.71246 111.50421 11.6984 111.42734 11.691526ZM116.95734 13.35153L116.71327 13.03059H116.1414L115.71577 13.04465L115.9389 12.75153L116.09952 12.82153C116.16234 12.85621 116.28077 12.87028 116.44827 12.87028H116.83171V10.700901C116.47609 10.554651 116.12046 10.373089 115.77171 10.143089L116.16234 9.67559L116.44827 10.129026C116.52484 10.247776 116.62952 10.359339 116.76202 10.456839C116.85265 10.519651 116.92952 10.554651 116.99234 10.554651C117.06202 10.547464 117.12484 10.526526 117.17359 10.498714C117.22952 10.456839 117.3339 10.373089 117.48734 10.233714C117.64109 10.094026 117.80827 9.982464 117.99671 9.912776C118.18484 9.829026 118.44296 9.787151 118.7708 9.766214C119.0986 9.745276 119.4336 9.738401 119.7683 9.731526C120.0961 9.724651 120.417 9.724651 120.717 9.724651C120.7867 9.717464 120.9261 9.717464 121.1286 9.717464C121.3308 9.724651 121.5051 9.724651 121.6445 9.724651L121.7351 9.947776C121.7701 10.031526 121.9514 10.129026 122.2864 10.240589L122.2723 10.317464C121.1842 10.184964 120.2567 10.114964 119.4892 10.122151C118.7289 10.122151 118.2339 10.149964 118.01765 10.219651C117.8014 10.275589 117.54327 10.429026 117.25046 10.659026V12.72371L117.44577 12.87028C117.48734 12.89809 117.50827 12.91903 117.50827 12.93309C117.50827 12.93996 117.46671 12.97496 117.38984 13.03778L116.95734 13.35153ZM116.25984 15.56965L116.22515 15.49278C116.4064 15.32528 116.53202 15.17903 116.60859 15.0534C116.68546 14.93496 116.74827 14.80215 116.81077 14.66278L116.92952 14.36996C116.95734 14.29996 116.98515 14.2584 117.00609 14.23746C117.03421 14.21653 117.06202 14.20934 117.08984 14.21653C117.12484 14.21653 117.16671 14.23746 117.21546 14.27903C117.26421 14.31403 117.29921 14.36278 117.32702 14.41184C117.3689 14.4884 117.38984 14.57215 117.38296 14.6559C117.38296 14.73246 117.34796 14.83028 117.2714 14.93496C117.2014 15.04653 117.08296 15.1509 116.90859 15.24184C116.74109 15.33246 116.52484 15.44403 116.25984 15.56965ZM117.27827 13.48403L117.59202 13.17715C117.73859 13.23278 117.87796 13.26778 118.02452 13.28184C118.16421 13.29559 118.28265 13.30278 118.38015 13.30278H122.077C122.112 13.30278 122.133 13.30965 122.1398 13.33059C122.1539 13.35153 122.112 13.40028 122.0211 13.48403L121.5817 13.88153L121.233 13.46309L119.9358 13.46996V14.59996H121.498C121.5261 14.59996 121.547 14.61403 121.5539 14.63496C121.568 14.6559 121.5261 14.71153 121.4283 14.80215L121.0376 15.16496L120.6961 14.76059H119.9286L119.9358 15.6184L120.0823 15.70903C120.1589 15.7509 120.1939 15.77871 120.1867 15.79965C120.1867 15.81371 120.1448 15.83465 120.0614 15.86934L119.4823 16.09965L119.5101 15.49278V14.76059H118.48484L118.7011 15.19996L118.8545 15.25559C118.9033 15.27653 118.9314 15.29746 118.9314 15.31153C118.9383 15.32528 118.8964 15.3534 118.8126 15.40215L118.32452 15.66715L118.27577 15.41621C118.24765 15.21371 118.18484 14.9559 118.08046 14.64184C117.98265 14.3209 117.86421 14.00715 117.73171 13.70715L117.80827 13.66528L117.94077 13.83278C117.96171 13.86778 118.02452 13.98621 118.14327 14.17465C118.26171 14.36278 118.34546 14.50934 118.40109 14.59996H119.5173V13.46996L117.96171 13.46309L117.27827 13.48403ZM118.8058 12.62621L118.29671 12.87715L118.31765 12.24934V11.154339L118.28952 10.456839C118.5058 10.533714 118.6245 10.575589 118.6455 10.596526C118.6664 10.610276 118.6942 10.631214 118.722 10.652151V11.014964H120.6889V10.631214C120.9051 10.708089 121.0658 10.784651 121.1701 10.868401L121.1355 11.461214V12.33309L121.282 12.45871C121.3445 12.51465 121.3795 12.54934 121.3795 12.54934C121.3795 12.55621 121.3236 12.59809 121.2192 12.67496L120.8145 12.95403L120.5845 12.62621H118.8058ZM118.722 11.175276V12.45871H120.6889L120.682 11.175276H118.722Z"></path>
<path d="M358.621 43.566405H388.055" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M386.18344 45.95699C386.56234 44.523396 387.406093 43.847615 388.253749 43.566365C387.406093 43.289021 386.56234 42.61324 386.18344 41.17574" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M415.066 52.56641L350.0977 70.1367" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M351.281707 67.33985C351.289518 68.824239 350.652775 69.699232 349.902771 70.191426C350.797309 70.2383 351.789496 70.671896 352.527775 71.957046" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M373.27 56.0547H391.512V66.7578H373.27Z" fill="#fff"></path>
<path d="M376.71248 64.13587L376.73311 63.73118C376.74029 63.66149 376.74029 63.51493 376.75404 63.29868C376.75404 63.08274 376.76123 62.75462 376.76123 62.31525C376.76123 61.88274 376.75404 61.56212 376.74029 61.35274C376.73311 61.14368 376.71936 60.94837 376.69842 60.77399C376.67061 60.59962 376.64967 60.43212 376.62873 60.292745C376.60061 60.138995 376.55873 59.992745 376.50998 59.83212C376.46123 59.671807 376.391544 59.497432 376.307794 59.30212C376.217169 59.099932 376.007794 58.806807 375.679982 58.416182L375.742794 58.346495C375.944982 58.528057 376.112482 58.709307 376.265919 58.883682C376.405294 59.058057 376.53092 59.232432 376.62873 59.38587C376.72623 59.55337 376.81686 59.76962 376.89373 60.041495C376.97029 60.320557 377.02623 60.56462 377.05404 60.76681C377.08186 60.97618 377.10279 61.19243 377.11686 61.40868C377.13779 61.63181 377.15873 61.93181 377.18654 62.31525H378.07248C378.14217 61.99462 378.20498 61.74337 378.26092 61.56212C378.32342 61.37368 378.40029 61.17837 378.49092 60.96212C378.58154 60.75306 378.66529 60.58556 378.72811 60.45993C378.79092 60.334307 378.91654 60.138995 379.09779 59.86712L378.97936 59.727745C378.94436 59.692745 378.82561 59.595245 378.62342 59.441495C378.42123 59.281182 378.24686 59.162745 378.10748 59.078995C377.96779 58.995245 377.79342 58.897745 377.57717 58.793057C377.36092 58.68837 377.19373 58.60462 377.07498 58.55587C376.95654 58.50712 376.71248 58.42337 376.356544 58.31181L376.412482 58.20024C377.35404 58.47212 378.01654 58.709307 378.38623 58.925557C378.75592 59.13462 379.09092 59.358058 379.37686 59.588057C379.66279 59.399932 379.84404 59.274307 379.92779 59.21837C380.01154 59.16962 380.19998 59.064932 380.49279 58.91837C380.77873 58.77212 381.12061 58.625557 381.50404 58.478995L381.62279 58.660557C381.64373 58.709307 381.70654 58.758057 381.80404 58.806807C381.90873 58.85587 382.04811 58.890557 382.22967 58.90462V59.00212C381.81811 59.043995 381.53904 59.078995 381.38561 59.12087C381.23217 59.148682 381.05092 59.20462 380.83467 59.281182C380.61842 59.358058 380.42998 59.427745 380.26248 59.511495C380.09529 59.581182 379.88592 59.713682 379.63498 59.888057C379.83717 60.153057 379.97654 60.35525 380.06717 60.48774C380.15811 60.62056 380.24873 60.78775 380.35342 60.99025C380.45092 61.18524 380.53467 61.35962 380.60436 61.51337C380.66717 61.66681 380.75092 61.87587 380.85561 62.14087L381.08561 62.25962C381.13436 62.28056 381.15529 62.30149 381.16248 62.31525C381.16936 62.33618 381.14154 62.37118 381.07873 62.41993L380.59748 62.78962L380.34623 62.47587H377.19373L377.21467 63.0965C377.21467 63.15931 377.22154 63.34056 377.22842 63.65462C378.32342 63.72431 379.20248 63.794 379.86498 63.86368L380.56936 63.94743C380.56936 63.94743 381.02998 63.98931 381.02998 63.98931S381.34373 63.94743 381.34373 63.94743C381.43436 63.93368 381.44842 63.96837 381.37873 64.05212L380.97404 64.56118C380.66029 64.43587 380.38123 64.33806 380.12998 64.28243C379.87904 64.21243 379.50248 64.14275 379.00717 64.05899C378.51186 63.97525 378.17717 63.91962 378.00279 63.89181C377.82842 63.87087 377.61217 63.84274 377.34717 63.82181L376.71248 64.13587ZM378.21904 62.31525L380.39498 62.32243L380.33248 62.08525C380.29061 61.93868 380.22779 61.75024 380.12998 61.534C380.04623 61.31806 379.94873 61.11556 379.85811 60.93431C379.76748 60.74587 379.68373 60.59962 379.61404 60.48774C379.53717 60.38337 379.45342 60.257745 379.35592 60.125245C379.19529 60.31337 379.07686 60.45306 379.01404 60.54368C378.94436 60.6415 378.86748 60.76681 378.77686 60.92024C378.69311 61.06681 378.62342 61.20618 378.56061 61.33181C378.49779 61.45743 378.44217 61.58993 378.40029 61.74337C378.34436 61.88274 378.28873 62.07806 378.21904 62.31525ZM382.54217 62.22462L382.80029 61.96649C382.89092 62.02243 382.96061 62.05712 383.00936 62.06431C383.05842 62.07806 383.12811 62.09212 383.22561 62.09899L383.62342 62.14087V59.574307C383.62342 59.33712 383.60248 59.183682 383.56061 59.106807C383.51186 59.03712 383.45592 58.967432 383.37904 58.897745L383.84654 58.478995L383.99311 58.799932C384.06279 58.946495 384.37654 59.462432 384.93467 60.341495L384.86498 60.39024C384.57873 60.062432 384.29279 59.741495 384.00686 59.441495V62.02243L384.14654 62.14087C384.24404 62.2315 384.29279 62.27337 384.29279 62.27337C384.29279 62.28056 384.23717 62.32243 384.13248 62.41306L383.80467 62.67806L383.58154 62.30837L382.96061 62.25243L382.54217 62.22462ZM383.16311 64.54025L383.12123 64.47775L383.27467 64.33806C383.34436 64.27524 383.43498 64.14962 383.55342 63.9615C383.67217 63.77306 383.74873 63.61274 383.79779 63.48024C383.83967 63.34775 383.87436 63.264 383.89529 63.23618C383.92311 63.20806 383.94404 63.18712 383.96498 63.18025C383.99998 63.16618 384.05561 63.18712 384.12561 63.24306C384.19529 63.29868 384.23717 63.37556 384.25811 63.47306C384.27186 63.564 384.27186 63.64743 384.25811 63.71024C384.25092 63.77306 384.21623 63.84274 384.14654 63.91962C384.09061 63.99618 383.96498 64.09399 383.78373 64.21243C383.59529 64.33118 383.39311 64.44274 383.16311 64.54025ZM384.58592 58.576807L384.79498 58.65337C384.87186 58.68837 385.04623 58.709307 385.31123 58.709307H389.1406C389.1753 58.709307 389.2034 58.716182 389.2103 58.730245C389.2244 58.751182 389.1894 58.806807 389.0987 58.90462L388.6872 59.343995L388.3175 58.883682H387.1037V61.51337L388.75 61.52024C388.7847 61.52024 388.8128 61.52712 388.8197 61.54118C388.8265 61.55493 388.7847 61.61087 388.694 61.7015L388.2547 62.11306L387.9337 61.68056H387.1109L387.1037 64.01712L388.994 64.01024C389.015 64.01024 389.0359 64.02431 389.0428 64.04524C389.0569 64.07306 389.015 64.129 388.9244 64.21962L388.5197 64.61024L388.1709 64.17775H385.08123L384.65561 64.1915L384.89279 63.91962L385.06717 63.97525C385.12998 63.99618 385.31123 64.01024 385.6181 64.01024H386.6644L386.6506 58.883682H385.6809V62.09212L385.8134 62.20368C385.8694 62.25243 385.8972 62.28056 385.8903 62.28743C385.8903 62.30149 385.8484 62.32931 385.7715 62.36431L385.22061 62.59431L385.25561 61.82712V58.883682H384.85092L384.33467 58.90462L384.58592 58.576807Z"></path>
<path d="M393.48 35.53516L249.35156 14.4258" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M251.550811 12.332038C250.968765 13.69532 250.035176 14.242196 249.152369 14.394539C249.953139 14.796884 250.691422 15.585947 250.85548 17.062505" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M388.453 43.566405H359.02" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M360.89043 41.17574C360.51543 42.61324 359.671685 43.289021 358.820122 43.566365C359.671685 43.847615 360.51543 44.523396 360.89043 45.95699" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M364.418 38.14844H382.66V48.98828H364.418Z" fill="#fff"></path>
<path d="M367.95897 44.97999L367.89616 44.67312C367.82647 44.32437 367.70085 43.93374 367.52647 43.50155C367.34522 43.06187 367.143033 42.62968 366.91272 42.204053L366.99647 42.148428C367.17772 42.392491 367.338345 42.61562 367.470845 42.83187C367.60335 43.04812 367.72178 43.2503 367.80553 43.44562C367.90303 43.63405 367.97991 43.80843 368.05647 43.96874V41.457803L368.01491 40.2928C368.1821 40.35562 368.34272 40.439366 368.48897 40.537178L368.46116 41.388116V43.98968L368.68428 43.76655C368.70522 43.74562 368.74022 43.69687 368.79585 43.61312C368.85866 43.53624 368.91459 43.43155 368.97741 43.29218C369.03303 43.16655 369.07491 43.08999 369.09585 43.0828C369.11678 43.06905 369.13772 43.06187 369.15866 43.06187C369.20741 43.05499 369.25647 43.0828 369.30522 43.1528C369.35397 43.20843 369.38178 43.29218 369.38178 43.37593C369.38897 43.47343 369.36803 43.55718 369.3121 43.64093C369.27022 43.7178 369.16553 43.79437 369.00522 43.86405C368.85178 43.93374 368.67053 44.01062 368.46116 44.10124V44.97999H369.59116C369.61897 44.97999 369.63991 44.98718 369.64678 45.00812C369.66085 45.02187 369.63991 45.05687 369.5771 45.11968L369.15178 45.56593L368.83084 45.13374H368.46116V46.32624L368.66335 46.4728C368.69147 46.49374 368.70522 46.5078 368.69835 46.52155C368.69835 46.53562 368.67741 46.54937 368.63553 46.5703L368.01491 46.84249L368.05647 46.0753V45.13374H367.408033L366.91272 45.15437L367.16397 44.89655C367.317408 44.95218 367.47772 44.97999 367.6521 44.97999H367.95897ZM370.4421 46.79374L370.39334 46.50062C370.34428 46.2078 370.25366 45.85187 370.10741 45.43343C369.95397 45.01499 369.85616 44.73593 369.78647 44.60343C369.73053 44.47093 369.59116 44.20593 369.38178 43.8153L369.45147 43.77343C369.63303 43.98968 369.78647 44.20593 369.92585 44.40812C370.05147 44.61749 370.20491 44.88937 370.36522 45.23124H372.40897L372.39522 43.36187C372.39522 43.29905 372.38116 43.0828 372.36709 42.69249C372.33928 42.315616 372.31147 41.966866 372.28335 41.666866C372.24147 41.367178 372.18585 41.185616 372.10209 41.123116C372.01835 41.060303 371.92084 41.032178 371.81616 41.032178C371.65585 41.032178 371.27897 41.094991 370.68616 41.227491L370.66522 41.157803L370.86741 41.067178L371.19522 40.941553C371.29303 40.899678 371.37678 40.850928 371.44647 40.794991C371.52334 40.739366 371.5721 40.683428 371.59991 40.613741C371.62085 40.558116 371.64178 40.474366 371.66272 40.37655L372.05335 40.502178C372.18585 40.537178 372.30428 40.620616 372.40897 40.753428C372.50678 40.892803 372.5696 41.032178 372.60428 41.178741C372.63928 41.325303 372.67397 41.513428 372.69491 41.757803C372.71584 42.001866 372.73678 42.218116 372.74366 42.41343C372.75772 42.60874 372.77178 42.94343 372.78553 43.4178C372.79272 43.88499 372.81366 44.43624 372.84147 45.05687L373.0646 45.25218C373.09959 45.29405 373.12053 45.31499 373.12053 45.31499C373.12741 45.32187 373.10647 45.33593 373.05772 45.37062L372.54866 45.71937L372.33928 45.39155H370.4421C370.58866 45.7403 370.72116 46.05437 370.8396 46.32624L371.01397 46.43093C371.05585 46.45874 371.07678 46.47968 371.07678 46.49374S371.04178 46.52874 370.97928 46.55655L370.4421 46.79374ZM369.49335 42.392491L369.80022 41.924991L369.95397 42.036553C370.03053 42.092491 370.1771 42.155303 370.4071 42.224991C370.63741 42.294678 370.97209 42.378428 371.41147 42.47624L371.43241 42.336553L371.46741 42.001866C371.47428 41.924991 371.50928 41.883116 371.56491 41.876241C371.61397 41.869366 371.66272 41.890303 371.71147 41.939053C371.76022 41.994991 371.80928 42.050616 371.84397 42.106553C371.87897 42.155303 371.89991 42.231866 371.90678 42.322803C371.91366 42.46218 371.82303 42.65062 371.63491 42.90155C371.44647 43.13874 371.23022 43.38999 371.00022 43.6478L370.93022 43.59218L371.0071 43.48062C371.11178 43.33405 371.23022 43.05499 371.37678 42.62968L369.98866 42.44812C370.23991 42.90843 370.53272 43.47343 370.86741 44.13624L371.08366 44.2478C371.11866 44.26874 371.13272 44.28249 371.13959 44.29655C371.14647 44.31749 371.12553 44.33843 371.08366 44.35937L370.53959 44.63124L370.49085 44.3453C370.46991 44.2128 370.4421 44.0803 370.40022 43.9478C370.35147 43.8153 370.2746 43.58499 370.14897 43.26437C370.03741 42.94343 369.93991 42.73405 369.87022 42.62249C369.80741 42.52499 369.7446 42.4553 369.68866 42.44124C369.63303 42.41343 369.57022 42.39937 369.49335 42.392491ZM375.02334 44.05249L374.77928 43.73155H374.20741L373.78178 43.74562L374.00491 43.45249L374.16553 43.52249C374.22835 43.55718 374.34678 43.57124 374.51428 43.57124H374.89772V41.401866C374.5421 41.255616 374.18647 41.074053 373.83772 40.844053L374.22835 40.37655L374.51428 40.829991C374.59084 40.948741 374.69553 41.060303 374.82803 41.157803C374.91866 41.220616 374.99553 41.255616 375.05834 41.255616C375.12803 41.248428 375.19085 41.227491 375.2396 41.199678C375.29553 41.157803 375.39991 41.074053 375.55335 40.934678C375.7071 40.794991 375.87428 40.683428 376.06272 40.613741C376.25084 40.529991 376.50897 40.488116 376.8368 40.467178C377.1646 40.446241 377.4996 40.439366 377.8343 40.432491C378.1621 40.425616 378.483 40.425616 378.783 40.425616C378.8527 40.418428 378.9921 40.418428 379.1946 40.418428C379.3968 40.425616 379.5712 40.425616 379.7105 40.425616L379.8012 40.648741C379.8362 40.732491 380.0174 40.829991 380.3524 40.941553L380.3383 41.018428C379.2502 40.885928 378.3227 40.815928 377.5552 40.823116C376.7949 40.823116 376.29991 40.850928 376.08366 40.920616C375.86741 40.976553 375.60928 41.129991 375.31647 41.359991V43.42468L375.51178 43.57124C375.55335 43.59905 375.57428 43.61999 375.57428 43.63405C375.57428 43.64093 375.53272 43.67593 375.45584 43.73874L375.02334 44.05249ZM374.32585 46.27062L374.29116 46.19374C374.47241 46.02624 374.59803 45.87999 374.67459 45.75437C374.75147 45.63593 374.81428 45.50312 374.87678 45.36374L374.99553 45.07093C375.02334 45.00093 375.05116 44.95937 375.07209 44.93843C375.10022 44.91749 375.12803 44.9103 375.15585 44.91749C375.19085 44.91749 375.23272 44.93843 375.28147 44.97999C375.33022 45.01499 375.36522 45.06374 375.39303 45.1128C375.43491 45.18937 375.45584 45.27312 375.44897 45.35687C375.44897 45.43343 375.41397 45.53124 375.33741 45.63593C375.26741 45.74749 375.14897 45.85187 374.97459 45.9428C374.8071 46.03343 374.59084 46.14499 374.32585 46.27062ZM375.34428 44.18499L375.65803 43.87812C375.80459 43.93374 375.94397 43.96874 376.09053 43.9828C376.23022 43.99655 376.34866 44.00374 376.44616 44.00374H380.143C380.178 44.00374 380.199 44.01062 380.2058 44.03155C380.2199 44.05249 380.178 44.10124 380.0871 44.18499L379.6477 44.58249L379.299 44.16405L378.0018 44.17093V45.30093H379.564C379.5921 45.30093 379.613 45.31499 379.6199 45.33593C379.634 45.35687 379.5921 45.41249 379.4943 45.50312L379.1037 45.86593L378.7621 45.46155H377.9946L378.0018 46.31937L378.1483 46.40999C378.2249 46.45187 378.2599 46.47968 378.2527 46.50062C378.2527 46.51468 378.2108 46.53562 378.1274 46.5703L377.5483 46.80062L377.5762 46.19374V45.46155H376.55085L376.7671 45.90093L376.9205 45.95655C376.9693 45.97749 376.9974 45.99843 376.9974 46.01249C377.0043 46.02624 376.9624 46.05437 376.8787 46.10312L376.39053 46.36812L376.34178 46.11718C376.31366 45.91468 376.25084 45.65687 376.14647 45.3428C376.04866 45.02187 375.93022 44.70812 375.79772 44.40812L375.87428 44.36624L376.00678 44.53374C376.02772 44.56874 376.09053 44.68718 376.20928 44.87562C376.32772 45.06374 376.41147 45.2103 376.4671 45.30093H377.5833V44.17093L376.02772 44.16405L375.34428 44.18499ZM376.8718 43.32718L376.36272 43.57812L376.38366 42.9503V41.855303L376.35553 41.157803C376.5718 41.234678 376.6905 41.276553 376.7115 41.297491C376.7324 41.311241 376.7602 41.332178 376.788 41.353116V41.715928H378.7549V41.332178C378.9712 41.409053 379.1318 41.485616 379.2362 41.569366L379.2015 42.162178V43.03405L379.348 43.15968C379.4105 43.21562 379.4455 43.2503 379.4455 43.2503C379.4455 43.25718 379.3896 43.29905 379.2852 43.37593L378.8805 43.65499L378.6505 43.32718H376.8718ZM376.788 41.876241V43.15968H378.7549L378.748 41.876241H376.788Z"></path>
<path d="M181.1563 17.2031L129.867 35.32031" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M130.836231 32.445321C130.95732 33.92188 130.387007 34.843757 129.679978 35.386726C130.574506 35.367196 131.594036 35.726568 132.429974 36.953127" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M146.203 20.9766H164.4453V31.6797H146.203Z" fill="#fff"></path>
<path d="M149.64753 29.05991L149.66816 28.65522C149.67534 28.58553 149.67534 28.43897 149.68909 28.22272C149.68909 28.00678 149.69628 27.67866 149.69628 27.23928C149.69628 26.80678 149.68909 26.48616 149.67534 26.27678C149.66816 26.06772 149.65441 25.87241 149.63347 25.69803C149.60566 25.52366 149.58472 25.35616 149.56378 25.216781C149.53566 25.063031 149.49378 24.916781 149.44503 24.756156C149.39628 24.595843 149.326594 24.421468 149.242844 24.226156C149.152219 24.023968 148.942844 23.730843 148.615031 23.340218L148.677844 23.270531C148.880031 23.452093 149.047531 23.633343 149.200969 23.807718C149.340344 23.982093 149.46597 24.156468 149.56378 24.309906C149.66128 24.477406 149.75191 24.693656 149.82878 24.965531C149.90534 25.244593 149.96128 25.48866 149.98909 25.69084C150.01691 25.90022 150.03784 26.11647 150.05191 26.33272C150.07284 26.55584 150.09378 26.85584 150.12159 27.23928H151.00753C151.07722 26.91866 151.14003 26.66741 151.19597 26.48616C151.25847 26.29772 151.33534 26.10241 151.42597 25.88616C151.51659 25.67709 151.60034 25.50959 151.66316 25.38397C151.72597 25.258343 151.85159 25.063031 152.03284 24.791156L151.91441 24.651781C151.87941 24.616781 151.76066 24.519281 151.55847 24.365531C151.35628 24.205218 151.18191 24.086781 151.04253 24.003031C150.90284 23.919281 150.72847 23.821781 150.51222 23.717093C150.29597 23.612406 150.12878 23.528656 150.01003 23.479906C149.89159 23.431156 149.64753 23.347406 149.291594 23.23584L149.347531 23.12428C150.28909 23.396156 150.95159 23.633343 151.32128 23.849593C151.69097 24.058656 152.02597 24.282093 152.31191 24.512093C152.59784 24.323968 152.77909 24.198343 152.86284 24.142406C152.94659 24.093656 153.13503 23.988968 153.42784 23.842406C153.71378 23.696156 154.05566 23.549593 154.43909 23.403031L154.55784 23.584593C154.57878 23.633343 154.64159 23.682093 154.73909 23.730843C154.84378 23.779906 154.98316 23.814593 155.16472 23.828656V23.926156C154.75316 23.968031 154.47409 24.003031 154.32066 24.044906C154.16722 24.072718 153.98597 24.128656 153.76972 24.205218C153.55347 24.282093 153.36503 24.351781 153.19753 24.435531C153.03034 24.505218 152.82097 24.637718 152.57003 24.812093C152.77222 25.077093 152.91159 25.27928 153.00222 25.41178C153.09316 25.54459 153.18378 25.71178 153.28847 25.91428C153.38597 26.10928 153.46972 26.28366 153.53941 26.43741C153.60222 26.59084 153.68597 26.79991 153.79066 27.06491L154.02066 27.18366C154.06941 27.20459 154.09034 27.22553 154.09753 27.23928C154.10441 27.26022 154.07659 27.29522 154.01378 27.34397L153.53253 27.71366L153.28128 27.39991H150.12878L150.14972 28.02053C150.14972 28.08334 150.15659 28.26459 150.16347 28.57866C151.25847 28.64834 152.13753 28.71803 152.80003 28.78772L153.50441 28.87147C153.50441 28.87147 153.96503 28.91334 153.96503 28.91334S154.27878 28.87147 154.27878 28.87147C154.36941 28.85772 154.38347 28.89241 154.31378 28.97616L153.90909 29.48522C153.59534 29.35991 153.31628 29.26209 153.06503 29.20647C152.81409 29.13647 152.43753 29.06678 151.94222 28.98303S151.11222 28.84366 150.93784 28.81584C150.76347 28.79491 150.54722 28.76678 150.28222 28.74584L149.64753 29.05991ZM151.15409 27.23928L153.33003 27.24647L153.26753 27.00928C153.22566 26.86272 153.16284 26.67428 153.06503 26.45803C152.98128 26.24209 152.88378 26.03959 152.79316 25.85834C152.70253 25.66991 152.61878 25.52366 152.54909 25.41178C152.47222 25.30741 152.38847 25.181781 152.29097 25.049281C152.13034 25.237406 152.01191 25.37709 151.94909 25.46772C151.87941 25.56553 151.80253 25.69084 151.71191 25.84428C151.62816 25.99084 151.55847 26.13022 151.49566 26.25584C151.43284 26.38147 151.37722 26.51397 151.33534 26.66741C151.27941 26.80678 151.22378 27.00209 151.15409 27.23928ZM155.47722 27.14866L155.73534 26.89053C155.82597 26.94647 155.89566 26.98116 155.94441 26.98834C155.99347 27.00209 156.06316 27.01616 156.16066 27.02303L156.55847 27.06491V24.498343C156.55847 24.261156 156.53753 24.107718 156.49566 24.030843C156.44691 23.961156 156.39097 23.891468 156.31409 23.821781L156.78159 23.403031L156.92816 23.723968C156.99784 23.870531 157.31159 24.386468 157.86972 25.265531L157.80003 25.31428C157.51378 24.986468 157.22784 24.665531 156.94191 24.365531V26.94647L157.08159 27.06491C157.17909 27.15553 157.22784 27.19741 157.22784 27.19741C157.22784 27.20459 157.17222 27.24647 157.06753 27.33709L156.73972 27.60209L156.51659 27.23241L155.89566 27.17647L155.47722 27.14866ZM156.09816 29.46428L156.05628 29.40178L156.20972 29.26209C156.27941 29.19928 156.37003 29.07366 156.48847 28.88553C156.60722 28.69709 156.68378 28.53678 156.73284 28.40428C156.77472 28.27178 156.80941 28.18803 156.83034 28.16022C156.85816 28.13209 156.87909 28.11116 156.90003 28.10428C156.93503 28.09022 156.99066 28.11116 157.06066 28.16709C157.13034 28.22272 157.17222 28.29959 157.19316 28.39709C157.20691 28.48803 157.20691 28.57147 157.19316 28.63428C157.18597 28.69709 157.15128 28.76678 157.08159 28.84366C157.02566 28.92022 156.90003 29.01803 156.71878 29.13647C156.53034 29.25522 156.32816 29.36678 156.09816 29.46428ZM157.52097 23.500843L157.73003 23.577406C157.80691 23.612406 157.98128 23.633343 158.24628 23.633343H162.0757C162.1103 23.633343 162.1385 23.640218 162.1453 23.654281C162.1594 23.675218 162.1244 23.730843 162.0338 23.828656L161.6222 24.268031L161.2525 23.807718H160.0388V26.43741L161.685 26.44428C161.7197 26.44428 161.7478 26.45116 161.7547 26.46522C161.7616 26.47897 161.7197 26.53491 161.6291 26.62553L161.1897 27.03709L160.8688 26.60459H160.046L160.0388 28.94116L161.9291 28.93428C161.95 28.93428 161.971 28.94834 161.9778 28.96928C161.9919 28.99709 161.95 29.05303 161.8594 29.14366L161.4547 29.53428L161.106 29.10178H158.01628L157.59066 29.11553L157.82784 28.84366L158.00222 28.89928C158.06503 28.92022 158.24628 28.93428 158.5532 28.93428H159.5994L159.5857 23.807718H158.616V27.01616L158.7485 27.12772C158.8044 27.17647 158.8322 27.20459 158.8253 27.21147C158.8253 27.22553 158.7835 27.25334 158.7066 27.28834L158.15566 27.51834L158.19066 26.75116V23.807718H157.78597L157.26972 23.828656L157.52097 23.500843Z"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-real-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: 实数完备性定理等价关系示意图
</figcaption>
</figure>
</div>
</section>
<section id="example-3" class="level2">
<h2 class="anchored" data-anchor-id="example-3">Example 3</h2>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-ulaccu" class="theorem">
<p><span class="theorem-title"><strong>Theorem 4</strong></span> 设数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 有界，其上极限 <img src="https://latex.codecogs.com/png.latex?%5Cvarlimsup_%7Bn%20%5Cto%20%5Cinfty%7D%20x_n%20=%20L">，下极限 <img src="https://latex.codecogs.com/png.latex?%5Cvarliminf_%7Bn%20%5Cto%20%5Cinfty%7D%20x_n%20=%20l">，则 <img src="https://latex.codecogs.com/png.latex?L"> 是 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的最大聚点，<img src="https://latex.codecogs.com/png.latex?l"> 是 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的最小聚点.</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>Theorem&nbsp;1 中，我们已经知道，一个数列的收敛子列的极限也是该数列的一个聚点. 结合上下极限的子列式定义即可证明上述定理.</p>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-ullim" class="theorem example">
<p><span class="theorem-title"><strong>Example 3</strong></span> 设数列 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 有界且 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D(x_%7Bn+1%7D%20%E2%88%92%20x_n)%20=%200">，分别记 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的上下极限为 <img src="https://latex.codecogs.com/png.latex?L"> 和 <img src="https://latex.codecogs.com/png.latex?l">. 证明 <img src="https://latex.codecogs.com/png.latex?%5Bl,%20L%5D"> 上的任意点可作为 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 某个子列的极限.</p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>Proof</em>. </span>反证. 假设 <img src="https://latex.codecogs.com/png.latex?%5Bl,%20L%5D"> 上有一点 <img src="https://latex.codecogs.com/png.latex?a"> 不是任何 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的收敛子列的极限，则根据 Theorem&nbsp;1，<img src="https://latex.codecogs.com/png.latex?a"> 不是 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的聚点，即存在 <img src="https://latex.codecogs.com/png.latex?a"> 的一个邻域 <img src="https://latex.codecogs.com/png.latex?U(a,%5Cvarepsilon)">，使得只有有限个 <img src="https://latex.codecogs.com/png.latex?x_n"> 落入该邻域，换句话说，存在某个 <img src="https://latex.codecogs.com/png.latex?N%20%5Cin%20%5Cmathbb%20N_+">，当 <img src="https://latex.codecogs.com/png.latex?n%3EN"> 时，就有 <img src="https://latex.codecogs.com/png.latex?x_n%20%5Cnotin%20U(a,%5Cvarepsilon)">.</p>
<p>又，考虑到 Theorem&nbsp;4 表明上下极限 <img src="https://latex.codecogs.com/png.latex?L"> 和 <img src="https://latex.codecogs.com/png.latex?l"> 都是 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 的聚点，<img src="https://latex.codecogs.com/png.latex?L,l%20%5Cnotin%20U(a,%5Cvarepsilon)"> 显然成立，且第 <img src="https://latex.codecogs.com/png.latex?N"> 项后的 <img src="https://latex.codecogs.com/png.latex?%5C%7B%20x_n%20%5C%7D"> 完全由满足 <img src="https://latex.codecogs.com/png.latex?x_n%20%3E%20a+%5Cvarepsilon"> 和 <img src="https://latex.codecogs.com/png.latex?x_n%20%3C%20a-%5Cvarepsilon"> 的两种 <img src="https://latex.codecogs.com/png.latex?x_n"> 构成，且它们均有无穷多项. 这样，对于任意的 <img src="https://latex.codecogs.com/png.latex?M%3EN">，总可以找到一个 <img src="https://latex.codecogs.com/png.latex?m%20%3E%20M"> 使得 <img src="https://latex.codecogs.com/png.latex?x_m"> 和 <img src="https://latex.codecogs.com/png.latex?x_%7Bm+1%7D"> 分属 <img src="https://latex.codecogs.com/png.latex?U(a,%20%5Cvarepsilon)"> 的两侧，故 <img src="https://latex.codecogs.com/png.latex?%7Cx_m%20-%20x_%7Bm+1%7D%7C%20%5Cgeqslant%202%20%5Cvarepsilon">，这就与条件 <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bn%20%5Cto%20%5Cinfty%7D(x_%7Bn+1%7D%20%E2%88%92%20x_n)%20=%200"> 产生矛盾. 故不存在这样的 <img src="https://latex.codecogs.com/png.latex?a">，定理得证.</p>
</div>
</section>


<div id="quarto-appendix" class="default"><section id="acknowledgments" class="level2 appendix"><h2 class="anchored quarto-appendix-heading">Acknowledgments</h2><div class="quarto-appendix-contents">

<p>感谢史老师主持研讨课并指出讲稿的多处错误，特别是原来聚点定理的证明中数列元素可重的 bug. 史老师还提供了标准聚点定义的另一种叙述.</p>



</div></section><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-lizhong" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">李忠 and 方丽萍, <em>数学分析教程</em>. 北京: 高等教育出版社, 2008, pp. 257–258.</div>
</div>
</div></section></div> ]]></description>
  <category>数学</category>
  <category>题解</category>
  <category>讲稿</category>
  <guid>https://blog.sun123zxy.top/posts/20221213-cover/</guid>
  <pubDate>Mon, 12 Dec 2022 16:00:00 GMT</pubDate>
</item>
<item>
  <title>SunQuarTeX-cnart 测试文档</title>
  <dc:creator>sun123zxy </dc:creator>
  <dc:creator>佚名 </dc:creator>
  <link>https://blog.sun123zxy.top/posts/20221223-quarto-test/</link>
  <description><![CDATA[ 




<section id="前言" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="前言"><span class="header-section-number">1</span> 前言</h2>
<p>具体使用方法参见 <a href="https://github.com/sun123zxy/sunquartex">sun123zxy/sunquartex</a>．</p>
</section>
<section id="文章结构测试" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="文章结构测试"><span class="header-section-number">2</span> 文章结构测试</h2>
<p>这一节测试文章结构．</p>
<section id="文章分节" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="文章分节"><span class="header-section-number">2.1</span> 文章分节</h3>
<p>非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</p>
<section id="sec-test" class="level4">
<h4 class="anchored" data-anchor-id="sec-test">文章分分节</h4>
<p>Quarto 支持交叉引用．比如这一节的标题就已经被打上了标签．</p>
<section id="分分分节" class="level5">
<h5 class="anchored" data-anchor-id="分分分节">分分分节</h5>
<p>本节中我们测试交叉引用 小节&nbsp;2.1.1．</p>
<section id="分分分分节" class="level6">
<h6 class="anchored" data-anchor-id="分分分分节">分分分分节</h6>
<p>这是最小的一级了．</p>
</section>
</section>
</section>
</section>
</section>
<section id="图片表格列表测试" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="图片表格列表测试"><span class="header-section-number">3</span> 图片、表格、列表测试</h2>
<p>这是 Quarto 的图标．</p>
<div id="fig-quarto" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-quarto-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.sun123zxy.top/posts/20221223-quarto-test/index-quarto.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-quarto-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;1: 这是一张插图
</figcaption>
</figure>
</div>
<p>交叉引用 图&nbsp;1 当然也是可以的．</p>
<p>这是一个紧凑列表．</p>
<ul>
<li>自反性．</li>
<li>反对称性一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</li>
<li>传递性．</li>
</ul>
<p>这是一个宽松列表．</p>
<ul>
<li><p>自反性．</p></li>
<li><p>反对称性一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</p>
<p>还多加了一段．</p></li>
<li><p>传递性．</p></li>
</ul>
<p>这是一个定义列表．</p>
<dl>
<dt>自反性</dt>
<dd>
<p><img src="https://latex.codecogs.com/png.latex?a%20%5Csim%20a"></p>
</dd>
<dt>反对称性</dt>
<dd>
<p><img src="https://latex.codecogs.com/png.latex?a%20%5Cleq%20b%20%5Cland%20b%20%5Cleq%20a%20%5Cimplies%20a=b"></p>
</dd>
<dt>传递性</dt>
<dd>
<p><img src="https://latex.codecogs.com/png.latex?a%20%5Cleq%20b%20%5Cland%20b%20%5Cleq%20c%20%5Cimplies%20a%20%5Cleq%20c"></p>
</dd>
</dl>
<p>当然也可以使用 Markdown 表格．例如 表&nbsp;1 (a).</p>
<p>多表格并列．加上 表&nbsp;1 (b)，它们共同组成了 表&nbsp;1．</p>
<div id="tbl-panel-unsolved" class="quarto-layout-panel anchored">
<figure class="quarto-float quarto-float-tbl figure">
<div aria-describedby="tbl-panel-unsolved-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="tbl-panel-unsolved" style="flex-basis: 50.0%;justify-content: center;">
<div id="tbl-cartesian-unsolved" class="quarto-float anchored">
<figure class="quarto-float quarto-subfloat-tbl figure">
<div aria-describedby="tbl-cartesian-unsolved-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="table">
<tbody>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?L_i%20%5Ctimes%20C_j"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?2"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?2"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?4"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;">?</td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
<td style="text-align: center;">?</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
</tr>
</tbody>
</table>
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-tbl" id="tbl-cartesian-unsolved-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) 笛卡尔积
</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="tbl-panel-unsolved" style="flex-basis: 50.0%;justify-content: center;">
<div id="tbl-power-unsolved" class="quarto-float anchored">
<figure class="quarto-float quarto-subfloat-tbl figure">
<div aria-describedby="tbl-power-unsolved-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="table">
<tbody>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?L_i%5E%7BC_j%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?2"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?2"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?4"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?2%5E%7B%5Cmathbb%20R%7D"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20N"></td>
<td style="text-align: center;">?</td>
<td style="text-align: center;">?</td>
</tr>
<tr class="even">
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R"></td>
<td style="text-align: center;">?</td>
<td style="text-align: center;">?</td>
</tr>
</tbody>
</table>
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-tbl" id="tbl-power-unsolved-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b) 集合幂
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-tbl" id="tbl-panel-unsolved-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
表&nbsp;1: 相关集合的势（不完整版）
</figcaption>
</figure>
</div>
</section>
<section id="数学公式定理系统测试" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="数学公式定理系统测试"><span class="header-section-number">4</span> 数学公式、定理系统测试</h2>
<p>这一节我们测试数学相关内容．直接在源文件中写 raw LaTeX 就可声明公式所需的宏定义．由于 <code>\DeclareMathOperator</code> 只能在 LaTeX 的导言区使用，这里我们用 <code>\newcommand</code> + <code>\operatorname</code> 的方式替代．</p>
<p>下面的公式使用了上面定义的 macro． <img src="https://latex.codecogs.com/png.latex?%0A%5Coperatorname%7Bran%7DA%20:=%20%5C%7B%20y%20%5Cmid%20(x,y)%20%5Cin%20A%20%5C%7D%0A"></p>
<p>两个集合 <img src="https://latex.codecogs.com/png.latex?A,%20B"> 的笛卡尔积定义为 <img src="https://latex.codecogs.com/png.latex?%0AA%20%5Ctimes%20B%20=%20%5C%7B%5Clangle%20x,y%20%5Crangle%20%5Cmid%20x%20%5Cin%20A%20%5Cland%20y%20%5Cin%20B%20%5C%7D%0A"></p>
<p>显然，笛卡尔积不满足交换律和结合律. 在势的视角下，它的表现如何呢？</p>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="thm-cartesian-preserve" class="theorem">
<p><span class="theorem-title"><strong>定理 1 (笛卡尔积的保势性)</strong></span> 这是一个有 caption 的定理.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AA%20%5Cpreccurlyeq%20C%20%5Cland%20B%20%5Cpreccurlyeq%20D%20%5Cimplies%20A%20%5Ctimes%20B%20%5Cpreccurlyeq%20C%20%5Ctimes%20D%0A"></p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>证明</em>. </span>建立单射 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cvarphi:%20A%20%5Ctimes%20B%20&amp;%5Cto%20C%20%5Ctimes%20D%20%5C%5C%0A%5Clangle%20x,y%20%5Crangle%20&amp;%5Cmapsto%20%5Clangle%20f(x),%20g(y)%20%5Crangle%0A%5Cend%7Baligned%7D%0A"> 即可，其中 <img src="https://latex.codecogs.com/png.latex?f"> 和 <img src="https://latex.codecogs.com/png.latex?g"> 是由 <img src="https://latex.codecogs.com/png.latex?A%20%5Cpreccurlyeq%20C"> 和 <img src="https://latex.codecogs.com/png.latex?B%20%5Cpreccurlyeq%20D"> 确定的单射.</p>
</div>
<div class="callout callout-style-simple callout-note no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="cor-random" class="theorem corollary">
<p><span class="theorem-title"><strong>推论 1</strong></span> 等势意义下可用等势的集合替换参与笛卡尔积运算的集合，即 <img src="https://latex.codecogs.com/png.latex?%0AA%20%5Capprox%20C%20%5Cland%20B%20%5Capprox%20D%20%5Cimplies%20A%20%5Ctimes%20B%20%5Capprox%20C%20%5Ctimes%20D%0A"></p>
<p>这是一个没有 caption 的定理.</p>
</div>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-tip no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<div id="exm-rtimesn" class="theorem example">
<p><span class="theorem-title"><strong>例 1</strong></span> 证明 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20R%20%5Ctimes%20%5Cmathbb%20N%20%5Capprox%20%5Cmathbb%20N%20%5Ctimes%20%5Cmathbb%20R%20%5Capprox%20%5Cmathbb%20R%0A"></p>
</div>
</div>
</div>
</div>
<div class="proof">
<p><span class="proof-title"><em>证明</em>. </span>利用 定理&nbsp;1 对 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R%20%5Ctimes%202"> 和 <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%20R%20%5Ctimes%20%5Cmathbb%20R"> 夹逼，立刻得到 <img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbb%20R%20%5Capprox%20%5Cmathbb%20R%20%5Ctimes%202%20%5Cpreccurlyeq%20%5Cmathbb%20R%20%5Ctimes%20%5Cmathbb%20N%20%5Cpreccurlyeq%20%5Cmathbb%20R%20%5Ctimes%20%5Cmathbb%20R%20%5Capprox%20%5Cmathbb%20R%0A%5Cimplies%20%5Cmathbb%20R%20%5Ctimes%20%5Cmathbb%20N%20%5Capprox%20%5Cmathbb%20N%20%5Ctimes%20%5Cmathbb%20R%20%5Capprox%20%5Cmathbb%20R%0A"></p>
</div>
<div class="proof solution">
<p><span class="proof-title"><em>解</em>. </span>这是一个解．</p>
</div>
<div class="proof remark">
<p><span class="proof-title"><em>注记</em>. </span>这是一个注记．</p>
</div>
</section>
<section id="数据可视化table-figure-diagram" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="数据可视化table-figure-diagram"><span class="header-section-number">5</span> 数据可视化（Table, Figure &amp; Diagram）</h2>
<p>Quarto 的另一大卖点．</p>
<div id="cell-fig-polar" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb1-5">theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r</span>
<span id="cb1-6">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(</span>
<span id="cb1-7">  subplot_kw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'projection'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'polar'</span>} </span>
<span id="cb1-8">)</span>
<span id="cb1-9">fig.patch.set_alpha(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-10">ax.patch.set_alpha(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-11"></span>
<span id="cb1-12">ax.plot(theta, r)</span>
<span id="cb1-13">ax.set_rticks([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-14">ax.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-15">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-polar" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.sun123zxy.top/posts/20221223-quarto-test/index_files/figure-html/fig-polar-output-1.png" width="450" height="439" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;2: A line plot on a polar axis
</figcaption>
</figure>
</div>
</div>
</div>
<p>交叉引用 图&nbsp;2 当然也是可以的.</p>
<p>这里再测试一些较复杂的并列效果．（表&nbsp;2, 表&nbsp;2 (a), 表&nbsp;2 (b), 图&nbsp;3, 图&nbsp;3 (a), 图&nbsp;3 (b)）</p>
<div id="73a64318" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Markdown, display</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tabulate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tabulate</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-6"></span>
<span id="cb2-7">R <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">700</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">900</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb2-8"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1100</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1110</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1120</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1130</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1140</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1150</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1160</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1170</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1180</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1190</span>,</span>
<span id="cb2-9"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1220</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1230</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1240</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1250</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1260</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1270</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1280</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1290</span>,</span>
<span id="cb2-10"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1300</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1400</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>,math.inf])</span>
<span id="cb2-11">U <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">24.2E-3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.386</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.747</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.104</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.460</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.813</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.16</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.51</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.86</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.19</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.48</span>,</span>
<span id="cb2-12"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.70</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.75</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.77</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.78</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.80</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.81</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.83</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.84</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.85</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.86</span>,</span>
<span id="cb2-13"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.87</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.90</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.92</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.93</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.94</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.95</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.95</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.96</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.97</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.98</span>,</span>
<span id="cb2-14"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.99</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.08</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.16</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.39</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.66</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.85</span>])</span>
<span id="cb2-15">I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,</span>
<span id="cb2-16"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.3</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.3</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.3</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.3</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.3</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.3</span>,</span>
<span id="cb2-17"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>,</span>
<span id="cb2-18"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.9</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.7</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.130</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">47.7E-3</span>])</span>
<span id="cb2-19">P <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> U<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>I</span></code></pre></div>
</details>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[R[i], U[i], I[i], P[i]] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>]]</span>
<span id="cb3-2">display(Markdown(tabulate(table, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R (Ω)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"U (V)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I (mA)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P (mW)"</span>])))</span>
<span id="cb3-3">table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[R[i], U[i], I[i], P[i]] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>)]</span>
<span id="cb3-4">display(Markdown(tabulate(table, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R (Ω)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"U (V)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I (mA)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P (mW)"</span>])))</span></code></pre></div>
</details>
<div id="tbl-light-on" class="quarto-layout-panel anchored">
<figure class="quarto-float quarto-float-tbl figure">
<div aria-describedby="tbl-light-on-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display cell-output-markdown quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="tbl-light-on" style="flex-basis: 50.0%;justify-content: center;">
<div id="tbl-light-on-1" class="do-not-create-environment quarto-float anchored">
<figure class="quarto-float quarto-subfloat-tbl figure">
<div aria-describedby="tbl-light-on-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table id="tbl-light-on-1" class="do-not-create-environment table">
<thead>
<tr class="header">
<th style="text-align: right;">R (Ω)</th>
<th style="text-align: right;">U (V)</th>
<th style="text-align: right;">I (mA)</th>
<th style="text-align: right;">P (mW)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: right;">0.0242</td>
<td style="text-align: right;">3.6</td>
<td style="text-align: right;">0.08712</td>
</tr>
<tr class="even">
<td style="text-align: right;">100</td>
<td style="text-align: right;">0.386</td>
<td style="text-align: right;">3.6</td>
<td style="text-align: right;">1.3896</td>
</tr>
<tr class="odd">
<td style="text-align: right;">200</td>
<td style="text-align: right;">0.747</td>
<td style="text-align: right;">3.6</td>
<td style="text-align: right;">2.6892</td>
</tr>
<tr class="even">
<td style="text-align: right;">300</td>
<td style="text-align: right;">1.104</td>
<td style="text-align: right;">3.6</td>
<td style="text-align: right;">3.9744</td>
</tr>
<tr class="odd">
<td style="text-align: right;">400</td>
<td style="text-align: right;">1.46</td>
<td style="text-align: right;">3.6</td>
<td style="text-align: right;">5.256</td>
</tr>
<tr class="even">
<td style="text-align: right;">500</td>
<td style="text-align: right;">1.813</td>
<td style="text-align: right;">3.5</td>
<td style="text-align: right;">6.3455</td>
</tr>
<tr class="odd">
<td style="text-align: right;">600</td>
<td style="text-align: right;">2.16</td>
<td style="text-align: right;">3.5</td>
<td style="text-align: right;">7.56</td>
</tr>
<tr class="even">
<td style="text-align: right;">700</td>
<td style="text-align: right;">2.51</td>
<td style="text-align: right;">3.5</td>
<td style="text-align: right;">8.785</td>
</tr>
<tr class="odd">
<td style="text-align: right;">800</td>
<td style="text-align: right;">2.86</td>
<td style="text-align: right;">3.5</td>
<td style="text-align: right;">10.01</td>
</tr>
<tr class="even">
<td style="text-align: right;">900</td>
<td style="text-align: right;">3.19</td>
<td style="text-align: right;">3.5</td>
<td style="text-align: right;">11.165</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1000</td>
<td style="text-align: right;">3.48</td>
<td style="text-align: right;">3.4</td>
<td style="text-align: right;">11.832</td>
</tr>
<tr class="even">
<td style="text-align: right;">1100</td>
<td style="text-align: right;">3.7</td>
<td style="text-align: right;">3.3</td>
<td style="text-align: right;">12.21</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1200</td>
<td style="text-align: right;">3.87</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.384</td>
</tr>
<tr class="even">
<td style="text-align: right;">1300</td>
<td style="text-align: right;">3.99</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">11.97</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1400</td>
<td style="text-align: right;">4.08</td>
<td style="text-align: right;">2.9</td>
<td style="text-align: right;">11.832</td>
</tr>
<tr class="even">
<td style="text-align: right;">1500</td>
<td style="text-align: right;">4.16</td>
<td style="text-align: right;">2.7</td>
<td style="text-align: right;">11.232</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2000</td>
<td style="text-align: right;">4.39</td>
<td style="text-align: right;">2.2</td>
<td style="text-align: right;">9.658</td>
</tr>
<tr class="even">
<td style="text-align: right;">4000</td>
<td style="text-align: right;">4.66</td>
<td style="text-align: right;">1.13</td>
<td style="text-align: right;">5.2658</td>
</tr>
<tr class="odd">
<td style="text-align: right;">inf</td>
<td style="text-align: right;">4.85</td>
<td style="text-align: right;">0.0477</td>
<td style="text-align: right;">0.231345</td>
</tr>
</tbody>
</table>
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-tbl" id="tbl-light-on-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) （粗）
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display cell-output-markdown quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="tbl-light-on" style="flex-basis: 50.0%;justify-content: center;">
<div id="tbl-light-on-2" class="do-not-create-environment quarto-float anchored">
<figure class="quarto-float quarto-subfloat-tbl figure">
<div aria-describedby="tbl-light-on-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table id="tbl-light-on-2" class="do-not-create-environment table">
<thead>
<tr class="header">
<th style="text-align: right;">R (Ω)</th>
<th style="text-align: right;">U (V)</th>
<th style="text-align: right;">I (mA)</th>
<th style="text-align: right;">P (mW)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1110</td>
<td style="text-align: right;">3.75</td>
<td style="text-align: right;">3.4</td>
<td style="text-align: right;">12.75</td>
</tr>
<tr class="even">
<td style="text-align: right;">1120</td>
<td style="text-align: right;">3.77</td>
<td style="text-align: right;">3.4</td>
<td style="text-align: right;">12.818</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1130</td>
<td style="text-align: right;">3.78</td>
<td style="text-align: right;">3.4</td>
<td style="text-align: right;">12.852</td>
</tr>
<tr class="even">
<td style="text-align: right;">1140</td>
<td style="text-align: right;">3.8</td>
<td style="text-align: right;">3.4</td>
<td style="text-align: right;">12.92</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1150</td>
<td style="text-align: right;">3.81</td>
<td style="text-align: right;">3.3</td>
<td style="text-align: right;">12.573</td>
</tr>
<tr class="even">
<td style="text-align: right;">1160</td>
<td style="text-align: right;">3.83</td>
<td style="text-align: right;">3.3</td>
<td style="text-align: right;">12.639</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1170</td>
<td style="text-align: right;">3.84</td>
<td style="text-align: right;">3.3</td>
<td style="text-align: right;">12.672</td>
</tr>
<tr class="even">
<td style="text-align: right;">1180</td>
<td style="text-align: right;">3.85</td>
<td style="text-align: right;">3.3</td>
<td style="text-align: right;">12.705</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1190</td>
<td style="text-align: right;">3.86</td>
<td style="text-align: right;">3.3</td>
<td style="text-align: right;">12.738</td>
</tr>
<tr class="even">
<td style="text-align: right;">1200</td>
<td style="text-align: right;">3.87</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.384</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1210</td>
<td style="text-align: right;">3.9</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.48</td>
</tr>
<tr class="even">
<td style="text-align: right;">1220</td>
<td style="text-align: right;">3.92</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.544</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1230</td>
<td style="text-align: right;">3.93</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.576</td>
</tr>
<tr class="even">
<td style="text-align: right;">1240</td>
<td style="text-align: right;">3.94</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.608</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1250</td>
<td style="text-align: right;">3.95</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.64</td>
</tr>
<tr class="even">
<td style="text-align: right;">1260</td>
<td style="text-align: right;">3.95</td>
<td style="text-align: right;">3.2</td>
<td style="text-align: right;">12.64</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1270</td>
<td style="text-align: right;">3.96</td>
<td style="text-align: right;">3.1</td>
<td style="text-align: right;">12.276</td>
</tr>
<tr class="even">
<td style="text-align: right;">1280</td>
<td style="text-align: right;">3.97</td>
<td style="text-align: right;">3.1</td>
<td style="text-align: right;">12.307</td>
</tr>
<tr class="odd">
<td style="text-align: right;">1290</td>
<td style="text-align: right;">3.98</td>
<td style="text-align: right;">3.1</td>
<td style="text-align: right;">12.338</td>
</tr>
</tbody>
</table>
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-tbl" id="tbl-light-on-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b) （细）
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-tbl" id="tbl-light-on-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
表&nbsp;2: 太阳能电池的负载特性
</figcaption>
</figure>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots()</span>
<span id="cb4-2">fig.patch.set_alpha(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-3">ax.patch.set_alpha(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-4"></span>
<span id="cb4-5">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"U (V)"</span>)</span>
<span id="cb4-6">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I (mA)"</span>)</span>
<span id="cb4-7"></span>
<span id="cb4-8">ax.plot(U, I, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>)</span>
<span id="cb4-9">ax.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-10">ax.set_xlim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-11">ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-12"></span>
<span id="cb4-13">plt.show()</span>
<span id="cb4-14"></span>
<span id="cb4-15"></span>
<span id="cb4-16">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots()</span>
<span id="cb4-17">fig.patch.set_alpha(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-18">ax.patch.set_alpha(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-19"></span>
<span id="cb4-20">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R (Ω)"</span>)</span>
<span id="cb4-21">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P (mW)"</span>)</span>
<span id="cb4-22"></span>
<span id="cb4-23">ax.plot(R, P, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>)</span>
<span id="cb4-24">ax.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-25">ax.set_xlim((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>))</span>
<span id="cb4-26">ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-27"></span>
<span id="cb4-28">plt.show()</span></code></pre></div>
</details>
<div id="fig-light-on" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-light-on-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-light-on" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-light-on-1" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-light-on-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.sun123zxy.top/posts/20221223-quarto-test/index_files/figure-html/fig-light-on-output-1.png" data-ref-parent="fig-light-on" width="589" height="429" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-light-on-1-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) 输出电流与电压关系曲线
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-display quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-light-on" style="flex-basis: 50.0%;justify-content: flex-start;">
<div id="fig-light-on-2" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-light-on-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://blog.sun123zxy.top/posts/20221223-quarto-test/index_files/figure-html/fig-light-on-output-2.png" data-ref-parent="fig-light-on" width="602" height="429" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-light-on-2-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b) 输出功率与负载电阻关系曲线
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-light-on-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;3: 太阳能电池的负载特性
</figcaption>
</figure>
</div>
</section>
<section id="diagrams" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="diagrams"><span class="header-section-number">6</span> Diagrams</h2>
<p>Quarto 原生支持使用 GraphViz 或 Mermaid 绘制有向图或流程图．我们还额外支持基于 dvisvgm 的 TikZ 或 <code>tikzcd</code> 渲染！</p>
<div id="fig-tikzcd" class="quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-tikzcd-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="tikz">
<!--?xml version='1.0' encoding='UTF-8'?-->
<!-- This file was generated by dvisvgm 2.13.3 -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="554.0885pt" height="194.4595pt" viewbox="0 -134.11 382.13 134.11">
<g id="page1">
<g transform="matrix(1 0 0 -1 0 0)">
<path d="M112.84137 128.72608C112.84137 128.89546 112.84137 129.05483 112.67231 129.05483C112.66231 129.05483 112.51294 129.05483 112.49294 128.87546C112.46294 128.59639 112.23387 128.59639 112.16419 128.59639C111.81544 128.59639 111.467 128.74577 111.26762 128.83546C110.7595 129.05483 110.33137 129.05483 110.172 129.05483C108.50825 129.05483 106.665435 128.00889 106.665435 125.45858C106.665435 122.918582 108.46856 121.852645 110.19169 121.852645C110.71981 121.852645 111.427 121.962332 112.15419 122.40077C112.61231 122.68952 113.12044 123.18764 113.12044 123.32702C113.12044 123.46639 112.97106 123.52639 112.91137 123.52639C112.84137 123.52639 112.80169 123.49639 112.702 123.38671C112.12419 122.729207 111.23762 122.33077 110.35106 122.33077C108.80731 122.33077 108.41887 123.89483 108.41887 125.43889C108.41887 127.40108 109.13606 128.70608 110.20169 128.70608C110.94887 128.70608 112.14419 127.97889 112.48294 126.92296C112.51294 126.83327 112.54262 126.73389 112.67231 126.73389C112.84137 126.73389 112.84137 126.89327 112.84137 127.06233V128.72608ZM112.49294 127.70014C112.37325 127.86921 112.24387 127.99889 111.99481 128.25796C112.0445 128.24796 112.12419 128.24796 112.17419 128.24796C112.28356 128.24796 112.41325 128.26764 112.49294 128.31764V127.70014ZM108.95669 128.47702C108.72762 128.24796 108.07012 127.39108 108.07012 125.43889C108.07012 124.45264 108.2195 123.07796 109.11606 122.36077C107.48231 122.888582 107.014185 124.23358 107.014185 125.44889C107.014185 127.28171 108.02044 128.16827 108.95669 128.48702V128.47702Z"></path>
<path d="M116.03298 119.55171V119.95014H115.06673V129.11452H116.03298V129.51296H114.6683V119.55171H116.03298Z"></path>
<path d="M119.58722 125.05046C119.64691 125.30921 119.87597 126.22577 120.57316 126.22577C120.62316 126.22577 120.86222 126.22577 121.07129 126.09608C120.79253 126.04639 120.59316 125.79733 120.59316 125.55827C120.59316 125.39889 120.70285 125.20983 120.9716 125.20983C121.19097 125.20983 121.50972 125.38889 121.50972 125.78733C121.50972 126.30546 120.92191 126.44483 120.58316 126.44483C120.00535 126.44483 119.65691 125.91702 119.53722 125.68796C119.28816 126.34514 118.75035 126.44483 118.4616 126.44483C117.42535 126.44483 116.857847 125.15983 116.857847 124.91077C116.857847 124.81139 116.957222 124.81139 116.977222 124.81139C117.05691 124.81139 117.08691 124.83108 117.106597 124.92077C117.44535 125.97671 118.10285 126.22577 118.4416 126.22577C118.63066 126.22577 118.97941 126.13608 118.97941 125.55827C118.97941 125.24952 118.81003 124.58202 118.4416 123.18764C118.28222 122.569832 117.93347 122.151707 117.49535 122.151707C117.43535 122.151707 117.206285 122.151707 116.997222 122.281082C117.246285 122.33077 117.46535 122.540145 117.46535 122.818895C117.46535 123.08796 117.246285 123.16764 117.09691 123.16764C116.797847 123.16764 116.548785 122.908582 116.548785 122.589832C116.548785 122.131707 117.04691 121.932332 117.48535 121.932332C118.14285 121.932332 118.50128 122.629832 118.53128 122.68952C118.65066 122.321082 119.00941 121.932332 119.60691 121.932332C120.63316 121.932332 121.20066 123.21733 121.20066 123.46639C121.20066 123.56608 121.11128 123.56608 121.08128 123.56608C120.9916 123.56608 120.9716 123.52639 120.95191 123.45639C120.62316 122.39077 119.94566 122.151707 119.62691 122.151707C119.23847 122.151707 119.0791 122.470457 119.0791 122.808895C119.0791 123.02827 119.13878 123.24733 119.24847 123.68577L119.58722 125.05046Z"></path>
<path d="M123.53773 129.51296H122.173045V129.11452H123.1393V119.95014H122.173045V119.55171H123.53773V129.51296Z"></path>
<path d="M199.60601 128.33764H195.48195L194.854449 128.36733L195.193199 128.00889L195.352574 128.05858C195.412262 128.07858 195.67132 128.08858 196.13945 128.09858H200.80132L200.44289 127.73983C200.3032 127.59046 200.01445 127.35139 199.56632 127.01264C199.29726 127.12233 198.70945 127.32139 197.8032 127.63014L197.7632 127.49077C198.08195 127.34139 198.31101 127.23171 198.46039 127.16202C198.60976 127.09233 198.85882 126.95296 199.20757 126.74358C198.75945 126.39514 198.17164 126.03639 197.44445 125.64796L197.50414 125.53827C198.15164 125.76764 198.59007 125.94671 198.83914 126.06639C199.0782 126.19577 199.33695 126.33546 199.60601 126.48483L199.99445 126.21577C200.06414 126.16608 200.21382 126.03639 200.45289 125.84733C200.69195 125.64796 200.84132 125.54827 200.89101 125.55827S200.9807 125.62796 201.0107 125.74764C201.05039 125.85702 201.05039 125.96671 201.0107 126.06639C200.9907 126.17577 200.93101 126.25577 200.85132 126.32546C200.76164 126.39514 200.66195 126.45483 200.54226 126.52452C200.42289 126.59421 200.26351 126.68389 200.06414 126.79358L201.14007 127.49077H201.38914C201.42882 127.49077 201.45882 127.50077 201.48882 127.52077C201.50851 127.54046 201.45882 127.61046 201.34914 127.72983L201.0007 128.09858H204.04882C204.09851 128.09858 204.12851 128.11827 204.13851 128.13827C204.1582 128.17827 204.12851 128.22796 204.04882 128.30764L203.40132 128.93514L202.86351 128.33764H199.7257L199.98445 128.69608C200.02445 128.74577 200.02445 128.82546 199.99445 128.95514C199.95476 129.07452 199.88507 129.18421 199.79539 129.27389C199.7057 129.37358 199.54632 129.46327 199.32726 129.55264C199.10789 129.63233 198.90882 129.71202 198.71945 129.78202L198.65976 129.68233C198.94851 129.42327 199.11789 129.23389 199.17757 129.12452C199.24757 129.01483 199.30726 128.87546 199.36695 128.71608C199.42664 128.54671 199.46664 128.45702 199.49632 128.41733C199.52632 128.39733 199.55632 128.36733 199.60601 128.33764ZM195.8407 120.34858C196.04976 120.40827 196.28882 120.48796 196.53789 120.59764L196.4982 121.41452V123.74546H198.4407L198.21132 123.35702C198.04226 123.06796 197.89257 122.868895 197.7832 122.759207C197.66351 122.64952 197.51414 122.579832 197.34476 122.550145L197.68351 121.942332C197.91257 122.03202 198.22132 122.121707 198.61976 122.221395C199.0282 122.33077 199.75539 122.480457 200.80132 122.67952L200.9807 122.291082L201.10007 121.922332C201.15007 121.832957 201.18976 121.782957 201.23976 121.772957C201.28945 121.762957 201.35914 121.802957 201.44882 121.912645C201.52851 122.022019 201.56851 122.141707 201.55851 122.271082C201.54851 122.40077 201.51851 122.550145 201.44882 122.69952C201.38914 122.848895 201.0107 123.12764 200.3232 123.53608L200.23351 123.46639C200.41289 123.28702 200.56226 123.08796 200.67195 122.878895L198.12195 122.639832L198.57007 123.15764C198.61976 123.21733 198.76945 123.41671 199.00851 123.74546H202.65414V121.613582C202.65414 121.38452 202.62414 121.245145 202.56445 121.195457C202.51476 121.145457 202.42507 121.125457 202.30539 121.125457C202.18601 121.125457 201.82726 121.175457 201.21976 121.275145L201.17976 121.125457C201.6282 120.96608 201.88726 120.84671 201.96695 120.74702C202.04664 120.66733 202.09632 120.57764 202.12632 120.48796C202.15601 120.39827 202.17601 120.31858 202.19601 120.24889C202.62414 120.37858 202.9032 120.49796 203.02289 120.59764C203.13226 120.69733 203.20195 120.78702 203.24195 120.87671C203.26195 120.96608 203.28164 121.125457 203.28164 121.36452V123.60608L203.5507 123.84514C203.62039 123.90483 203.65039 123.94452 203.66039 123.95452C203.66039 123.97452 203.62039 124.01421 203.5307 124.06421L202.8732 124.49233L202.52476 123.97452H199.22757C199.35695 124.17358 199.48664 124.36296 199.61601 124.54233L199.88507 124.64202C199.95476 124.67171 199.99445 124.69171 199.99445 124.71171C200.01445 124.72171 199.97445 124.76139 199.88507 124.81139L199.49632 125.05046H202.00664V124.74139L202.16601 124.79139L202.50476 124.91077L202.66414 125.03046L202.61445 125.75764V127.06233L202.8832 127.25171L202.98289 127.33139C202.99289 127.36139 202.9332 127.40108 202.82351 127.45108L201.96695 127.78952L202.00664 126.80358V125.27952H197.20539V126.91296L197.42445 127.04264C197.52414 127.10233 197.57382 127.14202 197.56414 127.16202C197.55414 127.19202 197.51414 127.22171 197.43445 127.25171L196.59789 127.58046L196.65757 126.84327V125.50858C196.65757 125.37889 196.54789 125.24952 196.33882 125.11014L196.96632 124.61202L197.24539 125.05046H199.0482L198.99851 124.87108C198.96851 124.75139 198.81914 124.45264 198.57007 123.97452H196.63757L195.8407 124.40296L195.91039 123.35702V121.553895L195.8407 120.34858ZM204.6477 126.67389L204.9367 126.33546C205.1658 126.39514 205.3552 126.42483 205.5145 126.42483H210.1764C210.2361 126.42483 210.2758 126.43483 210.2858 126.46483S210.2858 126.52452 210.2361 126.57452L209.6283 127.15202L209.2102 126.64421H208.5527V127.87921H210.1664C210.2361 127.87921 210.2758 127.88921 210.2758 127.90921C210.2958 127.92921 210.2758 127.95889 210.2261 128.00889L209.6086 128.61639L209.1702 128.10827H208.5527V129.03483L208.8017 129.21421C208.8614 129.25389 208.8914 129.28389 208.9011 129.31358C208.9011 129.33358 208.8714 129.36358 208.8017 129.39327L207.9648 129.77202L208.0048 128.93514V128.10827H206.7595V128.97514L206.9786 129.12452C207.0483 129.17421 207.0883 129.21421 207.0883 129.23389C207.0883 129.25389 207.0386 129.28389 206.9389 129.33358L206.1717 129.71202L206.2217 128.72608V128.10827H205.4445L204.837 128.12827L205.1258 127.76983C205.1758 127.77983 205.2852 127.79952 205.4545 127.83952C205.6139 127.85952 205.7036 127.87921 205.7336 127.87921H206.2217V126.64421H205.2755L204.6477 126.67389ZM208.0048 126.64421H206.7595V127.87921H208.0048V126.64421ZM205.7536 125.82733L205.7933 124.71171V121.892645L205.7236 120.47796C205.9727 120.53796 206.1717 120.62764 206.3114 120.75702V122.799207H208.433V121.523895C208.433 121.41452 208.3633 121.344832 208.2139 121.334832S207.7058 121.36452 207.1183 121.474207V121.36452L207.5267 121.215145C207.7158 121.135457 207.8455 121.06577 207.9252 120.98608C207.9848 120.92639 208.0345 120.84671 208.0645 120.76702C208.0845 120.69733 208.1042 120.59764 208.1142 120.47796C208.5823 120.64733 208.8514 120.79702 208.9011 120.94639C208.9611 121.09577 208.9908 121.215145 208.9908 121.324832V124.99046L209.2298 125.16983C209.2995 125.21952 209.3295 125.25952 209.3395 125.28952C209.3595 125.30921 209.3095 125.35921 209.2102 125.44889L208.692 125.89702L208.3633 125.47858L206.3811 125.48858L205.7536 125.82733ZM206.3114 123.03827V124.03421H208.433V123.03827H206.3114ZM206.3114 124.27327V125.23952H208.433V124.27327H206.3114ZM208.6123 120.34858L208.672 120.22921C209.4392 120.55764 209.977 120.84671 210.3058 121.09577C210.6345 121.344832 210.9033 121.583895 211.1327 121.822957C211.3517 122.04202 211.5311 122.251082 211.6705 122.430457L211.8995 122.101707C211.9492 122.022019 212.1186 121.822957 212.3977 121.504207C212.6764 121.195457 212.9355 120.92639 213.1645 120.70733L213.3639 120.88639C213.4236 120.94639 213.5233 120.98608 213.6627 121.01608C213.812 121.04577 213.9814 121.03608 214.1908 120.98608L214.2205 121.08577C213.3839 121.583895 212.8358 121.962332 212.5867 122.231395C212.338 122.500145 212.1286 122.739207 211.9592 122.958582L212.1586 123.45639C212.2583 123.67577 212.3477 123.94452 212.4373 124.27327C212.527 124.59202 212.5967 124.89108 212.6467 125.17983C212.6964 125.46858 212.8061 126.12608 212.9555 127.16202H214.0711C214.1208 127.16202 214.1408 127.17202 214.1608 127.20202C214.1608 127.22171 214.1508 127.25171 214.1108 127.29171L213.3839 127.98889L212.9355 127.39108H211.222L211.4414 128.07858C211.4811 128.20796 211.5708 128.52671 211.7102 129.05483L211.9992 129.19421C212.0689 129.22421 212.0989 129.25389 212.1086 129.27389C212.1086 129.30389 212.0789 129.33358 212.0192 129.36358L211.1327 129.78202L211.043 129.04483C211.013 128.81577 210.9533 128.44702 210.8536 127.94889C210.7439 127.45108 210.6045 126.96296 210.4252 126.49483C210.2461 126.02639 210.1064 125.66796 209.997 125.44889C209.8873 125.20983 209.728 124.89108 209.5089 124.48264L209.6283 124.41264L210.0867 125.13014C210.1764 125.25952 210.3755 125.59827 210.6942 126.16608L210.7142 125.83733C210.7242 125.73764 210.7439 125.51858 210.7939 125.16983C210.8336 124.83108 210.8736 124.54233 210.9133 124.31327C210.9633 124.08421 211.013 123.86483 211.0927 123.65577C211.1523 123.45639 211.252 123.20733 211.3817 122.908582L211.0827 122.420457C210.993 122.271082 210.8139 122.06202 210.5648 121.802957C210.3158 121.553895 210.0767 121.324832 209.8377 121.145457C209.6183 120.94639 209.2002 120.68733 208.6123 120.34858ZM211.6505 123.48639L211.3617 124.17358C211.3117 124.28327 211.262 124.48264 211.1923 124.75139C211.1127 125.03046 211.0627 125.28952 211.013 125.52858C210.9733 125.75764 210.9233 126.07639 210.8536 126.46483L211.1327 127.17202H212.3577L212.318 126.77358L212.2383 126.04639C212.2083 125.81733 212.1386 125.45858 212.0489 124.97077C211.9592 124.49233 211.8795 124.16389 211.8298 123.97452C211.7702 123.79514 211.7102 123.63577 211.6505 123.48639Z"></path>
<path d="M223.79525 126.57452L223.51649 128.81577H218.047745V128.50671H218.286808C219.05368 128.50671 219.07368 128.39733 219.07368 128.03858V122.818895C219.07368 122.460457 219.05368 122.35077 218.286808 122.35077H218.047745V122.04202C218.396495 122.072019 219.17337 122.072019 219.56181 122.072019C219.97025 122.072019 220.87681 122.072019 221.23525 122.04202V122.35077H220.9065C219.96025 122.35077 219.96025 122.480457 219.96025 122.828895V125.27952H220.81681C221.77306 125.27952 221.87275 124.96077 221.87275 124.11389H222.12181V126.75358H221.87275C221.87275 125.91702 221.77306 125.58827 220.81681 125.58827H219.96025V128.10827C219.96025 128.43702 219.98025 128.50671 220.44837 128.50671H221.64368C223.13775 128.50671 223.38681 127.94889 223.54618 126.57452H223.79525Z"></path>
<path d="M228.0879 124.17358C228.0879 125.44889 227.09165 126.50452 225.88634 126.50452C224.64103 126.50452 223.67509 125.41889 223.67509 124.17358C223.67509 122.888582 224.71103 121.932332 225.87634 121.932332C227.08165 121.932332 228.0879 122.908582 228.0879 124.17358ZM227.26103 124.25327C227.26103 123.89483 227.26103 123.35702 227.04196 122.918582C226.82259 122.470457 226.38446 122.181395 225.88634 122.181395C225.4579 122.181395 225.01978 122.39077 224.75071 122.848895C224.50165 123.28702 224.50165 123.89483 224.50165 124.25327C224.50165 124.64202 224.50165 125.17983 224.74071 125.61796C225.00978 126.07639 225.4779 126.28546 225.87634 126.28546C226.31478 126.28546 226.7429 126.06639 227.00196 125.63796C227.26103 125.20983 227.26103 124.63202 227.26103 124.25327ZM233.7067 122.04202V122.35077C233.0092 122.35077 232.9295 122.420457 232.9295 122.908582V126.44483L231.4654 126.33546V126.02639C232.1626 126.02639 232.2423 125.95671 232.2423 125.46858V123.69546C232.2423 122.828895 231.7642 122.151707 231.037 122.151707C230.2001 122.151707 230.1604 122.619832 230.1604 123.13764V126.44483L228.696 126.33546V126.02639C229.4729 126.02639 229.4729 125.99671 229.4729 125.11014V123.61577C229.4729 122.838895 229.4729 121.932332 230.987 121.932332C231.5451 121.932332 231.9832 122.211395 232.272 122.828895V121.932332L233.7067 122.04202ZM237.5424 125.83733C237.5424 126.15608 237.2336 126.44483 236.8052 126.44483C236.078 126.44483 235.7195 125.77733 235.5799 125.34921V126.44483L234.1955 126.33546V126.02639C234.8927 126.02639 234.9724 125.95671 234.9724 125.46858V122.799207C234.9724 122.35077 234.8627 122.35077 234.1955 122.35077V122.04202L235.3308 122.072019C235.7292 122.072019 236.1977 122.072019 236.5961 122.04202V122.35077H236.3867C235.6495 122.35077 235.6299 122.460457 235.6299 122.818895V124.35296C235.6299 125.33921 236.048 126.22577 236.8052 126.22577C236.8749 126.22577 236.8949 126.22577 236.9149 126.21577C236.8849 126.20577 236.6858 126.08639 236.6858 125.82733C236.6858 125.54827 236.8949 125.39889 237.1139 125.39889C237.2933 125.39889 237.5424 125.51858 237.5424 125.83733ZM240.282 122.04202V122.35077C239.6249 122.35077 239.5849 122.40077 239.5849 122.789207V126.44483L238.1902 126.33546V126.02639C238.8377 126.02639 238.9274 125.96671 238.9274 125.47858V122.799207C238.9274 122.35077 238.818 122.35077 238.1505 122.35077V122.04202L239.2461 122.072019C239.5949 122.072019 239.9436 122.05202 240.282 122.04202ZM239.7342 128.05858C239.7342 128.32764 239.5052 128.58639 239.2064 128.58639C238.8677 128.58639 238.6683 128.30764 238.6683 128.05858C238.6683 127.78952 238.8977 127.53077 239.1964 127.53077C239.5352 127.53077 239.7342 127.80952 239.7342 128.05858ZM244.725 123.22733C244.725 123.32702 244.6453 123.34702 244.5956 123.34702C244.5059 123.34702 244.4859 123.28702 244.4663 123.20733C244.1175 122.181395 243.2209 122.181395 243.1213 122.181395C242.6234 122.181395 242.225 122.480457 241.9959 122.848895C241.6969 123.32702 241.6969 123.98452 241.6969 124.34296H244.4763C244.6953 124.34296 244.725 124.34296 244.725 124.55233C244.725 125.53827 244.1872 126.50452 242.9422 126.50452C241.7866 126.50452 240.8703 125.47858 240.8703 124.23358C240.8703 122.898582 241.9159 121.932332 243.0616 121.932332C244.2769 121.932332 244.725 123.03827 244.725 123.22733ZM244.0678 124.55233H241.7069C241.7666 126.03639 242.6034 126.28546 242.9422 126.28546C243.9681 126.28546 244.0678 124.94077 244.0678 124.55233ZM248.6406 125.83733C248.6406 126.15608 248.3318 126.44483 247.9034 126.44483C247.1762 126.44483 246.8177 125.77733 246.6781 125.34921V126.44483L245.2937 126.33546V126.02639C245.9909 126.02639 246.0706 125.95671 246.0706 125.46858V122.799207C246.0706 122.35077 245.9609 122.35077 245.2937 122.35077V122.04202L246.429 122.072019C246.8274 122.072019 247.2959 122.072019 247.6943 122.04202V122.35077H247.4849C246.7477 122.35077 246.7281 122.460457 246.7281 122.818895V124.35296C246.7281 125.33921 247.1462 126.22577 247.9034 126.22577C247.9731 126.22577 247.9931 126.22577 248.0131 126.21577C247.9831 126.20577 247.784 126.08639 247.784 125.82733C247.784 125.54827 247.9931 125.39889 248.2121 125.39889C248.3915 125.39889 248.6406 125.51858 248.6406 125.83733Z"></path>
<path d="M254.50122 127.53077L254.39153 127.22171C254.30184 126.97296 254.14247 126.65421 253.9134 126.26546C253.69434 125.87702 253.49497 125.55827 253.32559 125.30921C253.156528 125.06014 252.917466 124.72171 252.608403 124.30327L252.708091 124.21358C252.997153 124.46264 253.2859 124.75139 253.59465 125.09014C253.8934 125.40889 254.12278 125.67796 254.28215 125.88702C254.44153 126.08639 254.66059 126.37514 254.93934 126.76358L255.2284 126.86327C255.30809 126.89327 255.34778 126.92296 255.34778 126.94296C255.35778 126.95296 255.31809 126.98264 255.2484 127.03264L254.50122 127.53077ZM256.86184 122.33077C256.13465 121.822957 255.43747 121.464207 254.75028 121.275145C254.07278 121.08577 253.39559 120.91639 252.728091 120.76702L252.748091 120.61764C253.9334 120.74702 254.84965 120.94639 255.50715 121.195457C256.17465 121.444207 256.75247 121.71327 257.25059 121.982332C257.7384 121.69327 258.25653 121.454207 258.82434 121.255145C259.39215 121.05577 260.07934 120.87671 260.88622 120.72702L260.9859 121.00608C261.0159 121.175457 261.28465 121.294832 261.78278 121.37452V121.494207C261.17528 121.484207 260.58747 121.523895 259.98965 121.593895C259.41215 121.663582 258.93403 121.772957 258.59528 121.902645C258.23653 122.04202 257.94778 122.171395 257.71872 122.291082C258.4259 122.96827 259.0334 123.61577 259.54153 124.24358L259.83028 124.36296C259.92997 124.40296 259.97997 124.43264 259.98965 124.45264C259.99965 124.46264 259.94997 124.51233 259.86028 124.58202L259.22278 125.11014L258.76465 124.66171H255.26809L254.34184 124.68171L254.78997 124.27327C254.97934 124.37296 255.1784 124.42264 255.36778 124.42264H255.58684C255.77622 123.92483 255.91559 123.59608 256.00528 123.42671C256.08497 123.25733 256.20465 123.08796 256.35403 122.898582C256.5034 122.70952 256.67278 122.520145 256.86184 122.33077ZM257.22059 122.609832C256.79215 122.918582 256.4834 123.20733 256.30403 123.47639C256.12497 123.75546 256.01528 123.94452 255.96559 124.04421C255.92559 124.14389 255.8759 124.27327 255.8259 124.42264H258.75465C258.37622 123.80514 258.06715 123.38671 257.82809 123.15764C257.58903 122.938582 257.38997 122.759207 257.22059 122.609832ZM252.857466 128.28764L253.2959 127.85952L253.51497 127.95889C253.61465 128.01889 253.86372 128.04858 254.25215 128.04858H255.94559V126.04639L255.8859 124.92077C256.15465 124.97077 256.39372 125.05046 256.60309 125.14983L256.55309 126.07639V128.04858H258.04747V126.14608L257.97778 125.07014C258.30622 125.17983 258.48559 125.23952 258.53559 125.26952C258.58528 125.30921 258.63497 125.33921 258.68497 125.37889L258.63497 126.26546V128.04858H261.50403C261.55372 128.04858 261.57372 128.05858 261.57372 128.07858C261.57372 128.10827 261.56372 128.12827 261.54372 128.15827L260.77684 128.89546L260.3084 128.26764H253.72434L252.857466 128.28764ZM256.55309 129.65233C256.74247 129.48296 256.87184 129.32358 256.93184 129.17421C256.99153 129.02483 257.04122 128.89546 257.07122 128.75577C257.1009 128.63639 257.1309 128.53671 257.1509 128.47702C257.1709 128.40733 257.20059 128.36733 257.24059 128.34733C257.31028 128.31764 257.36997 128.32764 257.43965 128.37733C257.51934 128.43702 257.56934 128.49702 257.60903 128.55671C257.69872 128.70608 257.7384 128.82546 257.71872 128.93514C257.70872 129.04483 257.60903 129.17421 257.41965 129.32358C257.24059 129.47296 256.97153 129.61264 256.61309 129.74202L256.55309 129.65233ZM259.17309 127.12233C259.45184 126.93296 259.7109 126.74358 259.94997 126.53452C260.18903 126.32546 260.3684 126.13608 260.48778 125.95671C260.59747 125.77733 260.72684 125.57827 260.86653 125.35921C260.9659 125.18983 261.04559 125.10014 261.10559 125.11014C261.16528 125.11014 261.22497 125.13014 261.28465 125.17983C261.33465 125.22952 261.37434 125.31921 261.40434 125.45858C261.43403 125.60827 261.44403 125.72764 261.42434 125.82733C261.39434 125.93671 261.35434 126.02639 261.28465 126.10608C261.21497 126.18577 261.06559 126.29546 260.83653 126.44483C260.60747 126.59421 260.38809 126.71389 260.19903 126.80358C260.00965 126.90296 259.6909 127.04264 259.24278 127.21202L259.17309 127.12233ZM264.2147 125.04046C263.5272 124.73139 262.9397 124.51233 262.4516 124.37296L262.9197 123.69546C263.2585 123.99452 263.6869 124.27327 264.2147 124.54233V121.673582C264.2147 121.543895 264.1947 121.464207 264.135 121.42452C264.095 121.37452 263.926 121.37452 263.6569 121.42452L262.9197 121.523895L262.9097 121.39452C263.3282 121.255145 263.5772 121.145457 263.6569 121.06577C263.7266 120.98608 263.7763 120.90639 263.7963 120.82671C263.8063 120.73702 263.8063 120.63733 263.7863 120.50796C264.095 120.59764 264.2944 120.66733 264.4138 120.74702C264.5135 120.80671 264.6032 120.90639 264.6729 121.01608C264.7325 121.125457 264.7625 121.255145 264.7625 121.38452V124.91077L265.8185 125.51858L265.7588 125.63796L264.7625 125.23952V127.23171L266.1472 127.24171C266.1769 127.24171 266.2069 127.25171 266.2169 127.28171C266.2269 127.31139 266.1969 127.36139 266.1272 127.44108L265.6391 127.97889L265.161 127.43108H264.7625V128.94514L265.0116 129.10452C265.0813 129.15421 265.1113 129.19421 265.1113 129.21421C265.1013 129.25389 265.0813 129.27389 265.0316 129.29389L264.155 129.64233L264.2147 128.41733V127.43108H263.5972L262.571 127.45108L262.9297 127.10233L263.1191 127.18202C263.1488 127.19202 263.3582 127.21202 263.7466 127.24171H264.2147V125.04046ZM265.1013 123.83514L265.5097 123.40671C265.7885 123.51639 266.1372 123.57608 266.5657 123.57608H267.761L267.6813 123.23733C267.6713 123.20733 267.6413 123.12764 267.5816 122.97827C267.5219 122.838895 267.4619 122.71952 267.4222 122.619832C267.3625 122.510145 267.2529 122.35077 267.0635 122.121707C266.8744 121.892645 266.6254 121.663582 266.3066 121.42452C265.9879 121.175457 265.44 120.90639 264.6729 120.59764L264.7229 120.43827C265.7288 120.74702 266.476 121.08577 266.9641 121.444207C267.4522 121.812957 267.781 122.171395 267.9404 122.540145C268.0897 122.908582 268.2191 123.24733 268.3188 123.57608H268.4982L268.6075 123.24733C268.6475 123.08796 268.7172 122.888582 268.8366 122.65952C268.9363 122.420457 269.0657 122.201395 269.1954 121.982332C269.3347 121.782957 269.5241 121.563895 269.7532 121.334832C269.9822 121.10577 270.1616 120.95639 270.291 120.86671C270.4207 120.78702 270.58 120.69733 270.7791 120.59764L270.8988 120.80671C270.9685 120.95639 271.2275 121.05577 271.6657 121.11577L271.6757 121.235145C271.0582 121.324832 270.55 121.504207 270.1516 121.762957C269.7632 122.04202 269.5041 122.251082 269.3944 122.420457C269.275 122.589832 269.1754 122.749207 269.0757 122.898582C268.996 123.04796 268.9263 123.15764 268.8966 123.23733C268.8666 123.29702 268.8169 123.41671 268.7569 123.57608H271.6757C271.7254 123.57608 271.7654 123.58608 271.7854 123.61577C271.795 123.64577 271.7854 123.67577 271.7454 123.72546L271.0879 124.35296L270.6497 123.81514H270.52V126.06639L270.7991 126.29546C270.8388 126.32546 270.8588 126.35514 270.8688 126.36514C270.8688 126.37514 270.8191 126.42483 270.7094 126.51452L270.1816 126.92296L269.8725 126.49483H268.4085L269.5738 127.89921L270.0222 128.02858C270.0619 128.03858 270.0919 128.05858 270.1019 128.08858C270.1116 128.11827 270.1019 128.15827 270.0519 128.19796L269.3647 128.74577L269.036 128.32764H267.6513C267.8407 128.59639 268.02 128.83546 268.1891 129.04483L268.3585 129.11452C268.4382 129.14452 268.4782 129.17421 268.4882 129.21421C268.4982 129.24389 268.4782 129.27389 268.4382 129.30389L267.6213 129.74202L267.5516 129.51296C267.5219 129.38358 267.4422 129.18421 267.3125 128.89546C267.1832 128.59639 266.9938 128.25796 266.725 127.83952C266.456 127.44108 266.2469 127.12233 266.0775 126.90296C265.9082 126.69389 265.6791 126.40514 265.38 126.04639L265.4897 125.94671L266.1769 126.61421V123.81514H265.8882L265.1013 123.83514ZM266.2966 126.72389L266.7647 127.24171C266.8644 127.35139 267.1035 127.65014 267.4819 128.11827H269.056C268.7669 127.59046 268.4482 127.04264 268.0997 126.49483H266.7547L266.2966 126.72389ZM266.725 123.81514V126.27546H267.99L267.96 125.49858C267.95 125.39889 267.9404 125.19983 267.9204 124.91077C267.9104 124.62202 267.8904 124.41264 267.8804 124.29327C267.8704 124.18358 267.8407 124.02421 267.8107 123.81514H266.725ZM268.3785 123.81514L268.4085 124.09389C268.4185 124.13389 268.4382 124.36296 268.4582 124.78139C268.4982 125.19983 268.5079 125.45858 268.5179 125.54827C268.5279 125.64796 268.5379 125.88702 268.5479 126.27546H269.9822V123.81514H268.3785Z"></path>
<path d="M341.43039 128.72608C341.43039 128.89546 341.43039 129.05483 341.26133 129.05483C341.25133 129.05483 341.10195 129.05483 341.08195 128.87546C341.05195 128.59639 340.82289 128.59639 340.7532 128.59639C340.40445 128.59639 340.05601 128.74577 339.85664 128.83546C339.34851 129.05483 338.92039 129.05483 338.76101 129.05483C337.09726 129.05483 335.254452 128.00889 335.254452 125.45858C335.254452 122.918582 337.05758 121.852645 338.7807 121.852645C339.30883 121.852645 340.01601 121.962332 340.7432 122.40077C341.20133 122.68952 341.70945 123.18764 341.70945 123.32702C341.70945 123.46639 341.56008 123.52639 341.50039 123.52639C341.43039 123.52639 341.3907 123.49639 341.29101 123.38671C340.7132 122.729207 339.82664 122.33077 338.94008 122.33077C337.39633 122.33077 337.00789 123.89483 337.00789 125.43889C337.00789 127.40108 337.72508 128.70608 338.7907 128.70608C339.53789 128.70608 340.7332 127.97889 341.07195 126.92296C341.10195 126.83327 341.13164 126.73389 341.26133 126.73389C341.43039 126.73389 341.43039 126.89327 341.43039 127.06233V128.72608ZM341.08195 127.70014C340.96226 127.86921 340.83289 127.99889 340.58383 128.25796C340.63351 128.24796 340.7132 128.24796 340.7632 128.24796C340.87258 128.24796 341.00226 128.26764 341.08195 128.31764V127.70014ZM337.5457 128.47702C337.31664 128.24796 336.65914 127.39108 336.65914 125.43889C336.65914 124.45264 336.80851 123.07796 337.70508 122.36077C336.07133 122.888582 335.603202 124.23358 335.603202 125.44889C335.603202 127.28171 336.60945 128.16827 337.5457 128.48702V128.47702Z"></path>
<path d="M346.66352 130.3373C346.66352 130.45574 346.66352 130.5673 346.54508 130.5673C346.5379 130.5673 346.43352 130.5673 346.41946 130.44199C346.39852 130.24667 346.23821 130.24667 346.18915 130.24667C345.94508 130.24667 345.70102 130.35105 345.56165 130.41386C345.20571 130.5673 344.90602 130.5673 344.79415 130.5673C343.62946 130.5673 342.339145 129.83511 342.339145 128.04949C342.339145 126.270735 343.60165 125.524485 344.80821 125.524485C345.1779 125.524485 345.67321 125.601048 346.18227 125.908235C346.50321 126.110423 346.85883 126.459173 346.85883 126.556673C346.85883 126.654485 346.75415 126.69636 346.71227 126.69636C346.66352 126.69636 346.63571 126.67542 346.56602 126.598548C346.16133 126.138235 345.54071 125.859173 344.91977 125.859173C343.83883 125.859173 343.56665 126.95449 343.56665 128.03542C343.56665 129.40949 344.06883 130.32323 344.81508 130.32323C345.33821 130.32323 346.1754 129.81417 346.41258 129.0748C346.43352 129.01199 346.45446 128.9423 346.54508 128.9423C346.66352 128.9423 346.66352 129.05386 346.66352 129.1723V130.3373ZM346.41946 129.61886C346.33571 129.7373 346.24508 129.82792 346.07071 130.00949C346.10571 130.0023 346.16133 130.0023 346.19633 130.0023C346.2729 130.0023 346.36352 130.01636 346.41946 130.05136V129.61886ZM343.94321 130.16292C343.7829 130.0023 343.32258 129.40261 343.32258 128.03542C343.32258 127.3448 343.42727 126.382298 344.05508 125.88011C342.91102 126.249798 342.583208 127.19136 342.583208 128.0423C342.583208 129.32574 343.28758 129.94667 343.94321 130.1698V130.16292Z"></path>
<path d="M14.37666 88.80038H15.23353C15.4326 88.80038 15.53228 88.80038 15.53228 88.99976C15.53228 89.10945 15.4326 89.10945 15.26322 89.10945H14.43666L14.64572 90.24476C14.68572 90.45413 14.8251 91.16132 14.88478 91.2807C14.97447 91.47007 15.14385 91.61945 15.35291 91.61945C15.39291 91.61945 15.65197 91.61945 15.84103 91.44007C15.40291 91.40038 15.30322 91.05163 15.30322 90.90226C15.30322 90.6732 15.4826 90.55382 15.67166 90.55382C15.93072 90.55382 16.21947 90.77288 16.21947 91.15132C16.21947 91.60945 15.76135 91.83882 15.35291 91.83882C15.01447 91.83882 14.38666 91.65945 14.08791 90.6732C14.02822 90.46413 13.99822 90.36445 13.75916 89.10945H13.07197C12.8826 89.10945 12.77291 89.10945 12.77291 88.92007C12.77291 88.80038 12.8626 88.80038 13.05197 88.80038H13.70947L12.96228 84.865696C12.78291 83.899446 12.61353 82.9932 12.09572 82.9932C12.05572 82.9932 11.80666 82.9932 11.617596 83.17226C12.07572 83.20226 12.16541 83.56101 12.16541 83.71038C12.16541 83.939446 11.98603 84.058821 11.79697 84.058821C11.537908 84.058821 11.248846 83.839758 11.248846 83.46132C11.248846 83.01288 11.687283 82.77382 12.09572 82.77382C12.64353 82.77382 13.04197 83.36163 13.22135 83.74007C13.5401 84.367883 13.76916 85.573196 13.77916 85.642883L14.37666 88.80038Z"></path>
<path d="M19.96821 82.42538C19.96821 82.45507 19.96821 82.47507 19.79883 82.64445C18.55383 83.899446 18.23508 85.782258 18.23508 87.30632C18.23508 89.03945 18.61352 90.77288 19.83883 92.01788C19.96821 92.13757 19.96821 92.15757 19.96821 92.18726C19.96821 92.25695 19.92821 92.28695 19.86852 92.28695C19.76883 92.28695 18.87258 91.60945 18.28477 90.34445C17.77664 89.24882 17.657268 88.1432 17.657268 87.30632C17.657268 86.52945 17.76664 85.324133 18.31477 84.198508C18.91227 82.9732 19.76883 82.3257 19.86852 82.3257C19.92821 82.3257 19.96821 82.3557 19.96821 82.42538Z"></path>
<path d="M23.87223 87.82445C23.93191 88.0832 24.16098 88.99976 24.85816 88.99976C24.90816 88.99976 25.14723 88.99976 25.35629 88.87007C25.07754 88.82038 24.87816 88.57132 24.87816 88.33226C24.87816 88.17288 24.98785 87.98382 25.2566 87.98382C25.47598 87.98382 25.79473 88.16288 25.79473 88.56132C25.79473 89.07945 25.20691 89.21882 24.86816 89.21882C24.29035 89.21882 23.94191 88.69101 23.82223 88.46195C23.57316 89.11913 23.03535 89.21882 22.7466 89.21882C21.71035 89.21882 21.14285 87.93382 21.14285 87.68476C21.14285 87.58538 21.242225 87.58538 21.262225 87.58538C21.341913 87.58538 21.371913 87.60507 21.3916 87.69476C21.73035 88.7507 22.38785 88.99976 22.7266 88.99976C22.91566 88.99976 23.26441 88.91007 23.26441 88.33226C23.26441 88.02351 23.09504 87.35601 22.7266 85.96163C22.56723 85.343821 22.21848 84.925696 21.78035 84.925696C21.72035 84.925696 21.491288 84.925696 21.282225 85.055071C21.531288 85.104758 21.75035 85.314133 21.75035 85.592883C21.75035 85.86195 21.531288 85.94163 21.381913 85.94163C21.08285 85.94163 20.833788 85.682571 20.833788 85.363821C20.833788 84.905696 21.331913 84.706321 21.77035 84.706321C22.42785 84.706321 22.78629 85.403821 22.81629 85.463508C22.93566 85.095071 23.29441 84.706321 23.89191 84.706321C24.91816 84.706321 25.48566 85.99132 25.48566 86.24038C25.48566 86.34007 25.39629 86.34007 25.36629 86.34007C25.2766 86.34007 25.2566 86.30038 25.23691 86.23038C24.90816 85.164758 24.23066 84.925696 23.91191 84.925696C23.52348 84.925696 23.3641 85.244446 23.3641 85.582883C23.3641 85.802258 23.42379 86.02132 23.53348 86.45976L23.87223 87.82445Z"></path>
<path d="M29.11774 87.30632C29.11774 88.0832 29.00836 89.28851 28.46024 90.41413C27.86274 91.63945 27.005861 92.28695 26.906486 92.28695C26.846486 92.28695 26.806798 92.24695 26.806798 92.18726C26.806798 92.15757 26.806798 92.13757 26.996173 91.9582C27.97211 90.97195 28.53992 89.3882 28.53992 87.30632C28.53992 85.602883 28.17149 83.849758 26.936173 82.59476C26.806798 82.47507 26.806798 82.45507 26.806798 82.42538C26.806798 82.3657 26.846486 82.3257 26.906486 82.3257C27.005861 82.3257 27.90242 83.0032 28.49024 84.268196C28.99836 85.363821 29.11774 86.46945 29.11774 87.30632Z"></path>
<path d="M97.00674 86.96865L93.47049 82.59583C93.390803 82.49615 93.380803 82.47615 93.380803 82.43646C93.380803 82.32677 93.47049 82.32677 93.649865 82.32677H101.90768L102.76424 84.80708H102.51518C102.26612 84.06021 101.59893 83.4524 100.75205 83.16365C100.59268 83.11365 99.90549 82.87458 98.44112 82.87458H94.20768L97.66424 87.14802C97.73393 87.23771 97.75362 87.26771 97.75362 87.3074C97.75362 87.3474 97.74393 87.35708 97.68393 87.44677L94.44674 91.889584H98.39143C99.52674 91.889584 101.81799 91.819896 102.51518 89.95708H102.76424L101.90768 92.288021H93.649865C93.380803 92.288021 93.370803 92.278021 93.370803 91.969271L97.00674 86.96865Z"></path>
<path d="M104.1809 90.264359C104.153088 90.173734 104.111213 89.999359 104.111213 89.978422C104.111213 89.824984 104.236838 89.755297 104.3484 89.755297C104.47371 89.755297 104.58559 89.845922 104.62028 89.908734C104.65528 89.971547 104.7109 90.194672 104.7459 90.341234C104.7809 90.473734 104.85746 90.794359 104.89934 90.96873C104.94121 91.12248 104.98309 91.27592 105.01778 91.43623C105.09465 91.72217 105.10871 91.77811 105.3109 92.06405C105.50621 92.34311 105.83403 92.70561 106.35715 92.70561C106.76153 92.70561 106.76871 92.34998 106.76871 92.21748C106.76871 91.79905 106.46871 91.02467 106.35715 90.731859C106.28028 90.536547 106.25246 90.473734 106.25246 90.354984C106.25246 89.985297 106.55934 89.755297 106.91496 89.755297C107.61246 89.755297 107.91965 90.717797 107.91965 90.822484C107.91965 90.91311 107.82871 90.91311 107.80778 90.91311C107.71028 90.91311 107.7034 90.87123 107.67528 90.794359C107.51496 90.236547 107.21496 89.950609 106.9359 89.950609C106.78965 89.950609 106.76153 90.048109 106.76153 90.194672C106.76153 90.354984 106.79653 90.445609 106.92215 90.759672C107.0059 90.97592 107.29184 91.7153 107.29184 92.10592C107.29184 92.78248 106.75465 92.90092 106.38496 92.90092C105.80621 92.90092 105.41559 92.5453 105.20621 92.26623C105.15746 92.74748 104.7459 92.90092 104.45996 92.90092C104.159963 92.90092 103.99965 92.68467 103.909025 92.52436C103.755588 92.26623 103.657775 91.86873 103.657775 91.83373C103.657775 91.74311 103.755588 91.74311 103.776213 91.74311C103.874025 91.74311 103.8809 91.76405 103.929963 91.95248C104.034338 92.36373 104.166838 92.70561 104.43903 92.70561C104.62028 92.70561 104.66903 92.55217 104.66903 92.36373C104.66903 92.23123 104.60653 91.97342 104.55746 91.78498C104.50871 91.59655 104.43903 91.31061 104.40403 91.15717L104.1809 90.264359Z"></path>
<path d="M113.44337 91.40123C113.55494 91.40123 113.72244 91.40123 113.72244 91.56873C113.72244 91.74311 113.56212 91.74311 113.44337 91.74311H109.28619C109.174623 91.74311 109.007436 91.74311 109.007436 91.57561C109.007436 91.40123 109.167749 91.40123 109.28619 91.40123H113.44337Z"></path>
<path d="M116.81755 94.26123C116.81755 94.44936 116.8038 94.45623 116.60849 94.45623C116.16193 94.01686 115.52724 94.00998 115.241302 94.00998V93.75873C115.408802 93.75873 115.86911 93.75873 116.25255 93.95405V90.396859C116.25255 90.166859 116.25255 90.076234 115.55505 90.076234H115.290052V89.824984C115.415677 89.831859 116.27349 89.852797 116.53161 89.852797C116.74787 89.852797 117.62661 89.831859 117.78005 89.824984V90.076234H117.51505C116.81755 90.076234 116.81755 90.166859 116.81755 90.396859V94.26123Z"></path>
<path d="M105.58996 86.1864C105.58996 86.29796 105.50621 86.4514 105.3109 86.4514C105.12246 86.4514 104.92028 86.27015 104.92028 86.06796C104.92028 85.94921 105.0109 85.80265 105.19934 85.80265C105.40153 85.80265 105.58996 85.99796 105.58996 86.1864ZM104.166838 82.64296C104.139026 82.552335 104.104338 82.468585 104.104338 82.350148C104.104338 82.022335 104.38309 81.757335 104.76684 81.757335C105.46434 81.757335 105.77121 82.719835 105.77121 82.824523C105.77121 82.91515 105.68059 82.91515 105.65965 82.91515C105.56184 82.91515 105.55496 82.87327 105.52715 82.796398C105.36653 82.238585 105.05965 81.952648 104.78778 81.952648C104.64809 81.952648 104.6134 82.043273 104.6134 82.19671C104.6134 82.357023 104.66215 82.489523 104.72496 82.64296C104.79465 82.8314 104.87153 83.01984 104.94809 83.20109C105.0109 83.36859 105.26215 84.00327 105.28996 84.08702C105.3109 84.15671 105.33184 84.24046 105.33184 84.31015C105.33184 84.63796 105.05278 84.90296 104.66903 84.90296C103.978713 84.90296 103.657776 83.95452 103.657776 83.83577C103.657776 83.74515 103.755588 83.74515 103.776213 83.74515C103.874026 83.74515 103.880901 83.78015 103.901838 83.85671C104.083401 84.45671 104.39028 84.70765 104.64809 84.70765C104.75996 84.70765 104.82246 84.65202 104.82246 84.46358C104.82246 84.30327 104.7809 84.19859 104.60653 83.76609L104.166838 82.64296Z"></path>
<path d="M111.50488 84.17077C111.60957 84.17077 111.76988 84.17077 111.76988 84.34515C111.76988 84.51234 111.60238 84.51234 111.51176 84.51234H106.894259C106.803634 84.51234 106.636134 84.51234 106.636134 84.34515C106.636134 84.17077 106.796759 84.17077 106.901447 84.17077H111.50488ZM111.51176 82.636085C111.60238 82.636085 111.76988 82.636085 111.76988 82.803585C111.76988 82.97796 111.60957 82.97796 111.50488 82.97796H106.901447C106.796759 82.97796 106.636134 82.97796 106.636134 82.803585C106.636134 82.636085 106.803634 82.636085 106.894259 82.636085H111.51176ZM115.86309 84.05202C115.86309 84.81921 115.77246 85.37046 115.45152 85.85859C115.23528 86.17952 114.80277 86.45827 114.24496 86.45827C112.62684 86.45827 112.62684 84.55421 112.62684 84.05202C112.62684 83.54984 112.62684 81.687648 114.24496 81.687648C115.86309 81.687648 115.86309 83.54984 115.86309 84.05202ZM114.24496 81.88296C113.92403 81.88296 113.49871 82.071085 113.35903 82.64296C113.26152 83.05452 113.26152 83.62671 113.26152 84.14265C113.26152 84.65202 113.26152 85.18202 113.36621 85.56577C113.51246 86.11671 113.95903 86.26327 114.24496 86.26327C114.62153 86.26327 114.98434 86.03296 115.10996 85.62827C115.22153 85.25171 115.2284 84.74952 115.2284 84.14265C115.2284 83.62671 115.2284 83.11046 115.13777 82.671085C114.99809 82.036398 114.52403 81.88296 114.24496 81.88296Z"></path>
<path d="M124.32659 88.58132C124.14722 88.94976 123.85847 89.21882 123.41003 89.21882C122.24472 89.21882 121.009405 87.75445 121.009405 86.30038C121.009405 85.363821 121.557218 84.706321 122.33441 84.706321C122.53347 84.706321 123.03159 84.746321 123.62909 85.453508C123.70878 85.035071 124.05753 84.706321 124.53566 84.706321C124.88441 84.706321 125.11347 84.935696 125.27284 85.254446C125.44222 85.612883 125.57159 86.2207 125.57159 86.24038C125.57159 86.34007 125.48191 86.34007 125.45222 86.34007C125.35253 86.34007 125.34253 86.30038 125.31253 86.1607C125.14347 85.513196 124.96409 84.925696 124.55566 84.925696C124.28659 84.925696 124.25691 85.184446 124.25691 85.383821C124.25691 85.602883 124.27659 85.682571 124.38628 86.12101C124.49597 86.53945 124.51566 86.63882 124.60534 87.01757L124.96409 88.41195C125.03378 88.69101 125.03378 88.7107 125.03378 88.7507C125.03378 88.92007 124.91409 89.01976 124.74472 89.01976C124.50566 89.01976 124.35628 88.80038 124.32659 88.58132ZM123.67909 86.00132C123.62909 85.82195 123.62909 85.802258 123.47972 85.632883C123.04159 85.085071 122.63316 84.925696 122.35409 84.925696C121.85597 84.925696 121.71659 85.473508 121.71659 85.86195C121.71659 86.36007 122.03534 87.58538 122.26441 88.04351C122.57347 88.63101 123.02159 88.99976 123.42003 88.99976C124.06753 88.99976 124.20691 88.18288 124.20691 88.1232C124.20691 88.06351 124.18691 88.00351 124.17722 87.95382L123.67909 86.00132Z"></path>
<path d="M128.13704 87.68036C128.13704 87.79192 128.05329 87.94536 127.85798 87.94536C127.66954 87.94536 127.46735 87.76411 127.46735 87.56192C127.46735 87.44317 127.55798 87.29661 127.74641 87.29661C127.9486 87.29661 128.13704 87.49192 128.13704 87.68036ZM126.713914 84.136924C126.686101 84.046299 126.651414 83.962549 126.651414 83.844111C126.651414 83.516299 126.93016 83.251299 127.31391 83.251299C128.01141 83.251299 128.31829 84.213799 128.31829 84.318486C128.31829 84.40911 128.22766 84.40911 128.20673 84.40911C128.10891 84.40911 128.10204 84.36724 128.07423 84.290361C127.9136 83.732549 127.60673 83.446611 127.33485 83.446611C127.19516 83.446611 127.16048 83.537236 127.16048 83.690674C127.16048 83.850986 127.20923 83.983486 127.27204 84.136924C127.34173 84.32536 127.4186 84.5138 127.49516 84.69505C127.55798 84.86255 127.80923 85.49724 127.83704 85.58099C127.85798 85.65067 127.87891 85.73442 127.87891 85.80411C127.87891 86.13192 127.59985 86.39692 127.2161 86.39692C126.525789 86.39692 126.204851 85.44849 126.204851 85.32974C126.204851 85.23911 126.302664 85.23911 126.323289 85.23911C126.421101 85.23911 126.427976 85.27411 126.448914 85.35067C126.630476 85.95067 126.93735 86.20161 127.19516 86.20161C127.30704 86.20161 127.36954 86.14599 127.36954 85.95755C127.36954 85.79724 127.32798 85.69255 127.1536 85.26005L126.713914 84.136924Z"></path>
<path d="M132.52121 87.82445C132.5809 88.0832 132.80996 88.99976 133.50715 88.99976C133.55715 88.99976 133.79621 88.99976 134.00528 88.87007C133.72653 88.82038 133.52715 88.57132 133.52715 88.33226C133.52715 88.17288 133.63684 87.98382 133.90559 87.98382C134.12496 87.98382 134.44371 88.16288 134.44371 88.56132C134.44371 89.07945 133.8559 89.21882 133.51715 89.21882C132.93934 89.21882 132.5909 88.69101 132.47121 88.46195C132.22215 89.11913 131.68434 89.21882 131.39559 89.21882C130.35934 89.21882 129.79184 87.93382 129.79184 87.68476C129.79184 87.58538 129.891215 87.58538 129.911215 87.58538C129.990902 87.58538 130.020902 87.60507 130.04059 87.69476C130.37934 88.7507 131.03684 88.99976 131.37559 88.99976C131.56465 88.99976 131.9134 88.91007 131.9134 88.33226C131.9134 88.02351 131.74403 87.35601 131.37559 85.96163C131.21621 85.343821 130.86746 84.925696 130.42934 84.925696C130.36934 84.925696 130.140277 84.925696 129.931215 85.055071C130.180277 85.104758 130.39934 85.314133 130.39934 85.592883C130.39934 85.86195 130.180277 85.94163 130.030902 85.94163C129.73184 85.94163 129.482777 85.682571 129.482777 85.363821C129.482777 84.905696 129.980902 84.706321 130.41934 84.706321C131.07684 84.706321 131.43528 85.403821 131.46528 85.463508C131.58465 85.095071 131.9434 84.706321 132.5409 84.706321C133.56715 84.706321 134.13465 85.99132 134.13465 86.24038C134.13465 86.34007 134.04528 86.34007 134.01528 86.34007C133.92559 86.34007 133.90559 86.30038 133.8859 86.23038C133.55715 85.164758 132.87965 84.925696 132.5609 84.925696C132.17246 84.925696 132.01309 85.244446 132.01309 85.582883C132.01309 85.802258 132.07278 86.02132 132.18246 86.45976L132.52121 87.82445Z"></path>
<path d="M137.14798 92.79035C137.14798 92.90191 137.06423 93.05535 136.86891 93.05535C136.68048 93.05535 136.47829 92.8741 136.47829 92.67191C136.47829 92.55316 136.56891 92.4066 136.75735 92.4066C136.95954 92.4066 137.14798 92.60191 137.14798 92.79035ZM135.72485 89.246911C135.697038 89.156286 135.66235 89.072536 135.66235 88.954099C135.66235 88.626286 135.9411 88.361286 136.32485 88.361286C137.02235 88.361286 137.32923 89.323786 137.32923 89.428474C137.32923 89.5191 137.2386 89.5191 137.21766 89.5191C137.11985 89.5191 137.11298 89.47722 137.08516 89.400349C136.92454 88.842536 136.61766 88.556599 136.34579 88.556599C136.2061 88.556599 136.17141 88.647224 136.17141 88.800661C136.17141 88.960974 136.22016 89.093474 136.28298 89.246911C136.35266 89.43535 136.42954 89.62379 136.5061 89.80504C136.56891 89.97254 136.82016 90.60722 136.84798 90.69097C136.86891 90.76066 136.88985 90.84441 136.88985 90.9141C136.88985 91.24191 136.61079 91.50691 136.22704 91.50691C135.536725 91.50691 135.215788 90.55847 135.215788 90.43972C135.215788 90.3491 135.3136 90.3491 135.334225 90.3491C135.432038 90.3491 135.438913 90.3841 135.45985 90.46066C135.641413 91.06066 135.94829 91.3116 136.2061 91.3116C136.31798 91.3116 136.38048 91.25597 136.38048 91.06754C136.38048 90.90722 136.33891 90.80254 136.16454 90.37004L135.72485 89.246911Z"></path>
<path d="M320.46217 82.42538C320.46217 82.45507 320.46217 82.47507 320.29279 82.64445C319.04779 83.899446 318.72904 85.782258 318.72904 87.30632C318.72904 89.03945 319.10748 90.77288 320.33279 92.01788C320.46217 92.13757 320.46217 92.15757 320.46217 92.18726C320.46217 92.25695 320.42217 92.28695 320.36248 92.28695C320.26279 92.28695 319.36654 91.60945 318.77873 90.34445C318.27061 89.24882 318.151231 88.1432 318.151231 87.30632C318.151231 86.52945 318.26061 85.324133 318.80873 84.198508C319.40623 82.9732 320.26279 82.3257 320.36248 82.3257C320.42217 82.3257 320.46217 82.3557 320.46217 82.42538Z"></path>
<path d="M324.69463 88.80038H325.5515C325.75056 88.80038 325.85025 88.80038 325.85025 88.99976C325.85025 89.10945 325.75056 89.10945 325.58119 89.10945H324.75463L324.96369 90.24476C325.00369 90.45413 325.14306 91.16132 325.20275 91.2807C325.29244 91.47007 325.46181 91.61945 325.67088 91.61945C325.71088 91.61945 325.96994 91.61945 326.159 91.44007C325.72088 91.40038 325.62119 91.05163 325.62119 90.90226C325.62119 90.6732 325.80056 90.55382 325.98963 90.55382C326.24869 90.55382 326.53744 90.77288 326.53744 91.15132C326.53744 91.60945 326.07931 91.83882 325.67088 91.83882C325.33244 91.83882 324.70463 91.65945 324.40588 90.6732C324.34619 90.46413 324.31619 90.36445 324.07713 89.10945H323.38994C323.20056 89.10945 323.09088 89.10945 323.09088 88.92007C323.09088 88.80038 323.18056 88.80038 323.36994 88.80038H324.02744L323.28025 84.865696C323.10088 83.899446 322.9315 82.9932 322.41369 82.9932C322.37369 82.9932 322.12463 82.9932 321.935564 83.17226C322.39369 83.20226 322.48338 83.56101 322.48338 83.71038C322.48338 83.939446 322.304 84.058821 322.11494 84.058821C321.855876 84.058821 321.566814 83.839758 321.566814 83.46132C321.566814 83.01288 322.005251 82.77382 322.41369 82.77382C322.9615 82.77382 323.35994 83.36163 323.53931 83.74007C323.85806 84.367883 324.08713 85.573196 324.09713 85.642883L324.69463 88.80038Z"></path>
<path d="M330.28617 82.42538C330.28617 82.45507 330.28617 82.47507 330.1168 82.64445C328.8718 83.899446 328.55305 85.782258 328.55305 87.30632C328.55305 89.03945 328.93149 90.77288 330.1568 92.01788C330.28617 92.13757 330.28617 92.15757 330.28617 92.18726C330.28617 92.25695 330.24617 92.28695 330.18649 92.28695C330.0868 92.28695 329.19055 91.60945 328.60274 90.34445C328.09461 89.24882 327.975235 88.1432 327.975235 87.30632C327.975235 86.52945 328.08461 85.324133 328.63274 84.198508C329.23024 82.9732 330.0868 82.3257 330.18649 82.3257C330.24617 82.3257 330.28617 82.3557 330.28617 82.42538Z"></path>
<path d="M336.89055 88.52163C336.89055 88.96976 336.71117 89.21882 336.49211 89.21882C336.23305 89.21882 335.96399 88.97976 335.96399 88.7507C335.96399 88.65101 336.01399 88.54163 336.11367 88.45195C336.28274 88.30257 336.46211 88.03351 336.46211 87.61507C336.46211 87.21663 336.27305 86.64882 335.96399 86.1907C335.66524 85.762258 335.2968 85.423508 334.82867 85.423508C334.26086 85.423508 333.95211 85.782258 333.86242 86.32007C333.9718 86.57913 334.20086 87.21663 334.20086 87.4957C334.20086 87.61507 334.15117 87.71476 334.0218 87.71476C333.94211 87.71476 333.83242 87.69476 333.75274 87.54538C333.64305 87.34601 333.52367 86.69882 333.52367 86.34007C333.19492 85.87195 332.79649 85.423508 332.16899 85.423508C331.511485 85.423508 331.302423 86.01132 331.302423 86.56913C331.302423 87.81445 332.31836 88.86038 332.31836 88.98976C332.31836 89.09945 332.23867 89.17913 332.12899 89.17913C331.99961 89.17913 331.92992 89.04945 331.86992 88.95976C331.36211 88.22288 330.983673 87.03726 330.983673 86.13101C330.983673 85.443508 331.212735 84.706321 332.0293 84.706321C332.7368 84.706321 333.20492 85.204446 333.56336 85.752258C333.65305 85.174758 334.04149 84.706321 334.6593 84.706321C335.43617 84.706321 335.9143 85.314133 336.27305 86.06101C336.51211 86.54913 336.89055 87.90413 336.89055 88.52163Z"></path>
<path d="M339.24815 87.95224C339.25503 87.9663 339.27597 88.05692 339.27597 88.06411C339.27597 88.0988 339.24815 88.16161 339.1644 88.16161C339.02503 88.16161 338.44597 88.10599 338.27159 88.09192C338.21597 88.08505 338.11815 88.07786 338.11815 87.93161C338.11815 87.8338 338.21597 87.8338 338.29972 87.8338C338.6344 87.8338 338.6344 87.78505 338.6344 87.72911C338.6344 87.68036 338.62034 87.63849 338.60659 87.57567L337.623153 83.627861C337.588153 83.502236 337.588153 83.488486 337.588153 83.474424C337.588153 83.369736 337.671903 83.251299 337.825341 83.251299C338.013778 83.251299 338.1044 83.390674 338.14628 83.544111C338.16003 83.572236 338.46003 84.79974 338.48784 84.89724C338.98315 84.84849 339.38065 84.68817 339.38065 84.32536C339.38065 84.290361 339.38065 84.255674 339.3669 84.185986C339.33878 84.081299 339.33878 84.046299 339.33878 83.969736C339.33878 83.474424 339.74347 83.251299 340.07815 83.251299C340.75472 83.251299 340.96409 84.311299 340.96409 84.318486C340.96409 84.40911 340.87347 84.40911 340.85253 84.40911C340.75472 84.40911 340.74784 84.37411 340.71284 84.241611C340.6294 83.941611 340.44097 83.446611 340.09909 83.446611C339.91097 83.446611 339.85503 83.620986 339.85503 83.809111C339.85503 83.927861 339.85503 83.941611 339.8969 84.123174C339.90378 84.144111 339.9319 84.262549 339.9319 84.33942C339.9319 84.96005 339.09472 85.05786 338.8019 85.0788C339.00409 85.20411 339.26222 85.43442 339.38065 85.53911C339.73659 85.8738 340.08534 86.20161 340.47565 86.20161C340.5594 86.20161 340.65003 86.18067 340.70597 86.11099C340.40597 86.06224 340.34315 85.82505 340.34315 85.72036C340.34315 85.56692 340.4619 85.46224 340.62222 85.46224C340.81065 85.46224 341.01972 85.61567 341.01972 85.9088C341.01972 86.1388 340.85253 86.39692 340.48284 86.39692C340.08534 86.39692 339.72253 86.11099 339.3669 85.78317C339.07378 85.50411 338.84378 85.28786 338.55753 85.16942L339.24815 87.95224Z"></path>
<path d="M344.84578 87.30632C344.84578 88.0832 344.73641 89.28851 344.18828 90.41413C343.59078 91.63945 342.73391 92.28695 342.634535 92.28695C342.574535 92.28695 342.534847 92.24695 342.534847 92.18726C342.534847 92.15757 342.534847 92.13757 342.724222 91.9582C343.70016 90.97195 344.26797 89.3882 344.26797 87.30632C344.26797 85.602883 343.89953 83.849758 342.664222 82.59476C342.534847 82.47507 342.534847 82.45507 342.534847 82.42538C342.534847 82.3657 342.574535 82.3257 342.634535 82.3257C342.73391 82.3257 343.63047 83.0032 344.21828 84.268196C344.72641 85.363821 344.84578 86.46945 344.84578 87.30632ZM348.71125 87.30632C348.71125 88.0832 348.60188 89.28851 348.05375 90.41413C347.45625 91.63945 346.59938 92.28695 346.5 92.28695C346.44 92.28695 346.40032 92.24695 346.40032 92.18726C346.40032 92.15757 346.40032 92.13757 346.58969 91.9582C347.56563 90.97195 348.13344 89.3882 348.13344 87.30632C348.13344 85.602883 347.765 83.849758 346.52969 82.59476C346.40032 82.47507 346.40032 82.45507 346.40032 82.42538C346.40032 82.3657 346.44 82.3257 346.5 82.3257C346.59938 82.3257 347.49594 83.0032 348.08375 84.268196C348.59188 85.363821 348.71125 86.46945 348.71125 87.30632Z"></path>
<path d="M350.566914 89.516398C350.539102 89.425773 350.497227 89.251398 350.497227 89.23046C350.497227 89.077023 350.622852 89.007335 350.73441 89.007335C350.85973 89.007335 350.9716 89.09796 351.00629 89.160773C351.04129 89.223585 351.09691 89.44671 351.13191 89.593273C351.16691 89.725773 351.24348 90.046398 351.28535 90.22077C351.32723 90.37452 351.3691 90.52796 351.40379 90.68827C351.48066 90.97421 351.49473 91.03015 351.69691 91.31609C351.89223 91.59515 352.22004 91.95765 352.74316 91.95765C353.14754 91.95765 353.15473 91.60202 353.15473 91.46952C353.15473 91.05109 352.85473 90.27671 352.74316 89.983898C352.66629 89.788585 352.63848 89.725773 352.63848 89.607023C352.63848 89.237335 352.94535 89.007335 353.30098 89.007335C353.99848 89.007335 354.30566 89.969835 354.30566 90.074523C354.30566 90.16515 354.21473 90.16515 354.19379 90.16515C354.09629 90.16515 354.08941 90.12327 354.06129 90.046398C353.90098 89.488585 353.60098 89.202648 353.32191 89.202648C353.17566 89.202648 353.14754 89.300148 353.14754 89.44671C353.14754 89.607023 353.18254 89.697648 353.30816 90.01171C353.39191 90.22796 353.67785 90.96734 353.67785 91.35796C353.67785 92.03452 353.14066 92.15296 352.77098 92.15296C352.19223 92.15296 351.8016 91.79734 351.59223 91.51827C351.54348 91.99952 351.13191 92.15296 350.84598 92.15296C350.545977 92.15296 350.385664 91.93671 350.295039 91.7764C350.141602 91.51827 350.043789 91.12077 350.043789 91.08577C350.043789 90.99515 350.141602 90.99515 350.162227 90.99515C350.260039 90.99515 350.266914 91.01609 350.315977 91.20452C350.420352 91.61577 350.552852 91.95765 350.82504 91.95765C351.00629 91.95765 351.05504 91.80421 351.05504 91.61577C351.05504 91.48327 350.99254 91.22546 350.94348 91.03702C350.89473 90.84859 350.82504 90.56265 350.79004 90.40921L350.566914 89.516398Z"></path>
<path d="M359.82939 90.65327C359.94095 90.65327 360.10845 90.65327 360.10845 90.82077C360.10845 90.99515 359.94814 90.99515 359.82939 90.99515H355.6722C355.560637 90.99515 355.39345 90.99515 355.39345 90.82765C355.39345 90.65327 355.553762 90.65327 355.6722 90.65327H359.82939Z"></path>
<path d="M363.20357 93.51327C363.20357 93.7014 363.18982 93.70827 362.9945 93.70827C362.54794 93.2689 361.91325 93.26202 361.627316 93.26202V93.01077C361.794816 93.01077 362.25513 93.01077 362.63857 93.20609V89.648898C362.63857 89.418898 362.63857 89.328273 361.94107 89.328273H361.676066V89.077023C361.801691 89.083898 362.6595 89.104835 362.91763 89.104835C363.13388 89.104835 364.01263 89.083898 364.16607 89.077023V89.328273H363.90107C363.20357 89.328273 363.20357 89.418898 363.20357 89.648898V93.51327Z"></path>
<path d="M351.8991 86.44122C351.90598 86.45528 351.92691 86.54591 351.92691 86.5531C351.92691 86.58778 351.8991 86.6506 351.81535 86.6506C351.67598 86.6506 351.09691 86.59497 350.92254 86.58091C350.86691 86.57403 350.7691 86.56685 350.7691 86.4206C350.7691 86.32278 350.86691 86.32278 350.95066 86.32278C351.28535 86.32278 351.28535 86.27403 351.28535 86.2181C351.28535 86.16935 351.27129 86.12747 351.25754 86.06466L350.274102 82.116847C350.239102 81.991222 350.239102 81.977472 350.239102 81.963409C350.239102 81.858722 350.322852 81.740284 350.476289 81.740284C350.664727 81.740284 350.75535 81.879659 350.79723 82.033097C350.81098 82.061222 351.11098 83.28872 351.13879 83.38622C351.6341 83.33747 352.0316 83.17716 352.0316 82.81435C352.0316 82.779347 352.0316 82.744659 352.01785 82.674972C351.98973 82.570284 351.98973 82.535284 351.98973 82.458722C351.98973 81.963409 352.39441 81.740284 352.7291 81.740284C353.40566 81.740284 353.61504 82.800284 353.61504 82.807472C353.61504 82.8981 353.52441 82.8981 353.50348 82.8981C353.40566 82.8981 353.39879 82.8631 353.36379 82.730597C353.28035 82.430597 353.09191 81.935597 352.75004 81.935597C352.56191 81.935597 352.50598 82.109972 352.50598 82.298097C352.50598 82.416847 352.50598 82.430597 352.54785 82.612159C352.55473 82.633097 352.58285 82.751534 352.58285 82.82841C352.58285 83.44903 351.74566 83.54685 351.45285 83.56778C351.65504 83.6931 351.91316 83.92341 352.0316 84.0281C352.38754 84.36278 352.73629 84.6906 353.1266 84.6906C353.21035 84.6906 353.30098 84.66966 353.35691 84.59997C353.05691 84.55122 352.9941 84.31403 352.9941 84.20935C352.9941 84.05591 353.11285 83.95122 353.27316 83.95122C353.4616 83.95122 353.67066 84.10466 353.67066 84.39778C353.67066 84.62778 353.50348 84.88591 353.13379 84.88591C352.73629 84.88591 352.37348 84.59997 352.01785 84.27216C351.72473 83.9931 351.49473 83.77685 351.20848 83.65841L351.8991 86.44122Z"></path>
<path d="M359.47584 84.15372C359.58053 84.15372 359.74084 84.15372 359.74084 84.3281C359.74084 84.49528 359.57334 84.49528 359.48271 84.49528H354.865213C354.774588 84.49528 354.607088 84.49528 354.607088 84.3281C354.607088 84.15372 354.767713 84.15372 354.872401 84.15372H359.47584ZM359.48271 82.619034C359.57334 82.619034 359.74084 82.619034 359.74084 82.786534C359.74084 82.96091 359.58053 82.96091 359.47584 82.96091H354.872401C354.767713 82.96091 354.607088 82.96091 354.607088 82.786534C354.607088 82.619034 354.774588 82.619034 354.865213 82.619034H359.48271ZM363.83404 84.03497C363.83404 84.80216 363.74342 85.35341 363.42248 85.84153C363.20623 86.16247 362.77373 86.44122 362.21592 86.44122C360.59779 86.44122 360.59779 84.53716 360.59779 84.03497S360.59779 81.670597 362.21592 81.670597C363.83404 81.670597 363.83404 83.53278 363.83404 84.03497ZM362.21592 81.865909C361.89498 81.865909 361.46967 82.054034 361.32998 82.625909C361.23248 83.03747 361.23248 83.60966 361.23248 84.1256C361.23248 84.63497 361.23248 85.16497 361.33717 85.54872C361.48342 86.09966 361.92998 86.24622 362.21592 86.24622C362.59248 86.24622 362.95529 86.01591 363.08092 85.61122C363.19248 85.23466 363.19935 84.73247 363.19935 84.1256C363.19935 83.60966 363.19935 83.09341 363.10873 82.654034C362.96904 82.019347 362.49498 81.865909 362.21592 81.865909Z"></path>
<path d="M7.58814 44.68436C7.58814 44.71405 7.58814 44.73405 7.41876 44.90342C6.17376 46.158422 5.85501 48.041234 5.85501 49.5653C5.85501 51.29842 6.23345 53.03186 7.45876 54.27686C7.58814 54.39655 7.58814 54.41655 7.58814 54.44623C7.58814 54.51592 7.54814 54.54592 7.48845 54.54592C7.38876 54.54592 6.49251 53.86842 5.9047 52.60342C5.39658 51.5078 5.277202 50.40217 5.277202 49.5653C5.277202 48.78842 5.38658 47.583109 5.9347 46.457484C6.5322 45.23217 7.38876 44.58467 7.48845 44.58467C7.54814 44.58467 7.58814 44.61467 7.58814 44.68436Z"></path>
<path d="M11.82059 51.05936H12.67746C12.87652 51.05936 12.97621 51.05936 12.97621 51.25873C12.97621 51.36842 12.87652 51.36842 12.70715 51.36842H11.88059L12.08965 52.50373C12.12965 52.71311 12.26902 53.4203 12.32871 53.53967C12.4184 53.72905 12.58777 53.87842 12.79684 53.87842C12.83684 53.87842 13.0959 53.87842 13.28496 53.69905C12.84684 53.65936 12.74715 53.31061 12.74715 53.16123C12.74715 52.93217 12.92652 52.8128 13.11559 52.8128C13.37465 52.8128 13.6634 53.03186 13.6634 53.4103C13.6634 53.86842 13.20527 54.0978 12.79684 54.0978C12.4584 54.0978 11.83059 53.91842 11.53184 52.93217C11.47215 52.72311 11.44215 52.62342 11.20309 51.36842H10.5159C10.32652 51.36842 10.21684 51.36842 10.21684 51.17905C10.21684 51.05936 10.30652 51.05936 10.4959 51.05936H11.1534L10.40621 47.124672C10.22684 46.158422 10.05746 45.25217 9.53965 45.25217C9.49965 45.25217 9.25059 45.25217 9.061524 45.43123C9.51965 45.46123 9.60934 45.81998 9.60934 45.96936C9.60934 46.198422 9.42996 46.317797 9.2409 46.317797C8.981837 46.317797 8.692774 46.098734 8.692774 45.7203C8.692774 45.27186 9.131212 45.0328 9.53965 45.0328C10.08746 45.0328 10.4859 45.62061 10.66527 45.99905C10.98402 46.626859 11.21309 47.832172 11.22309 47.901859L11.82059 51.05936Z"></path>
<path d="M18.79398 50.8303C18.80368 50.88998 18.82368 50.93998 18.82368 51.00967C18.82368 51.17905 18.70428 51.27873 18.53488 51.27873C18.43518 51.27873 18.16618 51.20873 18.12645 50.8503C17.94707 51.21873 17.59832 51.4778 17.19988 51.4778C16.06457 51.4778 14.82926 50.08342 14.82926 48.64873C14.82926 47.662797 15.43676 47.074984 16.15395 47.074984C16.74176 47.074984 17.20988 47.543109 17.30957 47.652797L17.31957 47.642797C17.11051 46.756234 16.99082 46.347797 16.99082 46.327797C16.95113 46.238109 16.61238 45.25217 15.55645 45.25217C15.36707 45.25217 15.03832 45.26217 14.75957 45.35155C15.05832 45.44123 15.16801 45.7003 15.16801 45.86967C15.16801 46.02905 15.05832 46.218422 14.78926 46.218422C14.5702 46.218422 14.25145 46.03905 14.25145 45.64061C14.25145 45.23217 14.6202 45.0328 15.57645 45.0328C16.82145 45.0328 17.53863 45.80998 17.68801 46.407484L18.79398 50.8303ZM17.49895 48.34998C17.43895 48.09092 17.20988 47.841859 16.99082 47.652797C16.78176 47.473422 16.4727 47.294047 16.18395 47.294047C15.68582 47.294047 15.53645 47.812172 15.53645 48.21061C15.53645 48.68873 15.82551 49.86405 16.09426 50.37217C16.36332 50.8603 16.79145 51.25873 17.20988 51.25873C17.86738 51.25873 18.00676 50.45186 18.00676 50.40217C18.00676 50.35217 17.98707 50.29248 17.97707 50.25248L17.49895 48.34998Z"></path>
<path d="M22.10272 49.5653C22.10272 50.34217 21.99335 51.54748 21.44522 52.67311C20.84772 53.89842 19.990848 54.54592 19.891473 54.54592C19.831473 54.54592 19.791786 54.50592 19.791786 54.44623C19.791786 54.41655 19.791786 54.39655 19.981161 54.21717C20.9571 53.23092 21.52491 51.64717 21.52491 49.5653C21.52491 47.861859 21.15647 46.108734 19.921161 44.85373C19.791786 44.73405 19.791786 44.71405 19.791786 44.68436C19.791786 44.62467 19.831473 44.58467 19.891473 44.58467C19.990848 44.58467 20.88741 45.26217 21.47522 46.527172C21.98335 47.622797 22.10272 48.72842 22.10272 49.5653ZM26.38663 44.68436C26.38663 44.71405 26.38663 44.73405 26.21725 44.90342C24.97225 46.158422 24.6535 48.041234 24.6535 49.5653C24.6535 51.29842 25.03194 53.03186 26.25725 54.27686C26.38663 54.39655 26.38663 54.41655 26.38663 54.44623C26.38663 54.51592 26.34663 54.54592 26.28694 54.54592C26.18725 54.54592 25.291 53.86842 24.70319 52.60342C24.19507 51.5078 24.07569 50.40217 24.07569 49.5653C24.07569 48.78842 24.18507 47.583109 24.73319 46.457484C25.33069 45.23217 26.18725 44.58467 26.28694 44.58467C26.34663 44.58467 26.38663 44.61467 26.38663 44.68436Z"></path>
<path d="M30.30018 50.08342C30.35987 50.34217 30.58893 51.25873 31.28612 51.25873C31.33612 51.25873 31.57518 51.25873 31.78424 51.12905C31.50549 51.07936 31.30612 50.8303 31.30612 50.59123C31.30612 50.43186 31.41581 50.2428 31.68456 50.2428C31.90393 50.2428 32.22268 50.42186 32.22268 50.8203C32.22268 51.33842 31.63487 51.4778 31.29612 51.4778C30.71831 51.4778 30.36987 50.94998 30.25018 50.72092C30.00112 51.37811 29.46331 51.4778 29.17456 51.4778C28.13831 51.4778 27.570806 50.1928 27.570806 49.94373C27.570806 49.84436 27.670181 49.84436 27.690181 49.84436C27.769869 49.84436 27.799869 49.86405 27.819556 49.95373C28.15831 51.00967 28.81581 51.25873 29.15456 51.25873C29.34362 51.25873 29.69237 51.16905 29.69237 50.59123C29.69237 50.28248 29.52299 49.61498 29.15456 48.22061C28.99518 47.602797 28.64643 47.184672 28.20831 47.184672C28.14831 47.184672 27.919244 47.184672 27.710181 47.314047C27.959244 47.363734 28.17831 47.573109 28.17831 47.851859C28.17831 48.12092 27.959244 48.20061 27.809869 48.20061C27.510806 48.20061 27.261744 47.941547 27.261744 47.622797C27.261744 47.164672 27.759869 46.965297 28.19831 46.965297C28.85581 46.965297 29.21424 47.662797 29.24424 47.722484C29.36362 47.354047 29.72237 46.965297 30.31987 46.965297C31.34612 46.965297 31.91362 48.2503 31.91362 48.49936C31.91362 48.59905 31.82424 48.59905 31.79424 48.59905C31.70456 48.59905 31.68456 48.55936 31.66487 48.48936C31.33612 47.423734 30.65862 47.184672 30.33987 47.184672C29.95143 47.184672 29.79206 47.503422 29.79206 47.841859C29.79206 48.061234 29.85174 48.2803 29.96143 48.71873L30.30018 50.08342Z"></path>
<path d="M35.54577 49.5653C35.54577 50.34217 35.43639 51.54748 34.88827 52.67311C34.29077 53.89842 33.433895 54.54592 33.33452 54.54592C33.27452 54.54592 33.234832 54.50592 33.234832 54.44623C33.234832 54.41655 33.234832 54.39655 33.424207 54.21717C34.40014 53.23092 34.96796 51.64717 34.96796 49.5653C34.96796 47.861859 34.59952 46.108734 33.364207 44.85373C33.234832 44.73405 33.234832 44.71405 33.234832 44.68436C33.234832 44.62467 33.27452 44.58467 33.33452 44.58467C33.433895 44.58467 34.33046 45.26217 34.91827 46.527172C35.42639 47.622797 35.54577 48.72842 35.54577 49.5653Z"></path>
<path d="M73.23275 49.22762L69.696502 44.85481C69.616814 44.75512 69.606814 44.73512 69.606814 44.69543C69.606814 44.58575 69.696502 44.58575 69.875877 44.58575H78.13369L78.99025 47.06606H78.74119C78.49213 46.31919 77.82494 45.71137 76.97806 45.42262C76.81869 45.37262 76.1315 45.13356 74.66713 45.13356H70.43369L73.89025 49.407C73.95994 49.49669 73.97963 49.52668 73.97963 49.56637C73.97963 49.60637 73.96994 49.61606 73.90994 49.70575L70.67275 54.14856H74.61744C75.75275 54.14856 78.044 54.078872 78.74119 52.21606H78.99025L78.13369 54.546997H69.875877C69.606814 54.546997 69.596814 54.536997 69.596814 54.228247L73.23275 49.22762Z"></path>
<path d="M80.406912 52.523414C80.379099 52.432789 80.337224 52.258414 80.337224 52.237476C80.337224 52.084039 80.462849 52.014351 80.57441 52.014351C80.69972 52.014351 80.8116 52.104976 80.84629 52.167789C80.88129 52.230601 80.93691 52.453726 80.97191 52.600289C81.00691 52.732789 81.08347 53.053414 81.12535 53.22779C81.16722 53.38154 81.2091 53.53498 81.24379 53.69529C81.32066 53.98123 81.33472 54.03716 81.53691 54.3231C81.73222 54.60216 82.06004 54.96466 82.58316 54.96466C82.98754 54.96466 82.99472 54.60904 82.99472 54.47654C82.99472 54.0581 82.69472 53.28373 82.58316 52.990914C82.50629 52.795601 82.47847 52.732789 82.47847 52.614039C82.47847 52.244351 82.78535 52.014351 83.14097 52.014351C83.83847 52.014351 84.14566 52.976851 84.14566 53.081539C84.14566 53.17216 84.05472 53.17216 84.03379 53.17216C83.93629 53.17216 83.92941 53.13029 83.90129 53.053414C83.74097 52.495601 83.44097 52.209664 83.16191 52.209664C83.01566 52.209664 82.98754 52.307164 82.98754 52.453726C82.98754 52.614039 83.02254 52.704664 83.14816 53.018726C83.23191 53.23498 83.51785 53.97435 83.51785 54.36498C83.51785 55.04154 82.98066 55.15998 82.61097 55.15998C82.03222 55.15998 81.6416 54.80435 81.43222 54.52529C81.38347 55.00654 80.97191 55.15998 80.68597 55.15998C80.385974 55.15998 80.225662 54.94373 80.135037 54.78341C79.981599 54.52529 79.883787 54.12779 79.883787 54.09279C79.883787 54.00216 79.981599 54.00216 80.002224 54.00216C80.100037 54.00216 80.106912 54.0231 80.155974 54.21154C80.260349 54.62279 80.392849 54.96466 80.66504 54.96466C80.84629 54.96466 80.89504 54.81123 80.89504 54.62279C80.89504 54.49029 80.83254 54.23248 80.78347 54.04404C80.73472 53.8556 80.66504 53.56966 80.63004 53.41623L80.406912 52.523414Z"></path>
<path d="M89.66938 53.66029C89.78095 53.66029 89.94845 53.66029 89.94845 53.82779C89.94845 54.00216 89.78813 54.00216 89.66938 54.00216H85.5122C85.400635 54.00216 85.233447 54.00216 85.233447 53.83466C85.233447 53.66029 85.39376 53.66029 85.5122 53.66029H89.66938Z"></path>
<path d="M93.04356 56.52029C93.04356 56.70841 93.02981 56.71529 92.8345 56.71529C92.38794 56.27591 91.75325 56.26904 91.467314 56.26904V56.01779C91.634814 56.01779 92.09513 56.01779 92.47856 56.2131V52.655914C92.47856 52.425914 92.47856 52.335289 91.78106 52.335289H91.516064V52.084039C91.641689 52.090914 92.4995 52.111851 92.75763 52.111851C92.97388 52.111851 93.85263 52.090914 94.00606 52.084039V52.335289H93.74106C93.04356 52.335289 93.04356 52.425914 93.04356 52.655914V56.52029Z"></path>
<path d="M81.7391 48.71725C81.74597 48.73131 81.76691 48.82194 81.76691 48.82912C81.76691 48.86381 81.7391 48.92662 81.65535 48.92662C81.51597 48.92662 80.93691 48.871 80.76254 48.85694C80.70691 48.85006 80.6091 48.84287 80.6091 48.69662C80.6091 48.59881 80.70691 48.59881 80.79066 48.59881C81.12535 48.59881 81.12535 48.55006 81.12535 48.49412C81.12535 48.44537 81.11129 48.4035 81.09754 48.34069L80.114099 44.392874C80.079099 44.267249 80.079099 44.253499 80.079099 44.239436C80.079099 44.134749 80.162849 44.016311 80.316287 44.016311C80.504724 44.016311 80.59535 44.155686 80.63722 44.309124C80.65097 44.337249 80.95097 45.56475 80.97879 45.66225C81.4741 45.6135 81.8716 45.45319 81.8716 45.09037C81.8716 45.055374 81.8716 45.020686 81.85785 44.950999C81.82972 44.846311 81.82972 44.811311 81.82972 44.734749C81.82972 44.239436 82.23441 44.016311 82.5691 44.016311C83.24566 44.016311 83.45504 45.076311 83.45504 45.083499C83.45504 45.17412 83.36441 45.17412 83.34347 45.17412C83.24566 45.17412 83.23879 45.13912 83.20379 45.006624C83.12035 44.706624 82.93191 44.211624 82.59004 44.211624C82.40191 44.211624 82.34597 44.385999 82.34597 44.574124C82.34597 44.692874 82.34597 44.706624 82.38785 44.888186C82.39472 44.909124 82.42285 45.027561 82.42285 45.10444C82.42285 45.72506 81.58566 45.82287 81.29285 45.84381C81.49504 45.96912 81.75316 46.19944 81.8716 46.30412C82.22754 46.63881 82.57629 46.96662 82.9666 46.96662C83.05035 46.96662 83.14097 46.94569 83.19691 46.876C82.89691 46.82725 82.8341 46.59006 82.8341 46.48537C82.8341 46.33194 82.95285 46.22725 83.11316 46.22725C83.3016 46.22725 83.51066 46.38069 83.51066 46.67381C83.51066 46.90381 83.34347 47.16194 82.97379 47.16194C82.57629 47.16194 82.21347 46.876 81.85785 46.54819C81.56472 46.26912 81.33472 46.05287 81.04847 45.93444L81.7391 48.71725Z"></path>
<path d="M89.31584 46.42975C89.42052 46.42975 89.58084 46.42975 89.58084 46.60412C89.58084 46.77131 89.41334 46.77131 89.32271 46.77131H84.705211C84.614586 46.77131 84.447086 46.77131 84.447086 46.60412C84.447086 46.42975 84.607711 46.42975 84.712399 46.42975H89.31584ZM89.32271 44.895061C89.41334 44.895061 89.58084 44.895061 89.58084 45.062561C89.58084 45.23694 89.42052 45.23694 89.31584 45.23694H84.712399C84.607711 45.23694 84.447086 45.23694 84.447086 45.062561C84.447086 44.895061 84.614586 44.895061 84.705211 44.895061H89.32271ZM93.67404 46.311C93.67404 47.07819 93.58341 47.62944 93.26248 48.11756C93.04623 48.4385 92.61373 48.71725 92.05591 48.71725C90.43779 48.71725 90.43779 46.81319 90.43779 46.311S90.43779 43.946624 92.05591 43.946624C93.67404 43.946624 93.67404 45.80881 93.67404 46.311ZM92.05591 44.141936C91.73498 44.141936 91.30966 44.330061 91.16998 44.901936C91.07248 45.3135 91.07248 45.88569 91.07248 46.40162C91.07248 46.911 91.07248 47.441 91.17716 47.82475C91.32341 48.37569 91.76998 48.52225 92.05591 48.52225C92.43248 48.52225 92.79529 48.29194 92.92091 47.88725C93.03248 47.51069 93.03935 47.0085 93.03935 46.40162C93.03935 45.88569 93.03935 45.36944 92.94873 44.930061C92.80904 44.295374 92.33498 44.141936 92.05591 44.141936Z"></path>
<path d="M100.16417 50.08342C100.22385 50.34217 100.45292 51.25873 101.1501 51.25873C101.2001 51.25873 101.43917 51.25873 101.64823 51.12905C101.36948 51.07936 101.1701 50.8303 101.1701 50.59123C101.1701 50.43186 101.27979 50.2428 101.54854 50.2428C101.76792 50.2428 102.08667 50.42186 102.08667 50.8203C102.08667 51.33842 101.49885 51.4778 101.1601 51.4778C100.58229 51.4778 100.23385 50.94998 100.11417 50.72092C99.8651 51.37811 99.32729 51.4778 99.03854 51.4778C98.00229 51.4778 97.434792 50.1928 97.434792 49.94373C97.434792 49.84436 97.534167 49.84436 97.554167 49.84436C97.633854 49.84436 97.663854 49.86405 97.683542 49.95373C98.02229 51.00967 98.67979 51.25873 99.01854 51.25873C99.2076 51.25873 99.55635 51.16905 99.55635 50.59123C99.55635 50.28248 99.38698 49.61498 99.01854 48.22061C98.85917 47.602797 98.51042 47.184672 98.07229 47.184672C98.01229 47.184672 97.783229 47.184672 97.574167 47.314047C97.823229 47.363734 98.04229 47.573109 98.04229 47.851859C98.04229 48.12092 97.823229 48.20061 97.673854 48.20061C97.374792 48.20061 97.125729 47.941547 97.125729 47.622797C97.125729 47.164672 97.623854 46.965297 98.06229 46.965297C98.71979 46.965297 99.07823 47.662797 99.10823 47.722484C99.2276 47.354047 99.58635 46.965297 100.18385 46.965297C101.2101 46.965297 101.7776 48.2503 101.7776 48.49936C101.7776 48.59905 101.68823 48.59905 101.65823 48.59905C101.56854 48.59905 101.54854 48.55936 101.52885 48.48936C101.2001 47.423734 100.5226 47.184672 100.20385 47.184672C99.81542 47.184672 99.65604 47.503422 99.65604 47.841859C99.65604 48.061234 99.71573 48.2803 99.82542 48.71873L100.16417 50.08342Z"></path>
<path d="M104.71413 55.32128C104.72101 55.33534 104.74194 55.42597 104.74194 55.43315C104.74194 55.46784 104.71413 55.53065 104.63038 55.53065C104.49101 55.53065 103.91194 55.47503 103.73757 55.46097C103.68194 55.45409 103.58413 55.4469 103.58413 55.30065C103.58413 55.20284 103.68194 55.20284 103.76569 55.20284C104.10038 55.20284 104.10038 55.15409 104.10038 55.09815C104.10038 55.0494 104.08632 55.00753 104.07257 54.94472L103.089131 50.996903C103.05413 50.871278 103.05413 50.857528 103.05413 50.843466C103.05413 50.738778 103.13788 50.620341 103.291318 50.620341C103.479756 50.620341 103.57038 50.759716 103.61226 50.913153C103.62601 50.941278 103.92601 52.16878 103.95382 52.26628C104.44913 52.21753 104.84663 52.05722 104.84663 51.6944C104.84663 51.659403 104.84663 51.624716 104.83288 51.555028C104.80476 51.450341 104.80476 51.415341 104.80476 51.338778C104.80476 50.843466 105.20944 50.620341 105.54413 50.620341C106.22069 50.620341 106.43007 51.680341 106.43007 51.687528C106.43007 51.77815 106.33944 51.77815 106.31851 51.77815C106.22069 51.77815 106.21382 51.74315 106.17882 51.610653C106.09538 51.310653 105.90694 50.815653 105.56507 50.815653C105.37694 50.815653 105.32101 50.990028 105.32101 51.178153C105.32101 51.296903 105.32101 51.310653 105.36288 51.492216C105.36976 51.513153 105.39788 51.631591 105.39788 51.70847C105.39788 52.32909 104.56069 52.4269 104.26788 52.44784C104.47007 52.57315 104.72819 52.80347 104.84663 52.90815C105.20257 53.24284 105.55132 53.57065 105.94163 53.57065C106.02538 53.57065 106.11601 53.54972 106.17194 53.48003C105.87194 53.43128 105.80913 53.19409 105.80913 53.0894C105.80913 52.93597 105.92788 52.83128 106.08819 52.83128C106.27663 52.83128 106.48569 52.98472 106.48569 53.27784C106.48569 53.50784 106.31851 53.76597 105.94882 53.76597C105.55132 53.76597 105.18851 53.48003 104.83288 53.15222C104.53976 52.87315 104.30976 52.6569 104.02351 52.53847L104.71413 55.32128Z"></path>
<path d="M113.28677 49.22762L109.750515 44.85481C109.670828 44.75512 109.660828 44.73512 109.660828 44.69543C109.660828 44.58575 109.750515 44.58575 109.92989 44.58575H118.1877L119.04427 47.06606H118.7952C118.54614 46.31919 117.87895 45.71137 117.03208 45.42262C116.8727 45.37262 116.18552 45.13356 114.72114 45.13356H110.4877L113.94427 49.407C114.01395 49.49669 114.03364 49.52668 114.03364 49.56637C114.03364 49.60637 114.02395 49.61606 113.96395 49.70575L110.72677 54.14856H114.67145C115.80677 54.14856 118.09802 54.078873 118.7952 52.21606H119.04427L118.1877 54.546998H109.92989C109.660828 54.546998 109.650828 54.536998 109.650828 54.228248L113.28677 49.22762Z"></path>
<path d="M121.86901 48.44537C121.86901 48.55694 121.78526 48.71037 121.58995 48.71037C121.40151 48.71037 121.19932 48.52912 121.19932 48.32694C121.19932 48.20819 121.28995 48.06162 121.47838 48.06162C121.68057 48.06162 121.86901 48.25694 121.86901 48.44537ZM120.445883 44.901936C120.41807 44.811311 120.383383 44.727561 120.383383 44.609124C120.383383 44.281311 120.66213 44.016311 121.04588 44.016311C121.74338 44.016311 122.05026 44.978811 122.05026 45.083499C122.05026 45.17412 121.95963 45.17412 121.9387 45.17412C121.84088 45.17412 121.83401 45.13225 121.8062 45.055374C121.64557 44.497561 121.3387 44.211624 121.06682 44.211624C120.92713 44.211624 120.89245 44.302249 120.89245 44.455686C120.89245 44.615999 120.9412 44.748499 121.00401 44.901936C121.0737 45.09037 121.15057 45.27881 121.22713 45.46006C121.28995 45.62756 121.5412 46.26225 121.56901 46.346C121.58995 46.41569 121.61088 46.49944 121.61088 46.56912C121.61088 46.89694 121.33182 47.16194 120.94807 47.16194C120.257758 47.16194 119.93682 46.2135 119.93682 46.09475C119.93682 46.00412 120.034633 46.00412 120.055258 46.00412C120.15307 46.00412 120.159945 46.03912 120.180883 46.11569C120.362445 46.71569 120.66932 46.96662 120.92713 46.96662C121.03901 46.96662 121.10151 46.911 121.10151 46.72256C121.10151 46.56225 121.05995 46.45756 120.88557 46.02506L120.445883 44.901936Z"></path>
<path d="M125.65741 45.66225H127.79178C127.88241 45.66225 128.04991 45.66225 128.04991 45.82975C128.04991 46.00412 127.8896 46.00412 127.79178 46.00412H125.65741V48.14537C125.65741 48.236 125.65741 48.4035 125.48991 48.4035C125.31553 48.4035 125.31553 48.24319 125.31553 48.14537V46.00412H123.174284C123.083659 46.00412 122.916159 46.00412 122.916159 45.83662C122.916159 45.66225 123.076784 45.66225 123.174284 45.66225H125.31553V43.520999C125.31553 43.430374 125.31553 43.262874 125.48303 43.262874C125.65741 43.262874 125.65741 43.423499 125.65741 43.520999V45.66225Z"></path>
<path d="M131.60585 48.44537C131.60585 48.56381 131.51523 48.71037 131.3271 48.71037C131.1246 48.71037 130.93648 48.51506 130.93648 48.32694C130.93648 48.21506 131.02023 48.06162 131.21554 48.06162C131.40367 48.06162 131.60585 48.24319 131.60585 48.44537ZM130.12742 43.744124C130.00867 43.262874 129.63898 42.8585 129.227417 42.8585C129.136792 42.8585 129.053042 42.87225 128.97648 42.90037C129.15773 42.98381 129.213667 43.151311 129.213667 43.255999C129.213667 43.423499 129.081167 43.514124 128.94148 43.514124C128.72523 43.514124 128.54398 43.325686 128.54398 43.102561C128.54398 42.83756 128.815855 42.66319 129.234605 42.66319C129.65304 42.66319 130.46898 42.91412 130.68523 43.765061L131.31304 46.26225C131.33398 46.33881 131.34804 46.40162 131.34804 46.50631C131.34804 46.89006 131.02023 47.16194 130.60148 47.16194C129.82742 47.16194 129.380855 46.19256 129.380855 46.09475C129.380855 46.00412 129.478667 46.00412 129.499605 46.00412C129.58335 46.00412 129.59023 46.02506 129.63898 46.12975C129.81335 46.53412 130.17617 46.96662 130.58054 46.96662C130.75492 46.96662 130.81773 46.84819 130.81773 46.62475C130.81773 46.54819 130.80398 46.45037 130.79679 46.41569L130.12742 43.744124Z"></path>
<path d="M137.60084 46.42975C137.70553 46.42975 137.86584 46.42975 137.86584 46.60412C137.86584 46.77131 137.69834 46.77131 137.60771 46.77131H132.990214C132.899589 46.77131 132.732089 46.77131 132.732089 46.60412C132.732089 46.42975 132.892714 46.42975 132.997402 46.42975H137.60084ZM137.60771 44.895061C137.69834 44.895061 137.86584 44.895061 137.86584 45.062561C137.86584 45.23694 137.70553 45.23694 137.60084 45.23694H132.997402C132.892714 45.23694 132.732089 45.23694 132.732089 45.062561C132.732089 44.895061 132.899589 44.895061 132.990214 44.895061H137.60771Z"></path>
<path d="M140.54213 48.71725C140.54901 48.73131 140.56995 48.82194 140.56995 48.82912C140.56995 48.86381 140.54213 48.92662 140.45838 48.92662C140.31901 48.92662 139.73995 48.871 139.56557 48.85694C139.50995 48.85006 139.41213 48.84287 139.41213 48.69662C139.41213 48.59881 139.50995 48.59881 139.5937 48.59881C139.92838 48.59881 139.92838 48.55006 139.92838 48.49412C139.92838 48.44537 139.91432 48.4035 139.90057 48.34069L138.917133 44.392874C138.882133 44.267249 138.882133 44.253499 138.882133 44.239436C138.882133 44.134749 138.965883 44.016311 139.11932 44.016311C139.307758 44.016311 139.39838 44.155686 139.44026 44.309124C139.45401 44.337249 139.75401 45.56475 139.78182 45.66225C140.27713 45.6135 140.67463 45.45319 140.67463 45.09037C140.67463 45.055374 140.67463 45.020686 140.66088 44.950999C140.63276 44.846311 140.63276 44.811311 140.63276 44.734749C140.63276 44.239436 141.03745 44.016311 141.37213 44.016311C142.0487 44.016311 142.25807 45.076311 142.25807 45.083499C142.25807 45.17412 142.16745 45.17412 142.14651 45.17412C142.0487 45.17412 142.04182 45.13912 142.00682 45.006624C141.92338 44.706624 141.73495 44.211624 141.39307 44.211624C141.20495 44.211624 141.14901 44.385999 141.14901 44.574124C141.14901 44.692874 141.14901 44.706624 141.19088 44.888186C141.19776 44.909124 141.22588 45.027561 141.22588 45.10444C141.22588 45.72506 140.3887 45.82287 140.09588 45.84381C140.29807 45.96912 140.5562 46.19944 140.67463 46.30412C141.03057 46.63881 141.37932 46.96662 141.76963 46.96662C141.85338 46.96662 141.94401 46.94569 141.99995 46.876C141.69995 46.82725 141.63713 46.59006 141.63713 46.48537C141.63713 46.33194 141.75588 46.22725 141.9162 46.22725C142.10463 46.22725 142.3137 46.38069 142.3137 46.67381C142.3137 46.90381 142.14651 47.16194 141.77682 47.16194C141.37932 47.16194 141.01651 46.876 140.66088 46.54819C140.36776 46.26912 140.13776 46.05287 139.85151 45.93444L140.54213 48.71725Z"></path>
<path d="M148.63762 50.8403C148.45825 51.20873 148.1695 51.4778 147.72106 51.4778C146.55575 51.4778 145.320436 50.01342 145.320436 48.55936C145.320436 47.622797 145.868248 46.965297 146.64544 46.965297C146.8445 46.965297 147.34262 47.005297 147.94012 47.712484C148.01981 47.294047 148.36856 46.965297 148.84669 46.965297C149.19544 46.965297 149.4245 47.194672 149.58387 47.513422C149.75325 47.87186 149.88262 48.47967 149.88262 48.49936C149.88262 48.59905 149.79294 48.59905 149.76325 48.59905C149.66356 48.59905 149.65356 48.55936 149.62356 48.41967C149.4545 47.772172 149.27512 47.184672 148.86669 47.184672C148.59762 47.184672 148.56794 47.443422 148.56794 47.642797C148.56794 47.86186 148.58762 47.941547 148.69731 48.37998C148.807 48.79842 148.82669 48.8978 148.91637 49.27655L149.27512 50.67092C149.34481 50.94998 149.34481 50.96967 149.34481 51.00967C149.34481 51.17905 149.22512 51.27873 149.05575 51.27873C148.81669 51.27873 148.66731 51.05936 148.63762 50.8403ZM147.99012 48.2603C147.94012 48.08092 147.94012 48.061234 147.79075 47.891859C147.35262 47.344047 146.94419 47.184672 146.66512 47.184672C146.167 47.184672 146.02762 47.732485 146.02762 48.12092C146.02762 48.61905 146.34637 49.84436 146.57544 50.30248C146.8845 50.88998 147.33262 51.25873 147.73106 51.25873C148.37856 51.25873 148.51794 50.44186 148.51794 50.38217S148.49794 50.26248 148.48825 50.2128L147.99012 48.2603Z"></path>
<path d="M152.44799 49.93934C152.44799 50.0509 152.36424 50.20434 152.16893 50.20434C151.98049 50.20434 151.7783 50.02309 151.7783 49.8209C151.7783 49.70215 151.86893 49.55559 152.05737 49.55559C152.25955 49.55559 152.44799 49.7509 152.44799 49.93934ZM151.024866 46.3959C150.997053 46.305275 150.962366 46.221525 150.962366 46.103088C150.962366 45.775275 151.24112 45.510275 151.62487 45.510275C152.32237 45.510275 152.62924 46.472775 152.62924 46.577463C152.62924 46.66809 152.53862 46.66809 152.51768 46.66809C152.41987 46.66809 152.41299 46.62621 152.38518 46.549338C152.22455 45.991525 151.91768 45.705588 151.6458 45.705588C151.50612 45.705588 151.47143 45.796213 151.47143 45.94965C151.47143 46.109963 151.52018 46.242463 151.58299 46.3959C151.65268 46.58434 151.72955 46.77278 151.80612 46.95403C151.86893 47.12153 152.12018 47.75621 152.14799 47.83996C152.16893 47.90965 152.18987 47.9934 152.18987 48.06309C152.18987 48.3909 151.9108 48.6559 151.52705 48.6559C150.836741 48.6559 150.515803 47.70746 150.515803 47.58871C150.515803 47.49809 150.613616 47.49809 150.634241 47.49809C150.732053 47.49809 150.738928 47.53309 150.759866 47.60965C150.941428 48.20965 151.2483 48.46059 151.50612 48.46059C151.61799 48.46059 151.68049 48.40496 151.68049 48.21653C151.68049 48.05621 151.63893 47.95153 151.46455 47.51903L151.024866 46.3959Z"></path>
<path d="M155.8856 53.87842C155.8856 53.88842 155.8856 53.98811 155.75623 53.98811C155.52717 53.98811 154.79998 53.90842 154.54092 53.88842C154.461229 53.87842 154.351542 53.86842 154.351542 53.68936C154.351542 53.56967 154.441229 53.56967 154.5906 53.56967C155.06904 53.56967 155.08873 53.49998 155.08873 53.4003C155.08873 53.33061 154.99904 52.99186 154.94935 52.7828L154.132479 49.5353C154.013104 49.03748 153.973104 48.87811 153.973104 48.52936C153.973104 47.58311 154.501229 46.965297 155.2381 46.965297C156.41373 46.965297 157.63873 48.44967 157.63873 49.88405C157.63873 50.79061 157.11092 51.4778 156.31404 51.4778C155.85592 51.4778 155.44748 51.18905 155.14873 50.8803L155.8856 53.87842ZM154.94935 50.11311C155.00904 50.33217 155.00904 50.35217 155.09873 50.46186C155.58685 51.10936 156.03498 51.25873 156.29404 51.25873C156.65279 51.25873 156.92154 50.95998 156.92154 50.32248C156.92154 49.73467 156.5931 48.58905 156.41373 48.21061C156.08498 47.54311 155.62685 47.184672 155.2381 47.184672C154.89967 47.184672 154.57092 47.453422 154.57092 48.19061C154.57092 48.37998 154.57092 48.56905 154.73029 49.19686L154.94935 50.11311Z"></path>
<path d="M160.8419 49.93934C160.8419 50.05778 160.75128 50.20434 160.56315 50.20434C160.36065 50.20434 160.17253 50.00903 160.17253 49.8209C160.17253 49.70902 160.25628 49.55559 160.45159 49.55559C160.63971 49.55559 160.8419 49.73715 160.8419 49.93934ZM159.36346 45.238088C159.24471 44.756838 158.87503 44.35246 158.463464 44.35246C158.372839 44.35246 158.289089 44.36621 158.212526 44.39434C158.393776 44.47778 158.449714 44.645275 158.449714 44.749963C158.449714 44.917463 158.317214 45.008088 158.177526 45.008088C157.961276 45.008088 157.780026 44.81965 157.780026 44.596525C157.780026 44.33153 158.051901 44.15715 158.470651 44.15715C158.88909 44.15715 159.70503 44.40809 159.92128 45.259025L160.54909 47.75621C160.57003 47.83278 160.58409 47.89559 160.58409 48.00028C160.58409 48.38403 160.25628 48.6559 159.83753 48.6559C159.06346 48.6559 158.616901 47.68653 158.616901 47.58871C158.616901 47.49809 158.714714 47.49809 158.735651 47.49809C158.8194 47.49809 158.82628 47.51903 158.87503 47.62371C159.0494 48.02809 159.41221 48.46059 159.81659 48.46059C159.99096 48.46059 160.05378 48.34215 160.05378 48.11871C160.05378 48.04215 160.04003 47.94434 160.03284 47.90965L159.36346 45.238088Z"></path>
<path d="M307.96021 44.68436C307.96021 44.71405 307.96021 44.73405 307.79083 44.90342C306.54583 46.158422 306.22708 48.041234 306.22708 49.5653C306.22708 51.29842 306.60552 53.03186 307.83083 54.27686C307.96021 54.39655 307.96021 54.41655 307.96021 54.44623C307.96021 54.51592 307.92021 54.54592 307.86052 54.54592C307.76083 54.54592 306.86458 53.86842 306.27677 52.60342C305.76865 51.5078 305.649271 50.40217 305.649271 49.5653C305.649271 48.78842 305.75865 47.583109 306.30677 46.457484C306.90427 45.23217 307.76083 44.58467 307.86052 44.58467C307.92021 44.58467 307.96021 44.61467 307.96021 44.68436Z"></path>
<path d="M312.19259 51.05936H313.04946C313.24853 51.05936 313.34821 51.05936 313.34821 51.25873C313.34821 51.36842 313.24853 51.36842 313.07915 51.36842H312.25259L312.46165 52.50373C312.50165 52.71311 312.64103 53.4203 312.70071 53.53967C312.7904 53.72905 312.95978 53.87842 313.16884 53.87842C313.20884 53.87842 313.4679 53.87842 313.65696 53.69905C313.21884 53.65936 313.11915 53.31061 313.11915 53.16123C313.11915 52.93217 313.29853 52.8128 313.48759 52.8128C313.74665 52.8128 314.0354 53.03186 314.0354 53.4103C314.0354 53.86842 313.57728 54.0978 313.16884 54.0978C312.8304 54.0978 312.20259 53.91842 311.90384 52.93217C311.84415 52.72311 311.81415 52.62342 311.57509 51.36842H310.8879C310.69853 51.36842 310.58884 51.36842 310.58884 51.17905C310.58884 51.05936 310.67853 51.05936 310.8679 51.05936H311.5254L310.77821 47.124672C310.59884 46.158422 310.42946 45.25217 309.91165 45.25217C309.87165 45.25217 309.62259 45.25217 309.433526 45.43123C309.89165 45.46123 309.98134 45.81998 309.98134 45.96936C309.98134 46.198422 309.80196 46.317797 309.6129 46.317797C309.353838 46.317797 309.064776 46.098734 309.064776 45.7203C309.064776 45.27186 309.503213 45.0328 309.91165 45.0328C310.45946 45.0328 310.8579 45.62061 311.03728 45.99905C311.35603 46.626859 311.58509 47.832172 311.59509 47.901859L312.19259 51.05936Z"></path>
<path d="M317.78421 44.68436C317.78421 44.71405 317.78421 44.73405 317.61484 44.90342C316.36984 46.158422 316.05109 48.041234 316.05109 49.5653C316.05109 51.29842 316.42953 53.03186 317.65484 54.27686C317.78421 54.39655 317.78421 54.41655 317.78421 54.44623C317.78421 54.51592 317.74421 54.54592 317.68453 54.54592C317.58484 54.54592 316.68859 53.86842 316.10078 52.60342C315.59265 51.5078 315.473276 50.40217 315.473276 49.5653C315.473276 48.78842 315.58265 47.583109 316.13078 46.457484C316.72828 45.23217 317.58484 44.58467 317.68453 44.58467C317.74421 44.58467 317.78421 44.61467 317.78421 44.68436Z"></path>
<path d="M324.38859 50.78061C324.38859 51.22873 324.20921 51.4778 323.99015 51.4778C323.73109 51.4778 323.46203 51.23873 323.46203 51.00967C323.46203 50.90998 323.51203 50.80061 323.61171 50.71092C323.78078 50.56155 323.96015 50.29248 323.96015 49.87405C323.96015 49.47561 323.77109 48.9078 323.46203 48.44967C323.16328 48.021234 322.79484 47.682484 322.32671 47.682484C321.7589 47.682484 321.45015 48.041234 321.36046 48.57905C321.46984 48.83811 321.6989 49.47561 321.6989 49.75467C321.6989 49.87405 321.64921 49.97373 321.51984 49.97373C321.44015 49.97373 321.33046 49.95373 321.25078 49.80436C321.14109 49.60498 321.02171 48.9578 321.02171 48.59905C320.69296 48.13092 320.29453 47.682484 319.66703 47.682484C319.009526 47.682484 318.800463 48.2703 318.800463 48.82811C318.800463 50.07342 319.8164 51.11936 319.8164 51.24873C319.8164 51.35842 319.73671 51.43811 319.62703 51.43811C319.49765 51.43811 319.42796 51.30842 319.36796 51.21873C318.860151 50.48186 318.481713 49.29623 318.481713 48.38998C318.481713 47.702484 318.710776 46.965297 319.52734 46.965297C320.23484 46.965297 320.70296 47.463422 321.0614 48.011234C321.15109 47.433734 321.53953 46.965297 322.15734 46.965297C322.93421 46.965297 323.41234 47.573109 323.77109 48.31998C324.01015 48.80811 324.38859 50.16311 324.38859 50.78061Z"></path>
<path d="M327.10316 55.32128C327.11004 55.33534 327.13097 55.42597 327.13097 55.43315C327.13097 55.46784 327.10316 55.53065 327.01941 55.53065C326.88004 55.53065 326.30097 55.47503 326.1266 55.46097C326.07097 55.45409 325.97316 55.4469 325.97316 55.30065C325.97316 55.20284 326.07097 55.20284 326.15472 55.20284C326.48941 55.20284 326.48941 55.15409 326.48941 55.09815C326.48941 55.0494 326.47535 55.00753 326.4616 54.94472L325.478162 50.996903C325.443162 50.871278 325.443162 50.857528 325.443162 50.843466C325.443162 50.738778 325.526912 50.620341 325.680349 50.620341C325.868787 50.620341 325.95941 50.759716 326.00129 50.913153C326.01504 50.941278 326.31504 52.16878 326.34285 52.26628C326.83816 52.21753 327.23566 52.05722 327.23566 51.6944C327.23566 51.659403 327.23566 51.624716 327.22191 51.555028C327.19379 51.450341 327.19379 51.415341 327.19379 51.338778C327.19379 50.843466 327.59847 50.620341 327.93316 50.620341C328.60972 50.620341 328.8191 51.680341 328.8191 51.687528C328.8191 51.77815 328.72847 51.77815 328.70754 51.77815C328.60972 51.77815 328.60285 51.74315 328.56785 51.610653C328.48441 51.310653 328.29597 50.815653 327.9541 50.815653C327.76597 50.815653 327.71004 50.990028 327.71004 51.178153C327.71004 51.296903 327.71004 51.310653 327.75191 51.492216C327.75879 51.513153 327.78691 51.631591 327.78691 51.70847C327.78691 52.32909 326.94972 52.4269 326.65691 52.44784C326.8591 52.57315 327.11722 52.80347 327.23566 52.90815C327.5916 53.24284 327.94035 53.57065 328.33066 53.57065C328.41441 53.57065 328.50504 53.54972 328.56097 53.48003C328.26097 53.43128 328.19816 53.19409 328.19816 53.0894C328.19816 52.93597 328.31691 52.83128 328.47722 52.83128C328.66566 52.83128 328.87472 52.98472 328.87472 53.27784C328.87472 53.50784 328.70754 53.76597 328.33785 53.76597C327.94035 53.76597 327.57754 53.48003 327.22191 53.15222C326.92879 52.87315 326.69879 52.6569 326.41254 52.53847L327.10316 55.32128Z"></path>
<path d="M325.413927 45.051401C325.386114 44.960776 325.344239 44.786401 325.344239 44.765463C325.344239 44.612026 325.469864 44.542338 325.58143 44.542338C325.70674 44.542338 325.81861 44.632963 325.8533 44.695776C325.8883 44.758588 325.94393 44.981713 325.97893 45.128276C326.01393 45.260776 326.09049 45.581401 326.13236 45.75578C326.17424 45.90953 326.21611 46.06296 326.2508 46.22328C326.32768 46.50921 326.34174 46.56515 326.54393 46.85109C326.73924 47.13015 327.06705 47.49265 327.59018 47.49265C327.99455 47.49265 328.00174 47.13703 328.00174 47.00453C328.00174 46.58609 327.70174 45.81171 327.59018 45.518901C327.5133 45.323588 327.48549 45.260776 327.48549 45.142026C327.48549 44.772338 327.79236 44.542338 328.14799 44.542338C328.84549 44.542338 329.15268 45.504838 329.15268 45.609526C329.15268 45.70015 329.06174 45.70015 329.0408 45.70015C328.9433 45.70015 328.93643 45.65828 328.9083 45.581401C328.74799 45.023588 328.44799 44.737651 328.16893 44.737651C328.02268 44.737651 327.99455 44.835151 327.99455 44.981713C327.99455 45.142026 328.02955 45.232651 328.15518 45.546713C328.23893 45.76296 328.52486 46.50234 328.52486 46.89296C328.52486 47.56953 327.98768 47.68796 327.61799 47.68796C327.03924 47.68796 326.64861 47.33234 326.43924 47.05328C326.39049 47.53453 325.97893 47.68796 325.69299 47.68796C325.392989 47.68796 325.232677 47.47171 325.142051 47.3114C324.988614 47.05328 324.890802 46.65578 324.890802 46.62078C324.890802 46.53015 324.988614 46.53015 325.009239 46.53015C325.107052 46.53015 325.113927 46.55109 325.162989 46.73953C325.267364 47.15078 325.399864 47.49265 325.67205 47.49265C325.8533 47.49265 325.90205 47.33921 325.90205 47.15078C325.90205 47.01828 325.83955 46.76046 325.79049 46.57203C325.74174 46.38359 325.67205 46.09765 325.63705 45.94421L325.413927 45.051401Z"></path>
<path d="M332.86472 49.5653C332.86472 50.34217 332.75534 51.54748 332.20722 52.67311C331.60972 53.89842 330.752842 54.54592 330.653467 54.54592C330.593467 54.54592 330.55378 54.50592 330.55378 54.44623C330.55378 54.41655 330.55378 54.39655 330.743155 54.21717C331.71909 53.23092 332.2869 51.64717 332.2869 49.5653C332.2869 47.861859 331.91847 46.108734 330.683155 44.85373C330.55378 44.73405 330.55378 44.71405 330.55378 44.68436C330.55378 44.62467 330.593467 44.58467 330.653467 44.58467C330.752842 44.58467 331.6494 45.26217 332.23722 46.527172C332.74534 47.622797 332.86472 48.72842 332.86472 49.5653Z"></path>
<path d="M338.55186 50.8303C338.56155 50.88998 338.58155 50.93998 338.58155 51.00967C338.58155 51.17905 338.46217 51.27873 338.2928 51.27873C338.19311 51.27873 337.92405 51.20873 337.88436 50.8503C337.70499 51.21873 337.35624 51.4778 336.9578 51.4778C335.82249 51.4778 334.587174 50.08342 334.587174 48.64873C334.587174 47.662797 335.19467 47.074984 335.91186 47.074984C336.49967 47.074984 336.9678 47.543109 337.06749 47.652797L337.07749 47.642797C336.86842 46.756234 336.74874 46.347797 336.74874 46.327797C336.70905 46.238109 336.3703 45.25217 335.31436 45.25217C335.12499 45.25217 334.796237 45.26217 334.517487 45.35155C334.816237 45.44123 334.92592 45.7003 334.92592 45.86967C334.92592 46.02905 334.816237 46.218422 334.547174 46.218422C334.328112 46.218422 334.009362 46.03905 334.009362 45.64061C334.009362 45.23217 334.378112 45.0328 335.33436 45.0328C336.57936 45.0328 337.29655 45.80998 337.44592 46.407484L338.55186 50.8303ZM337.25686 48.34998C337.19686 48.09092 336.9678 47.841859 336.74874 47.652797C336.53967 47.473422 336.23061 47.294047 335.94186 47.294047C335.44374 47.294047 335.29436 47.812172 335.29436 48.21061C335.29436 48.68873 335.58342 49.86405 335.85217 50.37217C336.12124 50.8603 336.54936 51.25873 336.9678 51.25873C337.6253 51.25873 337.76467 50.45186 337.76467 50.40217C337.76467 50.35217 337.74499 50.29248 337.73499 50.25248L337.25686 48.34998Z"></path>
<path d="M342.26716 44.68436C342.26716 44.71405 342.26716 44.73405 342.09779 44.90342C340.85279 46.158422 340.53404 48.041234 340.53404 49.5653C340.53404 51.29842 340.91247 53.03186 342.13779 54.27686C342.26716 54.39655 342.26716 54.41655 342.26716 54.44623C342.26716 54.51592 342.22716 54.54592 342.16747 54.54592C342.06779 54.54592 341.17154 53.86842 340.58372 52.60342C340.0756 51.5078 339.956224 50.40217 339.956224 49.5653C339.956224 48.78842 340.0656 47.583109 340.61372 46.457484C341.21122 45.23217 342.06779 44.58467 342.16747 44.58467C342.22716 44.58467 342.26716 44.61467 342.26716 44.68436Z"></path>
<path d="M348.87056 50.78061C348.87056 51.22873 348.69118 51.4778 348.47212 51.4778C348.21306 51.4778 347.944 51.23873 347.944 51.00967C347.944 50.90998 347.994 50.80061 348.09368 50.71092C348.26275 50.56155 348.44212 50.29248 348.44212 49.87405C348.44212 49.47561 348.25306 48.9078 347.944 48.44967C347.64525 48.021234 347.27681 47.682484 346.80868 47.682484C346.24087 47.682484 345.93212 48.041234 345.84243 48.57905C345.95181 48.83811 346.18087 49.47561 346.18087 49.75467C346.18087 49.87405 346.13118 49.97373 346.00181 49.97373C345.92212 49.97373 345.81243 49.95373 345.73275 49.80436C345.62306 49.60498 345.50368 48.9578 345.50368 48.59905C345.17493 48.13092 344.7765 47.682484 344.149 47.682484C343.491495 47.682484 343.282433 48.2703 343.282433 48.82811C343.282433 50.07342 344.29837 51.11936 344.29837 51.24873C344.29837 51.35842 344.21868 51.43811 344.109 51.43811C343.97962 51.43811 343.90993 51.30842 343.84993 51.21873C343.34212 50.48186 342.963683 49.29623 342.963683 48.38998C342.963683 47.702484 343.192745 46.965297 344.00931 46.965297C344.71681 46.965297 345.18493 47.463422 345.54337 48.011234C345.63306 47.433734 346.0215 46.965297 346.63931 46.965297C347.41618 46.965297 347.89431 47.573109 348.25306 48.31998C348.49212 48.80811 348.87056 50.16311 348.87056 50.78061Z"></path>
<path d="M351.58611 55.32128C351.59299 55.33534 351.61392 55.42597 351.61392 55.43315C351.61392 55.46784 351.58611 55.53065 351.50236 55.53065C351.36299 55.53065 350.78392 55.47503 350.60955 55.46097C350.55392 55.45409 350.45611 55.4469 350.45611 55.30065C350.45611 55.20284 350.55392 55.20284 350.63767 55.20284C350.97236 55.20284 350.97236 55.15409 350.97236 55.09815C350.97236 55.0494 350.9583 55.00753 350.94455 54.94472L349.961112 50.996903C349.926112 50.871278 349.926112 50.857528 349.926112 50.843465C349.926112 50.738778 350.009862 50.62034 350.163299 50.62034C350.351737 50.62034 350.44236 50.759715 350.48424 50.913153C350.49799 50.941278 350.79799 52.16878 350.8258 52.26628C351.32111 52.21753 351.71861 52.05722 351.71861 51.6944C351.71861 51.659403 351.71861 51.624716 351.70486 51.555028C351.67674 51.450341 351.67674 51.41534 351.67674 51.338778C351.67674 50.843465 352.08142 50.62034 352.41611 50.62034C353.09267 50.62034 353.30205 51.68034 353.30205 51.687528C353.30205 51.77815 353.21142 51.77815 353.19049 51.77815C353.09267 51.77815 353.0858 51.74315 353.0508 51.610653C352.96736 51.310653 352.77892 50.815653 352.43705 50.815653C352.24892 50.815653 352.19299 50.990028 352.19299 51.178153C352.19299 51.296903 352.19299 51.310653 352.23486 51.492216C352.24174 51.513153 352.26986 51.63159 352.26986 51.70847C352.26986 52.32909 351.43267 52.4269 351.13986 52.44784C351.34205 52.57315 351.60017 52.80347 351.71861 52.90815C352.07455 53.24284 352.4233 53.57065 352.81361 53.57065C352.89736 53.57065 352.98799 53.54972 353.04392 53.48003C352.74392 53.43128 352.68111 53.19409 352.68111 53.0894C352.68111 52.93597 352.79986 52.83128 352.96017 52.83128C353.14861 52.83128 353.35767 52.98472 353.35767 53.27784C353.35767 53.50784 353.19049 53.76597 352.8208 53.76597C352.4233 53.76597 352.06049 53.48003 351.70486 53.15222C351.41174 52.87315 351.18174 52.6569 350.89549 52.53847L351.58611 55.32128Z"></path>
<path d="M349.895975 45.0514C349.868163 44.960775 349.826288 44.7864 349.826288 44.765463C349.826288 44.612025 349.951913 44.542338 350.06348 44.542338C350.18879 44.542338 350.30066 44.632963 350.33535 44.695776C350.37035 44.758588 350.42598 44.981713 350.46098 45.128275C350.49598 45.260775 350.57254 45.5814 350.61441 45.75578C350.65629 45.90953 350.69816 46.06296 350.73285 46.22328C350.80973 46.50921 350.82379 46.56515 351.02598 46.85109C351.22129 47.13015 351.5491 47.49265 352.07223 47.49265C352.4766 47.49265 352.48379 47.13703 352.48379 47.00453C352.48379 46.58609 352.18379 45.81171 352.07223 45.5189C351.99535 45.323588 351.96754 45.260775 351.96754 45.142025C351.96754 44.772338 352.27441 44.542338 352.63004 44.542338C353.32754 44.542338 353.63473 45.504838 353.63473 45.609525C353.63473 45.70015 353.54379 45.70015 353.52285 45.70015C353.42535 45.70015 353.41848 45.65828 353.39035 45.5814C353.23004 45.023588 352.93004 44.73765 352.65098 44.73765C352.50473 44.73765 352.4766 44.83515 352.4766 44.981713C352.4766 45.142025 352.5116 45.23265 352.63723 45.546713C352.72098 45.76296 353.00691 46.50234 353.00691 46.89296C353.00691 47.56953 352.46973 47.68796 352.10004 47.68796C351.52129 47.68796 351.13066 47.33234 350.92129 47.05328C350.87254 47.53453 350.46098 47.68796 350.17504 47.68796C349.875038 47.68796 349.714725 47.47171 349.6241 47.3114C349.470663 47.05328 349.37285 46.65578 349.37285 46.62078C349.37285 46.53015 349.470663 46.53015 349.491288 46.53015C349.5891 46.53015 349.595975 46.55109 349.645038 46.73953C349.749413 47.15078 349.881913 47.49265 350.1541 47.49265C350.33535 47.49265 350.3841 47.33921 350.3841 47.15078C350.3841 47.01828 350.3216 46.76046 350.27254 46.57203C350.22379 46.38359 350.1541 46.09765 350.1191 45.94421L349.895975 45.0514Z"></path>
<path d="M357.34676 49.5653C357.34676 50.34217 357.23739 51.54748 356.68926 52.67311C356.09176 53.89842 355.23489 54.54592 355.135515 54.54592C355.075515 54.54592 355.035827 54.50592 355.035827 54.44623C355.035827 54.41655 355.035827 54.39655 355.225202 54.21717C356.20114 53.23092 356.76895 51.64717 356.76895 49.5653C356.76895 47.861859 356.40051 46.108734 355.165202 44.85373C355.035827 44.73405 355.035827 44.71405 355.035827 44.68436C355.035827 44.62467 355.075515 44.58467 355.135515 44.58467C355.23489 44.58467 356.13145 45.26217 356.71926 46.527172C357.22739 47.622797 357.34676 48.72842 357.34676 49.5653ZM361.21223 49.5653C361.21223 50.34217 361.10286 51.54748 360.55473 52.67311C359.95723 53.89842 359.10036 54.54592 359.00098 54.54592C358.94098 54.54592 358.9013 54.50592 358.9013 54.44623C358.9013 54.41655 358.9013 54.39655 359.09067 54.21717C360.06661 53.23092 360.63442 51.64717 360.63442 49.5653C360.63442 47.861859 360.26598 46.108734 359.03067 44.85373C358.9013 44.73405 358.9013 44.71405 358.9013 44.68436C358.9013 44.62467 358.94098 44.58467 359.00098 44.58467C359.10036 44.58467 359.99692 45.26217 360.58473 46.527172C361.09286 47.622797 361.21223 48.72842 361.21223 49.5653Z"></path>
<path d="M363.067973 51.775374C363.04016 51.684749 362.998285 51.510374 362.998285 51.489436C362.998285 51.335999 363.12391 51.266311 363.23547 51.266311C363.36079 51.266311 363.47266 51.356936 363.50735 51.419748C363.54235 51.482561 363.59797 51.705686 363.63297 51.852249C363.66797 51.984749 363.74454 52.305374 363.78641 52.47975C363.82829 52.6335 363.87016 52.78694 363.90485 52.94725C363.98172 53.23319 363.99579 53.28912 364.19797 53.57506C364.39329 53.85412 364.7211 54.21662 365.24422 54.21662C365.6486 54.21662 365.65579 53.861 365.65579 53.7285C365.65579 53.31006 365.35579 52.53569 365.24422 52.242874C365.16735 52.047561 365.13954 51.984749 365.13954 51.865999C365.13954 51.496311 365.44641 51.266311 365.80204 51.266311C366.49954 51.266311 366.80672 52.228811 366.80672 52.333499C366.80672 52.42412 366.71579 52.42412 366.69485 52.42412C366.59735 52.42412 366.59047 52.38225 366.56235 52.305374C366.40204 51.747561 366.10204 51.461624 365.82297 51.461624C365.67672 51.461624 365.6486 51.559124 365.6486 51.705686C365.6486 51.865999 365.6836 51.956624 365.80922 52.270686C365.89297 52.48694 366.17891 53.22631 366.17891 53.61694C366.17891 54.2935 365.64172 54.41194 365.27204 54.41194C364.69329 54.41194 364.30266 54.05631 364.09329 53.77725C364.04454 54.2585 363.63297 54.41194 363.34704 54.41194C363.047035 54.41194 362.886723 54.19569 362.796098 54.03537C362.64266 53.77725 362.544848 53.37975 362.544848 53.34475C362.544848 53.25412 362.64266 53.25412 362.663285 53.25412C362.761098 53.25412 362.767973 53.27506 362.817035 53.4635C362.92141 53.87475 363.05391 54.21662 363.3261 54.21662C363.50735 54.21662 363.5561 54.06319 363.5561 53.87475C363.5561 53.74225 363.4936 53.48444 363.44454 53.296C363.39579 53.10756 363.3261 52.82162 363.2911 52.66819L363.067973 51.775374Z"></path>
<path d="M372.33135 52.91225C372.44291 52.91225 372.61041 52.91225 372.61041 53.07975C372.61041 53.25412 372.4501 53.25412 372.33135 53.25412H368.17416C368.062598 53.25412 367.895411 53.25412 367.895411 53.08662C367.895411 52.91225 368.055723 52.91225 368.17416 52.91225H372.33135Z"></path>
<path d="M375.70553 55.77225C375.70553 55.96037 375.69178 55.96725 375.49646 55.96725C375.0499 55.52787 374.41521 55.521 374.129277 55.521V55.26975C374.296777 55.26975 374.75709 55.26975 375.14053 55.46506V51.907874C375.14053 51.677874 375.14053 51.587249 374.44303 51.587249H374.178027V51.335999C374.303652 51.342874 375.16146 51.363811 375.41959 51.363811C375.63584 51.363811 376.51459 51.342874 376.66803 51.335999V51.587249H376.40303C375.70553 51.587249 375.70553 51.677874 375.70553 51.907874V55.77225Z"></path>
<path d="M364.40016 48.70028C364.40704 48.71434 364.42797 48.80496 364.42797 48.81215C364.42797 48.84684 364.40016 48.90965 364.31641 48.90965C364.17704 48.90965 363.59797 48.85403 363.4236 48.83996C363.36797 48.83309 363.27016 48.8259 363.27016 48.67965C363.27016 48.58184 363.36797 48.58184 363.45172 48.58184C363.78641 48.58184 363.78641 48.53309 363.78641 48.47715C363.78641 48.4284 363.77235 48.38653 363.7586 48.32371L362.77516 44.375901C362.74016 44.250276 362.74016 44.236526 362.74016 44.222464C362.74016 44.117776 362.82391 43.999339 362.977348 43.999339C363.165785 43.999339 363.25641 44.138714 363.29829 44.292151C363.31204 44.320276 363.61204 45.54778 363.63985 45.64528C364.13516 45.59653 364.53266 45.43621 364.53266 45.0734C364.53266 45.038401 364.53266 45.003714 364.51891 44.934026C364.49079 44.829339 364.49079 44.794339 364.49079 44.717776C364.49079 44.222464 364.89547 43.999339 365.23016 43.999339C365.90672 43.999339 366.1161 45.059339 366.1161 45.066526C366.1161 45.15715 366.02547 45.15715 366.00454 45.15715C365.90672 45.15715 365.89985 45.12215 365.86485 44.989651C365.78141 44.689651 365.59297 44.194651 365.2511 44.194651C365.06297 44.194651 365.00704 44.369026 365.00704 44.557151C365.00704 44.675901 365.00704 44.689651 365.04891 44.871213C365.05579 44.892151 365.08391 45.010589 365.08391 45.08746C365.08391 45.70809 364.24672 45.8059 363.95391 45.82684C364.1561 45.95215 364.41422 46.18246 364.53266 46.28715C364.8886 46.62184 365.23735 46.94965 365.62766 46.94965C365.71141 46.94965 365.80204 46.92871 365.85797 46.85903C365.55797 46.81028 365.49516 46.57309 365.49516 46.4684C365.49516 46.31496 365.61391 46.21028 365.77422 46.21028C365.96266 46.21028 366.17172 46.36371 366.17172 46.65684C366.17172 46.88684 366.00454 47.14496 365.63485 47.14496C365.23735 47.14496 364.87454 46.85903 364.51891 46.53121C364.22579 46.25215 363.99579 46.0359 363.70954 45.91746L364.40016 48.70028Z"></path>
<path d="M371.97788 46.41278C372.08257 46.41278 372.24288 46.41278 372.24288 46.58715C372.24288 46.75434 372.07538 46.75434 371.98475 46.75434H367.367252C367.276627 46.75434 367.109127 46.75434 367.109127 46.58715C367.109127 46.41278 367.269752 46.41278 367.37444 46.41278H371.97788ZM371.98475 44.878089C372.07538 44.878089 372.24288 44.878089 372.24288 45.045588C372.24288 45.21996 372.08257 45.21996 371.97788 45.21996H367.37444C367.269752 45.21996 367.109127 45.21996 367.109127 45.045588C367.109127 44.878089 367.276627 44.878089 367.367252 44.878089H371.98475ZM376.33608 46.29403C376.33608 47.06121 376.24546 47.61246 375.92452 48.10059C375.70827 48.42153 375.27577 48.70028 374.71796 48.70028C373.09983 48.70028 373.09983 46.79621 373.09983 46.29403C373.09983 45.79184 373.09983 43.929651 374.71796 43.929651C376.33608 43.929651 376.33608 45.79184 376.33608 46.29403ZM374.71796 44.124963C374.39702 44.124963 373.97171 44.313089 373.83202 44.884964C373.73452 45.29653 373.73452 45.86871 373.73452 46.38465C373.73452 46.89403 373.73452 47.42403 373.83921 47.80778C373.98546 48.35871 374.43202 48.50528 374.71796 48.50528C375.09452 48.50528 375.45733 48.27496 375.58296 47.87028C375.69452 47.49371 375.70139 46.99153 375.70139 46.38465C375.70139 45.86871 375.70139 45.35246 375.61077 44.913088C375.47108 44.278401 374.99702 44.124963 374.71796 44.124963Z"></path>
<path d="M15.83287 11.74928C15.84256 11.80896 15.86256 11.85896 15.86256 11.92865C15.86256 12.09803 15.74318 12.19771 15.57381 12.19771C15.47412 12.19771 15.20505 12.12771 15.16537 11.76928C14.98599 12.13771 14.63724 12.39678 14.23881 12.39678C13.10349 12.39678 11.86818 11.0024 11.86818 9.56771C11.86818 8.581776 12.47568 7.993964 13.19287 7.993964C13.78068 7.993964 14.24881 8.462089 14.34849 8.571776L14.35849 8.561776C14.14943 7.675214 14.02974 7.266776 14.02974 7.246776C13.99006 7.157089 13.65131 6.17115 12.59537 6.17115C12.40599 6.17115 12.077243 6.18115 11.798493 6.27053C12.097243 6.36021 12.20693 6.61928 12.20693 6.78865C12.20693 6.94803 12.097243 7.137401 11.82818 7.137401C11.609118 7.137401 11.290368 6.95803 11.290368 6.55959C11.290368 6.15115 11.659118 5.95178 12.61537 5.95178C13.86037 5.95178 14.57756 6.72896 14.72693 7.326464L15.83287 11.74928ZM14.53787 9.26896C14.47787 9.0099 14.24881 8.760839 14.02974 8.571776C13.82068 8.392401 13.51162 8.213026 13.22287 8.213026C12.72474 8.213026 12.57537 8.731151 12.57537 9.12959C12.57537 9.60771 12.86443 10.78303 13.13318 11.29115C13.40224 11.77928 13.83037 12.17771 14.24881 12.17771C14.90631 12.17771 15.04568 11.37084 15.04568 11.32115C15.04568 11.27115 15.02599 11.21146 15.01599 11.17146L14.53787 9.26896Z"></path>
<path d="M19.54719 5.60334C19.54719 5.63303 19.54719 5.65303 19.37781 5.8224C18.13281 7.077401 17.81406 8.960214 17.81406 10.48428C17.81406 12.2174 18.1925 13.95084 19.41781 15.19584C19.54719 15.31553 19.54719 15.33553 19.54719 15.36521C19.54719 15.4349 19.50719 15.4649 19.4475 15.4649C19.34781 15.4649 18.45156 14.7874 17.86375 13.5224C17.35563 12.42678 17.23625 11.32115 17.23625 10.48428C17.23625 9.7074 17.34563 8.502089 17.89375 7.376464C18.49125 6.15115 19.34781 5.50365 19.4475 5.50365C19.50719 5.50365 19.54719 5.53365 19.54719 5.60334Z"></path>
<path d="M23.45121 11.0024C23.5109 11.26115 23.73996 12.17771 24.43715 12.17771C24.48715 12.17771 24.72621 12.17771 24.93527 12.04803C24.65652 11.99834 24.45715 11.74928 24.45715 11.51021C24.45715 11.35084 24.56683 11.16178 24.83558 11.16178C25.05496 11.16178 25.37371 11.34084 25.37371 11.73928C25.37371 12.2574 24.7859 12.39678 24.44715 12.39678C23.86933 12.39678 23.5209 11.86896 23.40121 11.6399C23.15215 12.29709 22.61433 12.39678 22.32558 12.39678C21.28933 12.39678 20.721833 11.11178 20.721833 10.86271C20.721833 10.76334 20.821208 10.76334 20.841208 10.76334C20.920895 10.76334 20.950895 10.78303 20.970583 10.87271C21.30933 11.92865 21.96683 12.17771 22.30558 12.17771C22.49465 12.17771 22.8434 12.08803 22.8434 11.51021C22.8434 11.20146 22.67402 10.53396 22.30558 9.13959C22.14621 8.521776 21.79746 8.103651 21.35933 8.103651C21.29933 8.103651 21.07027 8.103651 20.861208 8.233026C21.11027 8.282714 21.32933 8.492089 21.32933 8.770839C21.32933 9.0399 21.11027 9.11959 20.960895 9.11959C20.661833 9.11959 20.41277 8.860526 20.41277 8.541776C20.41277 8.083651 20.910895 7.884276 21.34933 7.884276C22.00683 7.884276 22.36527 8.581776 22.39527 8.641464C22.51465 8.273026 22.8734 7.884276 23.4709 7.884276C24.49715 7.884276 25.06465 9.16928 25.06465 9.41834C25.06465 9.51803 24.97527 9.51803 24.94527 9.51803C24.85558 9.51803 24.83558 9.47834 24.8159 9.40834C24.48715 8.342714 23.80965 8.103651 23.4909 8.103651C23.10246 8.103651 22.94308 8.422401 22.94308 8.760839C22.94308 8.980214 23.00277 9.19928 23.11246 9.63771L23.45121 11.0024Z"></path>
<path d="M28.69672 10.48428C28.69672 11.26115 28.58734 12.46646 28.03922 13.59209C27.44172 14.8174 26.584844 15.4649 26.485469 15.4649C26.425469 15.4649 26.385781 15.4249 26.385781 15.36521C26.385781 15.33553 26.385781 15.31553 26.575156 15.13615C27.55109 14.1499 28.11891 12.56615 28.11891 10.48428C28.11891 8.780839 27.75047 7.027714 26.515156 5.77271C26.385781 5.65303 26.385781 5.63303 26.385781 5.60334C26.385781 5.54365 26.425469 5.50365 26.485469 5.50365C26.584844 5.50365 27.48141 6.18115 28.06922 7.446151C28.57734 8.541776 28.69672 9.6474 28.69672 10.48428Z"></path>
<path d="M96.62073 10.1466L93.084476 5.77379C93.004788 5.6741 92.994788 5.6541 92.994788 5.61441C92.994788 5.50473 93.084476 5.50473 93.263851 5.50473H101.52166L102.37823 7.98504H102.12916C101.8801 7.23816 101.21291 6.63035 100.36604 6.3416C100.20666 6.2916 99.51948 6.05254 98.0551 6.05254H93.82166L97.27823 10.32598C97.34791 10.41566 97.3676 10.44566 97.3676 10.48535C97.3676 10.52535 97.35791 10.53504 97.29791 10.62473L94.06073 15.067539H98.00541C99.14073 15.067539 101.43198 14.997852 102.12916 13.13504H102.37823L101.52166 15.465977H93.263851C92.994788 15.465977 92.984788 15.455977 92.984788 15.147227L96.62073 10.1466Z"></path>
<path d="M103.794964 13.442393C103.767152 13.351768 103.725277 13.177393 103.725277 13.156456C103.725277 13.003018 103.850902 12.933331 103.96246 12.933331C104.08778 12.933331 104.19965 13.023956 104.23434 13.086768C104.26934 13.149581 104.32496 13.372706 104.35996 13.519268C104.39496 13.651768 104.47153 13.972393 104.5134 14.14677C104.55528 14.30052 104.59715 14.45396 104.63184 14.61427C104.70871 14.90021 104.72278 14.95614 104.92496 15.24208C105.12028 15.52114 105.44809 15.88364 105.97121 15.88364C106.37559 15.88364 106.38278 15.52802 106.38278 15.39552C106.38278 14.97708 106.08278 14.20271 105.97121 13.909893C105.89434 13.714581 105.86653 13.651768 105.86653 13.533018C105.86653 13.163331 106.1734 12.933331 106.52903 12.933331C107.22653 12.933331 107.53371 13.895831 107.53371 14.000518C107.53371 14.09114 107.44278 14.09114 107.42184 14.09114C107.32434 14.09114 107.31746 14.04927 107.28934 13.972393C107.12903 13.414581 106.82903 13.128643 106.54996 13.128643C106.40371 13.128643 106.37559 13.226143 106.37559 13.372706C106.37559 13.533018 106.41059 13.623643 106.53621 13.937706C106.61996 14.15396 106.9059 14.89333 106.9059 15.28396C106.9059 15.96052 106.36871 16.07896 105.99903 16.07896C105.42028 16.07896 105.02965 15.72333 104.82028 15.44427C104.77153 15.92552 104.35996 16.07896 104.07403 16.07896C103.774027 16.07896 103.613714 15.86271 103.523089 15.70239C103.369652 15.44427 103.271839 15.04677 103.271839 15.01177C103.271839 14.92114 103.369652 14.92114 103.390277 14.92114C103.488089 14.92114 103.494964 14.94208 103.544027 15.13052C103.648402 15.54177 103.780902 15.88364 104.05309 15.88364C104.23434 15.88364 104.28309 15.73021 104.28309 15.54177C104.28309 15.40927 104.22059 15.15146 104.17153 14.96302C104.12278 14.77458 104.05309 14.48864 104.01809 14.33521L103.794964 13.442393Z"></path>
<path d="M113.05736 14.57927C113.16892 14.57927 113.33642 14.57927 113.33642 14.74677C113.33642 14.92114 113.17611 14.92114 113.05736 14.92114H108.90017C108.788609 14.92114 108.621422 14.92114 108.621422 14.75364C108.621422 14.57927 108.781734 14.57927 108.90017 14.57927H113.05736Z"></path>
<path d="M116.43154 17.43927C116.43154 17.62739 116.41779 17.63427 116.22248 17.63427C115.77591 17.19489 115.14123 17.18802 114.855288 17.18802V16.93677C115.022788 16.93677 115.4831 16.93677 115.86654 17.13208V13.574893C115.86654 13.344893 115.86654 13.254268 115.16904 13.254268H114.904038V13.003018C115.029663 13.009893 115.88748 13.030831 116.1456 13.030831C116.36185 13.030831 117.2406 13.009893 117.39404 13.003018V13.254268H117.12904C116.43154 13.254268 116.43154 13.344893 116.43154 13.574893V17.43927Z"></path>
<path d="M106.0059 9.36435C106.0059 9.48279 105.91528 9.62935 105.72715 9.62935C105.52465 9.62935 105.33653 9.43404 105.33653 9.24592C105.33653 9.13404 105.42028 8.9806 105.61559 8.9806C105.80371 8.9806 106.0059 9.16217 106.0059 9.36435ZM104.52746 4.663103C104.40871 4.181853 104.03903 3.77748 103.627464 3.77748C103.536839 3.77748 103.453089 3.79123 103.376527 3.81935C103.557777 3.90279 103.613714 4.070291 103.613714 4.174978C103.613714 4.342478 103.481214 4.433103 103.341527 4.433103C103.125277 4.433103 102.944027 4.244666 102.944027 4.021541C102.944027 3.75654 103.215902 3.58217 103.634652 3.58217C104.05309 3.58217 104.86903 3.8331 105.08528 4.684041L105.71309 7.18123C105.73403 7.25779 105.74809 7.3206 105.74809 7.42529C105.74809 7.80904 105.42028 8.08092 105.00153 8.08092C104.22746 8.08092 103.780902 7.11154 103.780902 7.01373C103.780902 6.9231 103.878714 6.9231 103.899652 6.9231C103.9834 6.9231 103.99028 6.94404 104.03903 7.04873C104.2134 7.4531 104.57621 7.8856 104.98059 7.8856C105.15496 7.8856 105.21778 7.76717 105.21778 7.54373C105.21778 7.46717 105.20403 7.36935 105.19684 7.33467L104.52746 4.663103Z"></path>
<path d="M111.99991 7.34873C112.10459 7.34873 112.26491 7.34873 112.26491 7.5231C112.26491 7.69029 112.09741 7.69029 112.00678 7.69029H107.389281C107.298656 7.69029 107.131156 7.69029 107.131156 7.5231C107.131156 7.34873 107.291781 7.34873 107.396469 7.34873H111.99991ZM112.00678 5.814041C112.09741 5.814041 112.26491 5.814041 112.26491 5.981541C112.26491 6.15592 112.10459 6.15592 111.99991 6.15592H107.396469C107.291781 6.15592 107.131156 6.15592 107.131156 5.981541C107.131156 5.814041 107.298656 5.814041 107.389281 5.814041H112.00678ZM116.35811 7.22998C116.35811 7.99717 116.26748 8.54842 115.94655 9.03654C115.7303 9.35748 115.2978 9.63623 114.73998 9.63623C113.12186 9.63623 113.12186 7.73217 113.12186 7.22998S113.12186 4.865603 114.73998 4.865603C116.35811 4.865603 116.35811 6.72779 116.35811 7.22998ZM114.73998 5.060916C114.41905 5.060916 113.99373 5.249041 113.85405 5.820916C113.75655 6.23248 113.75655 6.80467 113.75655 7.3206C113.75655 7.82998 113.75655 8.35998 113.86123 8.74373C114.00748 9.29467 114.45405 9.44123 114.73998 9.44123C115.11655 9.44123 115.47936 9.21092 115.60498 8.80623C115.71655 8.42967 115.72342 7.92748 115.72342 7.3206C115.72342 6.80467 115.72342 6.28842 115.6328 5.849041C115.49311 5.214353 115.01905 5.060916 114.73998 5.060916Z"></path>
<path d="M122.60566 14.7974C122.60566 14.8074 122.60566 14.90709 122.47628 14.90709C122.24722 14.90709 121.52003 14.8274 121.26097 14.8074C121.181282 14.7974 121.071594 14.7874 121.071594 14.60834C121.071594 14.48865 121.161282 14.48865 121.31066 14.48865C121.78909 14.48865 121.80878 14.41896 121.80878 14.31928C121.80878 14.24959 121.71909 13.91084 121.66941 13.70178L120.852532 10.45428C120.733157 9.95646 120.693157 9.79709 120.693157 9.44834C120.693157 8.502089 121.221282 7.884276 121.95816 7.884276C123.13378 7.884276 124.35878 9.36865 124.35878 10.80303C124.35878 11.70959 123.83097 12.39678 123.03409 12.39678C122.57597 12.39678 122.16753 12.10803 121.86878 11.79928L122.60566 14.7974ZM121.66941 11.03209C121.72909 11.25115 121.72909 11.27115 121.81878 11.38084C122.30691 12.02834 122.75503 12.17771 123.01409 12.17771C123.37284 12.17771 123.64159 11.87896 123.64159 11.24146C123.64159 10.65365 123.31316 9.50803 123.13378 9.12959C122.80503 8.462089 122.34691 8.103651 121.95816 8.103651C121.61972 8.103651 121.29097 8.372401 121.29097 9.10959C121.29097 9.29896 121.29097 9.48803 121.45034 10.11584L121.66941 11.03209Z"></path>
<path d="M127.56188 10.85938C127.56188 10.97781 127.47125 11.12437 127.28313 11.12437C127.08063 11.12437 126.8925 10.92906 126.8925 10.74094C126.8925 10.62906 126.97625 10.47563 127.17156 10.47563C127.35969 10.47563 127.56188 10.65719 127.56188 10.85938ZM126.08344 6.158125C125.96469 5.676875 125.595 5.2725 125.183438 5.2725C125.092813 5.2725 125.009063 5.28625 124.932501 5.31438C125.113751 5.39781 125.169688 5.565313 125.169688 5.67C125.169688 5.8375 125.037188 5.928125 124.897501 5.928125C124.681251 5.928125 124.500001 5.739688 124.500001 5.516563C124.500001 5.25156 124.771876 5.07719 125.190626 5.07719C125.60906 5.07719 126.425 5.32812 126.64125 6.179063L127.26906 8.67625C127.29 8.75281 127.30406 8.81562 127.30406 8.92031C127.30406 9.30406 126.97625 9.57594 126.5575 9.57594C125.78344 9.57594 125.336876 8.60656 125.336876 8.50875C125.336876 8.41813 125.434688 8.41813 125.455626 8.41813C125.53938 8.41813 125.54625 8.43906 125.595 8.54375C125.76938 8.94813 126.13219 9.38063 126.53656 9.38063C126.71094 9.38063 126.77375 9.26219 126.77375 9.03875C126.77375 8.96219 126.76 8.86438 126.75281 8.82969L126.08344 6.158125Z"></path>
<path d="M132.02521 11.0024C132.0849 11.26115 132.31396 12.17771 133.01115 12.17771C133.06115 12.17771 133.30021 12.17771 133.50928 12.04803C133.23053 11.99834 133.03115 11.74928 133.03115 11.51021C133.03115 11.35084 133.14084 11.16178 133.40959 11.16178C133.62896 11.16178 133.94771 11.34084 133.94771 11.73928C133.94771 12.2574 133.3599 12.39678 133.02115 12.39678C132.44334 12.39678 132.0949 11.86896 131.97521 11.6399C131.72615 12.29709 131.18834 12.39678 130.89959 12.39678C129.86334 12.39678 129.295838 11.11178 129.295838 10.86271C129.295838 10.76334 129.395213 10.76334 129.415212 10.76334C129.4949 10.76334 129.5249 10.78303 129.544588 10.87271C129.88334 11.92865 130.54084 12.17771 130.87959 12.17771C131.06865 12.17771 131.4174 12.08803 131.4174 11.51021C131.4174 11.20146 131.24802 10.53396 130.87959 9.13959C130.72021 8.521776 130.37146 8.103651 129.93334 8.103651C129.87334 8.103651 129.644275 8.103651 129.435213 8.233026C129.684275 8.282714 129.90334 8.492089 129.90334 8.770839C129.90334 9.0399 129.684275 9.11959 129.5349 9.11959C129.235838 9.11959 128.986775 8.860526 128.986775 8.541776C128.986775 8.083651 129.4849 7.884276 129.92334 7.884276C130.58084 7.884276 130.93928 8.581776 130.96928 8.641464C131.08865 8.273026 131.4474 7.884276 132.0449 7.884276C133.07115 7.884276 133.63865 9.16928 133.63865 9.41834C133.63865 9.51803 133.54927 9.51803 133.51928 9.51803C133.42959 9.51803 133.40959 9.47834 133.3899 9.40834C133.06115 8.342714 132.38365 8.103651 132.0649 8.103651C131.67646 8.103651 131.51709 8.422401 131.51709 8.760839C131.51709 8.980214 131.57678 9.19928 131.68646 9.63771L132.02521 11.0024Z"></path>
<path d="M137.45385 15.96838C137.45385 16.08682 137.36322 16.23338 137.1751 16.23338C136.9726 16.23338 136.78447 16.03807 136.78447 15.84994C136.78447 15.73807 136.86822 15.58463 137.06354 15.58463C137.25166 15.58463 137.45385 15.7662 137.45385 15.96838ZM135.97541 11.267133C135.85666 10.785883 135.48697 10.38151 135.075411 10.38151C134.984786 10.38151 134.901036 10.39526 134.824473 10.42338C135.005723 10.50682 135.061661 10.67432 135.061661 10.779008C135.061661 10.946507 134.929161 11.037133 134.789473 11.037133C134.573223 11.037133 134.391973 10.848695 134.391973 10.62557C134.391973 10.36057 134.663848 10.1862 135.082598 10.1862C135.50104 10.1862 136.31697 10.43713 136.53322 11.28807L137.16104 13.78526C137.18197 13.86182 137.19604 13.92463 137.19604 14.02932C137.19604 14.41307 136.86822 14.68494 136.44947 14.68494C135.67541 14.68494 135.228848 13.71557 135.228848 13.61776C135.228848 13.52713 135.326661 13.52713 135.347598 13.52713C135.43135 13.52713 135.43822 13.54807 135.48697 13.65276C135.66135 14.05713 136.02416 14.48963 136.42854 14.48963C136.60291 14.48963 136.66572 14.3712 136.66572 14.14776C136.66572 14.07119 136.65197 13.97338 136.64479 13.93869L135.97541 11.267133Z"></path>
<path d="M320.88221 5.60334C320.88221 5.63303 320.88221 5.65303 320.71283 5.8224C319.46783 7.077401 319.14908 8.960214 319.14908 10.48428C319.14908 12.2174 319.52752 13.95084 320.75283 15.19584C320.88221 15.31553 320.88221 15.33553 320.88221 15.36521C320.88221 15.4349 320.84221 15.4649 320.78252 15.4649C320.68283 15.4649 319.78658 14.7874 319.19877 13.5224C318.69064 12.42678 318.571268 11.32115 318.571268 10.48428C318.571268 9.7074 318.68064 8.502089 319.22877 7.376464C319.82627 6.15115 320.68283 5.50365 320.78252 5.50365C320.84221 5.50365 320.88221 5.53365 320.88221 5.60334Z"></path>
<path d="M326.15091 11.74928C326.1606 11.80896 326.1806 11.85896 326.1806 11.92865C326.1806 12.09803 326.06123 12.19771 325.89185 12.19771C325.79216 12.19771 325.5231 12.12771 325.48341 11.76928C325.30404 12.13771 324.95529 12.39678 324.55685 12.39678C323.42154 12.39678 322.186227 11.0024 322.186227 9.56771C322.186227 8.581776 322.79373 7.993964 323.51091 7.993964C324.09873 7.993964 324.56685 8.462089 324.66654 8.571776L324.67654 8.561776C324.46748 7.675214 324.34779 7.266776 324.34779 7.246776C324.3081 7.157089 323.96935 6.17115 322.91341 6.17115C322.72404 6.17115 322.395289 6.18115 322.116539 6.27053C322.415289 6.36021 322.52498 6.61928 322.52498 6.78865C322.52498 6.94803 322.415289 7.137401 322.146227 7.137401C321.927164 7.137401 321.608414 6.95803 321.608414 6.55959C321.608414 6.15115 321.977164 5.95178 322.93341 5.95178C324.17841 5.95178 324.8956 6.72896 325.04498 7.326464L326.15091 11.74928ZM324.85591 9.26896C324.79591 9.0099 324.56685 8.760839 324.34779 8.571776C324.13873 8.392401 323.82966 8.213026 323.54091 8.213026C323.04279 8.213026 322.89341 8.731151 322.89341 9.12959C322.89341 9.60771 323.18248 10.78303 323.45123 11.29115C323.72029 11.77928 324.14841 12.17771 324.56685 12.17771C325.22435 12.17771 325.36373 11.37084 325.36373 11.32115C325.36373 11.27115 325.34404 11.21146 325.33404 11.17146L324.85591 9.26896Z"></path>
<path d="M329.86621 5.60334C329.86621 5.63303 329.86621 5.65303 329.69684 5.8224C328.45184 7.077401 328.13309 8.960214 328.13309 10.48428C328.13309 12.2174 328.51153 13.95084 329.73684 15.19584C329.86621 15.31553 329.86621 15.33553 329.86621 15.36521C329.86621 15.4349 329.82621 15.4649 329.76653 15.4649C329.66684 15.4649 328.77059 14.7874 328.18278 13.5224C327.67465 12.42678 327.555277 11.32115 327.555277 10.48428C327.555277 9.7074 327.66465 8.502089 328.21278 7.376464C328.81028 6.15115 329.66684 5.50365 329.76653 5.50365C329.82621 5.50365 329.86621 5.53365 329.86621 5.60334Z"></path>
<path d="M336.46953 11.69959C336.46953 12.14771 336.29016 12.39678 336.07109 12.39678C335.81203 12.39678 335.54297 12.15771 335.54297 11.92865C335.54297 11.82896 335.59297 11.71959 335.69266 11.6299C335.86172 11.48053 336.04109 11.21146 336.04109 10.79303C336.04109 10.39459 335.85203 9.82678 335.54297 9.36865C335.24422 8.940214 334.87578 8.601464 334.40766 8.601464C333.83984 8.601464 333.53109 8.960214 333.44141 9.49803C333.55078 9.75709 333.77984 10.39459 333.77984 10.67365C333.77984 10.79303 333.73016 10.89271 333.60078 10.89271C333.52109 10.89271 333.41141 10.87271 333.33172 10.72334C333.22203 10.52396 333.10266 9.87678 333.10266 9.51803C332.77391 9.0499 332.37547 8.601464 331.74797 8.601464C331.090468 8.601464 330.881406 9.18928 330.881406 9.74709C330.881406 10.9924 331.89734 12.03834 331.89734 12.16771C331.89734 12.2774 331.81766 12.35709 331.70797 12.35709C331.57859 12.35709 331.50891 12.2274 331.44891 12.13771C330.941093 11.40084 330.562656 10.21521 330.562656 9.30896C330.562656 8.621464 330.791718 7.884276 331.60828 7.884276C332.31578 7.884276 332.78391 8.382401 333.14234 8.930214C333.23203 8.352714 333.62047 7.884276 334.23828 7.884276C335.01516 7.884276 335.49328 8.492089 335.85203 9.23896C336.09109 9.72709 336.46953 11.08209 336.46953 11.69959Z"></path>
<path d="M338.82714 11.13125C338.83401 11.14531 338.85495 11.23594 338.85495 11.24312C338.85495 11.27781 338.82714 11.34062 338.74339 11.34062C338.60401 11.34062 338.02495 11.285 337.85057 11.27094C337.79495 11.26406 337.69714 11.25688 337.69714 11.11062C337.69714 11.01281 337.79495 11.01281 337.8787 11.01281C338.21339 11.01281 338.21339 10.96406 338.21339 10.90812C338.21339 10.85938 338.19932 10.8175 338.18557 10.75469L337.202136 6.806875C337.167136 6.68125 337.167136 6.6675 337.167136 6.653438C337.167136 6.54875 337.250886 6.430313 337.404323 6.430313C337.592761 6.430313 337.68339 6.569687 337.72526 6.723125C337.73901 6.75125 338.03901 7.97875 338.06682 8.07625C338.56214 8.0275 338.95964 7.86719 338.95964 7.50437C338.95964 7.469375 338.95964 7.434687 338.94589 7.365C338.91776 7.260312 338.91776 7.225313 338.91776 7.14875C338.91776 6.653438 339.32245 6.430313 339.65714 6.430313C340.3337 6.430313 340.54307 7.490313 340.54307 7.4975C340.54307 7.58812 340.45245 7.58812 340.43151 7.58812C340.3337 7.58812 340.32682 7.55313 340.29182 7.420625C340.20839 7.120625 340.01995 6.625625 339.67807 6.625625C339.48995 6.625625 339.43401 6.8 339.43401 6.988125C339.43401 7.106875 339.43401 7.120625 339.47589 7.302188C339.48276 7.323125 339.51089 7.441563 339.51089 7.51844C339.51089 8.13906 338.6737 8.23688 338.38089 8.25781C338.58307 8.38313 338.8412 8.61344 338.95964 8.71813C339.31557 9.05281 339.66432 9.38063 340.05464 9.38063C340.13839 9.38063 340.22901 9.35969 340.28495 9.29C339.98495 9.24125 339.92214 9.00406 339.92214 8.89937C339.92214 8.74594 340.04089 8.64125 340.2012 8.64125C340.38964 8.64125 340.5987 8.79469 340.5987 9.08781C340.5987 9.31781 340.43151 9.57594 340.06182 9.57594C339.66432 9.57594 339.30151 9.29 338.94589 8.96219C338.65276 8.68313 338.42276 8.46688 338.13651 8.34844L338.82714 11.13125Z"></path>
<path d="M344.42477 10.48428C344.42477 11.26115 344.31539 12.46646 343.76727 13.59209C343.16977 14.8174 342.312893 15.4649 342.213518 15.4649C342.153518 15.4649 342.113831 15.4249 342.113831 15.36521C342.113831 15.33553 342.113831 15.31553 342.303206 15.13615C343.27914 14.1499 343.84696 12.56615 343.84696 10.48428C343.84696 8.780839 343.47852 7.027714 342.243206 5.77271C342.113831 5.65303 342.113831 5.63303 342.113831 5.60334C342.113831 5.54365 342.153518 5.50365 342.213518 5.50365C342.312893 5.50365 343.20946 6.18115 343.79727 7.446151C344.30539 8.541776 344.42477 9.6474 344.42477 10.48428ZM348.29024 10.48428C348.29024 11.26115 348.18086 12.46646 347.63274 13.59209C347.03524 14.8174 346.17836 15.4649 346.07899 15.4649C346.01899 15.4649 345.9793 15.4249 345.9793 15.36521C345.9793 15.33553 345.9793 15.31553 346.16867 15.13615C347.14461 14.1499 347.71242 12.56615 347.71242 10.48428C347.71242 8.780839 347.34399 7.027714 346.10867 5.77271C345.9793 5.65303 345.9793 5.63303 345.9793 5.60334C345.9793 5.54365 346.01899 5.50365 346.07899 5.50365C346.17836 5.50365 347.07492 6.18115 347.66274 7.446151C348.17086 8.541776 348.29024 9.6474 348.29024 10.48428Z"></path>
<path d="M350.145975 12.695411C350.118163 12.604786 350.076288 12.430411 350.076288 12.409474C350.076288 12.256036 350.201913 12.186349 350.31348 12.186349C350.43879 12.186349 350.55066 12.276974 350.58535 12.339786C350.62035 12.402599 350.67598 12.625724 350.71098 12.772286C350.74598 12.904786 350.82254 13.225411 350.86441 13.39979C350.90629 13.55354 350.94816 13.70697 350.98285 13.86729C351.05973 14.15322 351.07379 14.20916 351.27598 14.4951C351.47129 14.77416 351.7991 15.13666 352.32223 15.13666C352.7266 15.13666 352.73379 14.78104 352.73379 14.64854C352.73379 14.2301 352.43379 13.45572 352.32223 13.162911C352.24535 12.967599 352.21754 12.904786 352.21754 12.786036C352.21754 12.416349 352.52441 12.186349 352.88004 12.186349C353.57754 12.186349 353.88473 13.148849 353.88473 13.253536C353.88473 13.34416 353.79379 13.34416 353.77285 13.34416C353.67535 13.34416 353.66848 13.30229 353.64035 13.225411C353.48004 12.667599 353.18004 12.381661 352.90098 12.381661C352.75473 12.381661 352.7266 12.479161 352.7266 12.625724C352.7266 12.786036 352.7616 12.876661 352.88723 13.190724C352.97098 13.40697 353.25691 14.14635 353.25691 14.53697C353.25691 15.21354 352.71973 15.33197 352.35004 15.33197C351.77129 15.33197 351.38066 14.97635 351.17129 14.69729C351.12254 15.17854 350.71098 15.33197 350.42504 15.33197C350.125038 15.33197 349.964725 15.11572 349.8741 14.95541C349.720663 14.69729 349.62285 14.29979 349.62285 14.26479C349.62285 14.17416 349.720663 14.17416 349.741288 14.17416C349.8391 14.17416 349.845975 14.1951 349.895038 14.38354C349.999413 14.79479 350.131913 15.13666 350.4041 15.13666C350.58535 15.13666 350.6341 14.98322 350.6341 14.79479C350.6341 14.66229 350.5716 14.40447 350.52254 14.21604C350.47379 14.0276 350.4041 13.74166 350.3691 13.58822L350.145975 12.695411Z"></path>
<path d="M359.40935 13.83229C359.52091 13.83229 359.68841 13.83229 359.68841 13.99979C359.68841 14.17416 359.5281 14.17416 359.40935 14.17416H355.25216C355.140601 14.17416 354.973413 14.17416 354.973413 14.00666C354.973413 13.83229 355.133726 13.83229 355.25216 13.83229H359.40935Z"></path>
<path d="M362.78255 16.69229C362.78255 16.88041 362.7688 16.88729 362.57349 16.88729C362.12692 16.44791 361.49224 16.44104 361.206299 16.44104V16.18979C361.373799 16.18979 361.83411 16.18979 362.21755 16.3851V12.827911C362.21755 12.597911 362.21755 12.507286 361.52005 12.507286H361.255049V12.256036C361.380674 12.262911 362.23849 12.283849 362.49661 12.283849C362.71286 12.283849 363.59161 12.262911 363.74505 12.256036V12.507286H363.48005C362.78255 12.507286 362.78255 12.597911 362.78255 12.827911V16.69229Z"></path>
<path d="M351.47816 9.62024C351.48504 9.6343 351.50598 9.72492 351.50598 9.73211C351.50598 9.7668 351.47816 9.82961 351.39441 9.82961C351.25504 9.82961 350.67598 9.77399 350.5016 9.75992C350.44598 9.75305 350.34816 9.74586 350.34816 9.59961C350.34816 9.5018 350.44598 9.5018 350.52973 9.5018C350.86441 9.5018 350.86441 9.45305 350.86441 9.39711C350.86441 9.34836 350.85035 9.30649 350.8366 9.24367L349.853163 5.295861C349.818163 5.170236 349.818163 5.156486 349.818163 5.142423C349.818163 5.037736 349.901913 4.919298 350.05535 4.919298C350.243788 4.919298 350.33441 5.058673 350.37629 5.212111C350.39004 5.240236 350.69004 6.46774 350.71785 6.56524C351.21316 6.51649 351.61066 6.35617 351.61066 5.99336C351.61066 5.958361 351.61066 5.923673 351.59691 5.853986C351.56879 5.749298 351.56879 5.714298 351.56879 5.637736C351.56879 5.142423 351.97348 4.919298 352.30816 4.919298C352.98473 4.919298 353.1941 5.979298 353.1941 5.986486C353.1941 6.07711 353.10348 6.07711 353.08254 6.07711C352.98473 6.07711 352.97785 6.04211 352.94285 5.909611C352.85941 5.609611 352.67098 5.114611 352.3291 5.114611C352.14098 5.114611 352.08504 5.288986 352.08504 5.477111C352.08504 5.595861 352.08504 5.609611 352.12691 5.791173C352.13379 5.812111 352.16191 5.930548 352.16191 6.00742C352.16191 6.62805 351.32473 6.72586 351.03191 6.7468C351.2341 6.87211 351.49223 7.10242 351.61066 7.20711C351.9666 7.5418 352.31535 7.86961 352.70566 7.86961C352.78941 7.86961 352.88004 7.84867 352.93598 7.77899C352.63598 7.73024 352.57316 7.49305 352.57316 7.38836C352.57316 7.23492 352.69191 7.13024 352.85223 7.13024C353.04066 7.13024 353.24973 7.28367 353.24973 7.5768C353.24973 7.8068 353.08254 8.06492 352.71285 8.06492C352.31535 8.06492 351.95254 7.77899 351.59691 7.45117C351.30379 7.17211 351.07379 6.95586 350.78754 6.83742L351.47816 9.62024Z"></path>
<path d="M359.0549 7.33274C359.15959 7.33274 359.3199 7.33274 359.3199 7.50711C359.3199 7.6743 359.1524 7.6743 359.06178 7.6743H354.444276C354.353651 7.6743 354.186151 7.6743 354.186151 7.50711C354.186151 7.33274 354.346776 7.33274 354.451463 7.33274H359.0549ZM359.06178 5.798048C359.1524 5.798048 359.3199 5.798048 359.3199 5.965548C359.3199 6.13992 359.15959 6.13992 359.0549 6.13992H354.451463C354.346776 6.13992 354.186151 6.13992 354.186151 5.965548C354.186151 5.798048 354.353651 5.798048 354.444276 5.798048H359.06178ZM363.4131 7.21399C363.4131 7.98117 363.32248 8.53242 363.00154 9.02055C362.78529 9.34149 362.35279 9.62024 361.79498 9.62024C360.17685 9.62024 360.17685 7.71617 360.17685 7.21399C360.17685 6.7118 360.17685 4.849611 361.79498 4.849611C363.4131 4.849611 363.4131 6.7118 363.4131 7.21399ZM361.79498 5.044923C361.47404 5.044923 361.04873 5.233048 360.90904 5.804923C360.81154 6.21649 360.81154 6.78867 360.81154 7.30461C360.81154 7.81399 360.81154 8.34399 360.91623 8.72774C361.06248 9.27867 361.50904 9.42524 361.79498 9.42524C362.17154 9.42524 362.53435 9.19492 362.65998 8.79024C362.77154 8.41367 362.77842 7.91149 362.77842 7.30461C362.77842 6.78867 362.77842 6.27242 362.68779 5.833048C362.5481 5.198361 362.07404 5.044923 361.79498 5.044923Z"></path>
<path d="M142.6992 87.3086H312.277" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M310.40666 89.69923C310.78166 88.261729 311.625407 87.585948 312.476969 87.308604C311.625407 87.027354 310.78166 86.351573 310.40666 84.91798" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M224.77711 91.99674C224.77711 93.32174 223.72399 94.41705 222.4268 94.41705H219.678676V94.1658H219.845864C220.38305 94.1658 220.39711 94.09611 220.39711 93.85205V90.217987C220.39711 89.980799 220.38305 89.904237 219.845864 89.904237H219.678676V89.652987H222.4268C223.71024 89.652987 224.77711 90.68517 224.77711 91.99674ZM224.05899 91.99674C224.05899 91.18736 223.85649 90.76892 223.61243 90.476112C223.29868 90.120174 222.79649 89.904237 222.23836 89.904237H221.36649C221.03868 89.904237 221.0318 89.959862 221.0318 90.176112V93.89392C221.0318 94.10986 221.03868 94.1658 221.36649 94.1658H222.23149C222.8243 94.1658 223.34055 93.92174 223.66118 93.51017C223.94711 93.13361 224.05899 92.6033 224.05899 91.99674ZM230.0283 92.78486L229.8192 94.38892H225.66204V94.13799H225.82954C226.36641 94.13799 226.38047 94.0683 226.38047 93.82392V90.217987C226.38047 89.980799 226.36641 89.904237 225.82954 89.904237H225.66204V89.652987L226.72235 89.680799L227.94297 89.652987V89.904237H227.6986C227.04297 89.904237 227.04297 89.994862 227.04297 90.224862V91.89892H227.71954C228.41704 91.89892 228.51485 91.68955 228.51485 91.08299H228.75204V92.96611H228.51485C228.51485 92.36611 228.41704 92.15017 227.71954 92.15017H227.04297V93.8658C227.04297 94.08205 227.05016 94.13799 227.37797 94.13799H228.35422C229.4773 94.13799 229.6658 93.76111 229.7911 92.78486H230.0283ZM235.7539 92.76392L235.6073 94.36799H230.8923L230.7458 92.76392H230.983C231.0808 93.97049 231.283 94.11705 232.357 94.11705C232.4967 94.11705 232.6989 94.11705 232.7686 94.10986C232.922 94.08205 232.922 94.00549 232.922 93.84486V90.224862C232.922 89.994862 232.922 89.904237 232.1967 89.904237H231.9036V89.652987C232.2455 89.680799 232.8942 89.680799 233.257 89.680799C233.6195 89.680799 234.2614 89.680799 234.603 89.652987V89.904237H234.3102C233.5848 89.904237 233.5848 89.994862 233.5848 90.224862V93.84486C233.5848 94.00549 233.5848 94.08205 233.7383 94.10986C233.808 94.11705 234.0102 94.11705 234.1498 94.11705C234.5402 94.11705 234.8402 94.11705 235.0842 93.97736C235.3983 93.78924 235.447 93.34267 235.4539 93.30799L235.5167 92.76392H235.7539Z"></path>
<path d="M115.5117 77.9766V60.82422" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-dasharray=".39848 1.99255"></path>
<path d="M117.90282 62.69925C116.469221 62.32034 115.789534 61.476592 115.51219 60.62503C115.23094 61.476592 114.555159 62.32034 113.12157 62.69925" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M341.254 77.9609V60.07813" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M343.6445 61.95315C342.210902 61.57425 341.535121 60.730498 341.253871 59.878935C340.976527 60.730498 340.29684 61.57425 338.86325 61.95315" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M300.176 49.5664H166.8711" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M168.74618 47.17574C168.36727 48.609336 167.523525 49.285117 166.671962 49.566367C167.523525 49.843711 168.36727 50.523398 168.74618 51.95699" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M227.29213 54.25571C227.29213 55.58071 226.239 56.67603 224.94181 56.67603H222.193689V56.42478H222.360876C222.89806 56.42478 222.91213 56.35509 222.91213 56.11103V52.476963C222.91213 52.239776 222.89806 52.163213 222.360876 52.163213H222.193689V51.911963H224.94181C226.22525 51.911963 227.29213 52.94415 227.29213 54.25571ZM226.574 54.25571C226.574 53.44634 226.3715 53.0279 226.12744 52.735088C225.81369 52.379151 225.3115 52.163213 224.75338 52.163213H223.8815C223.55369 52.163213 223.54681 52.218838 223.54681 52.435088V56.1529C223.54681 56.36884 223.55369 56.42478 223.8815 56.42478H224.7465C225.33931 56.42478 225.85556 56.18071 226.17619 55.76915C226.46213 55.39259 226.574 54.86228 226.574 54.25571ZM232.5433 55.04384L232.3342 56.6479H228.17705V56.39696H228.34455C228.88142 56.39696 228.89549 56.32728 228.89549 56.0829V52.476963C228.89549 52.239776 228.88142 52.163213 228.34455 52.163213H228.17705V51.911963L229.23736 51.939776L230.45799 51.911963V52.163213H230.21361C229.55799 52.163213 229.55799 52.253838 229.55799 52.483838V54.1579H230.23455C230.93205 54.1579 231.02986 53.94853 231.02986 53.34196H231.26705V55.22509H231.02986C231.02986 54.62509 230.93205 54.40915 230.23455 54.40915H229.55799V56.12478C229.55799 56.34103 229.56517 56.39696 229.89299 56.39696H230.86924C231.9924 56.39696 232.1808 56.02009 232.3061 55.04384H232.5433ZM238.2689 55.0229L238.1224 56.62696H233.4074L233.2608 55.0229H233.498C233.5958 56.22946 233.798 56.37603 234.872 56.37603C235.0117 56.37603 235.2139 56.37603 235.2836 56.36884C235.437 56.34103 235.437 56.26446 235.437 56.10384V52.483838C235.437 52.253838 235.437 52.163213 234.7117 52.163213H234.4186V51.911963C234.7605 51.939776 235.4092 51.939776 235.772 51.939776C236.1345 51.939776 236.7764 51.939776 237.118 51.911963V52.163213H236.8252C236.0999 52.163213 236.0999 52.253838 236.0999 52.483838V56.10384C236.0999 56.26446 236.0999 56.34103 236.2533 56.36884C236.323 56.37603 236.5252 56.37603 236.6649 56.37603C237.0552 56.37603 237.3552 56.37603 237.5992 56.23634C237.9133 56.04821 237.962 55.60165 237.9689 55.56696L238.0317 55.0229H238.2689Z"></path>
<path d="M240.48044 55.799874V56.18331H238.826379V55.799874H240.48044ZM243.72818 54.917999V55.137062H243.47911C242.95099 55.137062 242.95099 55.192062 242.95099 55.346437V58.08675C242.95099 58.23612 242.93599 58.23612 242.77161 58.23612C242.41786 57.91737 241.86505 57.91737 241.76536 57.91737H241.68068V57.698H241.76536C241.88005 57.698 242.2038 57.713 242.49286 57.83769V55.346437C242.49286 55.192062 242.49286 55.137062 241.96474 55.137062H241.71536V54.917999C241.98943 54.937999 242.43286 54.937999 242.72193 54.937999C243.01099 54.937999 243.45411 54.937999 243.72818 54.917999Z"></path>
<path d="M143.0859 10.4844H312.699" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M310.82431 12.87497C311.20321 11.441375 312.046963 10.761687 312.898526 10.484344C312.046963 10.207 311.20321 9.527312 310.82431 8.09372" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M225.1801 15.17477C225.1801 16.49977 224.12698 17.59508 222.82979 17.59508H220.081663V17.34383H220.248851C220.78604 17.34383 220.8001 17.27415 220.8001 17.03008V13.396021C220.8001 13.158833 220.78604 13.082271 220.248851 13.082271H220.081663V12.831021H222.82979C224.11323 12.831021 225.1801 13.86321 225.1801 15.17477ZM224.46198 15.17477C224.46198 14.3654 224.25948 13.94696 224.01541 13.654146C223.70166 13.298208 223.19948 13.082271 222.64135 13.082271H221.76948C221.44166 13.082271 221.43479 13.137896 221.43479 13.354146V17.07196C221.43479 17.2879 221.44166 17.34383 221.76948 17.34383H222.63448C223.22729 17.34383 223.74354 17.09977 224.06416 16.68821C224.3501 16.31165 224.46198 15.78133 224.46198 15.17477ZM230.4313 15.9629L230.2222 17.56696H226.06502V17.31602H226.23252C226.7694 17.31602 226.78346 17.24633 226.78346 17.00196V13.396021C226.78346 13.158833 226.7694 13.082271 226.23252 13.082271H226.06502V12.831021L227.12534 12.858833L228.34596 12.831021V13.082271H228.10159C227.44596 13.082271 227.44596 13.172896 227.44596 13.402896V15.07696H228.12252C228.82002 15.07696 228.91784 14.86758 228.91784 14.26102H229.15502V16.14415H228.91784C228.91784 15.54415 228.82002 15.32821 228.12252 15.32821H227.44596V17.04383C227.44596 17.26008 227.45315 17.31602 227.78096 17.31602H228.75721C229.8803 17.31602 230.0688 16.93915 230.1941 15.9629H230.4313ZM236.1569 15.94196L236.0103 17.54602H231.2953L231.1488 15.94196H231.386C231.4838 17.14852 231.686 17.29508 232.76 17.29508C232.8997 17.29508 233.1019 17.29508 233.1716 17.2879C233.325 17.26008 233.325 17.18352 233.325 17.0229V13.402896C233.325 13.172896 233.325 13.082271 232.5997 13.082271H232.3066V12.831021C232.6485 12.858833 233.2972 12.858833 233.66 12.858833C234.0225 12.858833 234.6644 12.858833 235.006 12.831021V13.082271H234.7131C233.9878 13.082271 233.9878 13.172896 233.9878 13.402896V17.0229C233.9878 17.18352 233.9878 17.26008 234.1413 17.2879C234.211 17.29508 234.4131 17.29508 234.5528 17.29508C234.9431 17.29508 235.2431 17.29508 235.4872 17.1554C235.8013 16.96727 235.85 16.52071 235.8569 16.48602L235.9197 15.94196H236.1569Z"></path>
<path d="M115.5117 21.3477V38.4844" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-dasharray=".39848 1.99255"></path>
<path d="M113.12157 36.60938C114.555159 36.98829 115.23094 37.832041 115.51219 38.683604C115.789534 37.832041 116.469221 36.98829 117.90282 36.60938" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
<path d="M341.254 20.5977V39.8203" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10"></path>
<path d="M338.86325 37.94926C340.29684 38.32817 340.976527 39.171916 341.253871 40.019572C341.535121 39.171916 342.210902 38.32817 343.6445 37.94926" stroke="#000" fill="none" stroke-width=".39848" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-tikzcd-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
图&nbsp;4: 带中文的 tikzcd 测试图片
</figcaption>
</figure>
</div>
</section>
<section id="layout" class="level2 page-columns page-full" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="layout"><span class="header-section-number">7</span> Layout</h2>
<p>如 <a href="https://quarto.org/docs/authoring/article-layout.html">Quarto - Article Layout</a> 所述，有时可让文章某些部分超出常规的宽度限制．此功能主要在 HTML 中使用，PDF 中部分生效，其它格式不生效．</p>
<div class="column-page">
<table class="table">
<colgroup>
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 19%">
<col style="width: 19%">
<col style="width: 19%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?n"> 个球</th>
<th style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?r"> 个盒</th>
<th style="text-align: center;">空盒</th>
<th style="text-align: center;">递推或封闭形式</th>
<th style="text-align: center;">生成函数</th>
<th style="text-align: center;">备注</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">有标号</td>
<td style="text-align: center;">无标号</td>
<td style="text-align: center;">不允许</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%7Bn%20%5Cbrace%20r%7D%20=%20r%20%7Bn-1%20%5Cbrace%20r%7D%20+%20%7Bn-1%20%5Cbrace%20r-1%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BEGF%7D(x)=%5Cfrac%20%7B(e%5Ex%20-%201)%5Er%7D%7Br!%7D"></td>
<td style="text-align: center;">第二类 Stirling 数</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="代码块和引用" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="代码块和引用"><span class="header-section-number">8</span> 代码块和引用</h2>
<p>下面是代码块．</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-3"></span>
<span id="cb5-4">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb5-5">theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r</span>
<span id="cb5-6">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(</span>
<span id="cb5-7">  subplot_kw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'projection'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'polar'</span>} </span>
<span id="cb5-8">)</span>
<span id="cb5-9">ax.plot(theta, r)</span>
<span id="cb5-10">ax.set_rticks([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb5-11">ax.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-12">plt.show()</span></code></pre></div>
<p>下面是引用块和一个非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</p>
<blockquote class="blockquote">
<p>这是一个引用块和一个非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</p>
</blockquote>
</section>
<section id="html-专用测试" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="html-专用测试"><span class="header-section-number">9</span> HTML 专用测试</h2>
<p>目前暂未处理 LaTeX/PDF 格式的 callout，MS Word 格式可兼容但效果不佳．本节后续内容将不会在 LaTeX/PDF 格式下被渲染．</p>
<section id="callouts" class="level3" data-number="9.1">
<h3 data-number="9.1" class="anchored" data-anchor-id="callouts"><span class="header-section-number">9.1</span> Callouts</h3>
<p>Quarto 具有 5 种 callout 类型：<code>note</code>，<code>warning</code>，<code>important</code>，<code>tip</code>，和 <code>caution</code>．</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>普通的 note callout．</p>
</div>
</div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>这是 warning callout 和一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</p>
</div>
</div>
<p>这是两个 callout 中间的一个段落．</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>这是 important callout．</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
有 caption 的 callout
</div>
</div>
<div class="callout-body-container callout-body">
<p>这是有 caption 的 callout．</p>
</div>
</div>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
可折叠的 callout
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>开启 collapse 的可折叠 caution callout．</p>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-caution">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>simple 风格的 callout 和一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</p>
</div>
</div>
</div>
<div class="callout callout-style-simple callout-caution no-icon">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-body-container">
<p>minimal 风格的 callout 和一个和非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常非常长的句子．</p>
</div>
</div>
</div>
</section>
</section>
<section id="引用脚注测试" class="level2 page-columns page-full" data-number="10">
<h2 data-number="10" class="anchored" data-anchor-id="引用脚注测试"><span class="header-section-number">10</span> 引用、脚注测试</h2>
<p>这是一个脚注<sup>1</sup>．</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;参见 <a href="https://quarto.org/docs/authoring/footnotes-and-citations.html">Quarto - Citations &amp; Footnotes</a></p></div></div><p>人脸识别是以人面部特征作为识别个体身份的一种个体生物特征识别方法 <span class="citation" data-cites="define">[1]</span>．……人脸识别的研究最早可追溯到上世纪 60 年代，Bledsoe and Chan 研究了编程计算机识别人脸的方法<span class="citation" data-cites="history">[2]</span>．随后，萌芽期的人脸识别技术经历多轮蜕变，在发展中逐渐完善．然而，人脸识别的主要难点在于不同个体的人脸结构并无大异，而同一个体的人脸在不同表情、年龄、妆饰、光照等干扰因素下又往往差异显著<span class="citation" data-cites="technical">[3]</span>，这要求人脸识别技术既要克服类内因素的干扰，同时又要加强类间差距的显著性，而早期人脸识别方法关注人脸几何特征，识别效果不尽人意．为此，以 Eigenfaces<span class="citation" data-cites="eigenfaces">[4]</span> 为代表的子空间学习识别方法和 Gabor<span class="citation" data-cites="gabor">[5]</span>、LBP<span class="citation" data-cites="lbp">[6]</span> 等局部特征分析的滤波器提取方法在各自领域都有所突破．2014 年，应用新兴的深度卷积神经网络技术，DeepFace<span class="citation" data-cites="deepface">[7]</span> 横空出世，以 97.35% 的 LFW 基准数据集识别准确率重塑了人脸识别领域的研究格局．随后，人脸识别技术迎来爆发式增长，并逐渐走进人们的日常生活之中．……个体层面，要加强公众的权利意识，塑造个人的“数字理性”<span class="citation" data-cites="guochunzhen">[8]</span>．</p>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-define" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">全国信息安全标准化技术委员会, <span>《《信息安全技术远程人脸识别系统技术要求》（GB/T38671-2020）》</span>. <a href="https://std.samr.gov.cn/gb/search/gbDetailed?id=A47A713B767814ABE05397BE0A0ABB25" class="uri">https://std.samr.gov.cn/gb/search/gbDetailed?id=A47A713B767814ABE05397BE0A0ABB25</a>, 2020年.</div>
</div>
<div id="ref-history" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">W. W. Bledsoe 和 H. Chan, <span>《A man-machine facial recognition system—some preliminary results》</span>, <em>Panoramic Research, Inc, Palo Alto, California., Technical Report PRI A</em>, 卷 19, 页 1965, 1965.</div>
</div>
<div id="ref-technical" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline">余璀璨 和 李慧斌, <span>《基于深度学习的人脸识别方法综述》</span>, <em>工程数学学报</em>, 卷 38, 期 4, 页 19, 2021.</div>
</div>
<div id="ref-eigenfaces" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline">M. Turk 和 A. Pentland, <span>《Eigenfaces for Recognition》</span>, <em>Journal of Cognitive Neuroscience</em>, 卷 3, 期 1, 页 71–86.</div>
</div>
<div id="ref-gabor" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">C. Liu 和 H. Wechsler, <span>《A Gabor feature classifier for face recognition》</span>, 收入 <em>Proceedings Eighth IEEE International Conference on Computer Vision. ICCV 2001</em>, IEEE, 2001, 页 270–275.</div>
</div>
<div id="ref-lbp" class="csl-entry">
<div class="csl-left-margin">[6] </div><div class="csl-right-inline">T. Ahonen, A. Hadid, 和 M. Pietikäinen, <span>《Face recognition with local binary patterns》</span>, 收入 <em>European conference on computer vision</em>, Springer, 2004, 页 469–481.</div>
</div>
<div id="ref-deepface" class="csl-entry">
<div class="csl-left-margin">[7] </div><div class="csl-right-inline">Y. Taigman, M. Yang, M. Ranzato, 和 L. Wolf, <span>《Closing the gap to human-level performance in face verification. deepface》</span>, 收入 <em>Proceedings of the IEEE Computer Vision and Pattern Recognition (CVPR)</em>, 页 6.</div>
</div>
<div id="ref-guochunzhen" class="csl-entry">
<div class="csl-left-margin">[8] </div><div class="csl-right-inline">郭春镇, <span>《数字人权时代人脸识别技术应用的治理》</span>, <em>现代法学</em>, 卷 42, 期 4, 页 18, 2020.</div>
</div>
</div></section></div> ]]></description>
  <category>web</category>
  <category>LaTeX</category>
  <category>站点相关</category>
  <guid>https://blog.sun123zxy.top/posts/20221223-quarto-test/</guid>
  <pubDate>Tue, 06 Dec 2022 16:00:00 GMT</pubDate>
</item>
<item>
  <title>关于泰勒展开拉格朗日余项中值点的渐进性</title>
  <link>https://blog.sun123zxy.top/posts/20221110-taylor/</link>
  <description><![CDATA[ 




<p>之前学拉格朗日中值定理的时候做到一道涉及到特定函数中值渐进性的题，感觉似乎有一般的结论，推广了一下就是这样了。</p>
<p>感谢刘导拯救 <img src="https://latex.codecogs.com/png.latex?n=1"> 都不会证的我，感谢王佬指出这是中科大《数学分析教程》第三版问题 4.3.1。</p>
<blockquote class="blockquote">
<p>设函数 <img src="https://latex.codecogs.com/png.latex?f(x)"> 在区间 <img src="https://latex.codecogs.com/png.latex?I"> 上有 <img src="https://latex.codecogs.com/png.latex?n+1"> 阶导数，<img src="https://latex.codecogs.com/png.latex?x_0%20%5Cin%20I">，<img src="https://latex.codecogs.com/png.latex?f%5E%7B(n+1)%7D(x_0)%20%5Cnot%20=%200">；定义函数 <img src="https://latex.codecogs.com/png.latex?T_n(x)"> 为 <img src="https://latex.codecogs.com/png.latex?f(x)"> 在 <img src="https://latex.codecogs.com/png.latex?x=x_0"> 处的 <img src="https://latex.codecogs.com/png.latex?n"> 阶泰勒多项式：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AT(x)%20=%20T_n(x_0+h)%20=%20%5Csum_%7Bk=0%7D%5En%20%5Cfrac%7Bf%5E%7B(k)%7D(x_0)%7D%7Bk!%7D%20h%5Ek%0A"></p>
<p>求证： <img src="https://latex.codecogs.com/png.latex?f(x)"> 在 <img src="https://latex.codecogs.com/png.latex?x=x_0"> 处带拉格朗日余项的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶泰勒展开</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af(x)%20=%20f(x_0+h)%20=%20T_%7Bn-1%7D(x_0+h)%20+%20%5Cfrac%7Bf%5E%7B(n)%7D(x_0+%5Ctheta%20h)%7D%7Bn!%7D%20h%5En%20%5Cqquad%20%5Ctheta%20%5Cin%20(0,1)%0A"></p>
<p>中的 <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 满足：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bh%20%5Cto%200%7D%20%5Ctheta%20=%20%5Cfrac%201%20%7Bn+1%7D%0A"></p>
</blockquote>
<p>非常漂亮的结论啊。</p>
<p>理一下思路。关键点在于怎么构造出 <img src="https://latex.codecogs.com/png.latex?%5Ctheta">，得想办法把它从 <img src="https://latex.codecogs.com/png.latex?f%5E%7B(n)%7D(x_0+%5Ctheta%20h)"> 这样的形式中拿出来。或许我们能想到构造</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bf%5E%7B(n)%7D(x_0+%5Ctheta%20h)%20-%20f%5E%7B(n)%7D(x_0)%7D%7B%5Ctheta%20h%7D%20%5Cto%20f%5E%7B(n+1)%7D(x_0)%20%5Cqquad%20(h%20%5Cto%200)%0A"></p>
<p>这样 <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 就可以拿出来单独求极限了。<img src="https://latex.codecogs.com/png.latex?f%5E%7B(n)%7D(x_0+%5Ctheta%20h)"> 可以从 <img src="https://latex.codecogs.com/png.latex?f(x)"> 的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶泰勒展开的拉格朗日余项中得到，而 <img src="https://latex.codecogs.com/png.latex?f%5E%7B(n)%7D(x_0)"> 和 <img src="https://latex.codecogs.com/png.latex?f%5E%7B(n+1)%7D(x_0)"> 也可以从 <img src="https://latex.codecogs.com/png.latex?f(x)"> 的 <img src="https://latex.codecogs.com/png.latex?n+1"> 阶带皮亚诺余项的泰勒展开中拿到。于是，下面的证明就十分自然了。</p>
<p><strong>证明：</strong> 考虑 <img src="https://latex.codecogs.com/png.latex?f(x)"> 的 <img src="https://latex.codecogs.com/png.latex?n-1"> 阶带拉格朗日余项的泰勒展开</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af(x_0%20+%20h)%20=%20T_%7Bn-1%7D(x_0%20+%20h)%20+%20%5Cfrac%7Bf%5E%7B(n)%7D(x_0+%5Ctheta%20h)%7D%7Bn!%7D%20h%5En%0A"></p>
<p>和 <img src="https://latex.codecogs.com/png.latex?f(x)"> 的 <img src="https://latex.codecogs.com/png.latex?n+1"> 阶带皮亚诺余项的泰勒展开</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Af(x_0%20+%20h)%20=%20T_%7Bn+1%7D(x_0%20+%20h)%20+%20o(h%5E%7Bn+1%7D)%20=%20T_%7Bn-1%7D(x_0%20+%20h)%20+%20%5Cfrac%7Bf%5E%7B(n)%7D(x_0)%7D%7Bn!%7D%20h%5En%20+%20%5Cfrac%7Bf%5E%7B(n+1)%7D(x_0)%7D%7B(n+1)!%7D%20h%5E%7Bn+1%7D%20+%20o(h%5E%7Bn+1%7D)%0A"></p>
<p>两式相减得</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bf%5E%7B(n)%7D(x_0+%5Ctheta%20h)%7D%7Bn!%7D%20h%5En%20=%20%5Cfrac%7Bf%5E%7B(n)%7D(x_0)%7D%7Bn!%7D%20h%5En%20+%20%5Cfrac%7Bf%5E%7B(n+1)%7D(x_0)%7D%7B(n+1)!%7D%20h%5E%7Bn+1%7D%20+%20o(h%5E%7Bn+1%7D)%0A"></p>
<p>移项整理得</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctheta%20%5Ccdot%20%5Cfrac%7Bf%5E%7B(n)%7D(x_0+%5Ctheta%20h)-f%5E%7B(n)%7D(x_0)%7D%7B%5Ctheta%20h%7D%20=%20%5Cfrac%7Bf%5E%7B(n+1)%7D(x_0)%7D%7Bn+1%7D%20+%20n!%20%5Ccdot%20%5Cfrac%20%7Bo(h%5E%7Bn+1%7D)%7D%7Bh%5E%7Bn+1%7D%7D%0A"></p>
<p>两侧同时取 <img src="https://latex.codecogs.com/png.latex?h%20%5Cto%200"> 即得</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bh%20%5Cto%200%7D%20%5Ctheta%20%5Ccdot%20f%5E%7B(n+1)%7D(x_0)%20=%20%5Cfrac%7Bf%5E%7B(n+1)%7D(x_0)%7D%7Bn+1%7D%0A"></p>
<p>于是由 <img src="https://latex.codecogs.com/png.latex?f%5E%7B(n+1)%7D(x_0)%20%5Cnot%20=%200">，我们有</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clim_%7Bh%20%5Cto%200%7D%20%5Ctheta%20=%20%5Cfrac%7B1%7D%7Bn+1%7D%0A"></p>
<p>得证。</p>
<hr>
<p>备考：</p>
<pre><code>Azpeitia A G. On the Lagrange remainder of the Taylor formula[J]. The American Mathematical Monthly, 1982, 89(5): 311-312.
Abel U. On the Lagrange remainder of the Taylor formula[J]. The American mathematical monthly, 2003, 110(7): 627-633.</code></pre>
<p>这两篇论文似乎对这种渐进性有更深入的讨论。</p>



 ]]></description>
  <category>数学</category>
  <category>题解</category>
  <guid>https://blog.sun123zxy.top/posts/20221110-taylor/</guid>
  <pubDate>Tue, 01 Nov 2022 16:00:00 GMT</pubDate>
</item>
<item>
  <title>关于 Python 的 import</title>
  <link>https://blog.sun123zxy.top/posts/20220714-import/</link>
  <description><![CDATA[ 




<p>好久以前就被 Python 的相对与绝对导入所困扰。去年粗浅探究后自以为完全理解，近来又因 <code>sys.path[0]</code> 和 <code>os.getcwd()</code> 的不一致而刷新了认知…</p>
<p>Python 官方文档 <a href="https://docs.python.org/3/reference/import.html">5. The import system — Python 3.10.5 documentation</a> 当然是最好的学习指南，但全部看完对我来说还是有点难度。这里只选择一些要点讨论。</p>
<section id="from-import" class="level2">
<h2 class="anchored" data-anchor-id="from-import">from import</h2>
<p><code>import A</code>、<code>import A as B</code>、<code>from A import B</code> 结构中，<code>A</code> 最小只能到 module。因此，只有使用 <code>from import</code> 结构才可以单独获取 module 里的属性。另外，相对引用必须使用 <code>from import</code> 结构。</p>
<p><code>from module import *</code> 将导入 <code>module</code> 中的所有成员（有单双下划线前导的成员除外）。对于 package 可在 <code>__init__.py</code> 中定义 <code>__all__ = ["module", "module", ...]</code> 来手动控制的实际导入内容。</p>
</section>
<section id="package-与-__init__.py" class="level2">
<h2 class="anchored" data-anchor-id="package-与-__init__.py">Package 与 __init__.py</h2>
<p>Python 3.3 以后的 package 不再硬性需要 <code>__init__.py</code>，普通文件夹等同于 <code>__init__.py</code> 留空的 namespace package。（关于 regular package 和 namespace package 的区别，参见 <a href="https://docs.python.org/3/reference/import.html#regular-packages">5. The import system — Python 3.10.5 documentation</a>）</p>
<p><code>__init__.py</code> 的作用在于当我们直接导入一个 package 的时候，实际上是执行了 <code>__init__.py</code>。换句话说，直接导入一个 package 就是把它看做一个逻辑写在 <code>__init__.py</code> 里的 module。</p>
<p>需要注意的是，对于形如 <code>A.B.C</code> 的导入，<code>A</code>、<code>A.B</code>、<code>A.B.C</code> 对应的 <code>__init__.py</code> 都会被执行。也就是说，只要导入路径经过该 package，该 package 的 <code>__init__.py</code> 就会被执行。</p>
</section>
<section id="submodules" class="level2">
<h2 class="anchored" data-anchor-id="submodules">Submodules</h2>
<blockquote class="blockquote">
<p>When a submodule is loaded using any mechanism (e.g.&nbsp;<code>importlib</code> APIs, the <code>import</code> or <code>import-from</code> statements, or built-in <code>__import__()</code>) a binding is placed in the parent module’s namespace to the submodule object. For example, if package <code>spam</code> has a submodule <code>foo</code>, after importing <code>spam.foo</code>, <code>spam</code> will have an attribute <code>foo</code> which is bound to the submodule.</p>
<p>…</p>
<p>Given Python’s familiar name binding rules this might seem surprising, but it’s actually a fundamental feature of the import system. The invariant holding is that if you have <code>sys.modules['spam']</code> and <code>sys.modules['spam.foo']</code> (as you would after the above import), the latter must appear as the <code>foo</code> attribute of the former.</p>
<p>— <a href="https://docs.python.org/3/reference/import.html#submodules">5. The import system — Python 3.10.5 documentation</a></p>
</blockquote>
<p>这是说，import 进来的 module 会被挂载到本 module 上作为其属性。</p>
<p>这个性质可以弄出来很多看上去很奇怪的玩意儿，比如说自己导入自己后可以 <code>me.me.me.me...</code> 无限嵌套之类的…</p>
<hr>
<p>另外，对于形如 <code>import A.B.C</code> 的导入，<code>A</code>、<code>A.B</code>、<code>A.B.C</code> 都会被挂载到本 module 上。然而，<code>from A.B import C</code> 却只会挂载 <code>C</code>，而 <code>import A.B.C as D</code> 也只会挂载 <code>D</code> ，即使 <code>A</code>、<code>A.B</code> 都被执行且都在 <code>sys.modules</code> 里。</p>
</section>
<section id="sys.path" class="level2">
<h2 class="anchored" data-anchor-id="sys.path">sys.path</h2>
<blockquote class="blockquote">
<p>A list of strings that specifies the search path for modules. Initialized from the environment variable <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH"><code>PYTHONPATH</code></a>, plus an installation-dependent default.</p>
<p>As initialized upon program startup, the first item of this list, <code>path[0]</code>, is the directory containing the script that was used to invoke the Python interpreter. If the script directory is not available (e.g.&nbsp;if the interpreter is invoked interactively or if the script is read from standard input), <code>path[0]</code> is the empty string, which directs Python to search modules in the current directory first. Notice that the script directory is inserted <em>before</em> the entries inserted as a result of <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH"><code>PYTHONPATH</code></a>.</p>
<p>A program is free to modify this list for its own purposes. Only strings and bytes should be added to <a href="https://docs.python.org/3/library/sys.html#sys.path" title="sys.path"><code>sys.path</code></a>; all other data types are ignored during import.</p>
<p>— <a href="https://docs.python.org/3/library/sys.html#sys.path">sys — System-specific parameters and functions — Python 3.10.5 documentation</a></p>
</blockquote>
<p><code>sys.path</code> 是 Python 搜索 module 的基准目录（即绝对导入）。其由环境变量 <code>PYTHONPATH</code> 和一些默认路径（和安装环境有关，参见 <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME">PYTHONHOME</a>）组成，而在运行 script 时，<strong>script 的所在目录会被临时加入 <code>sys.path[0]</code> 中</strong>。如果运行的并不是 script（例如是交互式运行或从 stdin 中读取脚本代码），<strong><code>sys.path[0]</code> 则被设置为空字符串，代表当前工作目录</strong>。</p>
<p><code>sys.path</code> 有优先级，排在前面的优先级高。</p>
<hr>
<p>需要特别注意的是，<strong>script 的所在目录不是当前工作目录</strong>。例如，在 <code>D:\test</code> 下执行</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> path/to/file.py</span></code></pre></div>
<p>时，<code>sys.path[0]</code> 为 <code>D:\test\path\to\file.py</code>，而当前工作目录则是 <code>D:\test</code>（也即 <code>os.getcwd()</code>）。</p>
<p>当前工作目录是 Python 寻找其他文件时的基准路径，而所有绝对导入操作都只与 <code>sys.path</code> 有关，两者是完全不同的。</p>
<p><code>python -m</code> 的情况稍有不同，参见后文。</p>
</section>
<section id="python--m" class="level2">
<h2 class="anchored" data-anchor-id="python--m">python -m</h2>
<blockquote class="blockquote">
<p>Search <a href="https://docs.python.org/3/library/sys.html#sys.path" title="sys.path"><code>sys.path</code></a> for the named module and execute its contents as the <a href="https://docs.python.org/3/library/__main__.html#module-__main__" title="__main__: The environment where top-level code is run. Covers command-line interfaces, import-time behavior, and ``__name__ == '__main__'``."><code>__main__</code></a> module.</p>
<p>Since the argument is a <em>module</em> name, you must not give a file extension (<code>.py</code>). The module name should be a valid absolute Python module name, but the implementation may not always enforce this (e.g.&nbsp;it may allow you to use a name that includes a hyphen).</p>
<p>Package names (including namespace packages) are also permitted. When a package name is supplied instead of a normal module, the interpreter will execute <code>&lt;pkg&gt;.__main__</code> as the main module. This behaviour is deliberately similar to the handling of directories and zipfiles that are passed to the interpreter as the script argument.</p>
<blockquote class="blockquote">
<p>Note</p>
<p>This option cannot be used with built-in modules and extension modules written in C, since they do not have Python module files. However, it can still be used for precompiled modules, even if the original source file is not available.</p>
</blockquote>
<p>If this option is given, the first element of <a href="https://docs.python.org/3/library/sys.html#sys.argv" title="sys.argv"><code>sys.argv</code></a> will be the full path to the module file (while the module file is being located, the first element will be set to <code>"-m"</code>). As with the <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-c"><code>-c</code></a> option, the current directory will be added to the start of <a href="https://docs.python.org/3/library/sys.html#sys.path" title="sys.path"><code>sys.path</code></a>.</p>
<p><a href="https://docs.python.org/3/using/cmdline.html#cmdoption-I"><code>-I</code></a> option can be used to run the script in isolated mode where <a href="https://docs.python.org/3/library/sys.html#sys.path" title="sys.path"><code>sys.path</code></a> contains neither the current directory nor the user’s site-packages directory. All <code>PYTHON*</code> environment variables are ignored, too.</p>
<p>Many standard library modules contain code that is invoked on their execution as a script. An example is the <a href="https://docs.python.org/3/library/timeit.html#module-timeit" title="timeit: Measure the execution time of small code snippets."><code>timeit</code></a> module:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> timeit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'setup here'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'benchmarked code here'</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> timeit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for details</span></span></code></pre></div>
<p>Raises an <a href="https://docs.python.org/3/library/sys.html#auditing">auditing event</a> <code>cpython.run_module</code> with argument <code>module-name</code>.</p>
<blockquote class="blockquote">
<p>See also</p>
<p><a href="https://docs.python.org/3/library/runpy.html#runpy.run_module" title="runpy.run_module"><code>runpy.run_module()</code></a></p>
<p>Equivalent functionality directly available to Python code</p>
</blockquote>
<p><a href="https://www.python.org/dev/peps/pep-0338">PEP 338</a> – Executing modules as scripts</p>
<p>Changed in version 3.1: Supply the package name to run a <code>__main__</code> submodule.</p>
<p>Changed in version 3.4: namespace packages are also supported</p>
<p>— <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-m">1. Command line and environment — Python 3.10.5 documentation</a></p>
</blockquote>
<p>在 <code>sys.path</code> 指定的目录中寻找 module 并以 <code>__main__</code> module 的身份执行指定 module。</p>
<p>注意不要在名字后面加 <code>.py</code>，因为我们已经把执行的文件当作 module 来看待。</p>
<p>如果指定的是一个 Package name（即目录名），将会执行 <code>&lt;pkg&gt;.__main__</code>（即 <code>&lt;pkg&gt;/__main__.py</code>）。</p>
<p>另外，如果使用 <code>python -m a.b.module</code>，<code>sys.argv</code> 的首位将被设置为被执行 module 文件的<strong>完整路径</strong>（与之相对，<code>python a/b/module.py</code> 中 <code>sys.argv[0]</code> 将会是<strong>相对当前工作目录的路径</strong>，即 <code>a/b/module.py</code>）；同时，<strong>当前工作目录</strong>会被加入 <code>sys.path</code> 的首位。</p>
<hr>
<p><code>python -m A.B.module</code> 将顺次执行 <code>A</code>、<code>A.B</code> 的 <code>__init__.py</code>，即使该 module 没有任何导入行为。</p>
<p><code>python -m</code> 对于直接执行 package 内部的代码是必要的。若直接以 script 方式运行，一旦涉及到任何高于该 script 所在目录（含该目录）的相对导入，Python 就会抛出如下错误：</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">ImportError: attempted relative import with no known parent package</span></code></pre></div>
<p>而一个 module 也不能导入超过 <code>python -m</code> 参数指定的最顶层结构的 module，否则会抛出错误：</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">ImportError: attempted relative import beyond top-level package</span></code></pre></div>
</section>
<section id="sys.modules" class="level2">
<h2 class="anchored" data-anchor-id="sys.modules">sys.modules</h2>
<blockquote class="blockquote">
<p>The first place checked during import search is <a href="https://docs.python.org/3/library/sys.html#sys.modules" title="sys.modules"><code>sys.modules</code></a>. This mapping serves as a cache of all modules that have been previously imported, including the intermediate paths. So if <code>foo.bar.baz</code> was previously imported, <a href="https://docs.python.org/3/library/sys.html#sys.modules" title="sys.modules"><code>sys.modules</code></a> will contain entries for <code>foo</code>, <code>foo.bar</code>, and <code>foo.bar.baz</code>. Each key will have as its value the corresponding module object.</p>
<p>During import, the module name is looked up in <a href="https://docs.python.org/3/library/sys.html#sys.modules" title="sys.modules"><code>sys.modules</code></a> and if present, the associated value is the module satisfying the import, and the process completes. However, if the value is <code>None</code>, then a <a href="https://docs.python.org/3/library/exceptions.html#ModuleNotFoundError" title="ModuleNotFoundError"><code>ModuleNotFoundError</code></a> is raised. If the module name is missing, Python will continue searching for the module.</p>
<p><a href="https://docs.python.org/3/library/sys.html#sys.modules" title="sys.modules"><code>sys.modules</code></a> is writable. Deleting a key may not destroy the associated module (as other modules may hold references to it), but it will invalidate the cache entry for the named module, causing Python to search anew for the named module upon its next import. The key can also be assigned to <code>None</code>, forcing the next import of the module to result in a <a href="https://docs.python.org/3/library/exceptions.html#ModuleNotFoundError" title="ModuleNotFoundError"><code>ModuleNotFoundError</code></a>.</p>
<p>Beware though, as if you keep a reference to the module object, invalidate its cache entry in <a href="https://docs.python.org/3/library/sys.html#sys.modules" title="sys.modules"><code>sys.modules</code></a>, and then re-import the named module, the two module objects will <em>not</em> be the same. By contrast, <a href="https://docs.python.org/3/library/importlib.html#importlib.reload" title="importlib.reload"><code>importlib.reload()</code></a> will reuse the <em>same</em> module object, and simply reinitialise the module contents by rerunning the module’s code.</p>
<p>— <a href="https://docs.python.org/3/reference/import.html#the-module-cache">5. The import system — Python 3.10.5 documentation</a></p>
</blockquote>
<p><code>sys.modules</code> 是一个 <code>dict</code>，Python 在导入之前会去检查 <code>sys.module</code> 里是否已经存有需要的 module 的 module object。如果有，就直接用这个；如果值为 <code>None</code>（意思是以前找过但没找到），就直接报错；如果该键值对不存在，就继续搜索过程。总之，<code>sys.modules</code> 扮演了一个类似 cache 的角色。</p>
<p>对于形如 <code>A.B.C</code> 的导入，Python 会顺次导入 <code>A</code>、<code>A.B</code> 和 <code>A.B.C</code> 并把他们加入 <code>sys.modules</code>。</p>
</section>
<section id="参考" class="level2">
<h2 class="anchored" data-anchor-id="参考">参考</h2>
<ul>
<li><p><a href="https://docs.python.org/3/reference/import.html">5. The import system — Python 3.10.5 documentation</a></p></li>
<li><p><a href="https://docs.python.org/3/tutorial/modules.html">6. Modules — Python 3.10.5 documentation</a></p></li>
<li><p><a href="https://www.pythonforthelab.com/blog/complete-guide-to-imports-in-python-absolute-relative-and-more/">Python for the Lab | Complete Guide to Imports in Python: Absolute, Relative, and More</a></p></li>
<li><p><a href="https://www.cnblogs.com/gaowengang/p/8543840.html">Python 包内的导入问题（绝对导入和相对导入） - Anonymous596 - 博客园</a></p></li>
</ul>


</section>

 ]]></description>
  <category>Python</category>
  <guid>https://blog.sun123zxy.top/posts/20220714-import/</guid>
  <pubDate>Wed, 13 Jul 2022 16:00:00 GMT</pubDate>
</item>
<item>
  <title>从台体的体积公式谈起</title>
  <link>https://blog.sun123zxy.top/posts/20220327-frustum/</link>
  <description><![CDATA[ 




<p>前些天做到一个猜圆台体两端电阻阻值公式的题，刚想积分乱搞时突然想起——台体不是有体积公式的吗…</p>
<p>于是就有下面的内容了。</p>
<p>台体本质上是锥体被一个平行与底面的平面所截而形成的几何体，所以可以把锥体补出来再研究。考虑从微积分的角度思考。设台体高度为 <img src="https://latex.codecogs.com/png.latex?h">，上、下底面面积分别为 <img src="https://latex.codecogs.com/png.latex?S_1,%20S_2">，上底面到锥体顶点的距离为 <img src="https://latex.codecogs.com/png.latex?x">。锥体的若干底面互相相似，而它们的的“半径”又与它们各自到锥体顶点的距离成正比，因此容易发现底面面积与该距离的平方成正比，即</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ak%20=%20%5Cfrac%7BS_1%7D%7Bx%5E2%7D%20=%20%5Cfrac%7BS_2%7D%7B(x+h)%5E2%7D%0A"></p>
<p>这是在三维空间里的情况。可以类比的写出 <img src="https://latex.codecogs.com/png.latex?n"> 维台体的式子：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ak%20=%20%5Cfrac%7BS_1%7D%7Bx%5E%7Bn-1%7D%7D%20=%20%5Cfrac%7BS_2%7D%7B(x+h)%5E%7Bn-1%7D%7D%0A"></p>
<p>（当然这里的 <img src="https://latex.codecogs.com/png.latex?S_1,S_2"> 就是“超面积”了）</p>
<p>进一步的，可以将超面积写成关于与顶点距离的函数形式：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AS_1%20&amp;=%20S(x)%20=%20k%20x%5E%7Bn-1%7D%20%5C%5C%0AS_2%20&amp;=%20S(x+h)%20=%20k%20(x+h)%5E%7Bn-1%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>而我们要求的“超体积”，就可以顺理成章的表示为面积函数 <img src="https://latex.codecogs.com/png.latex?S(x)"> 在垂直轴线上的积分了</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AV%20=%20%5Cint_%7Bx%7D%5E%7Bx+h%7D%20S(x)%20%5Cmathrm%20d%20x%20=%20k%20%5Cint_%7Bx%7D%5E%7Bx+h%7D%20x%5E%7Bn-1%7D%20%5Cmathrm%20d%20x%20=%20%5Cfrac%20k%20n%20%5Cleft(%20%5Cleft(x+h%20%5Cright)%5En%20-%20x%5En%20%5Cright)%0A"></p>
<p>这就是用微积分求到的台体体积公式。</p>
<p>那么问题来了——这种形式的台体体积公式和几何法得到的</p>
<blockquote class="blockquote">
<p><img src="https://latex.codecogs.com/png.latex?%0AV%20=%20%5Cfrac%7B1%7D%7B3%7D%20h%20(S_1%20+%20%5Csqrt%7BS_1%20S_2%7D%20+%20S_2)%0A"></p>
</blockquote>
<p>有什么联系呢？</p>
<p>随便玩一下吧，<img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%203"> 毋庸置疑和三维有关，换成 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%201%20n"> 就好；后面那一坨挺对称的还蛮好看，写个求和符号让它更好看吧（</p>
<p>于是猜测台体体积公式的 <img src="https://latex.codecogs.com/png.latex?n"> 维扩展：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AV%20=%20%5Cfrac%201%20n%20h%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20S_1%5E%7B%5Cfrac%7Bi%7D%7Bn-1%7D%7D%20S_2%5E%7B1-%5Cfrac%7Bi%7D%7Bn-1%7D%7D%0A"></p>
<p>用 <img src="https://latex.codecogs.com/png.latex?S(x)"> 函数的形式替换 <img src="https://latex.codecogs.com/png.latex?S_1,%20S_2">，得</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AV%20=%20%5Cfrac%20k%20h%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-1-i%7D%0A"></p>
<p>哎！与前面积分得出的台体体积公式比较，发现只需证明</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A(x+h)%5En%20-%20x%5En%20=%20h%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-1-i%7D%0A"></p>
<p>试着证明一下吧。观察发现 <img src="https://latex.codecogs.com/png.latex?h"> 可以拆成 <img src="https://latex.codecogs.com/png.latex?(x+h)-x">，故右式可以写成</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ah%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-1-i%7D%20&amp;=%20((x+h)-x)%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-1-i%7D%20%5C%5C%0A&amp;=%20(x+h)%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-1-i%7D%20-%20x%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-1-i%7D%20%5C%5C%0A&amp;=%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-i%7D%20-%20%5Csum_%7Bi=1%7D%5E%7Bn%7D%20x%5Ei%20(x+h)%5E%7Bn-i%7D%20%5C%5C%0A&amp;=%20(x+h)%5En%20-%20x%5En%0A%5Cend%7Baligned%7D%0A"></p>
<p>得证。</p>
<p>暂时不知道这个定理有什么具体的名字，知道的大佬请告诉我（</p>
<p>所以这玩意有什么用呢？</p>
<p>首先当然是证明（超）台体体积公式，这个上面已经提到。</p>
<p>还有一个用途就是证明 <img src="https://latex.codecogs.com/png.latex?n%20%5Cin%20%5Cmathrm%7BN_+%7D"> 的幂函数 <img src="https://latex.codecogs.com/png.latex?x%5En"> 的导数公式。</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5Cmathrm%20d%7D%7B%5Cmathrm%20d%20x%7D%20x%5En%20=%20%5Clim_%7Bh%20%5Cto%200%7D%20%5Cfrac%7B(x+h)%5En%20-%20x%5En%7D%7Bh%7D%20=%20%5Clim_%7Bh%20%5Cto%200%7D%20%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20x%5Ei%20(x+h)%5E%7Bn-1-i%7D%20=%20n%20x%5E%7Bn-1%7D%0A"></p>
<p>看上去很方便的来着呢。</p>



 ]]></description>
  <category>数学</category>
  <category>意识流</category>
  <guid>https://blog.sun123zxy.top/posts/20220327-frustum/</guid>
  <pubDate>Sat, 26 Mar 2022 16:00:00 GMT</pubDate>
</item>
<item>
  <title>原创生物必修一大题 - Creepus Explodus</title>
  <link>https://blog.sun123zxy.top/posts/20220224-creeper/</link>
  <description><![CDATA[ 




<section id="problem" class="level2">
<h2 class="anchored" data-anchor-id="problem">Problem</h2>
<p>【必修一大题】假定你是李华，你的外国交换生朋友 Steve 正在水本科毕业论文，请根据高中生物所学内容，帮他完善以下论文选段。</p>
<p><strong>闪电苦力怕的 TNT 诱导及其生物发电技术实践</strong><br>
<strong>TNT-Induced Mutation of Charged Creepus Explodus and Its Bioelectricity Generating Technology</strong><br>
Steve Mahjong, Alex Macrohard. [J]MineNature Volume 817, Issue 1926. 2021. PP 9960-9961</p>
<p><strong>摘要：</strong>苦力怕（Creeper，学名 Creepus Explodus，另译爬行者）是主世界中常见的友好生物。本文回顾了前人对三硝基甲苯诱导苦力怕突变的研究成果，提出了利用闪电苦力怕实现生物发电的构想，并初步完成了闪电苦力怕发电机的建造、试运行和效率分析工作，为后续同类型研究提供借鉴。</p>
<p><img src="https://blog.sun123zxy.top/posts/20220224-creeper/tnt.jpg" style="height: 150px"> <img src="https://blog.sun123zxy.top/posts/20220224-creeper/breath.jpg" style="height: 150px"></p>
<p>（Fig 1：TNT 毒理）（Fig 2：气体含量曲线）</p>
<p><strong>引入 1：</strong>三硝基甲苯（TNT）具有相对较高的细胞毒性，其体外半数致死浓度 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BLC_%7B50%7D%7D%20%5Capprox%2025%20%5C%20%5Cmathrm%7B%5Cmu%20mol%20%5Ccdot%20L%5E%7B-1%7D%7D">​。氧化应激是被广泛认可的 TNT 中毒机制之一，其具体原理如 Fig1 所示。该理论认为，TNT 进入细胞后经过某些酶的催化，生成多种 <code>______</code>（图中 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BArNO_2%5E%7B%5Cfrac%7B%7D%7B%5Ccdot%7D%7D%7D">​、<img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BO_2%5E%7B%5Cfrac%7B%7D%7B%5Ccdot%7D%7D%7D">​）攻击和破坏细胞内各种执行正常功能的生物分子（如攻击 DNA 可能引起 <code>________</code>），导致细胞衰老或损伤。为抵消 TNT 对生物体稳态的影响，生物体体内的超氧化物歧化酶（SOD）可催化有害物质歧化并最终由 <code>__________</code>（CAT）催化分解为无害物质。CAT 在动物 <code>____</code>（填器官）中含量丰富。</p>
<p><strong>引入 2：</strong>苦力怕体内的 CAT （简记为 CrpCAT）具有极其特殊的结构。Notch Persson 的实验表明，CrpCAT 的活性高于其它动物体内的 CAT，其具体实验步骤如下：</p>
<blockquote class="blockquote">
<p>步骤 1：取 3 支洁净的试管在适宜温度下保温，分别加入 <img src="https://latex.codecogs.com/png.latex?2%20%5Cmathrm%7BmL%7D">​​ SOD 催化产物溶液。</p>
<p>步骤 2：分别向 3 支试管中滴加 2 滴一定浓度的 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BFeCl_3%7D"> 溶液（A 组）、<code>__________</code>（B 组）、<code>__________</code>（C 组）。</p>
<p>步骤 3：一段时间后，精确测定各组反应速率，测得 <img src="https://latex.codecogs.com/png.latex?v(A)%20=%209.85%20%5Ctimes%2010%5E%7B-10%7D%20v(B)%20=%202.11%20%5Ctimes%2010%5E%7B-10%7D%20v(C)">​，从而证明了实验结论。</p>
</blockquote>
<p>该实验的 B 组与 C 组相较，可以说明 CrpCAT 的 <code>____</code>（选择：A. 高效性；B. 专一性；C. 温和性；D. 以上选项均不能说明）</p>
<p><strong>引入 3：</strong>苦力怕 CrpCAT 的高活性使其可以耐受较高浓度的 TNT。用 TNT 处理苦力怕可诱导其突变为罕见的闪电苦力怕（Charged Creeper）变种。Jeb Bergensten 的研究揭示了闪电苦力怕的发电原理。在闪电苦力怕的发电器官中，电细胞细胞膜上的钠钾泵消耗细胞呼吸产生的 <code>__________</code> （填物质名称）逆浓度梯度转运钠、钾离子建立起静息电位；而动作电位时，细胞后膜上大量电压门控钠离子通道以 <code>________</code> 的方式转运钠离子进入细胞，在前后膜之间形成 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B50%20%5C%20mV%7D"> 到 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B150%20%5C%20mV%7D">​ 的电位差。</p>
<p><strong>实验：</strong>研究小组初步探究了利用闪电苦力怕发电器官进行生物发电的可行性。将完整的发电器官浸泡在营养液中，在其背侧和腹侧插入电极并连接电流表，整个实验器材置于密闭气缸中，测定气缸中 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BO_2%7D">​ 和 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BCO_2%7D">​ 含量的变化曲线如 Fig2 所示。据图推测闪电苦力怕无氧呼吸的有机产物为 <code>________</code>，实验时间内有氧呼吸消耗葡萄糖 <code>______</code> <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7Bmol%7D">​。该发电机输出了 <img src="https://latex.codecogs.com/png.latex?b%20%5C%20%5Cmathrm%7BkJ%7D">​ 电能，计算其发电效率为 <code>____________</code>（<img src="https://latex.codecogs.com/png.latex?%E5%8F%91%E7%94%B5%E6%95%88%E7%8E%87%20=%20%5Cfrac%7B%E8%BE%93%E5%87%BA%E7%94%B5%E8%83%BD%7D%7B%E8%BE%93%E5%85%A5%E7%9A%84%E5%8C%96%E5%AD%A6%E8%83%BD%7D%20%5Ctimes%20100%20%5C%25">​，已知 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B1%20%5C%20mol%7D">​ 葡萄糖折合能量 <img src="https://latex.codecogs.com/png.latex?a%20%5C%20%5Cmathrm%7BkJ%7D">​​，只考虑葡萄糖的呼吸分解）。该发电机的发电效率不高，其主要原因为 <code>________________________________________</code>（从能量转化角度分析，答两点即可）</p>
<p><strong>参考文献：</strong><a href="http://www.energetic-materials.org.cn/hncl/article/html/CJEM2019068">魏桐,周阳,杨治林,等. 典型炸药的毒性效应及其作用机制研究进展[J]. 含能材料,2019,27(7):558-568.</a></p>
<p>其他参考：</p>
<ul>
<li><a href="https://www.zhihu.com/question/19901924/answer/1490619635">电鳗发电的原理是什么？ - 混乱博物馆的回答 - 知乎</a></li>
<li><a href="https://minecraft.fandom.com/zh/wiki/%E8%8B%A6%E5%8A%9B%E6%80%95">苦力怕 - Minecraft Wiki，最详细的我的世界百科</a></li>
</ul>
</section>
<section id="answer" class="level2">
<h2 class="anchored" data-anchor-id="answer">Answer</h2>
<pre><code>1) 自由基 基因突变 过氧化氢(H2O2) 肝脏
2) 2滴一定浓度的CAT溶液 2滴等浓度的CrpCAT溶液 D
3) 三磷酸腺苷 协助扩散
4) 酒精 0.5 b/a*100% 大量能量以热能的形式散失、大量能量存留在无氧呼吸产生的酒精中、呼吸作用产生的能量还需用于其它各项生命活动</code></pre>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<p>2 问选择题：不能说明高效性。一方面，B 组与 C 组反应速率差异仅数倍，比起酶与无机催化剂的 <img src="https://latex.codecogs.com/png.latex?10%5E7">​ - <img src="https://latex.codecogs.com/png.latex?10%5E%7B13%7D">​ 倍差异太小；另一方面，“高效性”一般只用于描述酶与无机催化剂的催化能力差异。</p>
<p>4 问，消耗 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BO_2%20%5C%203%20%5C%20mol%7D">，产生 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7BCO_2%20%5C%204%20%5C%20mol%7D">，说明有氧呼吸与无氧呼吸均存在，且无氧呼吸生成酒精。根据有氧呼吸、酒精无氧呼吸方程式，有氧呼吸消耗葡萄糖 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B3%20%5C%20mol%20%5Ctimes%20%5Cfrac%7B1%7D%7B6%7D%20=%200.5%20%5C%20mol%7D">，无氧呼吸消耗葡萄糖 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B%5Cleft(%204%20%5C%20mol%20-%20%5Cleft(%200.5%20%5C%20mol%20%5Ctimes%206%20%5Cright)%20%5Cright)%20%5Ctimes%20%5Cfrac%7B1%7D%7B2%7D%20=%200.5%20%5C%20mol%7D">，共消耗葡萄糖 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7B1%20%5C%20mol%7D">，据此计算即可。</p>


</section>

 ]]></description>
  <category>高考</category>
  <category>原创题目</category>
  <guid>https://blog.sun123zxy.top/posts/20220224-creeper/</guid>
  <pubDate>Wed, 23 Feb 2022 16:00:00 GMT</pubDate>
</item>
</channel>
</rss>
